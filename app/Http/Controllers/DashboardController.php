<?php
use Textmagic\Services\TextmagicRestClient;
use Textmagic\Services\RestException;
$client = new TextmagicRestClient(TEXTMAGICUNAME, TEXTMAGICKEY);
/**
* Dashboard Controller To Manage Dashboard
* Controller Name: DashboardController
* Author By: Chittaranjan Sahoo
* Created Date: 06-06-2018
**/

class DashboardController extends ControllerBase
{
    public function initialize() {
        Phalcon\Tag::setTitle('HZA CRM');
        parent::initialize();
        $response = new \Phalcon\Http\Response();
        if(!$this->session->has('sessUserID')){
            header("location:".BASEURL);
        }
        $sessionID=$this->session->get('sessUserID');
        $userDetail=Users::findFirst(array('conditions' => "id='".$sessionID."'"));
        //echo $userDetail->is_view_marketing_tab; exit;
        if($userDetail->is_barbour==1){
             header("location:".BASEURL.'barberabi');
             exit;
        }

        /*$user_ip = getenv('REMOTE_ADDR');
        $geo = unserialize(file_get_contents("http://www.geoplugin.net/php.gp?ip=$user_ip"));
        $country = $geo["geoplugin_countryName"];
        $city = $geo["geoplugin_city"];
        exit();*/
        //echo "<pre>";print_r($_SERVER);exit();
    }
    /**
    * Index Action To Manage HZA Dashboard Page
    * Action Name: indexAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 06-06-2018
    **/

    public function accessdeniedAction() {
        $response = new \Phalcon\Http\Response();
            $leadDetail=Enquiry::findFirst(array('conditions' => "id='".$id."'", 'limit' => 1));
            $this->view->setVar('leadDetail', $leadDetail);
    }
      



    public function indexAction(){
        $response = new \Phalcon\Http\Response();


        $allParam=$this->dispatcher->getParams();

        $sessionID=$this->session->get('sessUserID');
        $userDetail=Users::findFirst(array('conditions' => "id='".$sessionID."'"));
        $this->view->setVar('userDetail', $userDetail);
        $whr=array("(enquiry.approved_loan<1 or enquiry.approved_loan IS NULL) and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and enquiry.is_active=1");
        $awhr=array("(enquiry.approved_loan<1 or enquiry.approved_loan IS NULL) and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and enquiry.is_active=1");
        $myWhr=array("enquiry.advisor_id='".$sessionID."' and (enquiry.approved_loan<1 or enquiry.approved_loan IS NULL) and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and enquiry.is_active=1");
        if($this->request->isGet()){
            $allGet = $this->request->get();
            // echo "<pre>"; print_r($allGet);die;

            // var_dump(isset($allGet['searchtxt']) && $allGet['searchtxt']!='');die;
           // if(isset($allGet['searchtxt']) && $allGet['searchtxt']!=''){
             //   $srhtxt=$allGet['searchtxt'];

                // ==========================
	
               //  array_push($whr, "(enquiry.borrower_name like '%".$srhtxt."%' or enquiry.first_name like '%".$srhtxt."%' or enquiry.last_name like '%".$srhtxt."%' or CONCAT(enquiry.first_name, ' ', enquiry.last_name) like '%".$srhtxt."%' or enquiry.borrower_email = '".$srhtxt."' or enquiry.borrower_mob = '".$srhtxt."' or enquiry.postcode = '".$srhtxt."' or enquiry.name_of_comany like '%".$srhtxt."%' or enquiry.borrower_address like '%".$srhtxt."%' or lead_application.pd_fullname like '%".$srhtxt."%' or lead_application.pd_email like '%".$srhtxt."%' or lead_application.pd_phone_no like '%".$srhtxt."%')");
                 //   array_push($joinArr, "left join lead_application on enquiry.id=lead_application.lead_id");
			//}
                // ==========================
 
                if(!isset($allGet['tab'])){
                    array_push($whr, "(enquiry.first_name like '%".$srhtxt."%' or enquiry.last_name like '%".$srhtxt."%' or CONCAT(enquiry.first_name, ' ', enquiry.last_name) like '%".$srhtxt."%' or enquiry.borrower_email = '".$srhtxt."' or enquiry.borrower_mob = '".$srhtxt."' or enquiry.postcode = '".$srhtxt."')");
                }else{
                    if($allGet['tab']=='all'){
                         array_push($awhr, "(enquiry.first_name like '%".$srhtxt."%' or enquiry.last_name like '%".$srhtxt."%' or CONCAT(enquiry.first_name, ' ', enquiry.last_name) like '%".$srhtxt."%' or enquiry.borrower_email = '".$srhtxt."' or enquiry.borrower_mob = '".$srhtxt."' or enquiry.postcode = '".$srhtxt."')");
                    }else if($allGet['tab']=='mylead'){
                         array_push($myWhr, "(enquiry.first_name like '%".$srhtxt."%' or enquiry.last_name like '%".$srhtxt."%' or CONCAT(enquiry.first_name, ' ', enquiry.last_name) like '%".$srhtxt."%' or enquiry.borrower_email = '".$srhtxt."' or enquiry.borrower_mob = '".$srhtxt."' or enquiry.postcode = '".$srhtxt."')");
                    }
                }
            

            if(isset($allGet['product']) && $allGet['product']!=''){
                $product=$allGet['product'];
                if(!isset($allGet['tab'])){
                    array_push($whr, "enquiry.product='".$product."'");
                }else{
                    if($allGet['tab']=='all'){
                        array_push($awhr, "enquiry.product='".$product."'");
                    }else if($allGet['tab']=='mylead'){
                        array_push($myWhr, "enquiry.product='".$product."'");
                    }
                }
            }
            if(isset($allGet['purpose']) && $allGet['purpose']!=''){
                $purpose=$allGet['purpose'];

                 if(!isset($allGet['tab'])){
                    array_push($whr, "enquiry.purpose='".$purpose."'");
                }else{
                    if($allGet['tab']=='all'){
                        array_push($awhr, "enquiry.purpose='".$purpose."'");
                    }else if($allGet['tab']=='mylead'){
                        array_push($myWhr, "enquiry.purpose='".$purpose."'");
                    }
                }
            }
            if(isset($allGet['property_type']) && $allGet['property_type']!=''){
                $property_type=$allGet['property_type'];

                if(!isset($allGet['tab'])){
                    array_push($whr, "enquiry.property_type='".$property_type."'");
                }else{
                    if($allGet['tab']=='all'){
                        array_push($awhr, "enquiry.property_type='".$property_type."'");
                    }else if($allGet['tab']=='mylead'){
                        array_push($myWhr, "enquiry.property_type='".$property_type."'");
                    }
                }
            }
            if(isset($allGet['refurbishment']) && $allGet['refurbishment']!=''){
                $refurbishment=$allGet['refurbishment'];

                if(!isset($allGet['tab'])){
                    array_push($whr, "enquiry.refurbishment='".$refurbishment."'");
                }else{
                    if($allGet['tab']=='all'){
                        array_push($awhr, "enquiry.refurbishment='".$refurbishment."'");
                    }else if($allGet['tab']=='mylead'){
                        array_push($myWhr, "enquiry.refurbishment='".$refurbishment."'");

                    }
                }
            }
            if(isset($allGet['lead_source']) && $allGet['lead_source']!=''){
                $lead_source=$allGet['lead_source'];

                if(!isset($allGet['tab'])){
                    array_push($whr, "enquiry.lead_source='".$lead_source."'");
                }else{
                    if($allGet['tab']=='all'){
                        array_push($awhr, "enquiry.lead_source='".$lead_source."'");
                    }else if($allGet['tab']=='mylead'){
                        array_push($myWhr, "enquiry.lead_source='".$lead_source."'");
                    }
                }
            }
             if(isset($allGet['lead_owner']) && $allGet['lead_owner']!=''){
                $lead_owner=$allGet['lead_owner'];

                if(!isset($allGet['tab'])){
                    array_push($whr, "enquiry.advisor_id='".$lead_owner."'");
                }else{
                    if($allGet['tab']=='all'){
                        array_push($awhr, "enquiry.advisor_id='".$lead_owner."'");
                    }
                }
            }


        }
        $joinArr=array();
        $order="id desc";

        $where="";
        if(!empty($whr)){
            $where=" where ".implode(" and ", $whr);
        }
        $joinString="";
        if(!empty($joinArr)){
            $joinString=" ".implode(" ", $joinArr);
        }

        $awhere="";
        if(!empty($awhr)){
            $awhere=" where ".implode(" and ", $awhr);
        }
        $allLeadTasks=Enquiry::findAll("select enquiry.* from enquiry".$joinString.$awhere." order by ".$order." limit 50");
        $this->view->setVar('allLeadTasks', $allLeadTasks);
        $mywhere="";
        if(!empty($myWhr)){
            $mywhere=" where ".implode(" and ", $myWhr);
        }
        $myLeadTasks=Enquiry::findAll("select enquiry.* from enquiry".$joinString.$mywhere." order by ".$order." limit 50");
        $this->view->setVar('myLeadTasks', $myLeadTasks);
        if($this->request->isGet()){
            $allGet=$this->request->get();
            $orderby="t.id desc";
            if(isset($allGet['sorting']) && $allGet['sorting']=='status_name'){
                $orderby="task_status.status_name"." ".$allGet['orderby'];
            }elseif(isset($allGet['sorting']) && $allGet['sorting']=="case_status"){
                $orderby="case_status.status_name"." ".$allGet['orderby'];
            }elseif(isset($allGet['sorting']) && $allGet['sorting']=="task_client"){
                $orderby="t.task_client"." ".$allGet['orderby'];
            }elseif(isset($allGet['sorting']) && $allGet['sorting']=="casedeadline"){
                $orderby="t.casedeadline"." ".$allGet['orderby'];
            }elseif(isset($allGet['sorting']) && $allGet['sorting']=="charge_name"){
                $orderby="charges.charge_name"." ".$allGet['orderby'];
            }
            if($orderby!=''){
                $orderby = $orderby;
            }else{
                $orderby = 't.id desc';
            }
        }

        $workflowTaskRes=WorkflowTask::findAll("select t.* from (SELECT workflow_task.*,enquiry.name_of_comany FROM workflow_task INNER JOIN enquiry ON workflow_task.lead_id=enquiry.id WHERE workflow_task.show_in_task=1 and workflow_task.lead_id!='' and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) ORDER BY workflow_task.id desc) as t left join task_status on t.task_status=task_status.id left join case_status on t.case_status=case_status.id left join charges on t.product=charges.id order by ".$orderby);


        $this->view->setVar('workflowTaskRes', $workflowTaskRes);

        $workflowTaskRes2=WorkflowTask::findAll("select t.* from (SELECT workflow_task.*,enquiry.name_of_comany FROM workflow_task INNER JOIN enquiry ON workflow_task.lead_id=enquiry.id WHERE workflow_task.lead_id!='' and workflow_task.case_status=5 and workflow_task.show_in_task=1 and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) ORDER BY workflow_task.id desc) as t left join task_status on t.task_status=task_status.id left join case_status on t.case_status=case_status.id left join charges on t.product=charges.id order by ".$orderby);
        $this->view->setVar('workflowTaskRes2', $workflowTaskRes2);

    }


    public function applyindexfilterAction(){
        $response = new \Phalcon\Http\Response();
        $allParam=$this->dispatcher->getParams();
        if($this->request->isPost()){
            if($this->request->getPost('applyfilter')==1){
                $whr = array();
                $where = "";
                if($this->request->getPost('task_status')){
                    array_push($whr, "t.task_status='".$this->request->getPost('task_status')."'");
                }
                if($this->request->getPost('case_status')){
                    array_push($whr, "t.case_status='".$this->request->getPost('case_status')."'");
                }
                if($this->request->getPost('task_client')){
                    array_push($whr, "t.task_client='".$this->request->getPost('task_client')."'");
                }
                if($this->request->getPost('task_lender')){
                    array_push($whr, "t.task_lender='".$this->request->getPost('task_lender')."'");
                }
                if($this->request->getPost('product')){
                    array_push($whr, "t.product='".$this->request->getPost('product')."'");
                }
                if($this->request->getPost('assign_advisor')){
                    array_push($whr, "t.assign_advisor='".$this->request->getPost('assign_advisor')."'");
                }
                if($this->request->getPost('casedeadline')){
                    array_push($whr, "t.casedeadline='".$this->request->getPost('casedeadline')."'");
                }
                if($this->request->getPost('assign_case_manager')){
                    array_push($whr, "t.assign_case_manager='".$this->request->getPost('assign_case_manager')."'");
                }
                if(!empty($whr)){
                    $where=" where ".implode(" and ", $whr);
                }
                $orderby = 't.id desc';
                $workflowTaskRes=WorkflowTask::findAll("select t.* from (SELECT workflow_task.*,enquiry.name_of_comany FROM workflow_task INNER JOIN enquiry ON workflow_task.lead_id=enquiry.id WHERE workflow_task.show_in_task=1 and workflow_task.lead_id!='' and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) ORDER BY workflow_task.id desc) as t left join task_status on t.task_status=task_status.id left join case_status on t.case_status=case_status.id left join charges on t.product=charges.id".$where." order by ".$orderby);

                $workflowTaskRes2=WorkflowTask::findAll("select t.* from (SELECT workflow_task.*,enquiry.name_of_comany FROM workflow_task INNER JOIN enquiry ON workflow_task.lead_id=enquiry.id WHERE workflow_task.show_in_task=1 and workflow_task.lead_id!='' and workflow_task.case_status=5 and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) ORDER BY workflow_task.id desc) as t left join task_status on t.task_status=task_status.id left join case_status on t.case_status=case_status.id left join charges on t.product=charges.id".$where." order by ".$orderby);
                $taskManagemntHtml = "";
                $compltedHtml = "";
                $resArry = [];
                $totalAmountRequired=0;
                $totalAmountRequired2=0;
                if(count($workflowTaskRes)>0){
                    foreach($workflowTaskRes as $workflowTaskResult){

                        $taskstatusDetail=TaskStatus::findFirst(array('conditions' => "id=".$workflowTaskResult->task_status));

                        if(!empty($workflowTaskResult->case_status)){
                            $casestatusDetail=CaseStatus::findFirst(array('conditions' => "id=".$workflowTaskResult->case_status));
                        }
                        if(!empty($casestatusDetail)){
                            $casestatusname =stripslashes($casestatusDetail->status_name);
                        }else{
                            $casestatusname = '';
                        }
                        if(!empty($workflowTaskResult->product)){
                            $charges=Charges::findFirst(array('conditions' => "id=".$workflowTaskResult->product));
                        }
                        if(!empty($charges)){
                            $productname = stripslashes($charges->charge_name);
                        }else{
                            $productname = '';
                        }
                        if(!empty($workflowTaskResult->assign_advisor)){
                            $assignAdvisorDetail=Users::findFirst(array('conditions' => "id=".$workflowTaskResult->assign_advisor));
                        }
                        if(!empty($assignAdvisorDetail)){
                            $advisrName = stripslashes($assignAdvisorDetail->first_name);
                        }else{
                            $advisrName = '';
                        }
                        if(!empty($workflowTaskResult->assign_case_manager)){
                            $assignCaseManager=Users::findFirst(array('conditions' => "id=".$workflowTaskResult->assign_case_manager));
                        }
                        if(!empty($assignCaseManager)){
                            $advisrCasemngr = stripslashes($assignCaseManager->first_name);
                        }else{
                            $advisrCasemngr = '';
                        }
                        if(!empty($workflowTaskResult->task_lender)){
                            $taskLenderDetail=Users::findFirst(array('conditions' => "id='".$workflowTaskResult->task_lender."'"));
                        }
                        if(!empty($taskLenderDetail)){
                            $tskLndrDtls = stripslashes($taskLenderDetail->first_name);
                        }else{
                            $tskLndrDtls = '';
                        }

                        $noteText=stripslashes($workflowTaskResult->tasknote);
                        $shortNote=(strlen($noteText)>30)? substr($noteText, 0, 30) : $noteText;
                        $leadId=$workflowTaskResult->lead_id;
                        $checkcomplete=WorkflowTask::findAll("select * from workflow_task where lead_id='".$leadId."' and case_status=5");
                        $checknotproceeding=WorkflowTask::findAll("select * from workflow_task where lead_id='".$leadId."' and task_status=9");

                                              if(count($checkcomplete)<1 && count($checknotproceeding)<1){
                                                $taskAmount=str_replace(",", "", $workflowTaskResult->task_loan);
                                                $totalAmountRequired+=$taskAmount;
                                                 $taskManagemntHtml .= '<tr>
                                                    <td>'.$workflowTaskResult->name_of_comany.'</td>
                                                    <td>'.$productname.'</td>
                                                    <td>'.$tskLndrDtls.'</td>
                                                    <td>'.number_format($taskAmount, 2).'</td>
                                                    <td>'.$workflowTaskResult->ltv.'</td>
                                                    <td>'.$casestatusname.'</td>
                                                    <td>'.date("d/m/Y", strtotime($workflowTaskResult->created)).'</td>
                                                    <td>'.stripslashes($workflowTaskResult->casedeadline).'</td>
                                                </tr>';
                                                $workflowCount++;
                                            }


                    }
                }
                $taskManagemntHtml .= "<tr>
                    <td colspan='4' style='text-align: right;'><strong>Total Loan:</strong></td>
                    <td colspan='8'><strong>".number_format($totalAmountRequired, 2)."</strong></td>
                </tr>";
                $resArry['task_manage'] = $taskManagemntHtml;
                if(count($workflowTaskRes2)>0){
                    foreach($workflowTaskRes2 as $workflowTaskResult){

                        $taskstatusDetail=TaskStatus::findFirst(array('conditions' => "id=".$workflowTaskResult->task_status));
                                                  $casestatusDetail=CaseStatus::findFirst(array('conditions' => "id=".$workflowTaskResult->case_status));
                                                  if(!empty($workflowTaskResult->product)){

                                                    $charges=Charges::findFirst(array('conditions' => "id=".$workflowTaskResult->product));
                                                  }
                                                  if(!empty($charges)){
                                                    $chrgename = stripslashes($charges->charge_name);
                                                  }
                                                  $assignAdvisorDetail=Users::findFirst(array('conditions' => "id=".$workflowTaskResult->assign_advisor));
                                                  $assignCaseManager=Users::findFirst(array('conditions' => "id=".$workflowTaskResult->assign_case_manager));
                                                  if(!empty($workflowTaskResult->task_lender)){
                                                    $taskLenderDetail=Users::findFirst(array('conditions' => "id='".$workflowTaskResult->task_lender."'"));
                                                  }
                                                  if(!empty($taskLenderDetail)){
                                                    $lndrName = stripslashes($taskLenderDetail->first_name);
                                                  }else{
                                                    $lndrName = '';
                                                  }

                                                   $noteText=stripslashes($workflowTaskResult->tasknote);
                                                 $shortNote=(strlen($noteText)>30)? substr($noteText, 0, 30) : $noteText;
                                                 $leadId=$workflowTaskResult->lead_id;

                                                  $checknotproceeding=WorkflowTask::findAll("select * from workflow_task where lead_id='".$leadId."' and task_status=9");

                                              if(count($checknotproceeding)<1){
                                                $taskAmount=str_replace(",", "", $workflowTaskResult->task_loan);
                                                $totalAmountRequired2+=$taskAmount;

                                                 $compltedHtml .= '<tr>
                                                 <td>'.$workflowTaskResult->name_of_comany.'</td>
                                                 <td>'.$chrgename.'</td>
                                                 <td>'.$lndrName.'</td>
                                                 <td>'.number_format($taskAmount, 2).'</td>
                                                 <td>'.$workflowTaskResult->ltv.'</td>
                                                 <td>'.stripslashes($taskstatusDetail->status_name).'</td>
                                                <td>'.date("d/m/Y", strtotime($workflowTaskResult->created)).'</td>
                                                <td>'.stripslashes($workflowTaskResult->casedeadline).'</td>
                                                </tr>';
                                                $workflowCount++;
                                            }
                    }
                }
                $compltedHtml .= "<tr>
                    <td colspan='4' style='text-align: right;'><strong>Total Loan:</strong></td>
                    <td colspan='8'>".number_format($totalAmountRequired2, 2)."</td>
                </tr>";
                $resArry['completed'] = $compltedHtml;
                $resArry['status'] = 1;
            }else{
                $resArry['status'] = 2;
            }
            echo json_encode($resArry);
        }
    }

    public function pipelinefilterAction(){
        $response = new \Phalcon\Http\Response();
        $allParam=$this->dispatcher->getParams();
        if($this->request->isPost()){



            $whr=array("enquiry.in_progress=1");
            $allGet=$this->request->getPost();
            if(isset($allGet['searchtxt']) && $allGet['searchtxt']!=''){
                $srhtxt=$allGet['searchtxt'];
                array_push($whr, "(enquiry.first_name like '%".$srhtxt."%' or enquiry.last_name like '%".$srhtxt."%' or CONCAT(enquiry.first_name, ' ', enquiry.last_name) like '%".$srhtxt."%' or enquiry.borrower_email = '".$srhtxt."' or enquiry.borrower_mob = '".$srhtxt."' or enquiry.postcode = '".$srhtxt."')");
            }
            /*if(isset($allGet['loan_type']) && $allGet['loan_type']!=''){
                $loan_type=$allGet['loan_type'];
                array_push($whr, "loan_type='".$loan_type."'");
            }*/
            if(isset($allGet['product']) && $allGet['product']!=''){
                $product=$allGet['product'];
                array_push($whr, "enquiry.application_type='".$product."'");
            }
            if(isset($allGet['purpose']) && $allGet['purpose']!=''){
                $purpose=$allGet['purpose'];
                array_push($whr, "enquiry.purpose='".$purpose."'");
            }
            if(isset($allGet['property_type']) && $allGet['property_type']!=''){
                $property_type=$allGet['property_type'];
                array_push($whr, "enquiry.property_type='".$property_type."'");
            }
            if(isset($allGet['refurbishment']) && $allGet['refurbishment']!=''){
                $refurbishment=$allGet['refurbishment'];
                array_push($whr, "enquiry.refurbishment='".$refurbishment."'");
            }
            if(isset($allGet['lead_source']) && $allGet['lead_source']!=''){
                $lead_source=$allGet['lead_source'];
                array_push($whr, "enquiry.lead_source='".$lead_source."'");
            }
            // if(isset($allGet['case_manager']) && $allGet['case_manager']!=''){
            //     $case_manager=$allGet['case_manager'];
            //     array_push($whr, "enquiry.case_manager='".$case_manager."'");
            // }
            if(isset($allGet['address']) && $allGet['address']!=''){
               // $modified=str_replace("/", "-", $allGet['modified']);
                $address=$allGet['address'];
                array_push($whr, "enquiry.security_address like '%".$allGet['address']."%'");
            }
        $joinArr=array();
        $order="id desc";

        $where="";
        if(!empty($whr)){
            $where=" where ".implode(" and ", $whr);
        }
        $joinString="";
        if(!empty($joinArr)){
            $joinString=" ".implode(" ", $joinArr);
        }
        //===========pagination===========
        $paged=$this->dispatcher->getParam("paged");
        $page = (int) (!isset($paged) ? 1 : $paged);
        $page = ($page == 0 ? 1 : $page);
        $perpage =20;
        $startpoint = ($page * $perpage) - $perpage;
        //echo "select enquiry.* from enquiry".$joinString.$where." order by ".$order." limit ".$startpoint.", ".$perpage; exit();
        //echo "select enquiry.* from enquiry".$joinString.$where." order by ".$order;
        $leadRes=Enquiry::findAll("select enquiry.* from enquiry".$joinString.$where." order by ".$order);

             $propertyTypeArr=array('1'=>'Residential','2'=>'Semi Commercial','3'=>'Commercial','4'=>'Land no planning','Land With Planning');
            $content=' <table class="table table-hover" style="min-width:1300px">
                      <thead>
                        <tr>
                           <th width="5%">Sl #</th>
                      <th width="8%">Product
                      </th>
                      <th width="10%"> Name </th>
                      <th width="10%">Security </th>
                      <th width="15%">Security Address</th>
                      
                      <th width="10%">Loan Amount</th>
                      <th width="10%">LTV</th>
                      <th width="10%">Proc Fee
                       
                      </th>
                      <th width="10%">Broker Fee</th>
                      <th width="5%">Advisor</th>
                      <th width="5%">Lender
                       
                      </th>
                      <th width="10%">Case Status</th>
                      
                     
                      <th width="8%">Inquired On
                      </th>
                      <th width="10%">Last Modified</th>
                      <th width="10%">Action</th>
                        </tr>
                      </thead>
                      <tbody>';

                        if(count($leadRes)>0){
                          $slno=$startpoint+1;
                          $totalAmountRequired=0;
                          $totbrokerfee=0;
                          foreach($leadRes as $leadResult){
                            $advisorid=$leadResult->assign_advisor;
                            if($advisorid!=''){
                              $advDetail=Users::findFirst(array('conditions' => "id='".$advisorid."'"));
                            }else{
                              $advDetail=array();
                            }
                            $totalAmountRequired+=$leadResult->amount_required;
                            if (!empty($leadResult->product)) {
                              // $productDetail=Products::findFirst(array('conditions' => "id=".$leadResult->product." and is_active=1"));
                            }
                            if($leadResult->inernal_broker_fee>0){
                                  $bfee=$leadResult->inernal_broker_fee/100*$leadResult->amount_required;
                                  $totbrokerfee+=$bfee;

                                }
                            if($leadResult->product!=''){
                              $chargeDetail=Charges::findFirst(array('conditions' => "id=".$leadResult->product));
                            }else if($leadResult->application_type!=''){
                              $chargeDetail=Charges::findFirst(array('conditions' => "id=".$leadResult->application_type));
                            }else{
                              $chargeDetail=array();
                            }
                            $noteText=stripslashes($leadResult->note_text);
                            $shortNote=(strlen($noteText)>30)? substr($noteText, 0, 30) : $noteText;
                            $leadAppDetail=LeadApplication::find(array('conditions' => "lead_id=".$leadResult->id, 'limit' => 1));

                            if(count($leadAppDetail)>0){
                                    $nameArr=explode(":::", $leadAppDetail[0]->pd_fullname);
                                    $clientname=stripslashes($nameArr[0]);
                                  } else {
                                    if($leadResult->borrower_name!=''){
                                      $clientname=$leadResult->borrower_name;
                                    }else if($leadResult->first_name!=''){
                                      $clientname=stripslashes($leadResult->first_name." ".$leadResult->last_name);
                                    }else{
                                      $clientname="";
                                    }
                                  }
                                  if($leadResult->borrower_mob!=''){
                                    $phoneno=$leadResult->borrower_mob;
                                  }else{
                                    if(count($leadAppDetail)>0){
                                      $phoneArr=explode(":::", $leadAppDetail[0]->pd_phone_no);
                                      $phoneno=stripslashes($phoneArr[0]);
                                    }else{
                                      $phoneno="";
                                    }
                                  }
                                  if($leadResult->borrower_email!=''){
                                    $emailID=$leadResult->borrower_email;
                                  }else{
                                    if(count($leadAppDetail)>0){
                                      $emailArr=explode(":::", $leadAppDetail[0]->pd_email);
                                      $emailID=stripslashes($emailArr[0]);
                                    }else{
                                      $emailID="";
                                    }
                                  }

                                  $workflowTaskRes=WorkflowTask::find(array('conditions' => "lead_id=".$leadResult->id, 'order' => "id desc", 'limit' => 1));
                                 if(count($workflowTaskRes)>0){
                                  $workflowTaskResult=$workflowTaskRes[0];
                                  //$taskstatusDetail=TaskStatus::findFirst(array('conditions' => "id=".$workflowTaskResult->task_status));
                                  if($workflowTaskResult->in_progress_sub=='Valuation/ Legal'){
                                    $stat="Valuation";
                                  }else{
                                    $stat=stripslashes($workflowTaskResult->in_progress_sub);
                                  }



                                }else{
                                $stat="N/A";
                               }

                               if(count($advDetail)>0){ $advname=stripslashes($advDetail->first_name);}else{$advname='';}

                               if($leadResult->approve_lead==1){
                                   $approveLead="Yes";
                                  }else if($leadResult->approve_lead==0){
                                    $approveLead="No";
                                  }
                                  $lendername="";
                              if(count($leadAppDetail)>0){
                                $lenderArr=explode(":::", $leadAppDetail[0]->pd_lender);
                                $lendername=stripslashes($lenderArr[0]);
                              } else {
                                if($leadResult->current_lender!=''){
                                  $lendername=$leadResult->current_lender;
                                }else{
                                  $lendername="";
                                }
                              }
                              //echo $lendername;

                                  $conformMsg="'Do you need convert back to lead?'";

                           $content.=' <tr>
                                  <td>'.$slno.'</td>
                                  <td>'.$chargeDetail->charge_name.'</td>
                                  <td>'.$clientname.'</td>
                                  <td>'.$propertyTypeArr[$leadResult->property_type].'</td>
                                  <td>'.$leadResult->security_address.'</td>
                             
                                  <td>£ '.number_format($leadResult->amount_required, 2).'</td>
                                  <td>'.$leadResult->ltv_required.' %</td>
                                  <td>'.$leadResult->internal_proc_fee.' %</td>
                                  <td>'.$leadResult->inernal_broker_fee.' %</td>
                                  <td>'.$advname.'</td>
                                  <td>'.$lendername.'</td>
                                  <td>'.$stat.'</td>
                                  
                                  <td>'.date("d/m/Y H:i A", strtotime($leadResult->created)).'</td>
                                  <td>'.date("d/m/Y H:i A", strtotime($leadResult->modified)).'</td>
                              <td align="center">
                                <div class="dropdown btntable-dropdown">
                                  <button class="dotbtn" type="button" data-toggle="dropdown"><i class="fas fa-ellipsis-v"></i></button>
                                  <ul class="dropdown-menu">
                                    <li>
                                      <a href="'.BASEURL.'dashboard/pipelinedetail/'.$leadResult->id.'" style="color:#E52D42;" target="_blank">View</a>
                                    </li>
                                    <li>
                                      <a href="'.BASEURL.'dashboard/piplinecoverttolead/'.$leadResult->id.'" onclick="return confirm('.$conformMsg.')" style="color:#218838;" target="_blank">Convert back to lead</a>
                                    </li>
                                  </ul>
                                </div> 
                              </td>
                            </tr>';
                            $slno++;
                          }
                           $content.='<tr>
                            <td></td>
                         <td></td>
                        
                        <td colspan="2"><strong>This Page Total Amount:</strong></td>
                        <td colspan="2"><strong>£ '.number_format($totalAmountRequired, 2).'</strong></td>
                       
                        <td></td>
                        <td><strong>Broker Fee:£ '.number_format($totbrokerfee, 2).'</strong> </td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                          </tr>';
                        }else{
                          if($this->session->get('sessUserType')<=0){
                            $content.='<tr>
                              <td colspan="14"><h4 align="center">No Pipeline</h4></td>
                            </tr>';
                          }
                        }
                      $content.='</tbody>
                    </table>
                          <hr class="spacer20px">
                          <div class="col-lg-12">
                            <div class="total_loan">
                              <h5>Total Loan : '.number_format($totalAmountRequired, 2).'</h5>
                            </div>
                          </div>';
        $resArry['status']=1;
        $resArry['task_manage']=$content;
        echo json_encode($resArry);

        }
        exit;
    }
    /**
    * Leads Action To Manage HZA leads
    * Action Name: leadsAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 25-06-2018
    **/
    public function leadsAction(){
        $response = new \Phalcon\Http\Response();
        $allParam=$this->dispatcher->getParams();

        $sessionID=$this->session->get('sessUserID');
        if($this->session->get('sessUserType')<=0){
            //$whr=array("advisor_id='".$sessionID."'");
            $whr=array("(enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL)");
        }else{
            $sessionID=$this->session->get('sessUserID');
            $userDetail=Users::findFirst(array('conditions' => "id='".$sessionID."'"));
            //echo $userDetail->lead_id; exit();
            $whr=array("enquiry.user_id='".$sessionID."' and enquiry.approve_lead=1 and enquiry.approve_by_lender>0 and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL)");
        }
        if($this->request->isGet()){
            $allGet=$this->request->get();
            if(isset($allGet['searchtxt']) && $allGet['searchtxt']!=''){
                $srhtxt=$allGet['searchtxt'];
                array_push($whr, "(enquiry.first_name like '%".$srhtxt."%' or enquiry.last_name like '%".$srhtxt."%' or CONCAT(enquiry.first_name, ' ', enquiry.last_name) like '%".$srhtxt."%' or enquiry.borrower_email = '".$srhtxt."' or enquiry.borrower_mob = '".$srhtxt."' or enquiry.postcode = '".$srhtxt."' or enquiry.name_of_comany like '%".$srhtxt."%' or enquiry.borrower_address like '%".$srhtxt."%')");
            }
            /*if(isset($allGet['loan_type']) && $allGet['loan_type']!=''){
                $loan_type=$allGet['loan_type'];
                array_push($whr, "loan_type='".$loan_type."'");
            }*/
            if(isset($allGet['product']) && $allGet['product']!=''){
                $product=$allGet['product'];
                array_push($whr, "enquiry.product='".$product."'");
            }
            if(isset($allGet['purpose']) && $allGet['purpose']!=''){
                $purpose=$allGet['purpose'];
                array_push($whr, "enquiry.purpose='".$purpose."'");
            }
            if(isset($allGet['property_type']) && $allGet['property_type']!=''){
                $property_type=$allGet['property_type'];
                array_push($whr, "enquiry.property_type='".$property_type."'");
            }
            if(isset($allGet['refurbishment']) && $allGet['refurbishment']!=''){
                $refurbishment=$allGet['refurbishment'];
                array_push($whr, "enquiry.refurbishment='".$refurbishment."'");
            }
            if(isset($allGet['lead_source']) && $allGet['lead_source']!=''){
                $lead_source=$allGet['lead_source'];
                array_push($whr, "enquiry.lead_source='".$lead_source."'");
            }
            if(isset($allGet['lead_owner']) && $allGet['lead_owner']!=''){
                $lead_owner=$allGet['lead_owner'];
                array_push($whr, "enquiry.advisor_id='".$lead_owner."'");
            }
            /*if(isset($allGet['borrower_type']) && $allGet['borrower_type']!=''){
                $borrower_type=$allGet['borrower_type'];
                array_push($whr, "borrower_type='".$borrower_type."'");
            }
            if(isset($allGet['term_required']) && $allGet['term_required']!=''){
                $term_required=$allGet['term_required'];
                array_push($whr, "term_required='".$term_required."'");
            }
            if(isset($allGet['servicing']) && $allGet['servicing']!=''){
                $servicing=$allGet['servicing'];
                array_push($whr, "servicing='".$servicing."'");
            }
            if(isset($allGet['income']) && $allGet['income']!=''){
                $income=$allGet['income'];
                array_push($whr, "income='".$income."'");
            }*/
        }
        $joinArr=array();
        $order="id desc";
        if(isset($allGet['sorting']) && $allGet['sorting']!=''){
            if(isset($allGet['atype']) && $allGet['atype']=='product'){
                array_push($joinArr, "left join charges on charges.id=enquiry.product");
                $order="charges.".urldecode($allGet['sorting']);
            }else if(isset($allGet['atype']) && $allGet['atype']=='user'){
                array_push($joinArr, "left join users on users.id=enquiry.advisor_id");
                $order="users.".urldecode($allGet['sorting']);
            }else if(isset($allGet['atype']) && $allGet['atype']=='lenduser'){
                array_push($joinArr, "left join users on users.id=enquiry.approve_by_lender");
                $order="users.".urldecode($allGet['sorting']);
            }else{
                $order="enquiry.".urldecode($allGet['sorting']);
            }

        }
        $where="";
        if(!empty($whr)){
            $where=" where ".implode(" and ", $whr);
        }
        $joinString="";
        if(!empty($joinArr)){
            $joinString=" ".implode(" ", $joinArr);
        }
        //===========pagination===========
        $paged=$this->dispatcher->getParam("paged");
        $page = (int) (!isset($paged) ? 1 : $paged);
        $page = ($page == 0 ? 1 : $page);
        $perpage =20;
        $startpoint = ($page * $perpage) - $perpage;
        //echo "select enquiry.* from enquiry".$joinString.$where." order by ".$order." limit ".$startpoint.", ".$perpage; exit();
        $totrecord=Enquiry::findAll("select enquiry.* from enquiry".$joinString.$where." order by ".$order);
        $leadRes=Enquiry::findAll("select enquiry.* from enquiry".$joinString.$where." order by ".$order." limit ".$startpoint.", ".$perpage);
        //$totrecord=Enquiry::find(array("conditions" => $where, "order" => $order,));
        //$leadRes=Enquiry::find(array("conditions" => $where, "order" => $order,"limit" => array($perpage, $startpoint)));
        //================================

        //$adminRes=AdminUsers::findByAll()->toArray();
        $this->view->setVar('leadRes', $leadRes);
        $this->view->setVar('totrecord', count($totrecord));
        $this->view->setVar('perpage', $perpage);
        $this->view->setVar('paged', $paged);
        $this->view->setVar('startpoint', $startpoint);
        //echo 'This page is comming Soon';exit;
    }
    /**
    * Lead clean Add Action To clean Lead User
    * Action Name: leadaddcleanAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 11-09-2018
    **/
    public function leadaddcleanAction($leadid=''){
        $response = new \Phalcon\Http\Response();
        if($this->session->has('enquirySessID')){
            $this->session->remove('enquirySessID');
        }
        if($this->session->has('all_cla_data')){
            $this->session->remove('all_cla_data');
        }
        if($this->session->has('newenquiry')){
            $this->session->remove('newenquiry');
        }
        //return $response->redirect('dashboard/leadapplication/'.$leadid);
        return $response->redirect('dashboard/enquirysource/'.$leadid);
    }
    /**
    * new Enquiry Action To add new enquiry
    * Action Name: newenquiryAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 30-10-2019
    **/
    public function newenquiryAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->has('enquirySessID')){
            $this->session->remove('enquirySessID');
        }
        if($this->session->has('all_cla_data')){
            $this->session->remove('all_cla_data');
        }
        $this->session->set('newenquiry', 1);
        //return $response->redirect('dashboard/leadapplication/'.$leadid);
        return $response->redirect('dashboard/enquirysource/');
    }
    /**
    * Lead Application Add Action To Add Application
    * Action Name: leadapplicationAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 18-10-2019
    **/
    public function leadapplicationAction($leadid=''){
        $response = new \Phalcon\Http\Response(); $response = new \Phalcon\Http\Response();
            if($this->session->get('sessUserType')>0){
                return $response->redirect('/dashboard');
            }
            if($this->request->isPost()){
                $allPost=$this->request->getPost();
                $enquiryID=$this->session->get('enquirySessID');
                $chkQuote=Enquiry::find(array('conditions' => "id='".$enquiryID."'", 'limit' => 1));
                if(count($chkQuote)>0){
                    $allPost=array_merge($chkQuote[0]->toArray(),$allPost);
                }else{
                    $allPost['id']=$enquiryID;
                }
                $allPost['advisor_id']=$this->session->get('sessUserID');
                $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $enquiryID=$this->session->get('enquirySessID');
                $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
                $allPost['lead_id']=$enquiryDetails['lead_id'];
                $allPost['lead_unique_id']=$enquiryDetails['lead_unique_id'];
                $allPost['created']=$enquiryDetails['created'];
                $allPost['id']=$enquiryDetails['id'];
                $allPost['is_active']=$enquiryDetails['is_active'];
                $enquiryDB = new Enquiry();
                $save=$enquiryDB->save($allPost);
                if($save){
                    $enquiryID=$enquiryDB->id;
                    $factfindEnquirySection= FactfindSection::find(array("conditions"=>"section=2 and sub_section=1",));
                    if(count($factfindEnquirySection)>0)
                    {
                        foreach($factfindEnquirySection as $factfindEnquirySectionDet){
                            $customFields=CustomFields::find(array('conditions'=>'factfind_id="'.$factfindEnquirySectionDet->id.'"',"order" => "order_no asc",));
                            if(count($customFields)>0)
                            {
                                $this->modelsManager->executeQuery("delete from EnquiryAdditional where factfind_id='".$factfindEnquirySectionDet->id."'");
                                foreach($customFields as $customFieldsDet)
                                {
                                    $enqAddObj=new EnquiryAdditional();
                                    $enqAddObj->enquiry_id=$enquiryID;
                                    $enqAddObj->factfind_id=$factfindEnquirySectionDet->id;
                                    $enqAddObj->customfield_id=$customFieldsDet->id;
                                    $enqAddObj->field_value=$allPost[$customFieldsDet->name_attribute];
                                    $enqAddObj->created=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                    $enqAddObj->modified=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                    $enqAddObj->save();

                                }

                            }


                        }
                    }
                    if(isset($allPost['id'])){
                        $trackData['track_for']='leadStepAppEdit';
                    }else{
                        $trackData['track_for']='leadStepAppAdd';
                    }
                    $trackData['userid']=$this->session->get('sessUserID');
                    $trackData['track_save_id']=$enquiryID;
                    $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                    $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                    $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $trackClickSave = new TrackClickSave();
                    $saveTrack=$trackClickSave->save($trackData);
                    //=======Save track report End========
                    /*if($allPost['application_type']==5 || $allPost['application_type']==4 || $allPost['application_type']==2 || $allPost['application_type']==1 ){
                        return $response->redirect('/dashboard/quickquote');
                    }else{
                        return $response->redirect('/dashboard/leadadd');
                    }*/
                    return $response->redirect('dashboard/quickquote');
                }else{
                    $this->flashSession->error("Application Saving Failed.");
                }
            }
            if($this->session->has('enquirySessID')){
                $enquiryID=$this->session->get('enquirySessID');
                $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
                /*echo "<pre>";
                print_r($enquiryDetails);exit();*/
                $_POST=$enquiryDetails;
            }else if($leadid!=''){
                 $enquiryID=$leadid;
                 $this->session->set('enquirySessID', $enquiryID);
                $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
                $_POST=$enquiryDetails;
            }
        }
        /**
    * Enquiry Source Add Action To Add Application
    * Action Name: enquirysourceAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 18-10-2019
    **/
    public function enquirysourceAction($leadid=''){
        $response = new \Phalcon\Http\Response(); $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }

        if($this->request->isPost()){
            //echo 3; exit();
            $allPost=$this->request->getPost();
            if($leadid!=''){
              $this->session->set('enquirySessID', $leadid);
            }
            if($this->session->get('enquirySessID')=='images'){
                $this->session->remove('enquirySessID');
            }
            if($this->session->has('enquirySessID')){
                $enquiryID=$this->session->get('enquirySessID');
                $chkQuote=Enquiry::find(array('conditions' => "id='".$enquiryID."'", 'limit' => 1));
                if(count($chkQuote)>0){
                    $allPost=array_merge($chkQuote[0]->toArray(),$allPost);
                }else{
                    $allPost['id']=$enquiryID;
                }
                $enquiryID=$this->session->get('enquirySessID');
                $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
                $allPost['lead_id']=$enquiryDetails['lead_id'];
                $allPost['lead_unique_id']=$enquiryDetails['lead_unique_id'];
                $allPost['created']=$enquiryDetails['created'];
                $allPost['id']=$enquiryDetails['id'];
                $allPost['is_active']=$enquiryDetails['is_active'];
            }else{
                $lead_unique_id=rand(10, 1000000);
                $allPost['lead_unique_id']=$lead_unique_id;
                $leadlast=Enquiry::find(array('conditions' => "lead_id like 'LEAD%'", 'order' => "id desc", 'limit' => 1));
                if(count($leadlast)>0){
                    $lastID=$leadlast[0]->lead_id;
                    $idArr=explode("D", $lastID);
                    $increaseID=$idArr[1]+1;
                    $finalID="LEAD".$increaseID;
                    $allPost['lead_id']=$finalID;
                }else{
                    $allPost['lead_id']="LEAD10001";
                }
                $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            }
            $allPost['advisor_id']=$this->session->get('sessUserID');
            $allPost['assign_advisor']=$this->session->get('sessUserID');
            if($allPost["enquiry_source"]=="2" || $allPost["enquiry_source"]=="9" || $allPost["enquiry_source"]=="13" || $allPost["enquiry_source"]=="14")
            {
                $allPost['lead_given_by']=463;
            }
            else
            {
                $allPost['lead_given_by']="";
            }

            $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            $enquiryDB = new Enquiry();
            //echo "<pre>";print_r($allPost);exit;
            $save=$enquiryDB->save($allPost);
            if($save){
                $factfindEnquirySection= FactfindSection::find(array("conditions"=>"section=1",));
                $enquiryID=$enquiryDB->id;
                if(count($factfindEnquirySection)>0)
                {
                    foreach($factfindEnquirySection as $factfindEnquirySectionDet){
                        $customFields=CustomFields::find(array('conditions'=>'factfind_id="'.$factfindEnquirySectionDet->id.'"',"order" => "order_no asc",));
                        if(count($customFields)>0)
                        {
                            $this->modelsManager->executeQuery("delete from EnquiryAdditional where factfind_id='".$factfindEnquirySectionDet->id."'");
                            foreach($customFields as $customFieldsDet)
                            {
                                $enqAddObj=new EnquiryAdditional();
                                $enqAddObj->enquiry_id=$enquiryID;
                                $enqAddObj->factfind_id=$factfindEnquirySectionDet->id;
                                $enqAddObj->customfield_id=$customFieldsDet->id;
                                $enqAddObj->field_value=$allPost[$customFieldsDet->name_attribute];
                                $enqAddObj->created=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                $enqAddObj->modified=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                $enqAddObj->save();

                            }

                        }


                    }
                }
                if(!$this->session->has('enquirySessID')){
                    $this->session->set('enquirySessID', $enquiryID);
                }
                if(isset($allPost['id'])){
                    $trackData['track_for']='leadStepAppEdit';
                }else{
                    $trackData['track_for']='leadStepAppAdd';
                }
                $trackData['userid']=$this->session->get('sessUserID');
                $trackData['track_save_id']=$enquiryID;
                $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $trackClickSave = new TrackClickSave();
                $saveTrack=$trackClickSave->save($trackData);
                return $response->redirect('dashboard/leadapplication');
            }else{
                $this->flashSession->error("Application Saving Failed.");
            }
        }
        if($this->session->has('enquirySessID')){
            if($this->session->get('enquirySessID')!='images'){
                $enquiryID=$this->session->get('enquirySessID');
                $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
                $_POST=$enquiryDetails;
            }else{
                $this->session->remove('enquirySessID');
            }
            //echo 1; exit();
        }else if($leadid!=''){
            $enquiryID=$leadid;
            $this->session->set('enquirySessID', $enquiryID);
            $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
            $_POST=$enquiryDetails;
            //echo 2; exit();
        }
    }
    /**
    * Lead Add Action To Add Lead User by Advisor
    * Action Name: leadaddAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 13-06-2018
    * v2 Created Date: 1-10-2019
    **/
    public function leadaddAction($leadid=""){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('dashboard');
        }
         if(!$this->session->has('enquirySessID')){
            return $response->redirect("dashboard/enquiry");
        }
         //============Save enquiry start here=========
            if($this->request->isPost()){
                $allPost=$this->request->getPost();

                 //echo "<pre>";
                 //print_r($allPost);exit();
                 $enquiryID=$this->session->get('enquirySessID');
                 $chkQuote=Enquiry::find(array('conditions' => "id='".$enquiryID."'", 'limit' => 1));
                 if(count($chkQuote)>0){
                    $allPost=array_merge($chkQuote[0]->toArray(),$allPost);
                 }else{
                    $allPost['id']=$enquiryID;
                 }
                 $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                //echo "<pre>"; print_r($allPost);exit();
                 $allPost['purchase_price']=str_replace(",", "", $allPost['purchase_price']);
                 $allPost['market_value']=str_replace(",", "", $allPost['market_value']);
                 $allPost['amount_required']=str_replace(",", "", $allPost['amount_required']);
                 $allPost['original_purchase_price']=str_replace(",", "", $allPost['original_purchase_price']);
                 $allPost['purchase_price']=str_replace(",", "", $allPost['purchase_price']);
                 $allPost['purchase_price']=str_replace(",", "", $allPost['purchase_price']);

                    $enquiryDB = new Enquiry();
                    $save=$enquiryDB->save($allPost);
                    if($save){
                        $enquiryID=$enquiryDB->id;

                        //=======Save track report========
                        if(isset($allPost['id'])){
                            $trackData['track_for']='leadEdit';
                        }else{
                            $trackData['track_for']='leadAdd';
                        }
                        $trackData['userid']=$this->session->get('sessUserID');
                        $trackData['track_save_id']=$enquiryID;
                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);
                        //=======Save track report End========
                        if($allPost['exit_submit']==0){
                            $this->session->set('enquirySessID', $enquiryID);
                            //$this->flashSession->success("Enquiry Saved Successfully.");
                            /*if($allPost['application_type']!=1){
                                return $response->redirect("dashboard/quickquote");
                            }else{
                                return $response->redirect("dashboard/applicant");
                            }*/
                            return $response->redirect("dashboard/quickquote");

                        }else if($allPost['exit_submit']==1){
                            if($this->session->has('enquirySessID')){
                                $this->session->remove('enquirySessID');
                            }
                            $this->flashSession->success("Enquiry Saved Successfully.");
                            return $response->redirect("dashboard/enquiry");
                        }
                    }else{
                        //$this->flashSession->error("Enquiry Saving Failed.");
                    }

            }
            if($this->session->has('enquirySessID')){
                $enquiryID=$this->session->get('enquirySessID');
                $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
                /*echo "<pre>";
                print_r($enquiryDetails);exit();*/
                $_POST=$enquiryDetails;
            }else if($leadid!=''){
                 $enquiryID=$leadid;
                 $this->session->set('enquirySessID', $enquiryID);
                $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
                $_POST=$enquiryDetails;
            }
            //print_r($_POST);exit();
        //============End here========================
    }
   /**
    * Quick Quote Action To calculate the quote by Advisor
    * Action Name: quickquoteAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 15-06-2018
    * v2 Created Date: 2-10-2019
    **/
    public function quickquote_oldAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if(!$this->session->has('enquirySessID')){
            return $response->redirect("dashboard/enquiry");
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

                $allPost['id']=$this->session->get('enquirySessID');

               $getData=array();
                $chkQuote=Enquiry::find(array('conditions' => "id='".$allPost['id']."'", 'limit' => 1));
                //echo "<pre>";print_r($chkQuote->toArray());exit;
                if(count($chkQuote)>0){
                    //$getData=$chkQuote[0]->toArray();
                    $getData=array_merge($chkQuote[0]->toArray(),$allPost);
                    $getData['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $getData["purchase_price"]=str_replace(",", "", $allPost["purchase_price"]);

                    $getData["current_debt"]=str_replace(",", "", $allPost["current_debt"]);
                    $getData["amount_required"]=str_replace(",", "", $allPost["amount_required"]);
                    $getData["amt_outstanding_ist_charg"]=str_replace(",", "", $allPost["amt_outstanding_ist_charg"]);
                    $getData["original_purchase_price"]=str_replace(",", "", $allPost["original_purchase_price"]);
                    $getData["omv"]=str_replace(",", "", $allPost["omv"]);
                    $getData["cost_of_work"]=str_replace(",", "", $allPost["cost_of_work"]);
                    $getData["tot_build_cost"]=str_replace(",", "", $allPost["tot_build_cost"]);

                    $getData["required_toward_build"]=str_replace(",", "", $allPost["required_toward_build"]);
                    $getData["require_day_one_purchase"]=str_replace(",", "", $allPost["require_day_one_purchase"]);
                    $getData["gdv"]=str_replace(",", "", $allPost["gdv"]);
                    $getData["deposit"]=str_replace(",", "", $allPost["deposit"]);

                    $getData["refurb_cost"]=str_replace(",", "", $allPost["refurb_cost"]);
                    $getData["ltgdv_exe_interest"]=str_replace(",", "", $allPost["ltgdv_exe_interest"]);
                    $getData["capital_raise"]=str_replace(",", "", $allPost["capital_raise"]);
                    $getData["monthly_mortgage_pmt"]=str_replace(",", "", $allPost["monthly_mortgage_pmt"]);
                    $getData["rental_per_anum"]=str_replace(",", "", $allPost["rental_per_anum"]);
                    $getData["ltp"]=str_replace(",", "", $allPost["ltp"]);
                    $getData["net_loan"]=str_replace(",", "", $allPost["net_loan"]);
                    $getData["net_ltv"]=str_replace(",", "", $allPost["net_ltv"]);
                    $getData["net_ltp"]=str_replace(",", "", $allPost["net_ltp"]);
                    $getData["net_ltgdv"]=str_replace(",", "", $allPost["net_ltgdv"]);

                    $getData["ltc_exe_fin"]=str_replace(",", "", $allPost["ltc_exe_fin"]);
                    $getData["erv"]=str_replace(",", "", $allPost["erv"]);
                    $getData["net_ltv_on_exit"]=str_replace(",", "", $allPost["net_ltv_on_exit"]);
                    $getData["net_ltc"]=str_replace(",", "", $allPost["net_ltc"]);
                    $getData["cmv"]=str_replace(",", "", $allPost["cmv"]);
                    $getData["invetiment_income"]=str_replace(",", "", $allPost["invetiment_income"]);

                    $getData["gross_yield"]=str_replace(",", "", $allPost["gross_yield"]);
                    $getData["day_one_loan"]=str_replace(",", "", $allPost["day_one_loan"]);
                    if($allPost["date_ofy__purchase"]!="")
                    {
                        $getData["date_of_purchase"]=$allPost["date_ofy__purchase"];
                    }
                    else if($allPost["date_of_purchase"]!="")
                    {
                        $getData["date_of_purchase"]=$allPost["date_of_purchase"];
                    }
                    $getData["loan_details_start_date"]= $allPost["loan_details_start_date"];

                    $getData["first_charge_current_debt"]=str_replace(",", "", $allPost["first_charge_current_debt"]);
                    $getData["second_charge_current_debt"]=str_replace(",", "", $allPost["second_charge_current_debt"]);

                    $getData["asset_listed"]=$allPost["asset_listed"];
                    if($allPost["asset_listed"]==1)
                    {
                        $getData["asset_grade"]=$allPost["asset_grade"];
                    }
                    if($allPost["construction_cost"]!="")
                    {
                        $getData["construction_cost"]=str_replace(",", "", $allPost["construction_cost"]);
                    }
                    if($allPost["contingency"]!="")
                    {
                        $getData["contingency"]=str_replace(",", "", $allPost["contingency"]);
                    }
                    if($allPost["professional_fees"]!="")
                    {
                        $getData["professional_fees"]=str_replace(",", "", $allPost["professional_fees"]);
                    }

                    //echo "<pre>";print_r($getData);exit;
                   /* $getData["interestservicing"]=$allPost["interestservicing"];
                    $getData["brokerfee"]=$allPost["brokerfee"]; */
                    //$getData["ltv_required"]=($getData["amount_required"]/$getData["purchase_price"])*100;
                    $enquiryDB= new Enquiry();
                    //echo "<pre>";print_r($getData);exit;
                    $saveData=$enquiryDB->save($getData);
                    //echo $saveData;exit;
                    if($saveData){
                        //echo 123;exit;
                       $allPost['lead_id']=$enquiryDB->id;
                       $factfindEnquirySection= FactfindSection::find(array("conditions"=>"section=2 and sub_section=2",));
                        if(count($factfindEnquirySection)>0)
                        {
                            foreach($factfindEnquirySection as $factfindEnquirySectionDet){
                                $customFields=CustomFields::find(array('conditions'=>'factfind_id="'.$factfindEnquirySectionDet->id.'"',"order" => "order_no asc",));
                                if(count($customFields)>0)
                                {
                                    $this->modelsManager->executeQuery("delete from EnquiryAdditional where factfind_id='".$factfindEnquirySectionDet->id."'");
                                    foreach($customFields as $customFieldsDet)
                                    {
                                        $enqAddObj=new EnquiryAdditional();
                                        $enqAddObj->enquiry_id=$allPost['lead_id'];
                                        $enqAddObj->factfind_id=$factfindEnquirySectionDet->id;
                                        $enqAddObj->customfield_id=$customFieldsDet->id;
                                        $enqAddObj->field_value=$allPost[$customFieldsDet->name_attribute];
                                        $enqAddObj->created=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                        $enqAddObj->modified=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                        $enqAddObj->save();

                                    }

                                }


                            }
                        }

                        $enquiryDetail=EnquiryDetail::find(array('conditions' => "lead_id='".$allPost['lead_id']."'", 'limit' => 1))->toArray();
                          if(count($enquiryDetail)>0){
                            $allPost['id'] = $enquiryDetail[0]['id'];
                            $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));

                            $enqData=array_merge($enquiryDetail[0],$allPost);
                          }else{
                            $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $enqData=$allPost;
                          }
                        $enqData["total_sqft"]=str_replace(",", "", $allPost["total_sqft"]);
                        $enqData["avg_unit_price"]=str_replace(",", "", $allPost["avg_unit_price"]);
                        $enqData["build_cost_per_unit"]=str_replace(",", "", $allPost["build_cost_per_unit"]);
                        $enqData["build_cost_per_sqft"]=str_replace(",", "", $allPost["build_cost_per_sqft"]);


                         $enquiryDb= new EnquiryDetail();
                        $saveData=$enquiryDb->save($enqData);
                       // $newquoteData["modified"]=date("Y-m-d H:i:s", strtotime("+60 minutes"));

                        //=======Save track report========
                        if(isset($allPost['id'])){
                            $trackData['track_for']='quoteEdit';
                        }else{
                            $trackData['track_for']='quoteAdd';
                        }
                        $trackData['userid']=$this->session->get('sessUserID');
                        $trackData['track_save_id']=$quickQuoteDB->id;
                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);
                    //=======Save track report End========
                    }
                    /*if($getData['application_type']!=4){
                        if($getData['application_type']==1 && ($getData['refurbishment']!=2 && $getData['refurbishment']!=3)){
                            return $response->redirect('dashboard/experince');
                        }else if($getData['application_type']==5 || $getData['application_type']==2){
                            if($getData['refurbishment']>1){
                                return $response->redirect('dashboard/projectdetail');
                            }else{
                                return $response->redirect('dashboard/experince');
                            }

                        }else{
                            return $response->redirect('dashboard/applicant');
                        }

                    }else{
                        //return $response->redirect('dashboard/projectdetail');
                        return $response->redirect('dashboard/developmentappraisal');
                    }*/
                    return $response->redirect('dashboard/security');

                }
                //echo "<pre>";print_r($getData);exit;

            //}

        }else{
            if($this->session->has('enquirySessID')){

                    $enquiryID=$this->session->get('enquirySessID');
                    $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
                    $_POST=$enquiryDetails;
                    $_POST['interestservicing']=$enquiryDetails['interestservicing'];
                    $_POST['brokerfee']=$enquiryDetails['brokerfee'];
                    $enquirysecdetails=EnquiryDetail::find(array('conditions'=>"lead_id='".$enquiryID."'", 'limit' => 1))->toArray();
                    if(count($enquirysecdetails)>0){
                        $enquirysecdetail=$enquirysecdetails[0];
                         $_POST['planning_status']= $enquirysecdetail['planning_status'];
                        $_POST['proposed_scheme']= $enquirysecdetail['proposed_scheme'];
                        $_POST['build_type']= $enquirysecdetail['build_type'];
                        $_POST['total_sqft']= $enquirysecdetail['total_sqft'];
                        $_POST['avg_unit_price']= $enquirysecdetail['avg_unit_price'];
                        $_POST['build_cost_per_unit']= $enquirysecdetail['build_cost_per_unit'];
                        $_POST['build_cost_per_sqft']= $enquirysecdetail['build_cost_per_sqft'];
                        $_POST['development_exit']= $enquirysecdetail['development_exit'];
                    }

                   // print_r($_POST);   exit();
            }
        }
    }
    public function quickquoteAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if(!$this->session->has('enquirySessID')){
            return $response->redirect("dashboard/enquiry");
        }
        if($this->request->isPost()){
            $allPost           = $this->request->getPost();
            // echo "<pre>"; print_r($allPost);die;
                $allPost['id'] = $this->session->get('enquirySessID');

               $getData        = array();
                $chkQuote      = Enquiry::find(array('conditions' => "id='".$allPost['id']."'", 'limit' => 1));
                // echo "<pre>";print_r($chkQuote->toArray());exit;
                if(count($chkQuote)>0){
                    //$getData=$chkQuote[0]->toArray();
                    $getData                             = array_merge($chkQuote[0]->toArray(),$allPost);
                     $getData["fin_net_ltc_value"]        = str_replace(",", "", $allPost["fin_net_ltc_value"]);
                    $getData['modified']                 = date("Y-m-d H:i:s", strtotime("+60 minutes"));

                    $strData                             = $allPost["CompAuctionData"];
                    $dateStr                             = str_replace('/', '-', $strData);
                    $getData['CompAuctionData']          = date("Y-m-d",strtotime($dateStr));

                    $strDataPurchase                     = $allPost["dateofpurchase"];
                    $dateStrpr                           = str_replace('/', '-', $strDataPurchase);
                    $getData['dateofpurchase']           = date("Y-m-d",strtotime($dateStrpr));

                    $getData["income"]                   = str_replace(",", "", $allPost["income"]);
                    $getData["purchase_price"]           = str_replace(",", "", $allPost["purchase_price"]);
                    $getData["capital_raise_value"]      = str_replace(",", "", $allPost["capital_raise_value"]);
                    $getData["legalfee_value"]           = str_replace(",", "", $allPost["legalfee_value"]);
                    $getData["legalfee_percent"]         = str_replace(",", "", $allPost["legalfee_percent"]);
                    $getData["sil"]                      = str_replace(",", "", $allPost["sil"]);
                    $getData["development_s"]            = str_replace(",", "", $allPost["development_s"]);
                    $getData["contingency_value"]        = str_replace(",", "", $allPost["contingency_value"]);
                    $getData["funded_to_date"]           = str_replace(",", "", $allPost["funded_to_date"]);

                    $getData["market_value"]             = str_replace(",", "", $allPost["market_value"]);
                    $getData["rental_income"]            = str_replace(",", "", $allPost["rental_income"]);

                    $getData["current_market_value"]     = str_replace(",", "", $allPost["current_market_value"]);

                    $getData["current_debt"]             = str_replace(",", "", $allPost["current_debt"]);
                    $getData["amount_required"]          = str_replace(",", "", $allPost["amount_required"]);
                    $getData["amt_outstanding_ist_charg"]= str_replace(",", "", $allPost["amt_outstanding_ist_charg"]);
                    $getData["original_purchase_price"]  = str_replace(",", "", $allPost["original_purchase_price"]);
                    $getData["omv"]                      = str_replace(",", "", $allPost["omv"]);
                    $getData["cost_of_work"]             = str_replace(",", "", $allPost["cost_of_work"]);
                    $getData["tot_build_cost"]           = str_replace(",", "", $allPost["tot_build_cost"]);

                    $getData["required_toward_build"]    = str_replace(",", "", $allPost["required_toward_build"]);
                    $getData["require_day_one_purchase"] = str_replace(",", "", $allPost["require_day_one_purchase"]);
                    $getData["gdv"]                      = str_replace(",", "", $allPost["gdv"]);
                    $getData["deposit"]                  = str_replace(",", "", $allPost["deposit"]);

                    $getData["refurb_cost"]              = str_replace(",", "", $allPost["refurb_cost"]);
                    $getData["ltgdv_exe_interest"]       = str_replace(",", "", $allPost["ltgdv_exe_interest"]);
                    // $getData["capital_raise"]            = str_replace(",", "", $allPost["capital_raise"]);
                    $getData["monthly_mortgage_pmt"]     = str_replace(",", "", $allPost["monthly_mortgage_pmt"]);
                    $getData["rental_per_anum"]          = str_replace(",", "", $allPost["rental_per_anum"]);
                    $getData["ltp"]                      = str_replace(",", "", $allPost["ltp"]);
                    $getData["net_loan"]                 = str_replace(",", "", $allPost["net_loan"]);
                    $getData["ltp_value"]                = str_replace(",", "", $allPost["ltp_value"]);
                    $getData["net_ltv"]                  = str_replace(",", "", $allPost["net_ltv"]);
                    $getData["net_ltp"]                  = str_replace(",", "", $allPost["net_ltp"]);
                    $getData["net_ltgdv"]                = str_replace(",", "", $allPost["net_ltgdv"]);
                    $getData["loan_to_gdv_value"]        = str_replace(",", "", $allPost["loan_to_gdv_value"]);
                    $getData["profit"]                   = str_replace(",", "", $allPost["profit"]);

                    $getData["ltc_exe_fin"]              = str_replace(",", "", $allPost["ltc_exe_fin"]);
                    $getData["erv"]                      = str_replace(",", "", $allPost["erv"]);
                    $getData["net_ltv_on_exit"]          = str_replace(",", "", $allPost["net_ltv_on_exit"]);
                    $getData["net_ltc"]                  = str_replace(",", "", $allPost["net_ltc"]);
                    $getData["cmv"]                      = str_replace(",", "", $allPost["cmv"]);
                    $getData["invetiment_income"]        = str_replace(",", "", $allPost["invetiment_income"]);

                    $getData["gross_yield"]              = str_replace(",", "", $allPost["gross_yield"]);
                    $getData["day_one_loan"]             = str_replace(",", "", $allPost["day_one_loan"]);
                    $getData["gross_loan_amount"]        = str_replace(",", "", $allPost["gross_loan_amount"]);

                    $getData['total_sqft']               = str_replace(",", "", $allPost['total_sqft']);
                    $getData['avg_unit_price']           = str_replace(",", "", $allPost['avg_unit_price']);
                    $getData['build_cost_per_unit']      = str_replace(",", "", $allPost['build_cost_per_unit']);
                    $getData['build_cost_per_sqft']      = str_replace(",", "", $allPost['build_cost_per_sqft']);

                    $getData["yield_data"]              = str_replace(",", "", $allPost["yield_data"]);
                    $getData["short_lease_no"]              = str_replace(",", "", $allPost["short_lease_no"]);
                     $getData["country_of_birth"]              = str_replace(",", "", $allPost["country_of_birth"]);
                     $getData["foreign_income"]              = str_replace(",", "", $allPost["foreign_income"]);
                     $getData["single_no"]              = str_replace(",", "", $allPost["single_no"]);
                     $getData["single_sqm"]              = str_replace(",", "", $allPost["single_sqm"]);
                       $getData["double_no"]              = str_replace(",", "", $allPost["double_no"]);
                     $getData["double_sqm"]              = str_replace(",", "", $allPost["double_sqm"]);
                     $getData["single_bath_no"]              = str_replace(",", "", $allPost["single_bath_no"]);
                     $getData["single_bath_sqm"]              = str_replace(",", "", $allPost["single_bath_sqm"]);
                     $getData["double_bath_no"]              = str_replace(",", "", $allPost["double_bath_no"]);
                     $getData["double_bath_sqm"]              = str_replace(",", "", $allPost["double_bath_sqm"]);
                      $getData["no_of_kitchen_hmo_have"]              = str_replace(",", "", $allPost["no_of_kitchen_hmo_have"]);
                       $getData["communal_area_sqm"]              = str_replace(",", "", $allPost["communal_area_sqm"]);
                        $getData["outside_space_sqm"]              = str_replace(",", "", $allPost["outside_space_sqm"]);
                        $getData["deposit_percent"]              = str_replace(",", "", $allPost["deposit_percent"]);

                    if($allPost["date_ofy__purchase"]!="")
                    {
                        $getData["date_of_purchase"]=$allPost["date_ofy__purchase"];
                    }
                    else if($allPost["date_of_purchase"]!="")
                    {
                        $getData["date_of_purchase"]=$allPost["date_of_purchase"];
                    }
                    $getData["loan_details_start_date"]= $allPost["loan_details_start_date"];

                    $getData["first_charge_current_debt"]=str_replace(",", "", $allPost["first_charge_current_debt"]);
                    $getData["second_charge_current_debt"]=str_replace(",", "", $allPost["second_charge_current_debt"]);

                    $getData["asset_listed"]=$allPost["asset_listed"];
                    if($allPost["asset_listed"]==1)
                    {
                        $getData["asset_grade"]=$allPost["asset_grade"];
                    }
                    if($allPost["construction_cost"]!="")
                    {
                        $getData["construction_cost"]=str_replace(",", "", $allPost["construction_cost"]);
                    }
                    if($allPost["contingency"]!="")
                    {
                        $getData["contingency"]=str_replace(",", "", $allPost["contingency"]);
                    }
                    if($allPost["professional_fees"]!="")
                    {
                        $getData["professional_fees"]=str_replace(",", "", $allPost["professional_fees"]);
                    }

                    //echo "<pre>";print_r($getData);exit;
                   /* $getData["interestservicing"]=$allPost["interestservicing"];
                    $getData["brokerfee"]=$allPost["brokerfee"]; */
                    //$getData["ltv_required"]=($getData["amount_required"]/$getData["purchase_price"])*100;
                    $enquiryDB   = new Enquiry();
                    // echo "<pre>";print_r($getData);exit;
                    $saveData    = $enquiryDB->save($getData);
                    // echo $saveData;exit;

                    if($saveData){
                        // echo 123;exit;
                       $allPost['lead_id']=$enquiryDB->id;
                       $factfindEnquirySection= FactfindSection::find(array("conditions"=>"section=2 and sub_section=2",));
                        if(count($factfindEnquirySection)>0)
                        {
                            foreach($factfindEnquirySection as $factfindEnquirySectionDet){
                                $customFields=CustomFields::find(array('conditions'=>'factfind_id="'.$factfindEnquirySectionDet->id.'"',"order" => "order_no asc",));
                                if(count($customFields)>0)
                                {
                                    $this->modelsManager->executeQuery("delete from EnquiryAdditional where factfind_id='".$factfindEnquirySectionDet->id."'");
                                    foreach($customFields as $customFieldsDet)
                                    {
                                        $enqAddObj=new EnquiryAdditional();
                                        $enqAddObj->enquiry_id=$allPost['lead_id'];
                                        $enqAddObj->factfind_id=$factfindEnquirySectionDet->id;
                                        $enqAddObj->customfield_id=$customFieldsDet->id;
                                        $enqAddObj->field_value=$allPost[$customFieldsDet->name_attribute];
                                        $enqAddObj->created=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                        $enqAddObj->modified=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                        $enqAddObj->save();

                                    }

                                }


                            }
                        }

                        $enquiryDetail=EnquiryDetail::find(array('conditions' => "lead_id='".$allPost['lead_id']."'", 'limit' => 1))->toArray();
                          if(count($enquiryDetail)>0){
                            $allPost['id'] = $enquiryDetail[0]['id'];
                            $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));

                            $enqData=array_merge($enquiryDetail[0],$allPost);
                          }else{
                            $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $enqData=$allPost;
                          }
                        $enqData["total_sqft"]=str_replace(",", "", $allPost["total_sqft"]);
                        $enqData["avg_unit_price"]=str_replace(",", "", $allPost["avg_unit_price"]);
                        $enqData["build_cost_per_unit"]=str_replace(",", "", $allPost["build_cost_per_unit"]);
                        $enqData["build_cost_per_sqft"]=str_replace(",", "", $allPost["build_cost_per_sqft"]);


                         $enquiryDb= new EnquiryDetail();
                        $saveData=$enquiryDb->save($enqData);
                       // $newquoteData["modified"]=date("Y-m-d H:i:s", strtotime("+60 minutes"));

                        //=======Save track report========
                        if(isset($allPost['id'])){
                            $trackData['track_for']='quoteEdit';
                        }else{
                            $trackData['track_for']='quoteAdd';
                        }
                        $trackData['userid']=$this->session->get('sessUserID');
                        $trackData['track_save_id']=$quickQuoteDB->id;
                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);
                    //=======Save track report End========
                    }
                    /*if($getData['application_type']!=4){
                        if($getData['application_type']==1 && ($getData['refurbishment']!=2 && $getData['refurbishment']!=3)){
                            return $response->redirect('dashboard/experince');
                        }else if($getData['application_type']==5 || $getData['application_type']==2){
                            if($getData['refurbishment']>1){
                                return $response->redirect('dashboard/projectdetail');
                            }else{
                                return $response->redirect('dashboard/experince');
                            }

                        }else{
                            return $response->redirect('dashboard/applicant');
                        }

                    }else{
                        //return $response->redirect('dashboard/projectdetail');
                        return $response->redirect('dashboard/developmentappraisal');
                    }*/
                    return $response->redirect('dashboard/security');

                }
                //echo "<pre>";print_r($getData);exit;

            //}

        }else{
            if($this->session->has('enquirySessID')){
                //echo

                    $enquiryID=$this->session->get('enquirySessID');
                    $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
                    //$enquiryDetails->application_type=6;
                    $_POST=$enquiryDetails;
                    $_POST['interestservicing']=$enquiryDetails['interestservicing'];
                    $_POST['brokerfee']=$enquiryDetails['brokerfee'];
                    $enquirysecdetails=EnquiryDetail::find(array('conditions'=>"lead_id='".$enquiryID."'", 'limit' => 1))->toArray();
                    if(count($enquirysecdetails)>0){
                        $enquirysecdetail=$enquirysecdetails[0];
                         $_POST['planning_status']= $enquirysecdetail['planning_status'];
                        $_POST['proposed_scheme']= $enquirysecdetail['proposed_scheme'];
                        $_POST['build_type']= $enquirysecdetail['build_type'];
                        $_POST['total_sqft']= $enquirysecdetail['total_sqft'];
                        $_POST['avg_unit_price']= $enquirysecdetail['avg_unit_price'];
                        $_POST['build_cost_per_unit']= $enquirysecdetail['build_cost_per_unit'];
                        $_POST['build_cost_per_sqft']= $enquirysecdetail['build_cost_per_sqft'];
                        $_POST['development_exit']= $enquirysecdetail['development_exit'];
                    }

                   // print_r($_POST);   exit();
            }
        }
    }
    public function quickquotenewAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if(!$this->session->has('enquirySessID')){
            return $response->redirect("dashboard/enquiry");
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

                $allPost['id']=$this->session->get('enquirySessID');

               $getData=array();
                $chkQuote=Enquiry::find(array('conditions' => "id='".$allPost['id']."'", 'limit' => 1));
                //echo "<pre>";print_r($chkQuote->toArray());exit;
                if(count($chkQuote)>0){
                    //$getData=$chkQuote[0]->toArray();
                    $getData=array_merge($chkQuote[0]->toArray(),$allPost);
                    $getData['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $getData["purchase_price"]=str_replace(",", "", $allPost["purchase_price"]);

                    $getData["current_debt"]=str_replace(",", "", $allPost["current_debt"]);
                    $getData["amount_required"]=str_replace(",", "", $allPost["amount_required"]);
                    $getData["amt_outstanding_ist_charg"]=str_replace(",", "", $allPost["amt_outstanding_ist_charg"]);
                    $getData["original_purchase_price"]=str_replace(",", "", $allPost["original_purchase_price"]);
                    $getData["omv"]=str_replace(",", "", $allPost["omv"]);
                    $getData["cost_of_work"]=str_replace(",", "", $allPost["cost_of_work"]);
                    $getData["tot_build_cost"]=str_replace(",", "", $allPost["tot_build_cost"]);

                    $getData["required_toward_build"]=str_replace(",", "", $allPost["required_toward_build"]);
                    $getData["require_day_one_purchase"]=str_replace(",", "", $allPost["require_day_one_purchase"]);
                    $getData["gdv"]=str_replace(",", "", $allPost["gdv"]);
                    $getData["deposit"]=str_replace(",", "", $allPost["deposit"]);

                    $getData["refurb_cost"]=str_replace(",", "", $allPost["refurb_cost"]);
                    $getData["ltgdv_exe_interest"]=str_replace(",", "", $allPost["ltgdv_exe_interest"]);
                    $getData["capital_raise"]=str_replace(",", "", $allPost["capital_raise"]);
                    $getData["monthly_mortgage_pmt"]=str_replace(",", "", $allPost["monthly_mortgage_pmt"]);
                    $getData["rental_per_anum"]=str_replace(",", "", $allPost["rental_per_anum"]);
                    $getData["ltp"]=str_replace(",", "", $allPost["ltp"]);
                    $getData["net_loan"]=str_replace(",", "", $allPost["net_loan"]);
                    $getData["net_ltv"]=str_replace(",", "", $allPost["net_ltv"]);
                    $getData["net_ltp"]=str_replace(",", "", $allPost["net_ltp"]);
                    $getData["net_ltgdv"]=str_replace(",", "", $allPost["net_ltgdv"]);

                    $getData["ltc_exe_fin"]=str_replace(",", "", $allPost["ltc_exe_fin"]);
                    $getData["erv"]=str_replace(",", "", $allPost["erv"]);
                    $getData["net_ltv_on_exit"]=str_replace(",", "", $allPost["net_ltv_on_exit"]);
                    $getData["net_ltc"]=str_replace(",", "", $allPost["net_ltc"]);
                    $getData["cmv"]=str_replace(",", "", $allPost["cmv"]);
                    $getData["invetiment_income"]=str_replace(",", "", $allPost["invetiment_income"]);

                    $getData["gross_yield"]=str_replace(",", "", $allPost["gross_yield"]);
                    $getData["day_one_loan"]=str_replace(",", "", $allPost["day_one_loan"]);
                    if($allPost["date_ofy__purchase"]!="")
                    {
                        $getData["date_of_purchase"]=$allPost["date_ofy__purchase"];
                    }
                    else if($allPost["date_of_purchase"]!="")
                    {
                        $getData["date_of_purchase"]=$allPost["date_of_purchase"];
                    }
                    $getData["loan_details_start_date"]= $allPost["loan_details_start_date"];

                    $getData["first_charge_current_debt"]=str_replace(",", "", $allPost["first_charge_current_debt"]);
                    $getData["second_charge_current_debt"]=str_replace(",", "", $allPost["second_charge_current_debt"]);

                    $getData["asset_listed"]=$allPost["asset_listed"];
                    if($allPost["asset_listed"]==1)
                    {
                        $getData["asset_grade"]=$allPost["asset_grade"];
                    }
                    //echo "<pre>";print_r($getData);exit;
                   /* $getData["interestservicing"]=$allPost["interestservicing"];
                    $getData["brokerfee"]=$allPost["brokerfee"]; */
                    //$getData["ltv_required"]=($getData["amount_required"]/$getData["purchase_price"])*100;
                    $enquiryDB= new Enquiry();
                    //echo "<pre>";print_r($getData);exit;
                    $saveData=$enquiryDB->save($getData);
                    //echo $saveData;exit;
                    if($saveData){
                        //echo 123;exit;
                       $allPost['lead_id']=$enquiryDB->id;

                        $enquiryDetail=EnquiryDetail::find(array('conditions' => "lead_id='".$allPost['lead_id']."'", 'limit' => 1))->toArray();
                          if(count($enquiryDetail)>0){
                            $allPost['id'] = $enquiryDetail[0]['id'];
                            $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));

                            $enqData=array_merge($enquiryDetail[0],$allPost);
                          }else{
                            $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $enqData=$allPost;
                          }
                        $enqData["total_sqft"]=str_replace(",", "", $allPost["total_sqft"]);
                        $enqData["avg_unit_price"]=str_replace(",", "", $allPost["avg_unit_price"]);
                        $enqData["build_cost_per_unit"]=str_replace(",", "", $allPost["build_cost_per_unit"]);
                        $enqData["build_cost_per_sqft"]=str_replace(",", "", $allPost["build_cost_per_sqft"]);


                         $enquiryDb= new EnquiryDetail();
                        $saveData=$enquiryDb->save($enqData);
                       // $newquoteData["modified"]=date("Y-m-d H:i:s", strtotime("+60 minutes"));

                        //=======Save track report========
                        if(isset($allPost['id'])){
                            $trackData['track_for']='quoteEdit';
                        }else{
                            $trackData['track_for']='quoteAdd';
                        }
                        $trackData['userid']=$this->session->get('sessUserID');
                        $trackData['track_save_id']=$quickQuoteDB->id;
                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);
                    //=======Save track report End========
                    }
                    /*if($getData['application_type']!=4){
                        if($getData['application_type']==1 && ($getData['refurbishment']!=2 && $getData['refurbishment']!=3)){
                            return $response->redirect('dashboard/experince');
                        }else if($getData['application_type']==5 || $getData['application_type']==2){
                            if($getData['refurbishment']>1){
                                return $response->redirect('dashboard/projectdetail');
                            }else{
                                return $response->redirect('dashboard/experince');
                            }

                        }else{
                            return $response->redirect('dashboard/applicant');
                        }

                    }else{
                        //return $response->redirect('dashboard/projectdetail');
                        return $response->redirect('dashboard/developmentappraisal');
                    }*/
                    return $response->redirect('dashboard/security');

                }
                //echo "<pre>";print_r($getData);exit;

            //}

        }else{
            if($this->session->has('enquirySessID')){

                    $enquiryID=$this->session->get('enquirySessID');
                    $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
                    $_POST=$enquiryDetails;
                    $_POST['interestservicing']=$enquiryDetails['interestservicing'];
                    $_POST['brokerfee']=$enquiryDetails['brokerfee'];
                    $enquirysecdetails=EnquiryDetail::find(array('conditions'=>"lead_id='".$enquiryID."'", 'limit' => 1))->toArray();
                    if(count($enquirysecdetails)>0){
                        $enquirysecdetail=$enquirysecdetails[0];
                         $_POST['planning_status']= $enquirysecdetail['planning_status'];
                        $_POST['proposed_scheme']= $enquirysecdetail['proposed_scheme'];
                        $_POST['build_type']= $enquirysecdetail['build_type'];
                        $_POST['total_sqft']= $enquirysecdetail['total_sqft'];
                        $_POST['avg_unit_price']= $enquirysecdetail['avg_unit_price'];
                        $_POST['build_cost_per_unit']= $enquirysecdetail['build_cost_per_unit'];
                        $_POST['build_cost_per_sqft']= $enquirysecdetail['build_cost_per_sqft'];
                        $_POST['development_exit']= $enquirysecdetail['development_exit'];
                    }

                    //print_r($_POST);   exit();
            }
        }
    }
    /**
    * Projectdetail Action To manage project detail
    * Action Name: projectdetailAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 23-10-2019
    **/
    public function projectdetailAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if(!$this->session->has('enquirySessID')){
            return $response->redirect("dashboard/enquiry");
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

                $allPost['id']=$this->session->get('enquirySessID');

               $getData=array();
                $chkQuote=Enquiry::find(array('conditions' => "id='".$allPost['id']."'", 'limit' => 1));
                //echo "<pre>";print_r($chkQuote->toArray());exit;
                if(count($chkQuote)>0){
                    //$getData=$chkQuote[0]->toArray();
                    $getData=array_merge($chkQuote[0]->toArray(),$allPost);
                    $getData['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));

                    $enquiryDB= new Enquiry();
                    $saveData=$enquiryDB->save($getData);
                    //echo $saveData;exit;
                    if($saveData){
                        //echo 123;exit;


                       // $newquoteData["modified"]=date("Y-m-d H:i:s", strtotime("+60 minutes"));

                        //=======Save track report========
                        if(isset($getData['id'])){
                            $trackData['track_for']='projectdetailEdit';
                        }else{
                            $trackData['track_for']='projectdetailAdd';
                        }
                        $trackData['userid']=$this->session->get('sessUserID');
                        $trackData['track_save_id']=$enquiryDB->id;
                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);
                    //=======Save track report End========
                    }
                    return $response->redirect('dashboard/experince');
                }
                //echo "<pre>";print_r($getData);exit;

            //}

        }else{
            if($this->session->has('enquirySessID')){

                    $enquiryID=$this->session->get('enquirySessID');
                    $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
                    $_POST=$enquiryDetails;
            }
        }
    }
    /**
    * Experince Action To manage development experince detail
    * Action Name: experinceAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 24-10-2019
    **/
    public function experinceAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if(!$this->session->has('enquirySessID')){
            return $response->redirect("dashboard/enquiry");
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            // echo "<pre>"; print_r($this->request->getPost());die;

                $allPost['id']=$this->session->get('enquirySessID');

               $getData=array();
                $chkExperince=Enquiry::find(array('conditions' => "id='".$allPost['id']."'", 'limit' => 1));
                //echo "<pre>";print_r($chkQuote->toArray());exit;
                if(count($chkExperince)>0){
                    //$getData=$chkQuote[0]->toArray();
                    $getData=array_merge($chkExperince[0]->toArray(),$allPost);
                    $getData['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $getData['last_project_complete'] = str_replace(",", "", $allPost['last_project_complete']);
                    $getData['value_of_project']      = str_replace(",", "", $allPost['value_of_project']);

                    $enquiryDB= new Enquiry();
                    $saveData=$enquiryDB->save($getData);
                    //echo $saveData;exit;
                    if($saveData){
                        //echo 123;exit;
                        $factfindEnquirySection= FactfindSection::find(array("conditions"=>"section=3 and sub_section=3",));
                        $enquiryID=$enquiryDB->id;
                        if(count($factfindEnquirySection)>0)
                        {
                            foreach($factfindEnquirySection as $factfindEnquirySectionDet){
                                $customFields=CustomFields::find(array('conditions'=>'factfind_id="'.$factfindEnquirySectionDet->id.'"',"order" => "order_no asc",));
                                if(count($customFields)>0)
                                {
                                    $this->modelsManager->executeQuery("delete from EnquiryAdditional where factfind_id='".$factfindEnquirySectionDet->id."'");
                                    foreach($customFields as $customFieldsDet)
                                    {
                                        $enqAddObj=new EnquiryAdditional();
                                        $enqAddObj->enquiry_id=$enquiryID;
                                        $enqAddObj->factfind_id=$factfindEnquirySectionDet->id;
                                        $enqAddObj->customfield_id=$customFieldsDet->id;
                                        $enqAddObj->field_value=$allPost[$customFieldsDet->name_attribute];
                                        $enqAddObj->created=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                        $enqAddObj->modified=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                        $enqAddObj->save();

                                    }

                                }


                            }
                        }

                       // $newquoteData["modified"]=date("Y-m-d H:i:s", strtotime("+60 minutes"));

                        //=======Save track report========
                        if(isset($getData['id'])){
                            $trackData['track_for']='experinceEdit';
                        }else{
                            $trackData['track_for']='experinceAdd';
                        }
                        $trackData['userid']=$this->session->get('sessUserID');
                        $trackData['track_save_id']=$enquiryDB->id;
                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);
                    //=======Save track report End========
                    }
                    //return $response->redirect('dashboard/background');
                    return $response->redirect('dashboard/credithistory');
                }
                //echo "<pre>";print_r($getData);exit;

            //}

        }else{
            if($this->session->has('enquirySessID')){

                    $enquiryID=$this->session->get('enquirySessID');
                    $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
                    $_POST=$enquiryDetails;
            }
        }
    }
     /**
    * Quick Quote Action To calculate the quote by Advisor
    * Action Name: quickquoteAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 15-06-2018
    * v2 Created Date: 9-10-2019
    **/
    public function applicantAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if(!$this->session->has('enquirySessID')){
            return $response->redirect("dashboard/enquiry");
        }
        $sessionID=$this->session->get('sessUserID');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
           // echo "<pre>";print_r($allPost);exit();
                $leadid=$this->session->get('enquirySessID');
            $getData=array();
                $chkApplicant=Enquiry::find(array('conditions' => "id='".$leadid."'", 'limit' => 1));
                //echo "<pre>";print_r($chkQuote->toArray());exit;
                if(count($chkApplicant)>0){
                    $companyData['name_of_comany']=$allPost['name_of_comany'];
                    $companyData['no_of_director']=$allPost['no_of_director'];
                    $companyData['no_of_shareholder']=$allPost['no_of_shareholder'];
                    $companyData['registration_number']=$allPost['registration_number'];
                    //$getData=$chkQuote[0]->toArray();
                    $getData=array_merge($chkApplicant[0]->toArray(),$companyData);
                    $getData['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                   //echo "<pre>";print_r($getData); exit();
                    $enquiryDB= new Enquiry();
                    $saveData=$enquiryDB->save($getData);
                    $factfindEnquirySection= FactfindSection::find(array("conditions"=>"section=3 and sub_section=1",));
                    $enquiryID=$enquiryDB->id;
                    if(count($factfindEnquirySection)>0)
                    {
                        foreach($factfindEnquirySection as $factfindEnquirySectionDet){
                            $customFields=CustomFields::find(array('conditions'=>'factfind_id="'.$factfindEnquirySectionDet->id.'"',"order" => "order_no asc",));
                            if(count($customFields)>0)
                            {
                                $this->modelsManager->executeQuery("delete from EnquiryAdditional where factfind_id='".$factfindEnquirySectionDet->id."'");
                                foreach($customFields as $customFieldsDet)
                                {
                                    $enqAddObj=new EnquiryAdditional();
                                    $enqAddObj->enquiry_id=$enquiryID;
                                    $enqAddObj->factfind_id=$factfindEnquirySectionDet->id;
                                    $enqAddObj->customfield_id=$customFieldsDet->id;
                                    $enqAddObj->field_value=$allPost[$customFieldsDet->name_attribute];
                                    $enqAddObj->created=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                    $enqAddObj->modified=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                    $enqAddObj->save();

                                }

                            }


                        }
                    }
                }
                $allPost['lead_id']=$this->session->get('enquirySessID');
                $allPost['posted_by']=$sessionID;
                $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                /*$chkQuote=QuickQuote::find(array('conditions' => "lead_id='".$allPost['lead_id']."'", 'limit' => 1));
                if(count($chkQuote)>0){
                    $allPost['id']=$chkQuote[0]->id;
                    $allPost['created']=$chkQuote[0]->created;
                }else{
                    $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                }*/
                $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $appNum=$allPost['applicantnumber'];
                $titleArr=array();
                $fullnameArr=array();
                $dobArr=array();
                $nationalityArr=array();
                $currentAddressArr=array();
                $previousAddressArr=array();
                $previousAddressArr2=array();
                $contactnoArr=array();
                $residentialArr=array();
                $pdvalueArr=array();
                $pdBalanceArr=array();
                $pdlenderArr=array();
                $timeAtThisAddressArr=array();
                $newAddressArray=array();
                $newPostcode=array();


            foreach($allPost['pd_time_at_this_address'] as $key=>$tAtThis){
                $timeAtThisAddressArr[]=$tAtThis;
                $newPostcode[]=$allPost["pd_pin"][$key];
                $newAddressArray[]=$allPost["pd_current_address"][$key];
            }

              //print_r($allPost);exit;
                foreach($allPost['pd_title'] as $key=>$title)
                {
                    //echo 123;exit;
                    array_push($titleArr, $title);

                    $fullname=trim($allPost['firstname'][$key])." ".trim($allPost['middlename'][$key])." ".trim($allPost['lastname'][$key]);
                    array_push($fullnameArr, $fullname);
                    array_push($dobArr, $allPost['pd_dob'][$key]);
                    array_push($emailArr, $allPost['pd_email'][$key]);
                    array_push($phoneArr, $allPost['pd_phone_no'][$key]);
//                    array_push($timeAtThisAddressArr, $allPost['pd_time_at_this_address'][$key]);

                    array_push($nationalityArr, $allPost['pd_nationality'][$key]);
                     array_push($passportArr, $allPost['pd_passport'][$key]);

                    $address=$allPost['pd_current_address'][$key].":K:".$allPost['pd_pin'][$key].":K:".$allPost['pd_time_at_this_address_current'][$key];
                    array_push($currentAddressArr, $address);
                    if (isset($allPost['pd_previous_address'.($key+1).''])):
                    $previousaddress=json_encode($allPost['pd_previous_address'.($key+1).'']).":K:".json_encode($allPost['pd_previous_pin'.($key+1).'']).":K:".json_encode($allPost['pd_time_at_this_address_previous'.($key+1).'']);
                    array_push($previousAddressArr, $previousaddress);
                    endif;
                    array_push($contactnoArr, $allPost['pd_mobile_number'][$key]);
                    array_push($residentialArr, $allPost['pd_residentialstatus'][$key]);

                    array_push($pdvalueArr, $allPost['pd_value'][$key]);
                    array_push($pdBalanceArr, $allPost['pd_balance'][$key]);
                    array_push($pdlenderArr, $allPost['pd_lender'][$key]);

                }
                $allPost["pd_title"]=implode(":::", $titleArr);
                $allPost["pd_fullname"]=implode(":::", $fullnameArr);
                $allPost["pd_dob"]=implode(":::", $dobArr);
                $allPost["pd_nationality"]=implode(":::", $nationalityArr);
                $allPost["pd_passport"]=implode(":::", $passportArr);
                $allPost["pd_email"]=implode(":::", $allPost['pd_email']);
                $allPost["pd_phone_no"]=implode(":::", $allPost['pd_phone_no']);
                $allPost["pd_current_address"]=implode(":::", $currentAddressArr);
                $allPost["pd_previous_address"]=implode(":::", $previousAddressArr);
                $allPost["pd_previous_address2"]=implode(":::", $previousAddressArr2);       

                // $allPost["pd_time_at_this_address"]=implode(":::", $timeAtThisAddressArr);
                $allPost["pd_mobile_number"]=implode(":::", $contactnoArr);
                $allPost["pd_residentialstatus"]=implode(":::", $contactnoArr);
                $allPost["loan_amt_required"]=$allPost["amount_required"];
                $allPost["ltv_required"]=$allPost["ltv"];
                $allPost["term_required"]=$allPost["term_required"];
                $allPost['pd_residentialstatus']=implode(":::", $residentialArr);

                 $allPost["pd_value"]=implode(":::", $pdvalueArr);
                $allPost["pd_balance"]=implode(":::", $pdBalanceArr);
                $allPost['pd_lender']=implode(":::", $pdlenderArr);

                //echo "<pre>";print_r($allPost);exit;
                // echo "<pre>";print_r($allPost["pd_previous_address"]);
                 // echo "<pre>";print_r($allPost["pd_previous_address2"]);exit;
                $leadAppDb= new LeadApplication();
                $saveData=$leadAppDb->save($allPost);
                if($saveData){


                    //=======Save track report========
                    if(isset($allPost['id'])){
                        $trackData['track_for']='quoteEdit';
                    }else{
                        $trackData['track_for']='quoteAdd';
                    }
                    $trackData['userid']=$this->session->get('sessUserID');
                    $trackData['track_save_id']=$quickQuoteDB->id;
                    $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                    $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                    $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $trackClickSave = new TrackClickSave();
                    $saveTrack=$trackClickSave->save($trackData);
                    //=======Save track report End========
                    $this->session->set('all_cla_data', $allPost);
                    //return $response->redirect('dashboard/security');

                    if($chkApplicant[0]->purpose==1){

                        return $response->redirect('dashboard/sourcedeposit');
                    }else{

                        return $response->redirect('dashboard/background');
                    }
                }



        }else{

            if($this->session->has('enquirySessID')){

                    //echo 123;exit;
                    //echo 123;exit;

                    $allPost=$this->session->get('all_cla_data');
                    $allPost['lead_id']=$this->session->get('enquirySessID');
                    //print_r($allPost);exit();
                    $term=$allPost['term'];
                    if(isset($allPost['month']) && $allPost['month']!=''){
                        $term-=$allPost['month'];
                    }
                    $leaddetails=Enquiry::findFirst(array('conditions'=>"id='".$allPost["lead_id"]."'"))->toArray();
                    $leadApp=LeadApplication::find(array('conditions'=>"lead_id='".$allPost["lead_id"]."'"));
                    /*$sql1="select * from Lenders where find_in_set('".$allPost['applicant_type']."',applicant_type) and find_in_set('".$allPost['property_type']."', property_type) and  find_in_set('".$allPost['loan_type']."', loan_type) and find_in_set('".$allPost['refurbishment']."', refurbishment) and (find_in_set('".$term."', term) or (bridging_min_term<='".$term."' and bridging_max_term>='".$term."')) and find_in_set('".$allPost['charge']."', charge) and max_loan>='".$allPost['amount_required']."' and min_loan<='".$allPost['amount_required']."' and (find_in_set('".$allPost['interestservicing']."', interestservicing) or interestservicing IS NULL)";
                        $lenderList=$this->modelsManager->executeQuery($sql1);
                        $this->view->setVar('lenderList', $lenderList);*/
                    $this->view->setVar('leadApp', $leadApp);
                    if(count($leadApp)>0)
                    {
                        $_POST=$leadApp[0]->toArray();
                        $_POST['purpose']=$leaddetails['purpose'];
                        $_POST['application_type']=$leaddetails['application_type'];
                        $_POST['refurbishment']=$leaddetails['refurbishment'];
                        $_POST['name_of_comany']=$leaddetails['name_of_comany'];
                        $_POST['no_of_director']=$leaddetails['no_of_director'];
                        $_POST['no_of_shareholder']=$leaddetails['no_of_shareholder'];
                        $_POST['registration_number']=$leaddetails['registration_number'];
                    }
                    else
                    {
                        unset($leaddetails['id']);
                        $_POST=$leaddetails;
                    }
                    //echo "<pre>";print_r($_POST);exit;
            }
        }
    }
    /**
    * Quick Quote Action To calculate the quote by Advisor
    * Action Name: quickquoteAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 15-06-2018
    * v2 Created Date: 18-10-2019
    **/
    public function securityAction(){
        // echo "333333";die;
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if(!$this->session->has('enquirySessID')){
            return $response->redirect("dashboard/enquiry");
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            //echo "<pre>";print_r($allPost);exit();
               // echo 123;exit;
                $allPost['id']             = $this->session->get('enquirySessID');
                $allPost['modified']       = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $chkQuote                  = Enquiry::findFirst(array('conditions' => "id='".$allPost['id']."'", 'limit' => 1));
                $chkQuote                  = $chkQuote->toArray();
                    if(!isset($allPost['fully_rented_out'])){
                        $allPost['fully_rented_out']=0;
                    }
                    if(!isset($allPost['part_investiment'])){
                        $allPost['part_investiment']=0;
                    }
                    if(!isset($allPost['debt_consolidation'])){
                        $allPost['debt_consolidation']=0;
                    }
                    if(!isset($allPost['personal_business_debt_one'])){
                        $allPost['personal_business_debt_one']='';

                    }else{

                        $allPost['personal_business_debt_one']=implode(",", $allPost['personal_business_debt_one']);
                    }
                    if(!isset($allPost['personal_business_debt_two'])){
                        $allPost['personal_business_debt_two']='';
                    }else{
                        $allPost['personal_business_debt_two']=implode(",", $allPost['personal_business_debt_two']);
                    }
                    if(!isset($allPost['personal_business_debt_three'])){
                        $allPost['personal_business_debt_three']='';
                    }else{
                        $allPost['personal_business_debt_three']=implode(",", $allPost['personal_business_debt_three']);
                    }

                    if(!isset($allPost['property_imnprovements'])){
                        $allPost['property_imnprovements']=0;
                    }
                    if(!isset($allPost['purchase_another_property'])){
                        $allPost['purchase_another_property']=0;
                    }
                $chkQuote = array_merge($chkQuote,$allPost);
                // echo "<pre>"; print_r($chkQuote);die;
                $chkQuote['monthly_payment_three']           = str_replace(",", "", $chkQuote['monthly_payment_three']);
                $chkQuote['refinance_current_balance_three'] = str_replace(",", "", $chkQuote['refinance_current_balance_three']);
                $chkQuote['refinance_limit_three']           = str_replace(",", "", $chkQuote['refinance_limit_three']);
                $chkQuote['monthly_payment_two']             = str_replace(",", "", $chkQuote['monthly_payment_two']);
                $chkQuote['refinance_current_balance_two']   = str_replace(",", "", $chkQuote['refinance_current_balance_two']);
                $chkQuote['refinance_limit_two']             = str_replace(",", "", $chkQuote['refinance_limit_two']);
                $chkQuote['monthly_payment_one']             = str_replace(",", "", $chkQuote['monthly_payment_one']);
                $chkQuote['refinance_current_balance_one']   = str_replace(",", "", $chkQuote['refinance_current_balance_one']);
                $chkQuote['refinance_limit_one']             = str_replace(",", "", $chkQuote['refinance_limit_one']);

                $chkQuote['addiotional_monthly_income']      = str_replace(",", "", $chkQuote['addiotional_monthly_income']);
                $chkQuote['deposit_amt']                     = str_replace(",", "", $chkQuote['deposit_amt']);
                $chkQuote['estimated_rental_income']         = str_replace(",", "", $chkQuote['estimated_rental_income']);
                $chkQuote['wht_is_the_purchase_price']       = str_replace(",", "", $chkQuote['wht_is_the_purchase_price']);
                $chkQuote['service_charge']                  = str_replace(",", "", $chkQuote['service_charge']);
                $chkQuote['ground_rent']                     = str_replace(",", "", $chkQuote['ground_rent']);
                $chkQuote['security_after_value']            = str_replace(",", "", $chkQuote['security_after_value']);
                 $chkQuote['rental_income']                  = str_replace(",", "", $chkQuote['rental_income']);
                  $chkQuote['outstanding_balance']           = str_replace(",", "", $chkQuote['outstanding_balance']);
                  $chkQuote['security_current_value']        = str_replace(",", "", $chkQuote['security_current_value']);

                 $chkQuote['purchase_price']                 = str_replace(",", "", $chkQuote['purchase_price']);
                 $chkQuote['security_intend_spendon']        = str_replace(",", "", $chkQuote['security_intend_spendon']);

                //echo "<pre>";print_r($chkQuote);exit;
                $enquiryDb= new Enquiry();
                $saveData=$enquiryDb->save($chkQuote);
                if($saveData){
                    $enquiryID=$enquiryDB->id;
                    $factfindEnquirySection= FactfindSection::find(array("conditions"=>"section=2 and sub_section=3",));
                    if(count($factfindEnquirySection)>0)
                    {
                        foreach($factfindEnquirySection as $factfindEnquirySectionDet){
                            $customFields=CustomFields::find(array('conditions'=>'factfind_id="'.$factfindEnquirySectionDet->id.'"',"order" => "order_no asc",));
                            if(count($customFields)>0)
                            {
                                $this->modelsManager->executeQuery("delete from EnquiryAdditional where factfind_id='".$factfindEnquirySectionDet->id."'");
                                foreach($customFields as $customFieldsDet)
                                {
                                    $enqAddObj=new EnquiryAdditional();
                                    $enqAddObj->enquiry_id=$enquiryID;
                                    $enqAddObj->factfind_id=$factfindEnquirySectionDet->id;
                                    $enqAddObj->customfield_id=$customFieldsDet->id;
                                    $enqAddObj->field_value=$allPost[$customFieldsDet->name_attribute];
                                    $enqAddObj->created=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                    $enqAddObj->modified=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                    $enqAddObj->save();

                                }

                            }


                        }
                    }

                    //=========Additional Address=========
                    if($chkQuote['security_is_additional']=='Yes'){
                        if(count($chkQuote['mul_add_security_address'])>0){
                            $this->modelsManager->executeQuery("delete from SecurityAdditionalAddress where lead_id='".$enquiryDb->id."'");
                            foreach($chkQuote['mul_add_security_address'] as $index => $securityAddress){

                                $additionalData['lead_id']=$enquiryDb->id;
                                $additionalData['add_security_address']=$securityAddress;

                                $additionalData['add_security_postcode']=$chkQuote['mul_add_security_postcode'][$index];
                                // $additionalData['add_security_postcode']=str_replace(",", "", $chkQuote['add_security_postcode']);


                                $additionalData['security_current_value']=$chkQuote['mul_security_current_value'][$index];
                                $additionalData['security_current_value']=str_replace(",", "", $additionalData['security_current_value']);

                                $additionalData['outstanding_balance']=$chkQuote['mul_outstanding_balance'][$index];
                                $additionalData['outstanding_balance']=str_replace(",", "", $additionalData['outstanding_balance']);

                                $additionalData['rental_income']=$chkQuote['mul_rental_income'][$index];
                                $additionalData['rental_income']=str_replace(",", "", $additionalData['rental_income']);

                                $additionalData['security_tenure']=$chkQuote['security_tenure'][$index];
                                $additionalData['security_leasehold_remain_year']=$chkQuote['security_leasehold_remain_year'][$index];

                                $additionalDb = new SecurityAdditionalAddress();

                                $saveAdditionalData = $additionalDb->save($additionalData);

                                unset($additionalData);

                            }
                        }
                    }
                    //=========Additional Address end====
                    //=======Save track report========
                    if(isset($allPost['id'])){
                        $trackData['track_for']='quoteEdit';
                    }else{
                        $trackData['track_for']='quoteAdd';
                    }
                    $trackData['userid']           = $this->session->get('sessUserID');
                    $trackData['track_save_id']    = $quickQuoteDB->id;
                    $trackData['server_detail']    = $_SERVER['HTTP_USER_AGENT'];
                    $trackData['server_ip']        = $_SERVER['REMOTE_ADDR'];
                    $trackData['created']          = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $trackClickSave                = new TrackClickSave();
                    $saveTrack                     = $trackClickSave->save($trackData);
                    //=======Save track report End========
                }
               $this->session->set('all_cla_data', $allPost);
               /*if($chkQuote['application_type']==3 || $chkQuote['application_type']==4 || $chkQuote['application_type']==1 || $chkQuote['application_type']==5 || $chkQuote['application_type']==2){
                    return $response->redirect('dashboard/credithistory');
               }else{
                    return $response->redirect('dashboard/quoteform');
               }*/
               return $response->redirect('dashboard/applicant');


        }else{
            if($this->session->has('enquirySessID')){

                    $enquiryID=$this->session->get('enquirySessID');
                    $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();


                    $_POST=$enquiryDetails;


                    $_POST['borrower_name']=stripslashes($enquiryDetails['first_name']." ".$enquiryDetails['last_name']);
                    $_POST['charge']=$enquiryDetails['product'];

            }
        }
    }
     /**
    * Credit History Action To add the credit history detail
    * Action Name: credithistoryActuion
    * Author By: Chittaranjan Sahoo
    * v2 Created Date: 29-10-2019
    **/
    public function credithistoryAction(){

        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if(!$this->session->has('enquirySessID')){
            return $response->redirect("dashboard/enquiry");
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            //print_r($allPost);exit();
               // echo 123;exit;
                $allPost['id']=$this->session->get('enquirySessID');
                $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $enqData=Enquiry::findFirst(array('conditions' => "id='".$allPost['id']."'", 'limit' => 1));
                $enqData=$enqData->toArray();


                $enqData=array_merge($enqData,$allPost);

                //echo "<pre>";print_r($allPost);exit;
                $enquiryDb= new Enquiry();
                $saveData=$enquiryDb->save($enqData);
                if($saveData){
                    $factfindEnquirySection= FactfindSection::find(array("conditions"=>"section=3 and sub_section=4",));
                    $enquiryID=$enquiryDB->id;
                    if(count($factfindEnquirySection)>0)
                    {
                        foreach($factfindEnquirySection as $factfindEnquirySectionDet){
                            $customFields=CustomFields::find(array('conditions'=>'factfind_id="'.$factfindEnquirySectionDet->id.'"',"order" => "order_no asc",));
                            if(count($customFields)>0)
                            {
                                $this->modelsManager->executeQuery("delete from EnquiryAdditional where factfind_id='".$factfindEnquirySectionDet->id."'");
                                foreach($customFields as $customFieldsDet)
                                {
                                    $enqAddObj=new EnquiryAdditional();
                                    $enqAddObj->enquiry_id=$enquiryID;
                                    $enqAddObj->factfind_id=$factfindEnquirySectionDet->id;
                                    $enqAddObj->customfield_id=$customFieldsDet->id;
                                    $enqAddObj->field_value=$allPost[$customFieldsDet->name_attribute];
                                    $enqAddObj->created=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                    $enqAddObj->modified=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                    $enqAddObj->save();

                                }

                            }


                        }
                    }
                    //=======Save track report========
                    if(isset($allPost['id'])){
                        $trackData['track_for']='credithistoryEdit';
                    }else{
                        $trackData['track_for']='credithistoryAdd';
                    }
                    $trackData['userid']=$this->session->get('sessUserID');
                    $trackData['track_save_id']=$enquiryDb->id;
                    $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                    $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                    $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $trackClickSave = new TrackClickSave();
                    $saveTrack=$trackClickSave->save($trackData);
                    //=======Save track report End========
                }
               $this->session->set('all_cla_data', $allPost);
               return $response->redirect('dashboard/dealsummary');




        }else{
            if($this->session->has('enquirySessID')){

                    $enquiryID=$this->session->get('enquirySessID');
                    $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
                    $_POST=$enquiryDetails;
            }
        }
    }
    /**
    * Deal Summary Action To add deal summary information
    * Action Name: dealsummaryAction
    * Author By: Chittaranjan Sahoo
    * v2 Created Date: 06-03-2020
    **/
    public function dealsummaryAction(){
         $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if(!$this->session->has('enquirySessID')){
            return $response->redirect("dashboard/enquiry");
        }
          if($this->request->isPost()){
            $allPost  = $this->request->getPost();

                $allPost['id']       = $this->session->get('enquirySessID');
                $allPost['modified'] = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $enqData             = Enquiry::findFirst(array('conditions' => "id='".$allPost['id']."'", 'limit' => 1));
                $enqData             = $enqData->toArray();

                //echo $enqData['application_type']; exit();


                $enqData             = array_merge($enqData,$allPost);
                if($allPost["purchase_price"]>0){
                    $enqData["purchase_price"]    = str_replace(",", "", $allPost["purchase_price"]);
                }

                if($allPost["cost_of_work"]>0){
                    $enqData["cost_of_work"]      = str_replace(",", "", $allPost["cost_of_work"]);
                }
                if($allPost["tot_build_cost"]>0){
                    $enqData["tot_build_cost"]    = str_replace(",", "", $allPost["tot_build_cost"]);
                }
                if($allPost["avg_unit_price"]>0){
                    $enqData["avg_unit_price"]    = str_replace(",", "", $allPost["avg_unit_price"]);
                }
                if($allPost["build_cost_per_unit"]>0){
                    $enqData["build_cost_per_unit"]    = str_replace(",", "", $allPost["build_cost_per_unit"]);
                }
                if($allPost["construction_cost"]>0){
                    $enqData["construction_cost"] = str_replace(",", "", $allPost["construction_cost"]);
                }
                if($allPost["required_toward_build"]>0){
                    $enqData["required_toward_build"] = str_replace(",", "", $allPost["required_toward_build"]);
                }
                if($allPost["require_day_one_purchase"]>0){
                    $enqData["require_day_one_purchase"]=str_replace(",", "", $allPost["require_day_one_purchase"]);
                }
                if($allPost["gdv"]>0){
                    $enqData["gdv"]=str_replace(",", "", $allPost["gdv"]);
                }
                if($allPost["deposit"]>0){
                    $enqData["deposit"]=str_replace(",", "", $allPost["deposit"]);
                }
                if($enqData['application_type']==4){
                if($allPost["gdv"]>0){
                    $enqData["gdv"]=str_replace(",", "", $allPost["gdv"]);
                }
                if($allPost["tot_build_cost"]>0){
                    $enqData["tot_build_cost"]=str_replace(",", "", $allPost["tot_build_cost"]);
                }
                if($allPost["ltp"]>0){
                    $enqData["ltp"]=str_replace(",", "", $allPost["ltp"]);
                }
              }

              if($allPost["loan_to_gdv_required"]>0){
                  $enqData["loan_to_gdv_required"]=str_replace(",", "", $allPost["loan_to_gdv_required"]);
              }

                 $enquiryDb= new Enquiry();
                    $saveData=$enquiryDb->save($enqData);
                    if($saveData){
                        $factfindEnquirySection= FactfindSection::find(array("conditions"=>"section=4",));
                        $enquiryID=$enquiryDB->id;
                        if(count($factfindEnquirySection)>0)
                        {
                            foreach($factfindEnquirySection as $factfindEnquirySectionDet){
                                $customFields=CustomFields::find(array('conditions'=>'factfind_id="'.$factfindEnquirySectionDet->id.'"',"order" => "order_no asc",));
                                if(count($customFields)>0)
                                {
                                    $this->modelsManager->executeQuery("delete from EnquiryAdditional where factfind_id='".$factfindEnquirySectionDet->id."'");
                                    foreach($customFields as $customFieldsDet)
                                    {
                                        $enqAddObj=new EnquiryAdditional();
                                        $enqAddObj->enquiry_id=$enquiryID;
                                        $enqAddObj->factfind_id=$factfindEnquirySectionDet->id;
                                        $enqAddObj->customfield_id=$customFieldsDet->id;
                                        $enqAddObj->field_value=$allPost[$customFieldsDet->name_attribute];
                                        $enqAddObj->created=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                        $enqAddObj->modified=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                        $enqAddObj->save();

                                    }

                                }


                            }
                        }

                        if($enqData['application_type']==4){
                            $allPost['lead_id']=$enquiryDb->id;

                            $enquiryDetail=EnquiryDetail::find(array('conditions' => "lead_id='".$allPost['lead_id']."'", 'limit' => 1))->toArray();
                              if(count($enquiryDetail)>0){
                                $allPost['id'] = $enquiryDetail[0]['id'];
                                $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));

                                $enqData=array_merge($enquiryDetail[0],$allPost);
                              }else{
                                $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                $enqData=$allPost;
                              }
                           if($allPost["total_sqft"]>0){
                                $enqData["total_sqft"]=str_replace(",", "", $allPost["total_sqft"]);
                            }
                            if($allPost["avg_unit_price"]>0){
                                $enqData["avg_unit_price"]=str_replace(",", "", $allPost["avg_unit_price"]);
                            }
                            if($allPost["build_cost_per_unit"]>0){
                                $enqData["build_cost_per_unit"]=str_replace(",", "", $allPost["build_cost_per_unit"]);
                            }
                            if($allPost["build_cost_per_sqft"]>0){
                                $enqData["build_cost_per_sqft"]=str_replace(",", "", $allPost["build_cost_per_sqft"]);
                            }



                            //print_r($enqData);exit();

                             $enquiryDb= new EnquiryDetail();
                            $saveData=$enquiryDb->save($enqData);
                        }
                        //=======Save track report========
                        if(isset($allPost['id'])){
                            $trackData['track_for']='summaryEdit';
                        }else{
                            $trackData['track_for']='summaryAdd';
                        }
                        $trackData['userid']=$this->session->get('sessUserID');
                        $trackData['track_save_id']=$enquiryDb->id;
                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);
                        //=======Save track report End========
                    }

                /*if($enqData['application_type']==4 || $enqData['application_type']==1 || $enqData['application_type']==5 || $enqData['application_type']==2){
                    return $response->redirect('dashboard/quoteform');
                }else{
                    return $response->redirect('dashboard/assets');
                }*/
                return $response->redirect('dashboard/quoteform');


        }else{
            if($this->session->has('enquirySessID')){

                    $enquiryID=$this->session->get('enquirySessID');
                    $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
                   // print_r($enquiryDetails); exit();
                    $_POST=$enquiryDetails;
                    if($enquiryDetails['net_ltgdv']>0){
                        $_POST['loan_to_gdv_required']= $enquiryDetails['net_ltgdv'];
                    }

                    $leadApp=LeadApplication::find(array('conditions'=>"lead_id='".$enquiryID."'"));
                    if(count($leadApp)>0)
                    {
                        $_POST['pd_applicanttype']=$leadApp[0]->pd_applicanttype;
                    }
                    /*if($_POST['application_type']==4){
                        $developmentCal=DevelopmentCalculation::find(array('conditions'=>"lead_id=".$enquiryID." and is_enquiry_step=1", 'limit' => 1))->toArray();
                        if(count($developmentCal)>0){
                            $_POST+=$developmentCal[0];
                        }
                    }*/
                    $developmentCal=DevelopmentCalculation::find(array('conditions'=>"lead_id=".$enquiryID." and is_enquiry_step=1", 'limit' => 1))->toArray();
                    if(count($developmentCal)>0){
                        $_POST+=$developmentCal[0];
                    }
                    $enquirysecdetails=EnquiryDetail::find(array('conditions'=>"lead_id='".$enquiryID."'", 'limit' => 1))->toArray();
                    if(count($enquirysecdetails)>0){
                        $enquirysecdetail=$enquirysecdetails[0];
                         $_POST['planning_status']= $enquirysecdetail['planning_status'];
                        $_POST['proposed_scheme']= $enquirysecdetail['proposed_scheme'];
                        $_POST['build_type']= $enquirysecdetail['build_type'];
                        $_POST['total_sqft']= $enquirysecdetail['total_sqft'];
                        $_POST['avg_unit_price']= $enquirysecdetail['avg_unit_price'];
                        $_POST['build_cost_per_unit']= $enquirysecdetail['build_cost_per_unit'];
                        $_POST['build_cost_per_sqft']= $enquirysecdetail['build_cost_per_sqft'];
                        $_POST['development_exit']= $enquirysecdetail['development_exit'];


                    }

            }

        }
    }
    public function summarysaveAction(){
        // echo "<pre>"; print_r($this->request->getPost());die;
        if($this->request->isPost()){
            $allPost       = $this->request->getPost();

                $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $enqData   = Enquiry::findFirst(array('conditions' => "id='".$allPost['id']."'", 'limit' => 1));
                $enqData   = $enqData->toArray();

                $enqData   = array_merge($enqData,$allPost);
                $enqData["purchase_price"]           = str_replace(",", "", $allPost["purchase_price"]);
                $enqData["cost_of_work"]             = str_replace(",", "", $allPost["cost_of_work"]);
                $enqData["tot_build_cost"]           = str_replace(",", "", $allPost["tot_build_cost"]);
                $enqData["required_toward_build"]    = str_replace(",", "", $allPost["required_toward_build"]);
                $enqData["require_day_one_purchase"] = str_replace(",", "", $allPost["require_day_one_purchase"]);
                $enqData["gdv"]                      = str_replace(",", "", $allPost["gdv"]);
                $enqData["deposit"]                  = str_replace(",", "", $allPost["deposit"]);
                $enqData["required_toward_build"]    = str_replace(",", "", $allPost["required_toward_build"]);
                $enqData["require_day_one_purchase"] = str_replace(",", "", $allPost["require_day_one_purchase"]);
                $enqData["gdv"]                      = str_replace(",", "", $allPost["gdv"]);
                $enqData["deposit"]                  = str_replace(",", "", $allPost["deposit"]);
            if($enqData['application_type']==4){
                $enqData["gdv"]               = str_replace(",", "", $allPost["gdv"]);
                $enqData["tot_build_cost"]  = str_replace(",", "", $allPost["tot_build_cost"]);
                $enqData["ltp"]             = str_replace(",", "", $allPost["ltp"]);
            }

            $enquiryDb    = new Enquiry();
            $saveData  = $enquiryDb->save($enqData);
            if($saveData){
                if($enqData['application_type']==4){
                    $allPost['lead_id'] = $enquiryDb->id;

                    $enquiryDetail  = EnquiryDetail::find(array('conditions' => "lead_id='".$allPost['lead_id']."'", 'limit' => 1))->toArray();
                        if(count($enquiryDetail)>0){
                        $allPost['id'] = $enquiryDetail[0]['id'];
                        $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));

                        $enqData=array_merge($enquiryDetail[0],$allPost);
                        }else{
                        $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $enqData=$allPost;
                        }
                    $enqData["total_sqft"]=str_replace(",", "", $allPost["total_sqft"]);
                    $enqData["avg_unit_price"]=str_replace(",", "", $allPost["avg_unit_price"]);
                    $enqData["build_cost_per_unit"]=str_replace(",", "", $allPost["build_cost_per_unit"]);
                    $enqData["build_cost_per_sqft"]=str_replace(",", "", $allPost["build_cost_per_sqft"]);

                    //print_r($enqData);exit();

                        $enquiryDb= new EnquiryDetail();
                    $saveData=$enquiryDb->save($enqData);
                }
                //=======Save track report========
                if(isset($allPost['id'])){
                    $trackData['track_for']='summaryEdit';
                }else{
                    $trackData['track_for']='summaryAdd';
                }
                $trackData['userid']=$this->session->get('sessUserID');
                $trackData['track_save_id']=$enquiryDb->id;
                $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $trackClickSave = new TrackClickSave();
                $saveTrack=$trackClickSave->save($trackData);
                //=======Save track report End========
                echo 1;
            }else{
                echo 2;
            }
        }
        exit();
    }

    /**
    * Assets & liabilities Action To add the assets & liabilities calculation
    * Action Name: assetsActuion
    * Author By: Chittaranjan Sahoo
    * v2 Created Date: 29-10-2019
    **/
    public function assetsAction(){

        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if(!$this->session->has('enquirySessID')){
            return $response->redirect("dashboard/enquiry");
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            //print_r($allPost);exit();
               // echo 123;exit;
                $allPost['id']=$this->session->get('enquirySessID');
                $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $enqData=Enquiry::findFirst(array('conditions' => "id='".$allPost['id']."'", 'limit' => 1));
                $enqData=$enqData->toArray();


                $enqData=array_merge($enqData,$allPost);

                 $enqData['home_residence_val_one']=str_replace(",", "", $enqData['home_residence_val_one']);
            $enqData['home_residence_val_two']=str_replace(",", "", $enqData['home_residence_val_two']);
            $enqData['other_properties_val_one']=str_replace(",", "", $enqData['other_properties_val_one']);
            $enqData['other_properties_val_two']=str_replace(",", "", $enqData['other_properties_val_two']);
            $enqData['cash_resources_one']=str_replace(",", "", $enqData['cash_resources_one']);
            $enqData['cash_resources_two']=str_replace(",", "", $enqData['cash_resources_two']);
            $enqData['stock_share_val_one']=str_replace(",", "", $enqData['stock_share_val_one']);
            $enqData['stock_share_val_two']=str_replace(",", "", $enqData['stock_share_val_two']);


            $enqData['endowment_one']=str_replace(",", "", $enqData['endowment_one']);
            $enqData['endowment_two']=str_replace(",", "", $enqData['endowment_two']);
            $enqData['other_inv_val_one']=str_replace(",", "", $enqData['other_inv_val_one']);
            $enqData['other_inv_val_two']=str_replace(",", "", $enqData['other_inv_val_two']);
            $enqData['other_assets_val_one']=str_replace(",", "", $enqData['other_assets_val_one']);

            $enqData['other_assets_val_two']=str_replace(",", "", $enqData['other_assets_val_two']);
            $enqData['total_asset_one']=str_replace(",", "", $enqData['total_asset_one']);
            $enqData['total_asset_two']=str_replace(",", "", $enqData['total_asset_two']);
            $enqData['home_mortgage_balance_one']=str_replace(",", "", $enqData['home_mortgage_balance_one']);
            $enqData['home_mortgage_balance_two']=str_replace(",", "", $enqData['home_mortgage_balance_two']);

            $enqData['other_properties_mortgage_bal_one']=str_replace(",", "", $enqData['other_properties_mortgage_bal_one']);
            $enqData['other_properties_mortgage_bal_two']=str_replace(",", "", $enqData['other_properties_mortgage_bal_two']);
            $enqData['bank_loan_overdrafts_out_one']=str_replace(",", "", $enqData['bank_loan_overdrafts_out_one']);
            $enqData['bank_loan_overdrafts_out_two']=str_replace(",", "", $enqData['bank_loan_overdrafts_out_two']);
            $enqData['other_loans_hp_bal_one']=str_replace(",", "", $enqData['other_loans_hp_bal_one']);


            $enqData['other_loans_hp_bal_two']=str_replace(",", "", $enqData['other_loans_hp_bal_two']);
            $enqData['store_card_bal_one']=str_replace(",", "", $enqData['store_card_bal_one']);
            $enqData['store_card_bal_two']=str_replace(",", "", $enqData['store_card_bal_two']);
            $enqData['val_guarantees_in_place_one']=str_replace(",", "", $enqData['val_guarantees_in_place_one']);
            $enqData['val_guarantees_in_place_two']=str_replace(",", "", $enqData['val_guarantees_in_place_two']);
            $enqData['other_liabilities_one']=str_replace(",", "", $enqData['other_liabilities_one']);
            $enqData['other_liabilities_two']=str_replace(",", "", $enqData['other_liabilities_two']);
            $enqData['total_liabilities_one']=str_replace(",", "", $enqData['total_liabilities_one']);
            $enqData['total_liabilities_two']=str_replace(",", "", $enqData['total_liabilities_two']);
            $enqData['total_net_worth_one']=str_replace(",", "", $enqData['total_net_worth_one']);
            $enqData['total_net_worth_two']=str_replace(",", "", $enqData['total_net_worth_two']);

                //echo "<pre>";print_r($allPost);exit;
                $enquiryDb= new Enquiry();
                $saveData=$enquiryDb->save($enqData);
                if($saveData){
                    //=======Save track report========
                    if(isset($allPost['id'])){
                        $trackData['track_for']='credithistoryEdit';
                    }else{
                        $trackData['track_for']='credithistoryAdd';
                    }
                    $trackData['userid']=$this->session->get('sessUserID');
                    $trackData['track_save_id']=$quickQuoteDB->id;
                    $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                    $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                    $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $trackClickSave = new TrackClickSave();
                    $saveTrack=$trackClickSave->save($trackData);
                    //=======Save track report End========
                }
               $this->session->set('all_cla_data', $allPost);
                return $response->redirect('dashboard/quoteform');



        }else{
            if($this->session->has('enquirySessID')){

                    $enquiryID=$this->session->get('enquirySessID');
                    $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
                    $_POST=$enquiryDetails;
            }
        }
    }
    /**
    * Edit Assets & liabilities Action To edit the assets & liabilities calculation
    * Action Name: editassetsAction
    * Author By: Chittaranjan Sahoo
    * v2 Created Date: 07-12-2019
    **/
    public function editassetsAction(){

        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            //print_r($allPost);exit();
               // echo 123;exit;
            $allPost['id']               = $allPost['lead_id'];
            $allPost['modified']         = date("Y-m-d H:i:s", strtotime("+60 minutes"));
            $enqData   = Enquiry::findFirst(array('conditions' => "id='".$allPost['id']."'", 'limit' => 1));
            $enqData   = $enqData->toArray();


            $enqData=array_merge($enqData,$allPost);

            $enqData['home_residence_val_one']=str_replace(",", "", $enqData['home_residence_val_one']);
            $enqData['home_residence_val_two']=str_replace(",", "", $enqData['home_residence_val_two']);
            $enqData['other_properties_val_one']=str_replace(",", "", $enqData['other_properties_val_one']);
            $enqData['other_properties_val_two']=str_replace(",", "", $enqData['other_properties_val_two']);
            $enqData['cash_resources_one']=str_replace(",", "", $enqData['cash_resources_one']);
            $enqData['cash_resources_two']=str_replace(",", "", $enqData['cash_resources_two']);
            $enqData['stock_share_val_one']=str_replace(",", "", $enqData['stock_share_val_one']);
            $enqData['stock_share_val_two']=str_replace(",", "", $enqData['stock_share_val_two']);


            $enqData['endowment_one']=str_replace(",", "", $enqData['endowment_one']);
            $enqData['endowment_two']=str_replace(",", "", $enqData['endowment_two']);
            $enqData['other_inv_val_one']=str_replace(",", "", $enqData['other_inv_val_one']);
            $enqData['other_inv_val_two']=str_replace(",", "", $enqData['other_inv_val_two']);
            $enqData['other_assets_val_one']=str_replace(",", "", $enqData['other_assets_val_one']);

            $enqData['other_assets_val_two']=str_replace(",", "", $enqData['other_assets_val_two']);
            $enqData['total_asset_one']=str_replace(",", "", $enqData['total_asset_one']);
            $enqData['total_asset_two']=str_replace(",", "", $enqData['total_asset_two']);
            $enqData['home_mortgage_balance_one']=str_replace(",", "", $enqData['home_mortgage_balance_one']);
            $enqData['home_mortgage_balance_two']=str_replace(",", "", $enqData['home_mortgage_balance_two']);

            $enqData['other_properties_mortgage_bal_one']=str_replace(",", "", $enqData['other_properties_mortgage_bal_one']);
            $enqData['other_properties_mortgage_bal_two']=str_replace(",", "", $enqData['other_properties_mortgage_bal_two']);
            $enqData['bank_loan_overdrafts_out_one']=str_replace(",", "", $enqData['bank_loan_overdrafts_out_one']);
            $enqData['bank_loan_overdrafts_out_two']=str_replace(",", "", $enqData['bank_loan_overdrafts_out_two']);
            $enqData['other_loans_hp_bal_one']=str_replace(",", "", $enqData['other_loans_hp_bal_one']);


            $enqData['other_loans_hp_bal_two']=str_replace(",", "", $enqData['other_loans_hp_bal_two']);
            $enqData['store_card_bal_one']=str_replace(",", "", $enqData['store_card_bal_one']);
            $enqData['store_card_bal_two']=str_replace(",", "", $enqData['store_card_bal_two']);
            $enqData['val_guarantees_in_place_one']=str_replace(",", "", $enqData['val_guarantees_in_place_one']);
            $enqData['val_guarantees_in_place_two']=str_replace(",", "", $enqData['val_guarantees_in_place_two']);
            $enqData['other_liabilities_one']=str_replace(",", "", $enqData['other_liabilities_one']);
            $enqData['other_liabilities_two']=str_replace(",", "", $enqData['other_liabilities_two']);
            $enqData['total_liabilities_one']=str_replace(",", "", $enqData['total_liabilities_one']);
            $enqData['total_liabilities_two']=str_replace(",", "", $enqData['total_liabilities_two']);
            $enqData['total_net_worth_one']=str_replace(",", "", $enqData['total_net_worth_one']);
            $enqData['total_net_worth_two']=str_replace(",", "", $enqData['total_net_worth_two']);


            //echo "<pre>";print_r($allPost);exit;
            $enquiryDb= new Enquiry();
            $saveData=$enquiryDb->save($enqData);
            if($saveData){
                //=======Save track report========
                if(isset($allPost['id'])){
                    $trackData['track_for']='assetsEdit';
                }else{
                    $trackData['track_for']='assetsAdd';
                }
                $trackData['userid']=$this->session->get('sessUserID');
                $trackData['track_save_id']=$quickQuoteDB->id;
                $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $trackClickSave = new TrackClickSave();
                $saveTrack=$trackClickSave->save($trackData);
                //=======Save track report End========
                echo 1;
            }else{
                echo 2;
            }
        }
    }
    public function quoteAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if(!$this->session->has('enquirySessID')){
            return $response->redirect("dashboard/leadadd");
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            //print_r($allPost);exit();
               // echo 123;exit;
                $allPost['lead_id']=$this->session->get('enquirySessID');
                $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $chkQuote=Enquiry::findFirst(array('conditions' => "id='".$allPost['lead_id']."'", 'limit' => 1));
                $chkQuote=$chkQuote->toArray();
                $chkQuote["security_postcode"]=$allPost["security_postcode"];
                $chkQuote["security_address"]=$allPost["security_address"];
                $chkQuote["security_is_additional"]=$allPost["security_is_additional"];
                $chkQuote["security_estimated_price"]=$allPost["security_estimated_price"];
                $chkQuote["security_tenure"]=$allPost["security_tenure"];
                $chkQuote["security_leasehold_remain_year"]=$allPost["security_leasehold_remain_year"];
                $chkQuote["security_is_client_work_on_properties"]=$allPost["security_is_client_work_on_properties"];
                $chkQuote["security_description"]=$allPost["security_description"];
                $chkQuote["security_is_work_alteration"]=$allPost["security_is_work_alteration"];
                $chkQuote["security_intend_spendon"]=$allPost["security_intend_spendon"];
                $chkQuote["security_after_value"]=$allPost["security_after_value"];
                $chkQuote["security_after_value"]=$allPost["security_after_value"];
              //  echo "<pre>";print_r($allPost);exit;
                $enquiryDb= new Enquiry();
                $saveData=$enquiryDb->save($chkQuote);
                if($saveData){
                    //=======Save track report========
                    if(isset($allPost['id'])){
                        $trackData['track_for']='quoteEdit';
                    }else{
                        $trackData['track_for']='quoteAdd';
                    }
                    $trackData['userid']=$this->session->get('sessUserID');
                    $trackData['track_save_id']=$quickQuoteDB->id;
                    $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                    $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                    $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $trackClickSave = new TrackClickSave();
                    $saveTrack=$trackClickSave->save($trackData);
                    //=======Save track report End========
                }
               $this->session->set('all_cla_data', $allPost);
               return $response->redirect('dashboard/quote');


        }else{
            if($this->session->has('enquirySessID')){
                $enquiryID=$this->session->get('enquirySessID');
                $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"));
                $this->view->setVar('enquiryDetails', $enquiryDetails);
                //$_POST=$enquiryDetails;
            }

            /*if($this->session->has('enquirySessID')){
                if($this->session->has('all_cla_data')){
                    $allPost=$this->session->get('all_cla_data');
                    //print_r($allPost);exit();
                    $term=$allPost['term'];
                    if(isset($allPost['month']) && $allPost['month']!=''){
                        $term-=$allPost['month'];
                    }
                    $sql1="select * from Lenders where find_in_set('".$allPost['applicant_type']."',applicant_type) and find_in_set('".$allPost['property_type']."', property_type) and  find_in_set('".$allPost['loan_type']."', loan_type) and find_in_set('".$allPost['refurbishment']."', refurbishment) and (find_in_set('".$term."', term) or (bridging_min_term<='".$term."' and bridging_max_term>='".$term."')) and find_in_set('".$allPost['charge']."', charge) and max_loan>='".$allPost['amount_required']."' and min_loan<='".$allPost['amount_required']."' and (find_in_set('".$allPost['interestservicing']."', interestservicing) or interestservicing IS NULL)";
                        $lenderList=$this->modelsManager->executeQuery($sql1);
                        $this->view->setVar('lenderList', $lenderList);
                    $_POST=$allPost;

                }else{
                    $enquiryID=$this->session->get('enquirySessID');
                    $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
                    $_POST=$enquiryDetails;
                    if($enquiryDetails['purpose']=='Refinance'){
                        if($enquiryDetails['product']==3){
                            $_POST['purchase_price']=$enquiryDetails['dev_fin_ori_purchase_price'];
                            $_POST['amount_required']='';
                            $_POST['interestservicing']='';
                            $_POST['term']=$enquiryDetails['dev_fin_build_term'];
                        }else{
                             $_POST['purchase_price']=$enquiryDetails['original_purchase_price'];
                            $_POST['amount_required']=$enquiryDetails['fin_amount_required'];
                            $_POST['interestservicing']=$enquiryDetails['fin_servicing'];
                            $_POST['term']=$enquiryDetails['fin_term_required'];
                        }


                    }else{
                        if($enquiryDetails['product']==3){
                           $_POST['purchase_price']=$enquiryDetails['dev_pur_purchase_price'];
                           $_POST['term']=$enquiryDetails['dev_pur_build_term'];
                        }else{
                            $_POST['interestservicing']=$enquiryDetails['servicing'];
                        }
                    }

                    $_POST['borrower_name']=stripslashes($enquiryDetails['first_name']." ".$enquiryDetails['last_name']);
                    $_POST['charge']=$enquiryDetails['product'];

                }
            }*/
        }
    }
    public function editquickquoteAction($leadid=""){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }

        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if($allPost['submitclickfrom']!=1){
                $term=$allPost['term'];
                if(isset($allPost['month']) && $allPost['month']!=''){
                    $term-=$allPost['month'];
                }
                $sql1="select * from Lenders where find_in_set('".$allPost['applicant_type']."',applicant_type) and find_in_set('".$allPost['property_type']."', property_type) and  find_in_set('".$allPost['loan_type']."', loan_type) and find_in_set('".$allPost['refurbishment']."', refurbishment) and (find_in_set('".$term."', term) or (bridging_min_term<='".$term."' and bridging_max_term>='".$term."')) and find_in_set('".$allPost['charge']."', charge) and max_loan>='".$allPost['amount_required']."' and min_loan<='".$allPost['amount_required']."' and (find_in_set('".$allPost['interestservicing']."', interestservicing) or interestservicing IS NULL)";
                $lenderList=$this->modelsManager->executeQuery($sql1);
                $this->view->setVar('lenderList', $lenderList);
                $this->view->setVar('leadid', $leadid);
            }else{
                if($leadid!="")
                {
                    $allPost['lead_id']=$leadid;
                }


                $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $chkQuote=QuickQuote::find(array('conditions' => "lead_id='".$allPost['lead_id']."'", 'limit' => 1));
                if(count($chkQuote)>0){
                    $allPost['id']=$chkQuote[0]->id;
                    $allPost['created']=$chkQuote[0]->created;
                }else{
                    $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                }
                $quickQuoteDB= new QuickQuote();
                $saveData=$quickQuoteDB->save($allPost);
                if($saveData){
                    //============Update Modified Enquiry Start=====
                    $phqlEnquiryUpdate="update Enquiry set modified='".$allPost['modified']."' where id='".$allPost['lead_id']."'";
                    $updatemodifiedEnquiry=$this->modelsManager->executeQuery($phqlEnquiryUpdate);
                    //============Update Modified Enquiry Start=====


                    //=======Save track report========
                    if(isset($allPost['id'])){
                        $trackData['track_for']='quoteEdit';
                    }else{
                        $trackData['track_for']='quoteAdd';
                    }
                    $trackData['userid']=$this->session->get('sessUserID');
                    $trackData['track_save_id']=$quickQuoteDB->id;
                    $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                    $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                    $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $trackClickSave = new TrackClickSave();
                    $saveTrack=$trackClickSave->save($trackData);
                    $this->session->set('all_cla_data', $allPost);
                    //=======Save track report End========
                }
               //$this->session->set('all_cla_data', $allPost);
                $this->flashSession->success('Quick Quote has been updated successfully!');
               return $response->redirect('dashboard/editquickquote/'.$leadid);
            }

        }else{
            if($leadid!=""){


                    $enquiryID=$leadid;
                    $enquiryDetailRes=QuickQuote::find(array('conditions'=>"lead_id='".$enquiryID."'", 'limit' => 1))->toArray();
                    if(count($enquiryDetailRes)>0){

                        $enquiryDetails=$enquiryDetailRes[0];
                        $sql1="select * from Lenders where find_in_set('".$enquiryDetails['applicant_type']."',applicant_type) and find_in_set('".$enquiryDetails['property_type']."', property_type) and  find_in_set('".$enquiryDetails['loan_type']."', loan_type) and find_in_set('".$enquiryDetails['refurbishment']."', refurbishment) and (find_in_set('".$enquiryDetails['term']."', term) or (bridging_min_term<='".$enquiryDetails['term']."' and bridging_max_term>='".$enquiryDetails['term']."')) and find_in_set('".$enquiryDetails['charge']."', charge) and max_loan>='".$enquiryDetails['amount_required']."' and min_loan<='".$enquiryDetails['amount_required']."' and (find_in_set('".$enquiryDetails['interestservicing']."', interestservicing) or interestservicing IS NULL)";
                            $lenderList=$this->modelsManager->executeQuery($sql1);
                            $this->view->setVar('lenderList', $lenderList);
                        $_POST=$enquiryDetails;
                    }else{
                        $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
                        $_POST=$enquiryDetails;
                        if($enquiryDetails['purpose']=='Refinance'){
                            if($enquiryDetails['product']==3){
                                $_POST['purchase_price']=$enquiryDetails['dev_fin_ori_purchase_price'];
                                $_POST['amount_required']='';
                                $_POST['interestservicing']='';
                                $_POST['term']=$enquiryDetails['dev_fin_build_term'];
                            }else{
                                 $_POST['purchase_price']=$enquiryDetails['original_purchase_price'];
                                $_POST['amount_required']=$enquiryDetails['fin_amount_required'];
                                $_POST['interestservicing']=$enquiryDetails['fin_servicing'];
                                $_POST['term']=$enquiryDetails['fin_term_required'];
                            }


                        }else{
                            if($enquiryDetails['product']==3){
                               $_POST['purchase_price']=$enquiryDetails['dev_pur_purchase_price'];
                               $_POST['term']=$enquiryDetails['dev_pur_build_term'];
                            }else{
                                $_POST['interestservicing']=$enquiryDetails['servicing'];
                            }
                        }

                        $_POST['borrower_name']=stripslashes($enquiryDetails['first_name']." ".$enquiryDetails['last_name']);
                        $_POST['charge']=$enquiryDetails['product'];
                        $this->view->setVar('lenderList', array());
                    }
                    $this->view->setVar('leadid', $leadid);


            }
        }
    }
    public function quoteformAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if(!$this->session->has('enquirySessID')){
            return $response->redirect("dashboard/leadadd");
        }




        if($this->request->isPost()){
            $allPost=$this->request->getPost();
              $allPost['amount_required']=str_replace(",", "", $allPost['amount_required']);
                $allPost['purchase_price']=str_replace(",", "", $allPost['purchase_price']);
                $allPost['ltv']=str_replace(",", "", $allPost['ltv']);
                //$allPost['location']=explode(",", $allPost['location']);
                $location= $allPost['location'];
                $lenderList=array();
                $lenderListCredit=array();
                $order="lender_name asc";
                if(isset($allPost['sorting']) && $allPost['sorting']!=''){
                    $order=$allPost['sorting'];
                }
                if($allPost['quote_panel']==1){
                    $order=str_replace('lender_name', 'users.first_name', $order);
                    if((isset($allPost['product']) && $allPost['product']!='') && (isset($allPost['ltv']) && $allPost['ltv']!='')){
                        $product=$allPost['product'];
                        switch($product){
                            case 'RB' :
                            $productLtv="  regi_bridge >=".$allPost['ltv']."";
                            break;
                             case 'SCB' :
                            $productLtv="  semi_comm_bridge >=".$allPost['ltv']."";
                            break;
                             case 'CB' :
                            $productLtv="  comm_bridge >=".$allPost['ltv']."";
                            break;
                             case 'LB' :
                            $productLtv="  land_bridge >=".$allPost['ltv']."";
                            break;
                             case 'SC' :
                            $productLtv="  sec_bridge >=".$allPost['ltv']."";
                            break;
                             case 'RFB' :
                            $productLtv="  refurb_bridge >=".$allPost['ltv']."";
                            break;
                            case 'D' :
                            $productLtv="  deve >=".$allPost['ltv']."";
                            break;
                             case 'M' :
                            $productLtv="  mezz >=".$allPost['ltv']."";
                            break;
                             case 'RI' :
                            $productLtv="  resi_investiment >=".$allPost['ltv']."";
                            break;
                             case 'SCI' :
                            $productLtv="  semi_comm_investment >=".$allPost['ltv']."";
                            break;
                            case 'CI' :
                            $productLtv="  comm_investiment >=".$allPost['ltv']."";
                            break;
                            default:
                            break;
                        }
                    }

                   if($allPost['amount_required']>0){

                    if((isset($allPost['ground_up']) && $allPost['ground_up']!='') || (isset($allPost['conversions']) && $allPost['conversions']!='') || (isset($allPost['location']) && $allPost['location']!='')){

                        $sql1="select lenders.*,users.id as uid from lenders join users on users.id=lenders.lender_id where (max_loan>='".$allPost['amount_required']."' and min_loan<='".$allPost['amount_required']."') and".$productLtv." and ((ground_up='".$allPost['ground_up']."' or conversions='".$allPost['conversions']."') or location='".$allPost['location']."') order by ".$order."";
                        $sql2="select lenders.*,users.id as uid from lenders join users on users.id=lenders.lender_id where (max_loan>='".$allPost['amount_required']."' and min_loan<='".$allPost['amount_required']."') and ".$productLtv." and ((ground_up='".$allPost['ground_up']."' or conversions='".$allPost['conversions']."') or location='".$allPost['location']."') and is_credit_lender=1 order by ".$order."";
                        // $sql3="select prefer_lender.*,users.id as uid from prefer_lender join users on users.id=prefer_lender.lender_id where (max_loan>='".$allPost['amount_required']."' and min_loan<='".$allPost['amount_required']."')".$productLtv." order by ".$order."";
                        $sql3="select prefer_lender.*,lenders.ground_up,lenders.conversions,lenders.location,lenders.web_url,users.id as uid from ((prefer_lender join users on users.id=prefer_lender.lender_id) join lenders on lenders.lender_id=prefer_lender.lender_id)where (prefer_lender.max_loan>='".$allPost['amount_required']."' and prefer_lender.min_loan<='".$allPost['amount_required']."') and prefer_lender.".$productLtv." and ((ground_up='".$allPost['ground_up']."' or conversions='".$allPost['conversions']."') or location='".$allPost['location']."') group by prefer_lender.lender_id order by ".$order."";
                    // }
                    //    else if((isset($allPost['location']) && $allPost['location']!='')){

                    //     $sql1="select lenders.*,users.id as uid from lenders join users on users.id=lenders.lender_id where (max_loan>='".$allPost['amount_required']."' and min_loan<='".$allPost['amount_required']."')".$productLtv." and location='".$allPost['location']."' order by ".$order."";
                    //     $sql2="select lenders.*,users.id as uid from lenders join users on users.id=lenders.lender_id where (max_loan>='".$allPost['amount_required']."' and min_loan<='".$allPost['amount_required']."')".$productLtv." and location='".$allPost['location']."' and is_credit_lender=1 order by ".$order."";
                    //     $sql3="select prefer_lender.*,users.id as uid from prefer_lender join users on users.id=prefer_lender.lender_id where (max_loan>='".$allPost['amount_required']."' and min_loan<='".$allPost['amount_required']."')".$productLtv." order by ".$order."";

                    }else{
                          $sql1="select lenders.*,users.id as uid from lenders join users on users.id=lenders.lender_id where (max_loan>='".$allPost['amount_required']."' and min_loan<='".$allPost['amount_required']."') and".$productLtv." order by ".$order."";
                        $sql2="select lenders.*,users.id as uid from lenders join users on users.id=lenders.lender_id where (max_loan>='".$allPost['amount_required']."' and min_loan<='".$allPost['amount_required']."') and".$productLtv." and is_credit_lender=1 order by ".$order."";
                        $sql3="select prefer_lender.*,users.id as uid from prefer_lender join users on users.id=prefer_lender.lender_id where (max_loan>='".$allPost['amount_required']."' and min_loan<='".$allPost['amount_required']."') and".$productLtv." group by prefer_lender.lender_id order by ".$order." ";
                    }
                        //echo $sql3;exit;
                        $lenderList=Enquiry::findAll($sql1);
                        $lenderListCredit=Enquiry::findAll($sql2);
                        $lenderListprefer=Enquiry::findAll($sql3);

                        //$lenderList=$this->modelsManager->executeQuery($sql1);
                       // echo "<pre>";print_r($lenderList->toArray());exit;
                    }else{
                       $lenderList=array();
                    }
                }else if($allPost['quote_panel']==2){


                    if($allPost['amount_required']>0){

                        // $lenderListprefer=PreferLender::find(array('conditions' => "email_id!='' and product='".$allPost['product']."' and (max_loan>='".$allPost['amount_required']."' and min_loan<='".$allPost['amount_required']."')", 'order' => $order));
                        if((isset($allPost['ground_up']) && $allPost['ground_up']!='') || (isset($allPost['conversions']) && $allPost['conversions']!='') || (isset($allPost['location']) && $allPost['location']!='')){
                        $sql="select prefer_lender.*,lenders.ground_up,lenders.conversions,lenders.location,lenders.web_url from (prefer_lender join lenders on lenders.lender_id=prefer_lender.lender_id) where email_id!='' and product='".$allPost['product']."' and (prefer_lender.max_loan>='".$allPost['amount_required']."' and prefer_lender.min_loan<='".$allPost['amount_required']."') and ((ground_up='".$allPost['ground_up']."' or conversions='".$allPost['conversions']."') or location='".$allPost['location']."') group by prefer_lender.lender_id order by ".$order."";
                    }else{
                       $sql="select prefer_lender.* from prefer_lender where email_id!='' and product='".$allPost['product']."' and (max_loan>='".$allPost['amount_required']."' and min_loan<='".$allPost['amount_required']."') order by ".$order."";
                    }
                         $lenderListprefer=Enquiry::findAll($sql);
                    }else{
                      $lenderList=array();
                    }
                }
               // echo $allPost['ltv'];exit;
                //echo count($lenderList); exit();
                $allPost['quoteid']=$id;
                //print_r($allPost); exit();
                $this->view->setVar('lenderListCredit', $lenderListCredit);
                $this->view->setVar('lenderListprefer', $lenderListprefer);

                $this->view->setVar('lenderList', $lenderList);
                $this->session->set('all_cla_data', $allPost);
                $_POST=$allPost;

        }else{
            if($this->session->has('enquirySessID')){
                 $enquiryID=$this->session->get('enquirySessID');

                     $quickQuoteDetail=QuickQuote::find(array('conditions' => "lead_id='".$enquiryID."'", 'limit' => 1));
                    //$quickQuoteDetail=QuickQuote::find(array('conditions' => "id=".$id, 'limit' => 1));
                if(count($quickQuoteDetail)>0){
                    $_POST=$quickQuoteDetail[0]->toArray();
                    $_POST['quoteid']=$_POST['id'];
                    $allPost=$_POST;

                    if($allPost['quote_panel']==1){
                        if((isset($allPost['product']) && $allPost['product']!='') && (isset($allPost['ltv']) && $allPost['ltv']!='')){
                            $product=$allPost['product'];

                            switch($product){
                                case 'RB' :
                                $productLtv=" and (regi_bridge >=".$allPost['ltv'].")";
                                break;
                                 case 'SCB' :
                                $productLtv=" and (semi_comm_bridge >=".$allPost['ltv'].")";
                                break;
                                 case 'CB' :
                                $productLtv=" and (comm_bridge >=".$allPost['ltv'].")";
                                break;
                                 case 'LB' :
                                $productLtv=" and (land_bridge >=".$allPost['ltv'].")";
                                break;
                                 case 'SC' :
                                $productLtv=" and (sec_bridge >=".$allPost['ltv'].")";
                                break;
                                 case 'RFB' :
                                $productLtv=" and (refurb_bridge >=".$allPost['ltv'].")";
                                break;
                                case 'D' :
                                $productLtv=" and (deve >=".$allPost['ltv'].")";
                                break;
                                 case 'M' :
                                $productLtv=" and (mezz >=".$allPost['ltv'].")";
                                break;
                                 case 'RI' :
                                $productLtv=" and (resi_investiment >=".$allPost['ltv'].")";
                                break;
                                 case 'SCI' :
                                $productLtv=" and (semi_comm_investment >=".$allPost['ltv'].")";
                                break;
                                case 'CI' :
                                $productLtv=" and (comm_investiment >=".$allPost['ltv'].")";
                                break;
                                default:
                                break;
                            }
                        }
                        if($allPost['amount_required']>0){
                             $sql1="select * from Lenders where (max_loan>='".$allPost['amount_required']."' and min_loan<='".$allPost['amount_required']."') ".$productLtv." ".$order."";
                             $sql2="select * from Lenders where (max_loan>='".$allPost['amount_required']."' and min_loan<='".$allPost['amount_required']."') and is_credit_lender=1 ".$productLtv." ".$order."";
                             $sql3="select PreferLender.*,Users.id as uid from PreferLender join Users on Users.id=PreferLender.lender_id where (max_loan>='".$allPost['amount_required']."' and min_loan<='".$allPost['amount_required']."') ".$productLtv." group by PreferLender.lender_id";
                             //echo $sql3;exit;
                             //$lenderListprefer=PreferLender::find(array('conditions' => "product='".$allPost['product']."' and (max_loan>='".$allPost['amount_required']."' and min_loan<='".$allPost['amount_required']."') ".$productLtv, 'order' => $order));
                            //echo $sql1; exit();
                            $lenderList=$this->modelsManager->executeQuery($sql1);
                            $lenderListCredit=$this->modelsManager->executeQuery($sql2);
                            $lenderListprefer=array();
                        }else{
                            $lenderList=array();
                            $lenderListCredit=array();
                            $lenderListprefer=array();
                        }
                    }else if($allPost['quote_panel']==2){


                        if($allPost['amount_required']>0){

                              $lenderList=PreferLender::find(array('conditions' => "email_id!='' and product='".$allPost['product']."' and (max_loan>='".$allPost['amount_required']."' and min_loan<='".$allPost['amount_required']."')", 'order' => $order));
                              //echo "email_id!='' and product='".$allPost['product']."' and (max_loan>='".$allPost['amount_required']."' and min_loan<='".$allPost['amount_required']."')";

                            }else{
                              $lenderList=array();
                            }
                    }
                    $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
                    $_POST['application_type']=$enquiryDetails['application_type'];
                    $_POST['refurbishment']=$enquiryDetails['refurbishment'];
                   // echo "<pre>";print_r($lenderListCredit);exit();
                    //echo count($lenderList); exit();
                    $this->view->setVar('lenderList', $lenderList);
                    $this->view->setVar('lenderListCredit', $lenderListCredit);
                     $this->view->setVar('lenderListprefer', $lenderListprefer);
                    $this->session->set('all_cla_data', $allPost);
                }else{
                        $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
                        $allPost=$enquiryDetails;
                        $allPost['lead_id']=$enquiryDetails['id'];
                        $allPost['term']=$allPost['term_required'];
                        $_POST=$allPost;
                        //print_r($_POST); exit();
                    }
                }
            }
        }
    public function quickquotesubmitAction(){
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

            if($allPost['submitclickfrom']==1){

                if($allPost['lead_id']==''){
                    $allPost['lead_id']=$this->session->get('enquirySessID');
                }

                $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $chkQuote=QuickQuote::find(array('conditions' => "lead_id='".$allPost['lead_id']."'", 'limit' => 1));
                if(count($chkQuote)>0){
                    //echo 1111;
                    $allPost['id']=$chkQuote[0]->id;
                    $allPost['created']=$chkQuote[0]->created;
                }else{
                    $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                }
                $allPost['amount_required']=str_replace(",", "", $allPost['amount_required']);
                $allPost['purchase_price']=str_replace(",", "", $allPost['purchase_price']);
                $allPost['ltv']=str_replace(",", "", $allPost['ltv']);
                /*$allPost['brokerfee']=str_replace(",", "", $allPost['brokerfee']);*/
                //echo "<pre>";print_r($allPost);exit();
                $quickQuoteDB= new QuickQuote();
                $saveData=$quickQuoteDB->save($allPost);
                if($saveData){
                    //=======Save track report========
                    if(isset($allPost['id'])){
                        $trackData['track_for']='quoteEdit';
                    }else{
                        $trackData['track_for']='quoteAdd';
                    }
                    $trackData['userid']=$this->session->get('sessUserID');
                    $trackData['track_save_id']=$quickQuoteDB->id;
                    $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                    $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                    $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $trackClickSave = new TrackClickSave();
                    $saveTrack=$trackClickSave->save($trackData);
                    //=======Save track report End========

                    $quickquoteid=$quickQuoteDB->id;
                    $this->modelsManager->executeQuery("delete from QuickquoteDetails where quickquoteid='".$quickquoteid."'");
                    $quoteData['quickquoteid']=$quickquoteid;

                    $lenderCheckedArr=array();
                    $preLenderCheckedArr=array();
                    if(isset($allPost['checkboxval']) && !empty($allPost['checkboxval'])){
                        //echo 123;
                        foreach($allPost['checkboxval'] as  $checkedVal){
                            array_push($lenderCheckedArr, $allPost['lenderid'.$checkedVal]);
                        }
                    }
                    if(isset($allPost['checkboxval_pre']) && !empty($allPost['checkboxval_pre'])){
                        foreach($allPost['checkboxval_pre'] as  $checkedVal){
                            array_push($preLenderCheckedArr, $allPost['prelenderid'.$checkedVal]);
                        }
                    }
                    if(isset($allPost['checkboxval_history']) && !empty($allPost['checkboxval_history'])){
                        //echo 456;
                        foreach($allPost['checkboxval_history'] as  $checkedVal){
                            array_push($lenderCheckedArr, $allPost['lenderid_history'.$checkedVal]);
                        }
                    }
                    //print_r($allPost['prelendergetid']);
                    //print_r($preLenderCheckedArr);exit;
                    $this->session->set('checkedLenderArr', $lenderCheckedArr);
                    $this->session->set('preLenderCheckedArr', $preLenderCheckedArr);
                    //print_r($allPost['lendergetid']);exit;
                    if(isset($allPost['lendergetid']) && !empty($allPost['lendergetid'])){
                        foreach($allPost['lendergetid'] as $index => $lendersingid){
                            $chkDetail=QuickquoteDetails::find(array(
                            'conditions' => "quickquoteid='".$quickquoteid."' and lender_id='".$lendersingid."'",
                            'limit' => 1
                            ));
                            if(count($chkDetail)>0){
                                $quoteData['id']=$chkDetail[0]->id;
                                $quoteData['created']=$chkDetail[0]->created;
                                $quoteData['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            }else{
                                $quoteData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            }
                            $fieldIndex=$index+1;
                            if(in_array($lendersingid, $lenderCheckedArr))
                            {
                                //echo 123;
                                $quoteData['checked_lender']=1;
                            }
                            else
                            {
                                //echo 456;
                                $quoteData['checked_lender']=0;
                            }
                            $quoteData['lender_id']=$lendersingid;
                             $quoteData['gross_loan']=str_replace(",", "", $allPost['grossLoan'.$fieldIndex]);
                            $quoteData['gross_ltv']=str_replace(",", "", $allPost['grossLtv'.$fieldIndex]);
                            /*$quoteData['lender_fee']=$allPost['lenderFee'.$fieldIndex];
                            $quoteData['brokerfee']=$allPost['brokerfee'.$fieldIndex];*/
                            $quoteData['product']=$allPost['product'.$fieldIndex];
                            $quoteData['purchase']=str_replace(",", "", $allPost['purchase'.$fieldIndex]);
                            $quoteData['ratepermonth']=str_replace(",", "", $allPost['ratepermonth'.$fieldIndex]);

                            $quoteData['ratepermonth']=str_replace(",", "", $allPost['ratepermonth'.$fieldIndex]);
                            $quoteData['rateperanum']=str_replace(",", "", $allPost['rateperanum'.$fieldIndex]);
                            //$quoteData['term_required']=str_replace(",", "", $allPost['term_required'.$fieldIndex]);
                            $quoteData['termval']=str_replace(",", "", $allPost['termval'.$fieldIndex]);
                            $quoteData['costpermonth']=str_replace(",", "", $allPost['costpermonth'.$fieldIndex]);
                            $quoteData['costpertheterm']=str_replace(",", "", $allPost['costpertheterm'.$fieldIndex]);
                            $quoteData['in_per']=str_replace(",", "", $allPost['in_per'.$fieldIndex]);
                            $quoteData['in_val']=str_replace(",", "", $allPost['in_val'.$fieldIndex]);
                            $quoteData['broker_per']=str_replace(",", "", $allPost['broker_per'.$fieldIndex]);
                            $quoteData['broker_val']=str_replace(",", "", $allPost['broker_val'.$fieldIndex]);

                            $quoteData['net_loan_if_serviced']=str_replace(",", "", $allPost['net_loan_if_serviced'.$fieldIndex]);
                            $quoteData['net_ltv_serviced']=str_replace(",", "", $allPost['net_ltv_serviced'.$fieldIndex]);
                            $quoteData['net_loan_if_deducted']=str_replace(",", "", $allPost['net_loan_if_deducted'.$fieldIndex]);
                            $quoteData['net_ltv_deducted']=str_replace(",", "", $allPost['net_ltv_deducted'.$fieldIndex]);
                             $quoteData['legals']=$allPost['legals'.$fieldIndex];
                            $quoteData['valuation']=$allPost['quote_valuation'.$fieldIndex];
                            $quoteData['adminval']=$allPost['adminval'.$fieldIndex];
                            $quoteData['exit_fee']=$allPost['exit_fee'.$fieldIndex];
                            $quoteData['term_required']=$allPost['term_required'.$fieldIndex];
                            $quoteData['interestedCalculated']=$allPost['interestedCalculated'.$fieldIndex];
                            $quoteData['lender_table_type']=0;
                            //print_r($quoteData);exit;


                            $QuickquoteDetails= new QuickquoteDetails();
                            $save=$QuickquoteDetails->save($quoteData);
                        }
                        //exit;

                    }
                    if(isset($allPost['prelendergetid']) && !empty($allPost['prelendergetid'])){
                        foreach($allPost['prelendergetid'] as $index => $lendersingid){
                            $chkDetail=QuickquoteDetails::find(array(
                            'conditions' => "quickquoteid='".$quickquoteid."' and lender_id='".$lendersingid."' and lender_table_type=1",
                            'limit' => 1
                            ));
                            if(count($chkDetail)>0){
                                $quoteData['id']=$chkDetail[0]->id;
                                $quoteData['created']=$chkDetail[0]->created;
                                $quoteData['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            }else{
                                $quoteData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            }
                            $fieldIndex=$index+1;
                            if(in_array($lendersingid, $preLenderCheckedArr))
                            {
                                //echo 123;
                                $quoteData['checked_lender']=1;
                            }
                            else
                            {
                                //echo 456;
                                $quoteData['checked_lender']=0;
                            }
                            $quoteData['lender_id']=$lendersingid;
                             $quoteData['gross_loan']=str_replace(",", "", $allPost['grossLoan_pre'.$fieldIndex]);
                            $quoteData['gross_ltv']=str_replace(",", "", $allPost['grossLtv_pre'.$fieldIndex]);
                            /*$quoteData['lender_fee']=$allPost['lenderFee'.$fieldIndex];
                            $quoteData['brokerfee']=$allPost['brokerfee'.$fieldIndex];*/
                            $quoteData['product']=$allPost['product'.$fieldIndex];
                            $quoteData['purchase']=str_replace(",", "", $allPost['purchase_pre'.$fieldIndex]);
                            $quoteData['ratepermonth']=str_replace(",", "", $allPost['ratepermonth_pre'.$fieldIndex]);

                            $quoteData['ratepermonth']=str_replace(",", "", $allPost['ratepermonth_pre'.$fieldIndex]);
                            $quoteData['rateperanum']=str_replace(",", "", $allPost['rateperanum_pre'.$fieldIndex]);
                            //$quoteData['term_required']=str_replace(",", "", $allPost['term_required'.$fieldIndex]);
                            $quoteData['termval']=str_replace(",", "", $allPost['termval_pre'.$fieldIndex]);
                            $quoteData['costpermonth']=str_replace(",", "", $allPost['costpermonth_pre'.$fieldIndex]);
                            $quoteData['costpertheterm']=str_replace(",", "", $allPost['costpertheterm_pre'.$fieldIndex]);
                            $quoteData['in_per']=str_replace(",", "", $allPost['in_per_pre'.$fieldIndex]);
                            $quoteData['in_val']=str_replace(",", "", $allPost['in_val_pre'.$fieldIndex]);
                            $quoteData['broker_per']=str_replace(",", "", $allPost['broker_per_pre'.$fieldIndex]);
                            $quoteData['broker_val']=str_replace(",", "", $allPost['broker_val_pre'.$fieldIndex]);

                            $quoteData['net_loan_if_serviced']=str_replace(",", "", $allPost['net_loan_if_serviced_pre'.$fieldIndex]);
                            $quoteData['net_ltv_serviced']=str_replace(",", "", $allPost['net_ltv_serviced_pre'.$fieldIndex]);
                            $quoteData['net_loan_if_deducted']=str_replace(",", "", $allPost['net_loan_if_deducted_pre'.$fieldIndex]);
                            $quoteData['net_ltv_deducted']=str_replace(",", "", $allPost['net_ltv_deducted_pre'.$fieldIndex]);
                             $quoteData['legals']=$allPost['legals_pre'.$fieldIndex];
                            $quoteData['valuation']=$allPost['quote_valuation_pre'.$fieldIndex];
                            $quoteData['adminval']=$allPost['adminval_pre'.$fieldIndex];
                            $quoteData['exit_fee']=$allPost['exit_fee_pre'.$fieldIndex];
                            $quoteData['term_required']=$allPost['term_required_pre'.$fieldIndex];
                            $quoteData['interestedCalculated']=$allPost['interestedCalculated_pre'.$fieldIndex];
                            $quoteData['lender_table_type']=1;
                            //print_r($quoteData);exit;


                            $QuickquoteDetails= new QuickquoteDetails();
                            $save=$QuickquoteDetails->save($quoteData);
                        }
                        //exit;

                    }
                    if(isset($allPost['lenderhistorygetid']) && !empty($allPost['lenderhistorygetid'])){
                        foreach($allPost['lenderhistorygetid'] as $index => $lendersingid){
                            $chkDetail=QuickquoteDetails::find(array(
                            'conditions' => "quickquoteid='".$quickquoteid."' and lender_id='".$lendersingid."'",
                            'limit' => 1
                            ));
                            if(count($chkDetail)>0){
                                $quoteData['id']=$chkDetail[0]->id;
                                $quoteData['created']=$chkDetail[0]->created;
                                $quoteData['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            }else{
                                $quoteData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            }
                            $fieldIndex=$index+1;
                            if(in_array($lendersingid, $lenderCheckedArr))
                            {
                                //echo 123;
                                $quoteData['checked_lender']=1;
                            }
                            else
                            {
                                //echo 456;
                                $quoteData['checked_lender']=0;
                            }
                            $quoteData['lender_id']=$lendersingid;
                             $quoteData['gross_loan']=str_replace(",", "", $allPost['grossLoan_history'.$fieldIndex]);
                            $quoteData['gross_ltv']=str_replace(",", "", $allPost['grossLtv_history'.$fieldIndex]);
                            /*$quoteData['lender_fee']=$allPost['lenderFee'.$fieldIndex];
                            $quoteData['brokerfee']=$allPost['brokerfee'.$fieldIndex];*/
                            $quoteData['product']=$allPost['product'.$fieldIndex];
                            $quoteData['purchase']=str_replace(",", "", $allPost['purchase_history'.$fieldIndex]);
                            $quoteData['ratepermonth']=str_replace(",", "", $allPost['ratepermonth_history'.$fieldIndex]);

                            $quoteData['ratepermonth']=str_replace(",", "", $allPost['ratepermonth_history'.$fieldIndex]);
                            $quoteData['rateperanum']=str_replace(",", "", $allPost['rateperanum_history'.$fieldIndex]);
                            //$quoteData['term_required']=str_replace(",", "", $allPost['term_required'.$fieldIndex]);
                            $quoteData['termval']=str_replace(",", "", $allPost['termval_history'.$fieldIndex]);
                            $quoteData['costpermonth']=str_replace(",", "", $allPost['costpermonth_history'.$fieldIndex]);
                            $quoteData['costpertheterm']=str_replace(",", "", $allPost['costpertheterm_history'.$fieldIndex]);
                            $quoteData['in_per']=str_replace(",", "", $allPost['in_per_history'.$fieldIndex]);
                            $quoteData['in_val']=str_replace(",", "", $allPost['in_val_history'.$fieldIndex]);
                            $quoteData['broker_per']=str_replace(",", "", $allPost['broker_per_history'.$fieldIndex]);
                            $quoteData['broker_val']=str_replace(",", "", $allPost['broker_val_history'.$fieldIndex]);

                            $quoteData['net_loan_if_serviced']=str_replace(",", "", $allPost['net_loan_if_serviced_history'.$fieldIndex]);
                            $quoteData['net_ltv_serviced']=str_replace(",", "", $allPost['net_ltv_serviced_history'.$fieldIndex]);
                            $quoteData['net_loan_if_deducted']=str_replace(",", "", $allPost['net_loan_if_deducted_history'.$fieldIndex]);
                            $quoteData['net_ltv_deducted']=str_replace(",", "", $allPost['net_ltv_deducted_history'.$fieldIndex]);
                             $quoteData['legals']=$allPost['legals_history'.$fieldIndex];
                            $quoteData['valuation']=$allPost['quote_valuation_history'.$fieldIndex];
                            $quoteData['adminval']=$allPost['adminval_history'.$fieldIndex];
                            $quoteData['exit_fee']=$allPost['exit_fee_history'.$fieldIndex];
                            $quoteData['term_required']=$allPost['term_required_history'.$fieldIndex];
                            $quoteData['interestedCalculated']=$allPost['interestedCalculated_history'.$fieldIndex];
                            $quoteData['lender_table_type']=2;
                            //print_r($quoteData);exit;


                            $QuickquoteDetails= new QuickquoteDetails();
                            $save=$QuickquoteDetails->save($quoteData);
                        }
                        //exit;

                    }

                }
               //$this->session->set('all_cla_data', $allPost);

                if($this->session->has('newenquiry')){
                    echo 3;
                }else{
                    echo 1;
                    //$this->flashSession->success("Enquiry Completed Successfully");
                }

                exit();
            }

        }
        echo 2; exit();
    }
    public function quickquoteprintAction(){
        $response = new \Phalcon\Http\Response();
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            //print_r($allPost); exit();
        }else{
            exit();
        }
    }
    public function calquickquoteprintAction(){
        $response = new \Phalcon\Http\Response();
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            //print_r($allPost); exit();
        }else{
            exit();
        }
    }

    public function dquickquoteprintAction(){
        $response = new \Phalcon\Http\Response();
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            //echo "<pre>";print_r($allPost); exit();
        }else{
            exit();
        }
    }
    public function placementAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if(!$this->session->has('enquirySessID')){
            return $response->redirect("dashboard/leadadd");
        }
        if(!$this->session->has('all_cla_data')){
            return $response->redirect("dashboard/quickquote");
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
        }else{
            $enquiryID=$this->session->get('enquirySessID');
            $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
            $_POST=$enquiryDetails;
            $allCalCulateddata=$this->session->get('all_cla_data');
            $_POST['ltv']=$allCalCulateddata['ltv'];
            $_POST['property_type']=$allCalCulateddata['property_type'];
            $_POST['product']=$allCalCulateddata['charge'];
            $_POST['refurbishment']=$allCalCulateddata['refurbishment'];
        }

    }
    public function loadplaceemntAction(){
         //$ltvTypeArr=array('1'=>'0-50%','2'=>'50.01-60%','3'=>'60.01-65%','4'=>'65.01-70%','5'=>'70.01-75%','6'=>'75.01-80.55%','7'=>'80.56-81%');
         $termTypeArr=array('1'=>'1 month','2'=>'2 months','3'=>'3 months','4'=>'4 months','5'=>'5 months','6'=>'6 months','7'=>'7 months','8'=>'8 months','9'=>'9 months','10'=>'10 months','11'=>'11 months','12'=>'12 months','13'=>'13 months','14'=>'14 months','15'=>'15 months','16'=>'16 months','17'=>'17 months','18'=>'18 months','19'=>'19 months','20'=>'20 months','21'=>'21 months','22'=>'22 months','23'=>'23 months','24'=>'24 months');
        $contentApp='<tr>
                        <th>Lender Name</th>
                        <th>Contact No</th> 
                        <th>Email ID</th>
                        <th>URL</th>
                        <th>Minimum Loan</th>
                        <th>Maximum Loan</th>
                        <th>Min Term</th>
                        <th>Max Term</th>
                        <th style="width: 200px;">Email To Lender</th>
                      </tr>';
        $responseArr=array('response' => 2, 'htmlcont' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            //print_r($allPost);exit();
                //$ltv=$allPost['ltv'];
                /*foreach($ltvTypeArr as $key => $value)
                {
                    $ltvperc=explode("-",$value);
                    $ltvstart=$ltvperc[0];
                    $ltvend=substr($ltvperc[1], 0, -1);
                    if($ltv>=$ltvstart && $ltv<=$ltvend)
                    {
                        $ltv_val=$key;
                    }
                }
                if(!isset($ltv_val)){$ltv_val=0;}*/
                //$ltv_val=$ltv;

                //$lenders=Lenders::findAll("select lender_rates.* from lenders left join lender_rates on lenders.lender_id=lender_rates.lender_id where lenders.is_active=1 and lender_rates.charge='".$productId."' and lender_rates.property_type='".$allPost['property_type']."' and lender_rates.ltv='".$ltv_val."' and lender_rates.refurbishment='".$allPost['refurbishment']."'");
                $whr=array("Lenders.is_active=1");
                $ord=array();
                $joinArr=array();
                $groupBy="";
                 if(isset($allPost['searchtxt']) && $allPost['searchtxt']!=''){
                    array_push($joinArr, "left join Users on Lenders.lender_id=Users.id");
                    $srhtxt=$allPost['searchtxt'];
                    array_push($whr, "(Users.first_name like '%".$srhtxt."%' or Users.last_name like '%".$srhtxt."%' or CONCAT(Users.first_name, ' ', Users.last_name) like '%".$srhtxt."%' or Users.email_id like '%".$srhtxt."%' or Users.email_id like '%".$srhtxt."%' or Users.customer_no = '".$srhtxt."')");
                }
                if(isset($allPost['product']) && $allPost['product']!=''){
                    $product=$allPost['product'];
                    array_push($whr, "find_in_set('".$product."', Lenders.charge)");
                }
                if(isset($allPost['property_type']) && $allPost['property_type']!=''){
                    $property_type=$allPost['property_type'];
                    array_push($whr, "find_in_set('".$property_type."', Lenders.property_type)");
                }
                if(isset($allPost['refurbishment']) && $allPost['refurbishment']!=''){
                    $refurbishment=$allPost['refurbishment'];
                    array_push($whr, "find_in_set('".$refurbishment."', Lenders.refurbishment)");
                }
                //array_push($joinArr, "left join Users on Lenders.lender_id=Users.id");

                $where="";
                $joinString='';
                if(!empty($whr)){
                    $where=" where ".implode(" and ", $whr);
                }
                if(!empty($joinArr)){
                    $joinString=" ".implode(" ", $joinArr);
                }
                $lenders=$this->modelsManager->executeQuery("select Lenders.* from Lenders".$joinString.$where.$groupBy." order by Lenders.id desc");
                //$lenders=Lenders::findAll("select * from lenders where is_active=1 and find_in_set('".$allPost['refurbishment']."', refurbishment) and find_in_set('".$productId."', charge) and find_in_set('".$allPost['property_type']."', property_type)");

                if(count($lenders)>0){
                    foreach($lenders as $lender){
                      //$lender=Lenders::findFirst(array('conditions' => "id='".$lenderRates->lender_id."'"));
                      $userDetail=Users::findFirst(array('conditions' => "id='".$lender->lender_id."'"));
                      /*if($lender->show_name_on_print==1){
                            $name=stripslashes($userDetail->first_name)." (".$userDetail->customer_no.")";
                          }else{
                            $name=$userDetail->customer_no;
                          }*/
                          $name=stripslashes($userDetail->first_name);
                          $termApp="";
                          if($lender->term!=''){
                            $termresArr=explode(",", $lender->term);
                            if(count($termresArr)>0){
                              $termCount=1;
                              foreach($termresArr as $termSing){
                                if($termCount>1){$comma=", ";}else{$comma="";}
                                $termApp.=$comma.$termTypeArr[$termSing];
                                $termCount++;
                              }
                            }
                          }
                      $contentApp.='<tr><td>'.$name.'</td>
                        <td>'.$userDetail->contact_no.'</td> 
                        <td>'.$userDetail->email_id.'</td>
                        <td>'.$lender->web_url.'</td>
                         <td>₤ '.number_format($lender->min_loan, 2).'</td>
                        <td>₤ '.number_format($lender->max_loan, 2).'</td>
                        <td>'.$termTypeArr[$lender->min_term].'</td> 
                        <th>'.$termTypeArr[$lender->max_term].'</td>
                       
                        <td><input type="checkbox" name="lenderids[]" class="lenderidCls" value="'.$lender->lender_id.'" />
                        <div id="attachfile'.$lender->lender_id.'">
                        <input type="file" name="lenderattach'.$lender->lender_id.'[]" class="form-control" multiple="multiple">
                        </div>
                        </td>
                       
                      </tr>';
                    }
                }else{
                    $contentApp.='<tr>
                      <td colspan="10"><h5 align="center">No lender founds</h5></td>
                    </tr>';
                }
                $responseArr=array('response' => 1, 'htmlcont' => $contentApp);
        }
        echo json_encode($responseArr);
        exit();
    }
    public function sendmailtolenderAction(){
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
        }
        if(!isset($allPost['editplacement'])){
            if(!$this->session->has('enquirySessID')){
                echo 3;exit();
            }
            if(!$this->session->has('all_cla_data')){
                echo 4;exit();
            }
        }
        //echo "<pre>";print_r($allPost);echo "</pre>";exit;
        $applicantTypeArr=array('1'=>'Personal Name','2'=>'Company');
        $loanTypeArr=array('1'=>'Investment','2'=>'Regulated');
         $propertyTypeArr=array('1'=>'Residential','2'=>'Semi Commercial','3'=>'Commercial','4'=>'Land no planning','Land With Planning');
          $refurbishmentArr=array('1'=>'No','2'=>'Light Refurb  -  no planning permission required','3'=>'Heavy Refurb - planning permission required');
          $termTypeArr=array('1'=>'1 month','2'=>'2 months','3'=>'3 months','4'=>'4 months','5'=>'5 months','6'=>'6 months','7'=>'7 months','8'=>'8 months','9'=>'9 months','10'=>'10 months','11'=>'11 months','12'=>'12 months','13'=>'13 months','14'=>'14 months','15'=>'15 months','16'=>'16 months','17'=>'17 months','18'=>'18 months','19'=>'19 months','20'=>'20 months','21'=>'21 months','22'=>'22 months','23'=>'23 months','24'=>'24 months');
          $adverseTypeArr=array('1'=>'No','2'=>'Minor','3'=>'Light','4'=>'Heavy');
          $chargeTypeArr=array('1'=>'1st charge bridge','2'=>'2nd charge bridge','3'=>'Development loan','4'=>'commercial loan', '5' => 'buy to let', '6' => 'Mezz');
          $valuationTypeArr=array('1'=>'Purchase Price','2'=>'Market Value','3'=>'Open Market Value');
          $interestServicingOptionArr=array('1'=>'Deducted for entire term','2'=>'Serviced Monthly','3'=>'Rolled Up', '4' => 'Part & Part');
          $ltvTypeArr=array('1'=>'0-50%','2'=>'50.01-60%','3'=>'60.01-65%','4'=>'65.01-70%','5'=>'70.01-75%','6'=>'75.01-80.55%','7'=>'80.56-81%');
          $creditArr=array('Excellent' => 'Excellent', 'Good' => 'Good', 'Fair' => 'Fair', 'Poor' => 'Poor');
          $incomeArr=array('Provable' => 'Provable', 'Not Provable' => 'Not Provable');
          $refurbishmentArr=array('1'=>'No','2'=>'Light Refurb  -  no planning permission required','3'=>'Heavy Refurb - planning permission required');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            //print_r($allPost);exit();
            //print_r($_FILES);exit();
            if(isset($allPost['editplacement'])){

                if(!empty($allPost['lenderids'])){
                    $enquiryID=$allPost['leaduserid'];
                    //print_r($allPost);exit();

                    $data['searchtxt']=$allPost['searchtxt'];
                    $data['charge']=$allPost['product'];
                    /*$ltv=$allPost['ltv'];
                    $ltv_val=$ltv;*/
                    $data['id']=$allPost['id'];
                    //$data['ltv']=$ltv_val;
                    //$data['ltv_val']=$ltv;
                    $data['property_type']=$allPost['property_type'];
                    $data['refurbishment']=$allPost['refurbishment'];
                    $data['leanders_id']=implode(",", $allPost['lenderids']);
                    $data['enquiry_id']=$enquiryID;
                    $data['created']=$allPost['created'];
                    $data['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));

                    //print_r($data);exit();
                    $placementDB=new Placement();
                    $save=$placementDB->save($data);
                    if($save){
                        $insertplacementID=$placementDB->id;
                        //=======Save track report========
                        $trackData['track_for']='placementEdit';
                        $trackData['userid']=$this->session->get('sessUserID');
                        $trackData['track_save_id']=$placementDB->id;
                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);
                        //=======Save track report End========
                    }
                    //============Update Modified Enquiry Start=====
                    $phqlEnquiryUpdate="update Enquiry set modified='".$data['modified']."' where id='".$enquiryID."'";
                    $updatemodifiedEnquiry=$this->modelsManager->executeQuery($phqlEnquiryUpdate);
                    //============Update Modified Enquiry Start=====

                    $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
                    $sessionID=$this->session->get('sessUserID');
                    $sessuserDetail=Users::findFirst(array('conditions' => "id='".$sessionID."'"));
                    $mailContent=UIElements::bapCustUniGetMailText(3);
                    foreach($allPost['lenderids'] as $lenderID){
                        $fileattachArr=array();
                        if(isset($_FILES['lenderattach'.$lenderID]) && !empty($_FILES['lenderattach'.$lenderID])){
                            foreach($_FILES['lenderattach'.$lenderID]['name'] as $fileIndex => $filenameString){
                                $filename=uniqid().$filenameString;
                                $tmpName=$_FILES['lenderattach'.$lenderID]['tmp_name'][$fileIndex];
                                move_uploaded_file($tmpName, "uploads/placement/".$filename);
                                array_push($fileattachArr, "uploads/placement/".$filename);
                                $attachData['placementid']=$insertplacementID;
                                $attachData['lenderid']=$lenderID;
                                $attachData['attach_file']=$filename;
                                $attachData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                $PlacementAttachment= new PlacementAttachment();
                                $saveattach=$PlacementAttachment->save($attachData);
                            }

                        }

                        //$lenderRateDetail=LenderRates::findFirst(array('conditions' => "id='".$lenderRateID."'"));
                        //$lenderID=$lenderRateDetail->lender_id;
                        $userDetail=Users::findFirst(array('conditions' => "id='".$lenderID."'"));
                        $siteAdmin = Sitesetting::findFirst(array("id=1"));


                        $bodyMsg=$mailContent['body'];
                        $bodyMsg=str_replace('{LenderName}', stripslashes($userDetail->first_name), $bodyMsg);
                        $bodyMsg=str_replace('{AdvisorName}', stripslashes($sessuserDetail->first_name), $bodyMsg);
                        $bodyMsg=str_replace('{AdvisorEmail}', stripslashes($sessuserDetail->email_id), $bodyMsg);

                        if($enquiryDetails['purpose']=='Purchase'){
                            $numbers="<tr>
                                    <td><strong>Purchase Price:</strong>".number_format($enquiryDetails['purchase_price'], 2)."</td>
                                </tr>
                                <tr>
                                    <td><strong>Amount Required:</strong>".number_format($enquiryDetails['amount_required'], 2)."</td>
                                </tr>
                                <tr>
                                    <td><strong>LTV Required:</strong>".$enquiryDetails['ltv_required']."%</td>
                                </tr>
                                <tr>
                                    <td><strong>Term Required:</strong>".$termTypeArr[$enquiryDetails['term_required']]."</td>
                                </tr>

                                <tr>
                                    <td><strong>Servicing:</strong>".$interestServicingOptionArr[$enquiryDetails['servicing']]."</td>
                                </tr>";
                        }else if($enquiryDetails['purpose']=='Refinance'){
                            $numbers="<tr>
                                    <td><strong>Lender:</strong>".$enquiryDetails['current_lender']."</td>
                                </tr>
                                
                                <tr>
                                    <td><strong>LTV Required:</strong>".$enquiryDetails['fin_ltv_required']."%</td>
                                </tr>
                                <tr>
                                    <td><strong>Balance of any existing charges:</strong>".number_format($enquiryDetails['balance_of_any_exist_charge'], 2)."</td>
                                </tr>
                                <tr>
                                    <td><strong>Date of Purchase:</strong>".date("d/m/Y", strtotime($enquiryDetails['date_of_purchase']))."</td>
                                </tr>
                                <tr>
                                    <td><strong>Amount Required:</strong>".number_format($enquiryDetails['fin_amount_required'], 2)."</td>
                                </tr>
                                <tr>
                                    <td><strong>Original Purchase Price:</strong>".number_format($enquiryDetails['original_purchase_price'], 2)."</td>
                                </tr>
                                <tr>
                                    <td><strong>Term Required:</strong>".$termTypeArr[$enquiryDetails['fin_term_required']]."</td>
                                </tr>

                                <tr>
                                    <td><strong>Servicing:</strong>".$interestServicingOptionArr[$enquiryDetails['fin_servicing']]."</td>
                                </tr>";
                        }else{
                           $numbers="";
                        }
                        if($enquiryDetails['refurbishment']>1){
                            if($enquiryDetails['build_period']!='0000-00-00'){$buildperiod=date("d/m/Y", strtotime($enquiryDetails['build_period']));}else{$buildperiod="N/A";}
                            $workdetail="<tr>
                                    <td>&nbsp;</td>
                                </tr>
                                <tr>
                                    <td><h3>Work</h3></td>
                                </tr>
                                <tr>
                                    <td><strong>Cost of Works:</strong>".$enquiryDetails['cost_of_work']."</td>
                                </tr>
                                <tr>
                                    <td><strong>Build Period:</strong>".$buildperiod."</td>
                                </tr>
                                <tr>
                                    <td><strong>Scheme Details:</strong>".$enquiryDetails['scheme_detail']."</td>
                                </tr>
                                <tr>
                                    <td><strong>GDV:</strong>".$enquiryDetails['gdv']."</td>
                                </tr>
                                ";
                        }else{
                            $workdetail="";
                        }
                        $companyDetail="";
                        if($enquiryDetails['borrower_type']==2){
                             $companyDetail="<tr>
                                    <td>&nbsp;</td>
                                </tr>
                                <tr>
                                    <td><h3>Company</h3></td>
                                </tr>
                                <tr>
                                    <td><strong>Name of Company:</strong>".$enquiryDetails['name_of_comany']."</td>
                                </tr>
                                <tr>
                                    <td><strong>Number of Directors:</strong>".$enquiryDetails['no_of_director']."</td>
                                </tr>
                                <tr>
                                    <td><strong>Number of Shareholder:</strong>".$enquiryDetails['no_of_shareholder']."</td>
                                </tr>
                                <tr>
                                    <td><strong>Registration Number:</strong>".$enquiryDetails['registration_number']."</td>
                                </tr>
                                
                                ";
                        }
                        if($enquiryDetails['borrower_dob']!='0000-00-00'){$dob=date("d/m/Y", strtotime($enquiryDetails['borrower_dob']));}else{$dob="N/A";}

                        $enquiryDetail=" <table>                                
                                <tr>
                                    <td><strong>Loan Type:</strong>".$loanTypeArr[$enquiryDetails['loan_type']]."</td>
                                </tr>
                                <tr>
                                    <td><strong>Purpose:</strong>".$enquiryDetails['purpose']."</td>
                                </tr>
                                <tr>
                                    <td><strong>Charge:</strong>".$chargeTypeArr[$enquiryDetails['product']]."</td>
                                </tr>
                                <tr>
                                    <td><strong>Property Type:</strong>".$propertyTypeArr[$enquiryDetails['property_type']]."</td>
                                </tr>
                                <tr>
                                    <td><strong>Property Description:</strong>".$enquiryDetails['property_description']."</td>
                                </tr>
                                <tr>
                                    <td><strong>Refurbishment:</strong>".$refurbishmentArr[$enquiryDetails['refurbishment']]."</td>
                                </tr>
                                <tr>
                                    <td>&nbsp;</td>
                                </tr>
                                <tr>
                                    <td><h3>Numbers</h3></td>
                                </tr>".$numbers.$workdetail."
                                <tr>
                                    <td>&nbsp;</td>
                                </tr>
                                <tr>
                                    <td><h3>Borrower</h3></td>
                                </tr>
                                <tr>
                                    <td><strong>Borrower Type:</strong>".$applicantTypeArr[$enquiryDetails['borrower_type']]."</td>
                                </tr>
                                ".$companyDetail."
                                <tr>
                                    <td>&nbsp;</td>
                                </tr>
                                <tr>
                                    <td><h3>Borrower Detail</h3></td>
                                </tr>
                                <tr>
                                    <td><strong>First Name:</strong>".$enquiryDetails['first_name']."</td>
                                </tr>
                                 <tr>
                                    <td><strong>Surname:</strong>".$enquiryDetails['last_name']."</td>
                                </tr>
                                 <tr>
                                    <td><strong>Date of Birth:</strong>".$dob."</td>
                                </tr>
                                <tr>
                                    <td><strong>Address:</strong>".stripslashes($enquiryDetails['borrower_address'])."</td>
                                </tr>
                                <tr>
                                    <td><strong>Telephone:</strong>".stripslashes($enquiryDetails['borrower_tel'])."</td>
                                </tr>
                                <tr>
                                    <td><strong>Mobile:</strong>".stripslashes($enquiryDetails['borrower_mob'])."</td>
                                </tr>
                                <tr>
                                    <td><strong>Email:</strong>".stripslashes($enquiryDetails['borrower_email'])."</td>
                                </tr>
                                <tr>
                                    <td><strong>Number of Borrowers:</strong>".stripslashes($enquiryDetails['no_of_borrower'])."</td>
                                </tr>
                                <tr>
                                    <td><strong>Postcode:</strong>".stripslashes($enquiryDetails['postcode'])."</td>
                                </tr>
                                <tr>
                                    <td><strong>Time at Address:</strong>".stripslashes($enquiryDetails['time_at_address'])."</td>
                                </tr>
                                 <tr>
                                    <td><strong>Status(Homeowner):</strong>".stripslashes($enquiryDetails['borrower_status'])."</td>
                                </tr>
                                 <tr>
                                    <td><strong>Credit Profile:</strong>".stripslashes($enquiryDetails['credit_profile'])."</td>
                                </tr>
                                <tr>
                                    <td><strong>Income:</strong>".stripslashes($enquiryDetails['income'])."</td>
                                </tr>
                            </table>";
                        $bodyMsg=str_replace('{EnquiryDetail}', $enquiryDetail, $bodyMsg);


                       /* $umsg="<table width='100%'  style='line-height:20px; font-size:12px'>
                                <thead>
                                    <th style='height:80px; font-size:24px; background:#'>
                                        <center>Request For Loan</center>
                                    </th>
                                </thead>
                            </table>
                            <table width='100%'  style='line-height:20px; font-size:12px'>
                                <tr>
                                    <td><h4 style='font-weight:bold;'>Hi ".stripslashes($userDetail->first_name).",</h4></td>
                                </tr>
                                 <tr>
                                <td>The advisor ".stripslashes($sessuserDetail->first_name)." has sent you a new user enquiry detail, so review his/her requested detail and confirm us by email ID '".stripslashes($sessuserDetail->email_id)."'.
                                </td>
                                </tr>
                                <tr>
                                    <td><h4 style='font-weight:bold;'>Enquiry Detail</h4></td>
                                </tr>
                                 <tr>
                                    <td>&nbsp;</td>
                                </tr>

                                <tr>
                                    <td><strong>Loan Type:</strong>".$loanTypeArr[$enquiryDetails['loan_type']]."</td>
                                </tr>
                                <tr>
                                    <td><strong>Purpose:</strong>".$enquiryDetails['purpose']."</td>
                                </tr>
                                <tr>
                                    <td><strong>Charge:</strong>".$chargeTypeArr[$enquiryDetails['product']]."</td>
                                </tr>
                                <tr>
                                    <td><strong>Property Type:</strong>".$propertyTypeArr[$enquiryDetails['property_type']]."</td>
                                </tr>
                                <tr>
                                    <td><strong>Property Description:</strong>".$enquiryDetails['property_description']."</td>
                                </tr>
                                <tr>
                                    <td><strong>Refurbishment:</strong>".$refurbishmentArr[$enquiryDetails['refurbishment']]."</td>
                                </tr>
                                <tr>
                                    <td>&nbsp;</td>
                                </tr>
                                <tr>
                                    <td><h3>Numbers</h3></td>
                                </tr>".$numbers.$workdetail."
                                <tr>
                                    <td>&nbsp;</td>
                                </tr>
                                <tr>
                                    <td><h3>Borrower</h3></td>
                                </tr>
                                <tr>
                                    <td><strong>Borrower Type:</strong>".$applicantTypeArr[$enquiryDetails['borrower_type']]."</td>
                                </tr>
                                ".$companyDetail."
                                <tr>
                                    <td>&nbsp;</td>
                                </tr>
                                <tr>
                                    <td><h3>Borrower Detail</h3></td>
                                </tr>
                                <tr>
                                    <td><strong>First Name:</strong>".$enquiryDetails['first_name']."</td>
                                </tr>
                                 <tr>
                                    <td><strong>Surname:</strong>".$enquiryDetails['last_name']."</td>
                                </tr>
                                 <tr>
                                    <td><strong>Date of Birth:</strong>".$dob."</td>
                                </tr>
                                <tr>
                                    <td><strong>Address:</strong>".stripslashes($enquiryDetails['borrower_address'])."</td>
                                </tr>
                                <tr>
                                    <td><strong>Telephone:</strong>".stripslashes($enquiryDetails['borrower_tel'])."</td>
                                </tr>
                                <tr>
                                    <td><strong>Mobile:</strong>".stripslashes($enquiryDetails['borrower_mob'])."</td>
                                </tr>
                                <tr>
                                    <td><strong>Email:</strong>".stripslashes($enquiryDetails['borrower_email'])."</td>
                                </tr>
                                <tr>
                                    <td><strong>Number of Borrowers:</strong>".stripslashes($enquiryDetails['no_of_borrower'])."</td>
                                </tr>
                                <tr>
                                    <td><strong>Postcode:</strong>".stripslashes($enquiryDetails['postcode'])."</td>
                                </tr>
                                <tr>
                                    <td><strong>Time at Address:</strong>".stripslashes($enquiryDetails['time_at_address'])."</td>
                                </tr>
                                 <tr>
                                    <td><strong>Status(Homeowner):</strong>".stripslashes($enquiryDetails['borrower_status'])."</td>
                                </tr>
                                 <tr>
                                    <td><strong>Credit Profile:</strong>".stripslashes($enquiryDetails['credit_profile'])."</td>
                                </tr>
                                <tr>
                                    <td><strong>Income:</strong>".stripslashes($enquiryDetails['income'])."</td>
                                </tr>

                                <tr>
                                    <td ><strong>Thanking You,</strong></td>
                                </tr>
                                <tr>
                                    <td style='color:#78b454;'>The ".stripslashes($siteAdmin->site_title)." Team</td>
                                </tr>
                            </table>";*/
                           // echo $umsg; exit();

                        //$subject =  stripslashes($siteAdmin->site_title).':  Enquiry Detail For Loan';
                        $subject=$mailContent['subject'];
                        //$sentUmail =UIElements::sendEmail($userDetail->email_id, $subject, $bodyMsg);

                        $bodyMsg=UIElements::replaceEnquiryEmailMessage($enquiryID,$bodyMsg);
                        $subject=UIElements::replaceEnquiryEmailMessage($enquiryID,$subject);

                        $userEmailID="";

                        if(strpos($userDetail->email_id,"gov.")!==false){

                        }else if(strpos($userDetail->email_id,"police.")!==false){

                        }else if(strpos($userDetail->email_id,"nhs.")!==false){

                        }else if(strpos($userDetail->email_id,"sch.")!==false){

                        }else if(strpos($userDetail->email_id,"ac.")!==false){
                        }else{
                            $userEmailID=$userDetail->email_id;
                        }

                        if(empty($fileattachArr)){
                            if($userEmailID!=''){
                                $sentUmail =UIElements::sendEmail($userEmailID, $subject, $bodyMsg);
                            }
                        }else{
                            if($userEmailID!=''){
                                $sentUmail =UIElements::sendAttachmentEmail($userEmailID, $subject, $bodyMsg, $fileattachArr);
                            }
                        }
                        $placementmailData['placementid']=$insertplacementID;
                        $placementmailData['lender_id']=$lenderID;
                        $placementmailData['mail_subject']=$subject;
                        $placementmailData['mail_body']=$bodyMsg;
                        $placementmailData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $PlacementMailsave= new PlacementMailsave();
                        $saveMailSave=$PlacementMailsave->save($placementmailData);

                    }

                    echo 7; //Success edit
                }
                //echo 111; exit();
            }else{
                if(!empty($allPost['lenderids'])){
                    $enquiryID=$this->session->get('enquirySessID');

                    $data['charge']=$allPost['product'];
                    //$ltv=$allPost['ltv'];
                    /*foreach($ltvTypeArr as $key => $value)
                    {
                        $ltvperc=explode("-",$value);
                        $ltvstart=$ltvperc[0];
                        $ltvend=substr($ltvperc[1], 0, -1);
                        if($ltv>=$ltvstart && $ltv<=$ltvend)
                        {
                            $ltv_val=$key;
                        }
                    }
                    if(!isset($ltv_val)){$ltv_val=0;}*/
                    //$ltv_val=$ltv;
                    //$data['ltv']=$ltv_val;
                    $data['ltv_val']=$ltv;
                    $data['property_type']=$allPost['property_type'];
                    $data['refurbishment']=$allPost['refurbishment'];
                    $data['leanders_id']=implode(",", $allPost['lenderids']);
                    $data['enquiry_id']=$enquiryID;
                    $data['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    //print_r($data);exit();
                    $placementDB=new Placement();
                    $save=$placementDB->save($data);
                    if($save){
                        $insertplacementID=$placementDB->id;
                        //=======Save track report========
                        $trackData['track_for']='placementAdd';
                        $trackData['userid']=$this->session->get('sessUserID');
                        $trackData['track_save_id']=$placementDB->id;
                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);
                        //=======Save track report End========



                        //===========Mail send start here=========
                        $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
                    $sessionID=$this->session->get('sessUserID');
                    $sessuserDetail=Users::findFirst(array('conditions' => "id='".$sessionID."'"));
                    $mailContent=UIElements::bapCustUniGetMailText(3);

                    foreach($allPost['lenderids'] as $lenderID){
                        $fileattachArr=array();
                        if(isset($_FILES['lenderattach'.$lenderID]) && !empty($_FILES['lenderattach'.$lenderID])){
                            foreach($_FILES['lenderattach'.$lenderID]['name'] as $fileIndex => $filenameString){
                                $filename=uniqid().$filenameString;
                                $tmpName=$_FILES['lenderattach'.$lenderID]['tmp_name'][$fileIndex];
                                move_uploaded_file($tmpName, "uploads/placement/".$filename);
                                array_push($fileattachArr, "uploads/placement/".$filename);
                                $attachData['placementid']=$insertplacementID;
                                $attachData['lenderid']=$lenderID;
                                $attachData['attach_file']=$filename;
                                $attachData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                $PlacementAttachment= new PlacementAttachment();
                                $saveattach=$PlacementAttachment->save($attachData);
                            }

                        }

                         /*$lenderRateDetail=LenderRates::findFirst(array('conditions' => "id='".$lenderRateID."'"));
                        $lenderID=$lenderRateDetail->lender_id;*/
                        $userDetail=Users::findFirst(array('conditions' => "id='".$lenderID."'"));
                        $siteAdmin = Sitesetting::findFirst(array("id=1"));

                       $bodyMsg=$mailContent['body'];
                        $bodyMsg=str_replace('{LenderName}', stripslashes($userDetail->first_name), $bodyMsg);
                        $bodyMsg=str_replace('{AdvisorName}', stripslashes($sessuserDetail->first_name), $bodyMsg);
                        $bodyMsg=str_replace('{AdvisorEmail}', stripslashes($sessuserDetail->email_id), $bodyMsg);

                        if($enquiryDetails['purpose']=='Purchase'){
                            $numbers="<tr>
                                    <td><strong>Purchase Price:</strong>".number_format($enquiryDetails['purchase_price'], 2)."</td>
                                </tr>
                                <tr>
                                    <td><strong>Amount Required:</strong>".number_format($enquiryDetails['amount_required'], 2)."</td>
                                </tr>
                                <tr>
                                    <td><strong>LTV Required:</strong>".$enquiryDetails['ltv_required']."%</td>
                                </tr>
                                <tr>
                                    <td><strong>Term Required:</strong>".$termTypeArr[$enquiryDetails['term_required']]."</td>
                                </tr>

                                <tr>
                                    <td><strong>Servicing:</strong>".$interestServicingOptionArr[$enquiryDetails['servicing']]."</td>
                                </tr>";
                        }else if($enquiryDetails['purpose']=='Refinance'){
                            $numbers="<tr>
                                    <td><strong>Current Lender:</strong>".$enquiryDetails['current_lender']."</td>
                                </tr>
                                
                                <tr>
                                    <td><strong>LTV Required:</strong>".$enquiryDetails['fin_ltv_required']."%</td>
                                </tr>
                                <tr>
                                    <td><strong>Balance of any existing charges:</strong>".number_format($enquiryDetails['balance_of_any_exist_charge'], 2)."</td>
                                </tr>
                                <tr>
                                    <td><strong>Date of Purchase:</strong>".date("d/m/Y", strtotime($enquiryDetails['date_of_purchase']))."</td>
                                </tr>
                                <tr>
                                    <td><strong>Amount Required:</strong>".number_format($enquiryDetails['fin_amount_required'], 2)."</td>
                                </tr>
                                <tr>
                                    <td><strong>Original Purchase Price:</strong>".number_format($enquiryDetails['original_purchase_price'], 2)."</td>
                                </tr>
                                <tr>
                                    <td><strong>Term Required:</strong>".$termTypeArr[$enquiryDetails['fin_term_required']]."</td>
                                </tr>

                                <tr>
                                    <td><strong>Servicing:</strong>".$interestServicingOptionArr[$enquiryDetails['fin_servicing']]."</td>
                                </tr>";
                        }else{
                           $numbers="";
                        }
                        if($enquiryDetails['refurbishment']>1){
                            if($enquiryDetails['build_period']!='0000-00-00'){$buildperiod=date("d/m/Y", strtotime($enquiryDetails['build_period']));}else{$buildperiod="N/A";}
                            $workdetail="<tr>
                                    <td>&nbsp;</td>
                                </tr>
                                <tr>
                                    <td><h3>Work</h3></td>
                                </tr>
                                <tr>
                                    <td><strong>Cost of Works:</strong>".$enquiryDetails['cost_of_work']."</td>
                                </tr>
                                <tr>
                                    <td><strong>Build Period:</strong>".$buildperiod."</td>
                                </tr>
                                <tr>
                                    <td><strong>Scheme Details:</strong>".$enquiryDetails['scheme_detail']."</td>
                                </tr>
                                <tr>
                                    <td><strong>GDV:</strong>".$enquiryDetails['gdv']."</td>
                                </tr>
                                ";
                        }else{
                            $workdetail="";
                        }
                        $companyDetail="";
                        if($enquiryDetails['borrower_type']==2){
                             $companyDetail="<tr>
                                    <td>&nbsp;</td>
                                </tr>
                                <tr>
                                    <td><h3>Company</h3></td>
                                </tr>
                                <tr>
                                    <td><strong>Name of Company:</strong>".$enquiryDetails['name_of_comany']."</td>
                                </tr>
                                <tr>
                                    <td><strong>Number of Directors:</strong>".$enquiryDetails['no_of_director']."</td>
                                </tr>
                                <tr>
                                    <td><strong>Number of Shareholder:</strong>".$enquiryDetails['no_of_shareholder']."</td>
                                </tr>
                                <tr>
                                    <td><strong>Registration Number:</strong>".$enquiryDetails['registration_number']."</td>
                                </tr>
                                
                                ";
                        }
                        if($enquiryDetails['borrower_dob']!='0000-00-00'){$dob=date("d/m/Y", strtotime($enquiryDetails['borrower_dob']));}else{$dob="N/A";}

                        $enquiryDetail=" <table>                                
                                <tr>
                                    <td><strong>Loan Type:</strong>".$loanTypeArr[$enquiryDetails['loan_type']]."</td>
                                </tr>
                                <tr>
                                    <td><strong>Purpose:</strong>".$enquiryDetails['purpose']."</td>
                                </tr>
                                <tr>
                                    <td><strong>Charge:</strong>".$chargeTypeArr[$enquiryDetails['product']]."</td>
                                </tr>
                                <tr>
                                    <td><strong>Property Type:</strong>".$propertyTypeArr[$enquiryDetails['property_type']]."</td>
                                </tr>
                                <tr>
                                    <td><strong>Property Description:</strong>".$enquiryDetails['property_description']."</td>
                                </tr>
                                <tr>
                                    <td><strong>Refurbishment:</strong>".$refurbishmentArr[$enquiryDetails['refurbishment']]."</td>
                                </tr>
                                <tr>
                                    <td>&nbsp;</td>
                                </tr>
                                <tr>
                                    <td><h3>Numbers</h3></td>
                                </tr>".$numbers.$workdetail."
                                <tr>
                                    <td>&nbsp;</td>
                                </tr>
                                <tr>
                                    <td><h3>Borrower</h3></td>
                                </tr>
                                <tr>
                                    <td><strong>Borrower Type:</strong>".$applicantTypeArr[$enquiryDetails['borrower_type']]."</td>
                                </tr>
                                ".$companyDetail."
                                <tr>
                                    <td>&nbsp;</td>
                                </tr>
                                <tr>
                                    <td><h3>Borrower Detail</h3></td>
                                </tr>
                                <tr>
                                    <td><strong>First Name:</strong>".$enquiryDetails['first_name']."</td>
                                </tr>
                                 <tr>
                                    <td><strong>Surname:</strong>".$enquiryDetails['last_name']."</td>
                                </tr>
                                 <tr>
                                    <td><strong>Date of Birth:</strong>".$dob."</td>
                                </tr>
                                <tr>
                                    <td><strong>Address:</strong>".stripslashes($enquiryDetails['borrower_address'])."</td>
                                </tr>
                                <tr>
                                    <td><strong>Telephone:</strong>".stripslashes($enquiryDetails['borrower_tel'])."</td>
                                </tr>
                                <tr>
                                    <td><strong>Mobile:</strong>".stripslashes($enquiryDetails['borrower_mob'])."</td>
                                </tr>
                                <tr>
                                    <td><strong>Email:</strong>".stripslashes($enquiryDetails['borrower_email'])."</td>
                                </tr>
                                <tr>
                                    <td><strong>Number of Borrowers:</strong>".stripslashes($enquiryDetails['no_of_borrower'])."</td>
                                </tr>
                                <tr>
                                    <td><strong>Postcode:</strong>".stripslashes($enquiryDetails['postcode'])."</td>
                                </tr>
                                <tr>
                                    <td><strong>Time at Address:</strong>".stripslashes($enquiryDetails['time_at_address'])."</td>
                                </tr>
                                 <tr>
                                    <td><strong>Status(Homeowner):</strong>".stripslashes($enquiryDetails['borrower_status'])."</td>
                                </tr>
                                 <tr>
                                    <td><strong>Credit Profile:</strong>".stripslashes($enquiryDetails['credit_profile'])."</td>
                                </tr>
                                <tr>
                                    <td><strong>Income:</strong>".stripslashes($enquiryDetails['income'])."</td>
                                </tr>
                            </table>";
                        $bodyMsg=str_replace('{EnquiryDetail}', $enquiryDetail, $bodyMsg);
                        $subject=$mailContent['subject'];
                         $bodyMsg=UIElements::replaceEnquiryEmailMessage($enquiryID,$bodyMsg);
                        $subject=UIElements::replaceEnquiryEmailMessage($enquiryID,$subject);

                        $userEmailID="";

                        if(strpos($userDetail->email_id,"gov.")!==false){

                        }else if(strpos($userDetail->email_id,"police.")!==false){

                        }else if(strpos($userDetail->email_id,"nhs.")!==false){

                        }else if(strpos($userDetail->email_id,"sch.")!==false){

                        }else if(strpos($userDetail->email_id,"ac.")!==false){
                        }else{
                            $userEmailID=$userDetail->email_id;
                        }
                        if(empty($fileattachArr)){
                            if($userEmailID!=''){
                                $sentUmail =UIElements::sendEmail($userEmailID, $subject, $bodyMsg);
                            }
                        }else{
                            if($userEmailID!=''){
                                $sentUmail =UIElements::sendAttachmentEmail($userEmailID, $subject, $bodyMsg, $fileattachArr);
                            }
                        }
                        $placementmailData['placementid']=$insertplacementID;
                        $placementmailData['lender_id']=$lenderID;
                        $placementmailData['mail_subject']=$subject;
                        $placementmailData['mail_body']=$bodyMsg;
                        $placementmailData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $PlacementMailsave= new PlacementMailsave();
                        $saveMailSave=$PlacementMailsave->save($placementmailData);
                        //Mail send end here=====================
                    }



                    }

                    echo 1;
                }
            }

        }
        exit();
    }
    public function enquirysuccessAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if(!$this->session->has('enquirySessID')){
            return $response->redirect("dashboard/leadadd");
        }
        if(!$this->session->has('all_cla_data')){
            return $response->redirect("dashboard/quickquote");
        }
        $this->session->remove('enquirySessID');
        $this->session->remove('all_cla_data');

    }
/**
* Lead Detail Action To Manage HZA lead detail Page
* Action Name: leaddetailAction
* Author By: Chittaranjan Sahoo
* Created Date: 25-06-2018
**/
    public function leaddetailAction($id=''){
        $response = new \Phalcon\Http\Response();
        if($id==''){
            return $response->redirect("dashboard/leads");
        }
        $leadDetail=Enquiry::findFirst(array('conditions' => "id='".$id."'"));
        if($leadDetail->not_proceeding==1){
            $this->dispatcher->forward(array(
                'controller' => 'error',
                'action' => 'index'
            ));
        }
        $this->view->setVar('leadDetail', $leadDetail);
        if($this->request->isPost()){
            $allpost=$this->request->getPost();
            $allpost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
           if($allpost['start_date']!=''){

                //$allpost['start_date']=date("Y-m-d", strtotime($allpost['start_date']));
                $date = DateTime::createFromFormat('d/m/Y', $allpost['start_date']);
                $allpost['start_date']=$date->format('Y-m-d');
                //echo $allpost['start_date'];exit();
            }
            if($allpost['due_date']!=''){
                //$allpost['due_date']=date("Y-m-d", strtotime($allpost['due_date']));
                $date = DateTime::createFromFormat('d/m/Y', $allpost['due_date']);
                $allpost['due_date']=$date->format('Y-m-d');
            }
            if($allpost['reminder_date']!=''){
                //$allpost['reminder_date']=date("Y-m-d H:i:s", strtotime($allpost['reminder_date']));
                $datetime = DateTime::createFromFormat('d/m/Y H:i:s', $allpost['reminder_date']);
                $allpost['reminder_date']=$datetime->format('Y-m-d H:i:s');
                //echo $allpost['reminder_date'];exit();
            }
            if($allpost['completed_percent']==100){
               $allpost['completed_status']=1;
            }
            $assignArr=$allpost['advisor_ids'];
            $allpost['advisor_ids']=implode(",", $allpost['advisor_ids']);
            $allpost['posted_by']=$this->session->get('sessUserID');
            $taskDb=new Task();
            $save=$taskDb->save($allpost);
            if($save){
                $taskID=$taskDb->id;
                //=========Note Save============
                if(!empty($allpost['note_text'])){
                    foreach($allpost['note_text'] as $noteIndex => $noteText){
                        $noteData['note_text']=$noteText;
                        $noteData['note_title']=$allpost['note_title'][$noteIndex];
                        $filearr=$_FILES['note_attachments']['name'][$noteIndex];
                        //echo "<pre>";print_r($filearr);exit();
                        $finalFileArr=array();
                        if(!empty($filearr))
                        {
                            $baseLocation="uploads/tasknotes/";
                            foreach($filearr as $index => $file)
                            {
                                //$file=$filearr[$i];//echo $file->getKey();
                                $filename=uniqid().$file;
                                move_uploaded_file($_FILES['note_attachments']['tmp_name'][$noteIndex][$index], $baseLocation.$filename);
                                array_push($finalFileArr, $filename);

                            }
                        }
                        if(!empty($finalFileArr)){
                            $noteData['note_attachments']=implode(":::", $finalFileArr);
                        }
                        $sessionID=$this->session->get('sessUserID');
                        $noteData['user_id']=$sessionID;
                        $noteData['task_id']=$taskID;
                        $noteData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $notesDb= new TaskNotes();
                        $saveNote=$notesDb->save($noteData);
                    }
                }
                //=========Note Save end==========
                //=======Assign Save feature============
                if(count($assignArr)>0){

                    $notificationData['notification_by'] = $this->session->get('sessUserID');
                   $notificationData['notification_of'] = 'task';
                   $notificationData['notification_id'] = $taskID;

                    foreach($assignArr as $userid){
                        $notificationData['notification_on'] = date("Y-m-d");
                        $notificationData['notification_to'] = $userid;
                        $notificationDb = new Notification();
                        $save = $notificationDb->save($notificationData);

                        //==========Mail Functionality start here=======
                        $mailContentDetails=MailTemplate::find(array('conditions' => "id=20", 'limit' => 1));
                        if(!empty($mailContentDetails) && count($mailContentDetails)>0){
                            $mailContentDetail=$mailContentDetails[0];
                            $mailSubject=$mailContentDetail->subject;
                            $mailContent=$mailContentDetail->mail_content;

                            $mailContent=UIElements::replaceTaskEmailMessage($taskID, $userid, $mailContent);
                            $mailSubject=UIElements::replaceTaskEmailMessage($taskID, $userid, $mailSubject);

                            $advisorDetail=Users::findFirst(array('conditions' => "id='".$userid."'", 'limit' => 1));

                            //echo $mailContent;exit();

                            if($advisorDetail->email_id){
                                $advEmailID="";
                                if(strpos($advisorDetail->email_id,"gov.")!==false){

                                }else if(strpos($advisorDetail->email_id,"police.")!==false){

                                }else if(strpos($advisorDetail->email_id,"nhs.")!==false){

                                }else if(strpos($advisorDetail->email_id,"sch.")!==false){

                                }else if(strpos($advisorDetail->email_id,"ac.")!==false){
                                }else{
                                    $advEmailID=$advisorDetail->email_id;
                                }
                                if($advEmailID!=''){
                                    $sendmail=UIElements::sendEmail($advEmailID,$mailSubject,$mailContent);
                                }
                            }
                            //============Send mail save==========
                            $sendPost['task_id']=$taskID;
                            $sendPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $sendPost['to_user']=$userid;
                            $sendPost['mail_subject']=$mailSubject;
                            $sendPost['mail_content']=$mailContent;
                            $sendPost['mail_from']=1;

                            $sendMailDb= new TaskSendMail();
                            $saveSendMail=$sendMailDb->save($sendPost);
                            //============End mail save============

                        }
                        //==========Mail Functionality End here=========
                    }

                }
                //========End assign save feature===========
                $this->flashSession->success("Task Submitted Successfully.");
                return $response->redirect("dashboard/leaddetail/".$id);
            }else{
                $this->flashSession->error("Task Submitting Failed.");
            }
        }
    }

    /**
* Enquiry Detail Action To Manage HZA enquiry detail Page
* Action Name: enquirydetailAction
* Author By: Chittaranjan Sahoo
* Created Date: 05-11-2019
**/
    public function enquirydetailAction($id=''){
        //echo date("Y-m-d H:i:s", strtotime("+60 minutes")); exit();
        $response = new \Phalcon\Http\Response();
        if($id==''){
            return $response->redirect("dashboard/enquiry");
        }
        $leadDetail=Enquiry::findFirst(array('conditions' => "id='".$id."'"));
        // echo "<pre>"; print_r($leadDetail->toArray());die;
        /*if($leadDetail->not_proceeding==1){
            $this->dispatcher->forward(array(
                'controller' => 'error',
                'action' => 'index'
            ));
        }*/
        /*if($leadDetail->is_completed==1){
            $this->dispatcher->forward(array(
                'controller' => 'error',
                'action' => 'index'
            ));
        }*/
        /*if($leadDetail->in_progress==1){
            $this->dispatcher->forward(array(
                'controller' => 'error',
                'action' => 'index'
            ));
        }*/
        $this->view->setVar('leadDetail', $leadDetail);
        if($this->request->isPost()){
            $allpost=$this->request->getPost();
            $allpost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            if($allpost['start_date']!=''){
                //$allpost['start_date']=date("Y-m-d", strtotime($allpost['start_date']));
                $date = DateTime::createFromFormat('d/m/Y', $allpost['start_date']);
                $allpost['start_date']=$date->format('Y-m-d');
                //echo $allpost['start_date'];exit();
            }
            if($allpost['due_date']!=''){
                //$allpost['due_date']=date("Y-m-d", strtotime($allpost['due_date']));
                $date = DateTime::createFromFormat('d/m/Y', $allpost['due_date']);
                $allpost['due_date']=$date->format('Y-m-d');
            }
            if($allpost['reminder_date']!=''){
                //$allpost['reminder_date']=date("Y-m-d H:i:s", strtotime($allpost['reminder_date']));
                $datetime = DateTime::createFromFormat('d/m/Y H:i:s', $allpost['reminder_date']);
                $allpost['reminder_date']=$datetime->format('Y-m-d H:i:s');
                //echo $allpost['reminder_date'];exit();
            }
            if($allpost['completed_percent']==100){
               $allpost['completed_status']=1;
            }
            $assignArr=$allpost['advisor_ids'];
            $allpost['advisor_ids']=implode(",", $allpost['advisor_ids']);
            $allpost['posted_by']=$this->session->get('sessUserID');
            $taskDb=new Task();
            $save=$taskDb->save($allpost);
            if($save){
                $taskID=$taskDb->id;
                //=========Note Save============
                if(!empty($allpost['note_text'])){
                    foreach($allpost['note_text'] as $noteIndex => $noteText){
                        $noteData['note_text']=$noteText;
                        $noteData['note_title']=$allpost['note_title'][$noteIndex];
                        $filearr=$_FILES['note_attachments']['name'][$noteIndex];
                        //echo "<pre>";print_r($filearr);exit();
                        $finalFileArr=array();
                        if(!empty($filearr))
                        {
                            $baseLocation="uploads/tasknotes/";
                            foreach($filearr as $index => $file)
                            {
                                //$file=$filearr[$i];//echo $file->getKey();
                                $filename=uniqid().$file;
                                move_uploaded_file($_FILES['note_attachments']['tmp_name'][$noteIndex][$index], $baseLocation.$filename);
                                array_push($finalFileArr, $filename);

                            }
                        }
                        if(!empty($finalFileArr)){
                            $noteData['note_attachments']=implode(":::", $finalFileArr);
                        }
                        $sessionID=$this->session->get('sessUserID');
                        $noteData['user_id']=$sessionID;
                        $noteData['task_id']=$taskID;
                        $noteData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $notesDb= new TaskNotes();
                        $saveNote=$notesDb->save($noteData);
                    }
                }
                //=========Note Save end==========
                //=======Assign Save feature============
                if(count($assignArr)>0){

                    $notificationData['notification_by'] = $this->session->get('sessUserID');
                    $notificationData['notification_of'] = 'task';
                    $notificationData['notification_id'] = $taskID;

                    foreach($assignArr as $userid){
                        $notificationData['notification_on'] = date("Y-m-d");
                        $notificationData['notification_to'] = $userid;
                        $notificationDb = new Notification();
                        $save = $notificationDb->save($notificationData);

                        //==========Mail Functionality start here=======
                        $mailContentDetails=MailTemplate::find(array('conditions' => "id=20", 'limit' => 1));
                        if(!empty($mailContentDetails) && count($mailContentDetails)>0){
                            $mailContentDetail=$mailContentDetails[0];
                            $mailSubject=$mailContentDetail->subject;
                            $mailContent=$mailContentDetail->mail_content;

                            $mailContent=UIElements::replaceTaskEmailMessage($taskID, $userid, $mailContent);
                            $mailSubject=UIElements::replaceTaskEmailMessage($taskID, $userid, $mailSubject);

                            $advisorDetail=Users::findFirst(array('conditions' => "id='".$userid."'", 'limit' => 1));

                            //echo $mailContent;exit();

                            if($advisorDetail->email_id){
                                $advEmailID="";
                                if(strpos($advisorDetail->email_id,"gov.")!==false){

                                }else if(strpos($advisorDetail->email_id,"police.")!==false){

                                }else if(strpos($advisorDetail->email_id,"nhs.")!==false){

                                }else if(strpos($advisorDetail->email_id,"sch.")!==false){

                                }else if(strpos($advisorDetail->email_id,"ac.")!==false){
                                }else{
                                    $advEmailID=$advisorDetail->email_id;
                                }
                                if($advEmailID!=''){
                                    $sendmail=UIElements::sendEmail($advEmailID,$mailSubject,$mailContent);
                                }
                            }
                            //============Send mail save==========
                            $sendPost['task_id']=$taskID;
                            $sendPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $sendPost['to_user']=$userid;
                            $sendPost['mail_subject']=$mailSubject;
                            $sendPost['mail_content']=$mailContent;
                            $sendPost['mail_from']=1;

                            $sendMailDb= new TaskSendMail();
                            $saveSendMail=$sendMailDb->save($sendPost);
                            //============End mail save============

                        }
                        //==========Mail Functionality End here=========
                    }

                }
                //========End assign save feature===========
                $this->flashSession->success("Task Submitted Successfully.");
                return $response->redirect("dashboard/enquirydetail/".$id);
            }else{
                $this->flashSession->error("Task Submitting Failed.");
            }
        }

        $url = 'https://rest.textmagic.com/api/v2/history?limit=1000';
         //$url = 'https://rest.textmagic.com/api/v2/lists/1670917/contacts';
        //Your username.
        $username = TEXTMAGICUNAME;
        //Your password.
        $password = TEXTMAGICKEY;
        //Initiate cURL.
        $ch = curl_init($url);
        //Specify the username and password using the CURLOPT_USERPWD option.
        curl_setopt($ch, CURLOPT_USERPWD, $username . ":" . $password);
        //Tell cURL to return the output as a string instead
        //of dumping it to the browser.
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        /*curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "PUT");
        curl_setopt($ch, CURLOPT_POSTFIELDS,http_build_query($data));*/
        //Execute the cURL request.
        $response = curl_exec($ch);

        $smsResults=json_decode($response, true);
        $this->view->setVar('smsResults', $smsResults);
        //echo "<pre>"; print_r($smsResults);exit();
    }
    public function enquirydetailnewAction($id=''){
        //echo date("Y-m-d H:i:s", strtotime("+60 minutes")); exit();
        $response = new \Phalcon\Http\Response();
        if($id==''){
            return $response->redirect("dashboard/enquiry");
        }
        $leadDetail=Enquiry::findFirst(array('conditions' => "id='".$id."'"));
        /*if($leadDetail->not_proceeding==1){
            $this->dispatcher->forward(array(
                'controller' => 'error',
                'action' => 'index'
            ));
        }*/
        /*if($leadDetail->is_completed==1){
            $this->dispatcher->forward(array(
                'controller' => 'error',
                'action' => 'index'
            ));
        }*/
        /*if($leadDetail->in_progress==1){
            $this->dispatcher->forward(array(
                'controller' => 'error',
                'action' => 'index'
            ));
        }*/
        $this->view->setVar('leadDetail', $leadDetail);
        if($this->request->isPost()){
            $allpost=$this->request->getPost();
            $allpost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            if($allpost['start_date']!=''){
                //$allpost['start_date']=date("Y-m-d", strtotime($allpost['start_date']));
                $date = DateTime::createFromFormat('d/m/Y', $allpost['start_date']);
                $allpost['start_date']=$date->format('Y-m-d');
                //echo $allpost['start_date'];exit();
            }
            if($allpost['due_date']!=''){
                //$allpost['due_date']=date("Y-m-d", strtotime($allpost['due_date']));
                $date = DateTime::createFromFormat('d/m/Y', $allpost['due_date']);
                $allpost['due_date']=$date->format('Y-m-d');
            }
            if($allpost['reminder_date']!=''){
                //$allpost['reminder_date']=date("Y-m-d H:i:s", strtotime($allpost['reminder_date']));
                $datetime = DateTime::createFromFormat('d/m/Y H:i:s', $allpost['reminder_date']);
                $allpost['reminder_date']=$datetime->format('Y-m-d H:i:s');
                //echo $allpost['reminder_date'];exit();
            }
            if($allpost['completed_percent']==100){
               $allpost['completed_status']=1;
            }
            $assignArr=$allpost['advisor_ids'];
            $allpost['advisor_ids']=implode(",", $allpost['advisor_ids']);
            $allpost['posted_by']=$this->session->get('sessUserID');
            $taskDb=new Task();
            $save=$taskDb->save($allpost);
            if($save){
                $taskID=$taskDb->id;
                //=========Note Save============
                if(!empty($allpost['note_text'])){
                    foreach($allpost['note_text'] as $noteIndex => $noteText){
                        $noteData['note_text']=$noteText;
                        $noteData['note_title']=$allpost['note_title'][$noteIndex];
                        $filearr=$_FILES['note_attachments']['name'][$noteIndex];
                        //echo "<pre>";print_r($filearr);exit();
                        $finalFileArr=array();
                        if(!empty($filearr))
                        {
                            $baseLocation="uploads/tasknotes/";
                            foreach($filearr as $index => $file)
                            {
                                //$file=$filearr[$i];//echo $file->getKey();
                                $filename=uniqid().$file;
                                move_uploaded_file($_FILES['note_attachments']['tmp_name'][$noteIndex][$index], $baseLocation.$filename);
                                array_push($finalFileArr, $filename);

                            }
                        }
                        if(!empty($finalFileArr)){
                            $noteData['note_attachments']=implode(":::", $finalFileArr);
                        }
                        $sessionID=$this->session->get('sessUserID');
                        $noteData['user_id']=$sessionID;
                        $noteData['task_id']=$taskID;
                        $noteData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $notesDb= new TaskNotes();
                        $saveNote=$notesDb->save($noteData);
                    }
                }
                //=========Note Save end==========
                //=======Assign Save feature============
                if(count($assignArr)>0){

                    $notificationData['notification_by'] = $this->session->get('sessUserID');
                    $notificationData['notification_of'] = 'task';
                    $notificationData['notification_id'] = $taskID;

                    foreach($assignArr as $userid){
                        $notificationData['notification_on'] = date("Y-m-d");
                        $notificationData['notification_to'] = $userid;
                        $notificationDb = new Notification();
                        $save = $notificationDb->save($notificationData);

                        //==========Mail Functionality start here=======
                        $mailContentDetails=MailTemplate::find(array('conditions' => "id=20", 'limit' => 1));
                        if(!empty($mailContentDetails) && count($mailContentDetails)>0){
                            $mailContentDetail=$mailContentDetails[0];
                            $mailSubject=$mailContentDetail->subject;
                            $mailContent=$mailContentDetail->mail_content;

                            $mailContent=UIElements::replaceTaskEmailMessage($taskID, $userid, $mailContent);
                            $mailSubject=UIElements::replaceTaskEmailMessage($taskID, $userid, $mailSubject);

                            $advisorDetail=Users::findFirst(array('conditions' => "id='".$userid."'", 'limit' => 1));

                            //echo $mailContent;exit();

                            if($advisorDetail->email_id){
                                $advEmailID="";
                                if(strpos($advisorDetail->email_id,"gov.")!==false){

                                }else if(strpos($advisorDetail->email_id,"police.")!==false){

                                }else if(strpos($advisorDetail->email_id,"nhs.")!==false){

                                }else if(strpos($advisorDetail->email_id,"sch.")!==false){

                                }else if(strpos($advisorDetail->email_id,"ac.")!==false){
                                }else{
                                    $advEmailID=$advisorDetail->email_id;
                                }
                                if($advEmailID!=''){
                                    $sendmail=UIElements::sendEmail($advEmailID,$mailSubject,$mailContent);
                                }
                            }
                            //============Send mail save==========
                            $sendPost['task_id']=$taskID;
                            $sendPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $sendPost['to_user']=$userid;
                            $sendPost['mail_subject']=$mailSubject;
                            $sendPost['mail_content']=$mailContent;
                            $sendPost['mail_from']=1;

                            $sendMailDb= new TaskSendMail();
                            $saveSendMail=$sendMailDb->save($sendPost);
                            //============End mail save============

                        }
                        //==========Mail Functionality End here=========
                    }

                }
                //========End assign save feature===========
                $this->flashSession->success("Task Submitted Successfully.");
                return $response->redirect("dashboard/enquirydetail/".$id);
            }else{
                $this->flashSession->error("Task Submitting Failed.");
            }
        }

        $url = 'https://rest.textmagic.com/api/v2/history?limit=1000';
         //$url = 'https://rest.textmagic.com/api/v2/lists/1670917/contacts';
        //Your username.
        $username = TEXTMAGICUNAME;
        //Your password.
        $password = TEXTMAGICKEY;
        //Initiate cURL.
        $ch = curl_init($url);
        //Specify the username and password using the CURLOPT_USERPWD option.
        curl_setopt($ch, CURLOPT_USERPWD, $username . ":" . $password);
        //Tell cURL to return the output as a string instead
        //of dumping it to the browser.
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        /*curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "PUT");
        curl_setopt($ch, CURLOPT_POSTFIELDS,http_build_query($data));*/
        //Execute the cURL request.
        $response = curl_exec($ch);

        $smsResults=json_decode($response, true);
        $this->view->setVar('smsResults', $smsResults);
        //echo "<pre>"; print_r($smsResults);exit();
    }

      /**
    * leaddetail print Action To view print leaddetail
    * Action Name: printapplicationAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 19-07-2018
    **/

    public function prientleaddetailwordocAction($id=''){
        $response = new \Phalcon\Http\Response();
        if($id==''){
            return $response->redirect('/dashboard/enquiry');
        }
        $leadDetail=Enquiry::findFirst(array('conditions' => "id='".$id."'", 'limit' => 1));
        $this->view->setVar('leadDetail', $leadDetail);
        // =================================================
        $htd = new HTML_TO_DOC();
        $htmlContent=$this->view->getRender('dashboard', 'prientleaddetailwordoc', array('leadDetail' => $leadDetail));
        $htd->createDoc($htmlContent, "my-document");
        $htd->createDoc($htmlContent, "my-document", 1);
        // $htd->createDoc("source.html", "my-document");
        $htd->createDoc($htmlContent, "my-document.docx");

        // =================================================
    }


    public function printleaddetailAction($id=''){
        $response = new \Phalcon\Http\Response();
        if($id==''){
            return $response->redirect('/dashboard/enquiry');
        }
        $leadDetail=Enquiry::findFirst(array('conditions' => "id='".$id."'", 'limit' => 1));
        $this->view->setVar('leadDetail', $leadDetail);
    }
    /*public function printleaddetailnewAction($id=''){
        $response = new \Phalcon\Http\Response();
        if($id==''){
            return $response->redirect('/dashboard/enquiry');
        }
        $leadDetail=Enquiry::findFirst(array('conditions' => "id='".$id."'", 'limit' => 1));
        $html = $this->view->render('leaddetailpdf', 'leadDetail');
        echo $html;exit;
        //$this->view->setVar('leadid', $id);
        //$this->view->setVar('leadDetail', $leadDetail);
    }*/
    public function printleaddetailnewAction($id=''){
        $response = new \Phalcon\Http\Response();
        if($id==''){
            return $response->redirect('/dashboard/enquiry');
        }
        $leadDetail=Enquiry::findFirst(array('conditions' => "id='".$id."'", 'limit' => 1));
        $htmlContent=$this->view->getRender('dashboard', 'leaddetailpdf', array('leadDetail' => $leadDetail));
        //$htmlContent=$this->view->getRender('dashboard', 'leaddetailpdf', array('leadDetail' => $leadDetail));

        pdf_create($htmlContent, "uploads/leadpdf/user-".$id."-enquirydetail.pdf", false);
        //$html = $this->view->render('leaddetailpdf', $leadDetail);
        // echo $htmlContent;exit;
        //$this->view->setVar('leadid', $id);
        //$this->view->setVar('leadDetail', $leadDetail);
    }
    public function leaddetailpdfAction($id=''){
        $response = new \Phalcon\Http\Response();
        if($id==''){
            return $response->redirect('/dashboard/enquiry');
        }
       // $leadDetail=Enquiry::findFirst(array('conditions' => "id='".$id."'", 'limit' => 1));

        //$html = $this->view->render('leaddetailpdf', $leadDetail);
        //echo $html;exit;
        //$this->view->setVar('leadid', $id);
        $this->view->setVar('leadDetail', $leadDetail);
    }

      /**
    * old leaddetail print Action To view print old leaddetail
    * Action Name: oldprintleaddetailAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 13-01-2020
    **/
    public function oldprintleaddetailAction($id=''){
        $response = new \Phalcon\Http\Response();
        if($id==''){
            return $response->redirect('/dashboard/enquiry');
        }
        $leadDetail=Enquiry::findFirst(array('conditions' => "id='".$id."'", 'limit' => 1));
        //$this->view->setVar('leadid', $id);
        $this->view->setVar('leadDetail', $leadDetail);
    }
      /**
    * lead comparable print Action To view print lead comparable data
    * Action Name: printapplicationAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 21-05-2019
    **/
    public function printleadcomparableAction($id=''){
        $response = new \Phalcon\Http\Response();
        if($id==''){
            return $response->redirect('/dashboard/enquiry');
        }
        $leadDetail=Enquiry::findFirst(array('conditions' => "id='".$id."'", 'limit' => 1));
        //$this->view->setVar('leadid', $id);
        $this->view->setVar('leadDetail', $leadDetail);
    }

    /**
    * leaddetail sendemail Action To mail leaddetail
    * Action Name: leadsendemailAction
    * Author By: Rajesh Kumar Sahoo
    * Created Date: 17-09-2018
    **/
    public function leadsendemailAction($id=''){
        $response = new \Phalcon\Http\Response();
        if($id==''){
            return $response->redirect('/dashboard/enquiry');
        }
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        $leadDetail  = Enquiry::findFirst(array('conditions' => "id='".$id."'", 'limit' => 1));
        $this->view->setVar('leadDetail', $leadDetail);
        $fromUserID  = $this->session->get('sessUserID');
        $allPost     = $this->request->getPost();

        if($this->request->isPost()){
            $allPost     = $this->request->getPost();
            // var_dump($allPost["follower"]=="");die;
            if($allPost["follower"]=="")
            {
                $composeID             = $allPost['template_id'];
                $mailContentDetail     = ComposeMail::findFirst(array('conditions' => "compose_id='".$composeID."'", 'limit' => 1));
                $appidArr              = array();
                $postval['to_appuser'] = $allPost['to_appuser'];
                if(count($allPost['to_appuser'])){
                    foreach ($allPost['to_appuser'] as $appIndex => $appId) {
                        array_push($toAppdataArr, $appIndex);
                        $appIndexArr   = explode("_", $appIndex);
                        if(count($appIndexArr)>0){
                            $leadAddId = $appIndexArr[0];
                            array_push($appidArr, $leadAddId);
                        }
                    }
                }

                $allPost['status']         = 1;
                $allPost['lead_id']        = $id;
                $allPost['from_user']      = $fromUserID;
                $allPost['created']        = date("Y-m-d H:i:s", strtotime('+1 hour'));
                $allPost['to_user']        = implode(',', $allPost['to_user']);
                $allPost['cc_user']        = implode(',', $allPost['cc_user']);
                $allPost['bcc_user']       = implode(',', $allPost['bcc_user']);
                $allPost['to_appuser']     = implode(',', $appidArr);

                $allPost['to_user_extra']  = addslashes($allPost['to_user_extra']);
                $allPost['cc_user_extra']  = addslashes($allPost['cc_user_extra']);
                $allPost['bcc_user_extra'] = addslashes($allPost['bcc_user_extra']);
                $attachFileArr             = array();
                $pdfAndVideoAttachArr      = array();
                if(isset($_FILES['upload_attach_files'])){
                if(count($_FILES['upload_attach_files']['name'])>0){
                        foreach($_FILES['upload_attach_files']['name'] as $fIndex => $attachFile){
                            $saveFileName  = uniqid().$attachFile;
                            $tmpName       = $_FILES['upload_attach_files']['tmp_name'][$fIndex];
                            move_uploaded_file($tmpName, 'uploads/sendmail/'.$saveFileName);
                            array_push($attachFileArr, $saveFileName);
                            array_push($pdfAndVideoAttachArr, "uploads/sendmail/".$saveFileName);
                        }
                }
                }
                $allPost['attached_files'] = implode(",", $attachFileArr);

                    $siteAdmin         = Sitesetting::findFirst(array("id=1"));
                    $toUserEmailArr    = array();
                    $toAppUserEmailArr = array();
                    $toAppdataArr      = array();
                    $ccUserEmailArr    = array();
                    $bccUserEmailArr   = array();
                    $tooUserIdArr      = array();
                    $tooAppUserIdArr   = array();
                    $cccUserIdArr      = array();
                    $bcccUserIdArr     = array();
                    $tooUsereidArr     = array();
                    $cccUsereidArr     = array();
                    $bcccUsereidArr    = array();

                    if(count($postval['to_appuser'])){
                        foreach ($postval['to_appuser'] as $appIndex => $appId) {
                            array_push($toAppdataArr, $appIndex);
                            $appIndexArr    = explode("_", $appIndex);
                            if(count($appIndexArr)>0){
                                $leadAddId  = $appIndexArr[0];
                                $emailIndex = $appIndexArr[1];
                                $currdate   = date("Y-m-d");
                                $date       = strtotime($currdate);
                                $lastdate   = strtotime("-6 day", $date);
                                $startdate  = date("Y-m-d", $lastdate);

                                $leadApp=LeadApplication::findFirst(array('conditions' => "id=".$leadAddId));
                                $email=$leadApp->pd_email;
                                if($email!=''){
                                    $emailArr=explode(":::", $email);
                                    if(isset($emailArr[$emailIndex])){
                                        if(strpos($emailArr[$emailIndex],"gov.") !== false){
                                        }else if(strpos($emailArr[$emailIndex],"police.") !== false){
                                        }else if(strpos($emailArr[$emailIndex],"nhs.") !== false){
                                        }else if(strpos($emailArr[$emailIndex],"sch.") !== false){
                                        }else if(strpos($emailArr[$emailIndex],"ac.") !== false){
                                        }else{
                                            array_push($toUserEmailArr, $emailArr[$emailIndex]);
                                            array_push($toAppUserEmailArr, $emailArr[$emailIndex]);
                                            array_push($tooAppUserIdArr, $leadAddId);
                                        }
                                    }
                                }
                            }
                        }
                    }

                    if($allPost['to_user'] !=""){
                        $toUserIdArr          = explode(',', $allPost['to_user']);
                        if(!empty($toUserIdArr) && count($toUserIdArr)>0){
                            foreach ($toUserIdArr as $toUserIdDet) {
                                $currdate     = date("Y-m-d");
                                $date         = strtotime($currdate);
                                $lastdate     = strtotime("-6 day", $date);
                                $startdate    = date("Y-m-d", $lastdate);

                                $leadUserDet=Enquiry::findFirst(array('conditions' => "id='".$toUserIdDet."'", 'limit' => 1));
                                if(strpos($leadUserDet->borrower_email,"gov.") !== false){
                                }else if(strpos($leadUserDet->borrower_email,"police.") !== false){
                                }else if(strpos($leadUserDet->borrower_email,"nhs.") !== false){
                                }else if(strpos($leadUserDet->borrower_email,"sch.") !== false){
                                }else if(strpos($leadUserDet->borrower_email,"ac.") !== false){
                                }else{
                                    array_push($toUserEmailArr, $leadUserDet->borrower_email);
                                    array_push($tooUserIdArr, $toUserIdDet);
                                }
                            }
                        }
                    }
                    if($allPost['to_user_extra'] !=""){
                    $toUserEmailExtraArr= explode(',', $allPost['to_user_extra']);
                    if(!empty($toUserEmailExtraArr) && count($toUserEmailExtraArr)>0){
                            foreach ($toUserEmailExtraArr as $toUserEmailExtra) {
                                $currdate    = date("Y-m-d");
                                $date        = strtotime($currdate);
                                $lastdate    = strtotime("-6 day", $date);
                                $startdate   = date("Y-m-d", $lastdate);

                                if(strpos($toUserEmailExtra,"gov.") !== false){
                                }else if(strpos($toUserEmailExtra,"police.") !== false){
                                }else if(strpos($toUserEmailExtra,"nhs.") !== false){
                                }else if(strpos($toUserEmailExtra,"sch.") !== false){
                                }else if(strpos($toUserEmailExtra,"ac.") !== false){
                                }else{
                                    array_push($toUserEmailArr, $toUserEmailExtra);
                                    array_push($tooUsereidArr, $toUserEmailExtra);
                                }
                            }
                        }
                    }

                    if($allPost['cc_user'] !=""){
                        $ccUserIdArr        = explode(',', $allPost['cc_user']);
                        if(!empty($ccUserIdArr) && count($ccUserIdArr)>0){
                            foreach ($ccUserIdArr as $ccUserIdDet) {

                                $currdate    = date("Y-m-d");
                                $date        = strtotime($currdate);
                                $lastdate    = strtotime("-6 day", $date);
                                $startdate   = date("Y-m-d", $lastdate);

                                $leadUserDet = Enquiry::findFirst(array('conditions' => "id='".$ccUserIdDet."'", 'limit' => 1));
                                if(strpos($leadUserDet->borrower_email,"gov.") !== false){
                                }else if(strpos($leadUserDet->borrower_email,"police.") !== false){
                                }else if(strpos($leadUserDet->borrower_email,"nhs.") !== false){
                                }else if(strpos($leadUserDet->borrower_email,"sch.") !== false){
                                }else if(strpos($leadUserDet->borrower_email,"ac.") !== false){
                                }else{
                                    array_push($ccUserEmailArr, $leadUserDet->borrower_email);
                                    array_push($cccUserIdArr, $ccUserIdDet);
                                }
                            }
                        }
                    }

                    if($allPost['cc_user_extra'] !=""){
                    $ccUserEmailExtraArr= explode(',', $allPost['cc_user_extra']);
                    if(!empty($ccUserEmailExtraArr) && count($ccUserEmailExtraArr)>0){
                            foreach ($ccUserEmailExtraArr as $ccUserEmailExtra) {
                                $currdate      = date("Y-m-d");
                                $date          = strtotime($currdate);
                                $lastdate      = strtotime("-6 day", $date);
                                $startdate     = date("Y-m-d", $lastdate);

                                if(strpos($ccUserEmailExtra,"gov.")!==false){
                                }else if(strpos($ccUserEmailExtra,"police.")!==false){
                                }else if(strpos($ccUserEmailExtra,"nhs.")!==false){
                                }else if(strpos($ccUserEmailExtra,"sch.")!==false){
                                }else if(strpos($ccUserEmailExtra,"ac.")!==false){
                                }else{
                                    array_push($ccUserEmailArr, $ccUserEmailExtra);
                                    array_push($cccUsereidArr, $ccUserEmailExtra);
                                }
                            }
                        }
                    }

                    if($allPost['bcc_user'] !=""){
                        $bccUserIdArr = explode(',', $allPost['bcc_user']);
                        if(!empty($bccUserIdArr) && count($bccUserIdArr)>0){
                            foreach ($bccUserIdArr as $bccUserIdDet) {
                                $currdate   = date("Y-m-d");
                                $date       = strtotime($currdate);
                                $lastdate   = strtotime("-6 day", $date);
                                $startdate  = date("Y-m-d", $lastdate);

                                $leadUserDet=Enquiry::findFirst(array('conditions' => "id='".$bccUserIdDet."'", 'limit' => 1));
                                if(strpos($leadUserDet->borrower_email,"gov.")!==false){
                                }else if(strpos($leadUserDet->borrower_email,"police.")!==false){
                                }else if(strpos($leadUserDet->borrower_email,"nhs.")!==false){
                                }else if(strpos($leadUserDet->borrower_email,"sch.")!==false){
                                }else if(strpos($leadUserDet->borrower_email,"ac.")!==false){

                                }else{
                                    array_push($bccUserEmailArr, $leadUserDet->borrower_email);
                                    array_push($bcccUserIdArr, $bccUserIdDet);
                                }
                            }
                        }
                    }

                    if($allPost['bcc_user_extra'] !=""){
                    $bccUserEmailExtraArr= explode(',', $allPost['bcc_user_extra']);
                    if(!empty($bccUserEmailExtraArr) && count($bccUserEmailExtraArr)>0){
                        foreach ($bccUserEmailExtraArr as $bccUserEmailExtra) {
                            $currdate   = date("Y-m-d");
                            $date       = strtotime($currdate);
                            $lastdate   = strtotime("-6 day", $date);
                            $startdate  = date("Y-m-d", $lastdate);

                            $chkSendMailID=SendEmail::findAll("select * from send_email where find_in_set('".$bccUserEmailExtra."', bcc_user_extra) and template_id='".$allPost['template_id']."' limit 1");
                            if(strpos($bccUserEmailExtra,"gov.")!==false){
                            }else if(strpos($bccUserEmailExtra,"police.")!==false){
                            }else if(strpos($bccUserEmailExtra,"nhs.")!==false){
                            }else if(strpos($bccUserEmailExtra,"sch.")!==false){
                            }else if(strpos($bccUserEmailExtra,"ac.")!==false){
                            }else{
                                array_push($bccUserEmailArr, $bccUserEmailExtra);
                                array_push($bcccUsereidArr, $bccUserEmailExtra);
                            }
                        }
                    }
                }

                $advisorDetail=Users::findFirst(array('conditions' => "id='".$fromUserID."'"));
                $subject       = $allPost['mail_subject'];
                if($composeID  == 65){
                    $sendMsg   = file_get_contents(BASEURL."frontfile/email_template/cbilending.html");
                    $sendMsg   = str_replace("£","&pound;",$sendMsg);
                    $sendMsg   = preg_replace('/[\x00-\x1F\x80-\xFF]/', '', $sendMsg);
                    $sendMsg   = str_replace("Â","",$sendMsg);
                    $sendMsg   = str_replace("ï»¿","",$sendMsg);
                }else{
                    $sendMsg  = $allPost['mail_content'];

                }
                $subject           = $allPost['mail_subject'];
                $automaticStoplink = '<a href="'.BASEURL.'unsubscribemail/?actionof=abi&type=automatic&sid='.base64_encode($id).'">Automatic Stop</a>';
                $sendMsg           = str_replace('{automaticStoplink}', $automaticStoplink, $sendMsg);
                $subject           = str_replace('{automaticStoplink}', $automaticStoplink, $subject);
                $internalLink      = '<a href="'.BASEURL.'barberabi/detail/'.$id.'">Internal</a>';
                $sendMsg           = str_replace('{internalLink}', $internalLink, $sendMsg);
                $subject           = str_replace('{internalLink}', $internalLink, $subject);

                $sendMsg = UIElements::replaceEnquiryEmailMessage($id,$sendMsg);
                $subject = UIElements::replaceEnquiryEmailMessage($id,$subject);

                $sessionID                 = rand(10, 1000000);
                $trackData['session_id']   = $sessionID;
                $trackData['send_from']    = 'Lead';
                $trackData['sending_type'] = 'SendMail';
                $trackData['advisor_id']   = $this->session->get('sessUserID');

                if(count($toUserEmailArr)>0){
                    foreach($toUserEmailArr as $toUserEmailSing){

                        $unsubscribeLink   =  '<a href="'.BASEURL.'unsubscribemail/?actionof=abi&type=unsubscribe&sid='.base64_encode($mytouserIdArr[$toIndex]).'&emailid='.$toUserEmailSing.'">Unsubscribe</a>';
                        if(strpos($sendMsg,'>Unsubscribe<')>-1){
                            if(strpos($mailContent,'{unsubscribeLink}')>-1){
                                $mailContent = str_replace('{unsubscribeLink}', $unsubscribeLink, $mailContent);
                                $subject     = str_replace('{unsubscribeLink}', $unsubscribeLink, $subject);
                            }else{
                                $mailContent.= $unsubscribeLink;
                            }
                            $sendMsg         = $mailContent;
                        }else{
                            if(strpos($sendMsg,'{unsubscribeLink}')>-1){
                                $sendMsg     = str_replace('{unsubscribeLink}', $unsubscribeLink, $sendMsg);
                                $subject     = str_replace('{unsubscribeLink}', $unsubscribeLink, $subject);
                            }else{
                                $sendMsg.=$unsubscribeLink;
                            }
                        }

                        $randomid= rand(10, 1000);
                        $sendMsg.='<img src="https://www.google-analytics.com/collect?v=1&tid=UA-810265-7&cid='.$randomid.'&aip=1&t=event&ec=email&ea=open&dp=%2Femail%2Fleadsendmail&dt=Lead%20Send%20Mail:'.$toUserEmailSing.'">';

                        $sentUmail = UIFront::sendEmailMultiple(array($toUserEmailSing),$ccUserEmailArr,$bccUserEmailArr, $subject, $sendMsg,$advisorDetail->email_id, $advisorDetail->email_id, $advisorDetail->first_name." ".$advisorDetail->last_name, $pdfAndVideoAttachArr,1);

                        if($sentUmail){
                            $trackData['send_user_id_type'] = 'EMAIL';
                            $trackData['user_id']           = $toUserEmailSing;
                            $trackData['status']            = 'SUCCESS';
                            $trackData['error_reason']      = '';
                        }else{
                            $trackData['send_user_id_type'] = 'EMAIL';
                            $trackData['user_id']           = $toUserEmailSing;
                            $trackData['status']            = 'FAILED';
                            $trackData['error_reason']      = 'FailDelivery';
                        }
                        $trackData['track_on']   = date("Y-m-d H:i:s", strtotime('+1 hour'));
                        $trackMailReport         = NEW TrackMailReport();
                        $savetrack               = $trackMailReport->save($trackData);
                    }
                }

                $allPost['to_user']         = implode(",", $tooUserIdArr);
                $allPost['to_appuser']      = implode(",", $toAppUserEmailArr);
                $allPost['cc_user']         = implode(",", $cccUserIdArr);
                $allPost['bcc_user']        = implode(",", $bcccUserIdArr);
                $allPost['to_user_extra']   = implode(",", $tooUsereidArr);
                $allPost['cc_user_extra']   = implode(",", $cccUsereidArr);
                $allPost['bcc_user_extra']  = implode(",", $bcccUsereidArr);
                $sendMailDb                 = new SendEmail();
                $saveSendMail               = $sendMailDb->save($allPost);
                if($saveSendMail){
                    $insertid=$sendMailDb->id;

                //=======Save track report========
                $trackData['track_for']     = 'send_mail';
                $trackData['userid']        = $this->session->get('sessUserID');
                $trackData['track_save_id'] = $insertid;
                $trackData['server_detail'] = $_SERVER['HTTP_USER_AGENT'];
                $trackData['server_ip']     = $_SERVER['REMOTE_ADDR'];
                $trackData['created']       = date("Y-m-d H:i:s", strtotime('+1 hour'));
                $trackClickSave             = new TrackClickSave();
                $saveTrack                  = $trackClickSave->save($trackData);
                $this->flashSession->success("Mail sent successfully.");
                }else{
                    $this->flashSession->error("Message sending failed!");
                }
                //=======Save track report End========
        }else{
            $composeID             = $allPost['template_id'];
            $mailContentDetail     = ComposeMail::findFirst(array('conditions' => "compose_id='".$composeID."'", 'limit' => 1));
            $appidArr              = array();
            $postval['to_appuser'] = $allPost['to_appuser'];
            if(count($allPost['to_appuser'])){
                foreach ($allPost['to_appuser'] as $appIndex => $appId) {
                    array_push($toAppdataArr, $appIndex);
                    $appIndexArr   = explode("_", $appIndex);
                    if(count($appIndexArr)>0){
                        $leadAddId = $appIndexArr[0];
                        array_push($appidArr, $leadAddId);
                    }
                }
            }

            $allPost['status']         = 1;
            $allPost['lead_id']        = $id;
            $allPost['from_user']      = $fromUserID;
            $allPost['created']        = date("Y-m-d H:i:s", strtotime('+1 hour'));
            $allPost['to_user']        = implode(',', $allPost['to_user']);
            $allPost['cc_user']        = implode(',', $allPost['cc_user']);
            $allPost['bcc_user']       = implode(',', $allPost['bcc_user']);
            $allPost['to_appuser']     = implode(',', $appidArr);

            $allPost['to_user_extra']  = addslashes($allPost['to_user_extra']);
            $allPost['cc_user_extra']  = addslashes($allPost['cc_user_extra']);
            $allPost['bcc_user_extra'] = addslashes($allPost['bcc_user_extra']);
            $attachFileArr             = array();
            $pdfAndVideoAttachArr      = array();
            if(isset($_FILES['upload_attach_files'])){
            if(count($_FILES['upload_attach_files']['name'])>0){
                    foreach($_FILES['upload_attach_files']['name'] as $fIndex => $attachFile){
                        $saveFileName  = uniqid().$attachFile;
                        $tmpName       = $_FILES['upload_attach_files']['tmp_name'][$fIndex];
                        move_uploaded_file($tmpName, 'uploads/sendmail/'.$saveFileName);
                        array_push($attachFileArr, $saveFileName);
                        array_push($pdfAndVideoAttachArr, "uploads/sendmail/".$saveFileName);
                    }
            }
            }
            $allPost['attached_files'] = implode(",", $attachFileArr);

                $siteAdmin         = Sitesetting::findFirst(array("id=1"));
                $toUserEmailArr    = array();
                $toAppUserEmailArr = array();
                $toAppdataArr      = array();
                $ccUserEmailArr    = array();
                $bccUserEmailArr   = array();
                $tooUserIdArr      = array();
                $tooAppUserIdArr   = array();
                $cccUserIdArr      = array();
                $bcccUserIdArr     = array();
                $tooUsereidArr     = array();
                $cccUsereidArr     = array();
                $bcccUsereidArr    = array();

                if(count($postval['to_appuser'])){
                    foreach ($postval['to_appuser'] as $appIndex => $appId) {
                        array_push($toAppdataArr, $appIndex);
                        $appIndexArr    = explode("_", $appIndex);
                        if(count($appIndexArr)>0){
                            $leadAddId  = $appIndexArr[0];
                            $emailIndex = $appIndexArr[1];
                            $currdate   = date("Y-m-d");
                            $date       = strtotime($currdate);
                            $lastdate   = strtotime("-6 day", $date);
                            $startdate  = date("Y-m-d", $lastdate);

                            $leadApp=LeadApplication::findFirst(array('conditions' => "id=".$leadAddId));
                            $email=$leadApp->pd_email;
                            if($email!=''){
                                $emailArr=explode(":::", $email);
                                if(isset($emailArr[$emailIndex])){
                                    if(strpos($emailArr[$emailIndex],"gov.") !== false){
                                    }else if(strpos($emailArr[$emailIndex],"police.") !== false){
                                    }else if(strpos($emailArr[$emailIndex],"nhs.") !== false){
                                    }else if(strpos($emailArr[$emailIndex],"sch.") !== false){
                                    }else if(strpos($emailArr[$emailIndex],"ac.") !== false){
                                    }else{
                                        array_push($toUserEmailArr, $emailArr[$emailIndex]);
                                        array_push($toAppUserEmailArr, $emailArr[$emailIndex]);
                                        array_push($tooAppUserIdArr, $leadAddId);
                                    }
                                }
                            }
                        }
                    }
                }

                if($allPost['to_user'] !=""){
                    $toUserIdArr          = explode(',', $allPost['to_user']);
                    if(!empty($toUserIdArr) && count($toUserIdArr)>0){
                        foreach ($toUserIdArr as $toUserIdDet) {
                            $currdate     = date("Y-m-d");
                            $date         = strtotime($currdate);
                            $lastdate     = strtotime("-6 day", $date);
                            $startdate    = date("Y-m-d", $lastdate);

                            $leadUserDet=Enquiry::findFirst(array('conditions' => "id='".$toUserIdDet."'", 'limit' => 1));
                            if(strpos($leadUserDet->borrower_email,"gov.") !== false){
                            }else if(strpos($leadUserDet->borrower_email,"police.") !== false){
                            }else if(strpos($leadUserDet->borrower_email,"nhs.") !== false){
                            }else if(strpos($leadUserDet->borrower_email,"sch.") !== false){
                            }else if(strpos($leadUserDet->borrower_email,"ac.") !== false){
                            }else{
                                array_push($toUserEmailArr, $leadUserDet->borrower_email);
                                array_push($tooUserIdArr, $toUserIdDet);
                            }
                        }
                    }
                }
                if($allPost['to_user_extra'] !=""){
                $toUserEmailExtraArr= explode(',', $allPost['to_user_extra']);
                if(!empty($toUserEmailExtraArr) && count($toUserEmailExtraArr)>0){
                        foreach ($toUserEmailExtraArr as $toUserEmailExtra) {
                            $currdate    = date("Y-m-d");
                            $date        = strtotime($currdate);
                            $lastdate    = strtotime("-6 day", $date);
                            $startdate   = date("Y-m-d", $lastdate);

                            if(strpos($toUserEmailExtra,"gov.") !== false){
                            }else if(strpos($toUserEmailExtra,"police.") !== false){
                            }else if(strpos($toUserEmailExtra,"nhs.") !== false){
                            }else if(strpos($toUserEmailExtra,"sch.") !== false){
                            }else if(strpos($toUserEmailExtra,"ac.") !== false){
                            }else{
                                array_push($toUserEmailArr, $toUserEmailExtra);
                                array_push($tooUsereidArr, $toUserEmailExtra);
                            }
                        }
                    }
                }

                if($allPost['cc_user'] !=""){
                    $ccUserIdArr        = explode(',', $allPost['cc_user']);
                    if(!empty($ccUserIdArr) && count($ccUserIdArr)>0){
                        foreach ($ccUserIdArr as $ccUserIdDet) {

                            $currdate    = date("Y-m-d");
                            $date        = strtotime($currdate);
                            $lastdate    = strtotime("-6 day", $date);
                            $startdate   = date("Y-m-d", $lastdate);

                            $leadUserDet = Enquiry::findFirst(array('conditions' => "id='".$ccUserIdDet."'", 'limit' => 1));
                            if(strpos($leadUserDet->borrower_email,"gov.") !== false){
                            }else if(strpos($leadUserDet->borrower_email,"police.") !== false){
                            }else if(strpos($leadUserDet->borrower_email,"nhs.") !== false){
                            }else if(strpos($leadUserDet->borrower_email,"sch.") !== false){
                            }else if(strpos($leadUserDet->borrower_email,"ac.") !== false){
                            }else{
                                array_push($ccUserEmailArr, $leadUserDet->borrower_email);
                                array_push($cccUserIdArr, $ccUserIdDet);
                            }
                        }
                    }
                }

                if($allPost['cc_user_extra'] !=""){
                $ccUserEmailExtraArr= explode(',', $allPost['cc_user_extra']);
                if(!empty($ccUserEmailExtraArr) && count($ccUserEmailExtraArr)>0){
                        foreach ($ccUserEmailExtraArr as $ccUserEmailExtra) {
                            $currdate      = date("Y-m-d");
                            $date          = strtotime($currdate);
                            $lastdate      = strtotime("-6 day", $date);
                            $startdate     = date("Y-m-d", $lastdate);

                            if(strpos($ccUserEmailExtra,"gov.")!==false){
                            }else if(strpos($ccUserEmailExtra,"police.")!==false){
                            }else if(strpos($ccUserEmailExtra,"nhs.")!==false){
                            }else if(strpos($ccUserEmailExtra,"sch.")!==false){
                            }else if(strpos($ccUserEmailExtra,"ac.")!==false){
                            }else{
                                array_push($ccUserEmailArr, $ccUserEmailExtra);
                                array_push($cccUsereidArr, $ccUserEmailExtra);
                            }
                        }
                    }
                }

                if($allPost['bcc_user'] !=""){
                    $bccUserIdArr = explode(',', $allPost['bcc_user']);
                    if(!empty($bccUserIdArr) && count($bccUserIdArr)>0){
                        foreach ($bccUserIdArr as $bccUserIdDet) {
                            $currdate   = date("Y-m-d");
                            $date       = strtotime($currdate);
                            $lastdate   = strtotime("-6 day", $date);
                            $startdate  = date("Y-m-d", $lastdate);

                            $leadUserDet=Enquiry::findFirst(array('conditions' => "id='".$bccUserIdDet."'", 'limit' => 1));
                            if(strpos($leadUserDet->borrower_email,"gov.")!==false){
                            }else if(strpos($leadUserDet->borrower_email,"police.")!==false){
                            }else if(strpos($leadUserDet->borrower_email,"nhs.")!==false){
                            }else if(strpos($leadUserDet->borrower_email,"sch.")!==false){
                            }else if(strpos($leadUserDet->borrower_email,"ac.")!==false){

                            }else{
                                array_push($bccUserEmailArr, $leadUserDet->borrower_email);
                                array_push($bcccUserIdArr, $bccUserIdDet);
                            }
                        }
                    }
                }

                if($allPost['bcc_user_extra'] !=""){
                $bccUserEmailExtraArr= explode(',', $allPost['bcc_user_extra']);
                if(!empty($bccUserEmailExtraArr) && count($bccUserEmailExtraArr)>0){
                        foreach ($bccUserEmailExtraArr as $bccUserEmailExtra) {
                            $currdate   = date("Y-m-d");
                            $date       = strtotime($currdate);
                            $lastdate   = strtotime("-6 day", $date);
                            $startdate  = date("Y-m-d", $lastdate);

                            $chkSendMailID=SendEmail::findAll("select * from send_email where find_in_set('".$bccUserEmailExtra."', bcc_user_extra) and template_id='".$allPost['template_id']."' limit 1");
                            if(strpos($bccUserEmailExtra,"gov.")!==false){
                            }else if(strpos($bccUserEmailExtra,"police.")!==false){
                            }else if(strpos($bccUserEmailExtra,"nhs.")!==false){
                            }else if(strpos($bccUserEmailExtra,"sch.")!==false){
                            }else if(strpos($bccUserEmailExtra,"ac.")!==false){
                            }else{
                                array_push($bccUserEmailArr, $bccUserEmailExtra);
                                array_push($bcccUsereidArr, $bccUserEmailExtra);
                            }
                        }
                    }
                }

                $advisorDetail = Users::findFirst(array('conditions' => "id='".$fromUserID."'"));
                $allPost['to_user']         = implode(",", $tooUserIdArr);
                $allPost['to_appuser']      = implode(",", $toAppUserEmailArr);
                $allPost['cc_user']         = implode(",", $cccUserIdArr);
                $allPost['bcc_user']        = implode(",", $bcccUserIdArr);
                $allPost['to_user_extra']   = implode(",", $tooUsereidArr);
                $allPost['cc_user_extra']   = implode(",", $cccUsereidArr);
                $allPost['bcc_user_extra']  = implode(",", $bcccUsereidArr);


                $template_id   = array();
                $mail_subject  = array();
                $mail_content  = array();
                array_push($template_id,$allPost['template_schedule_id']);
                array_push($mail_subject,$allPost['schedule_mail_subject']);
                array_push($mail_content,$allPost['schedule_mail_content']);

                $allPost['template_id']    = implode(",",$allPost['template_schedule_id']);
                $allPost['mail_subject']   = implode(",",$allPost['schedule_mail_subject']);
                $allPost['mail_content']   = implode(",",$allPost['schedule_mail_content']);


                $sendMailDb                 = new SendEmail();
                $saveSendMail               = $sendMailDb->save($allPost);
                if($saveSendMail){
                    $insertid=$sendMailDb->id;
                    if(count($allPost['specific_schedule_date'])>0){

                        foreach($allPost['specific_schedule_date'] as $templateIndex => $scheduledDate){


                            $templateData['send_email_id']          = $insertid;
                            $templateData['specific_schedule_date'] = date("Y-m-d H:i:s",strtotime($allPost['specific_schedule_date'][$templateIndex].'+0 hour'));
                            //  date("Y-m-d H:i:s", strtotime('+1 hour'));
                            $templateData['template_schedule_id']   = $allPost['template_schedule_id'][$templateIndex];
                            $templateData['mail_subject']           = $allPost['schedule_mail_subject'][$templateIndex];
                            $templateData['mail_content']           = $allPost['schedule_mail_content'][$templateIndex];
                            $templateData['created']                = date("Y-m-d H:i:s", strtotime('+1 hour'));
                            $scheduleTemplatesDb                   = new LeadScheduleEmail();
                            $saveTemplate                           = $scheduleTemplatesDb->save($templateData);
                        }
                    }
                }
                $this->flashSession->success('Emails scheduled successfully.');
            }
        }
    }

    /**
    * getmailtemplate sendemail Action To get mail content for V2
    * Action Name: leadsendemailAction
    * Author By: Rajesh Kumar Sahoo
    * Created Date: 17-09-2018
    * Modified Author BY: Chittaranjan Sahoo
    * Modified Date: 11-11-2019
    **/
    public function getmailtemplateAction(){
        $response = new \Phalcon\Http\Response();
        $postval=$this->request->getPost();
        $composeID=$postval['template_id'];
        $toUserMainID=$postval['main_lead_id'];
        $leadUserDet=Enquiry::findFirst(array('conditions' => "id='".$toUserMainID."'", 'limit' => 1));
        $mailContentDetail=ComposeMail::findFirst(array('conditions' => "compose_id='".$composeID."'", 'limit' => 1));

        /*$applicantTypeArr=array('1'=>'Personal Name','2'=>'Company');
        $loanTypeArr=array('1'=>'Investment','2'=>'Regulated');
        $propertyTypeArr=array('1'=>'Residential','2'=>'Semi Commercial','3'=>'Commercial','4'=>'Land no planning','Land With Planning');
        $propertyDescArr=array(1=>'Detached house',2=>'Semi detached house',3=>'Terraced house',4=>'Mid terraced house', 5 => 'Flat', 6 => 'Barn Conversion', 7 => 'Maisonette', 8=>'Bungalow',9=>'Linked detached',10=>'Back to back',11=>'Town House', 12 => 'Cottage', 13 => 'Castle', 14 => 'Mansion', 15=>'Mews',16=>'Micropartment',17=>'Duplex apartment',18=>'Studio', 19 => 'Penthouse', 20 => 'Office', 21 => 'light Industrial', 22 =>'Health Care',23 =>'Sports & Entertainment',24 =>'Industrial',25 =>'Hospitality', 26 => 'Speciality', 27 => 'Retail', 28 => 'Land', 29 => 'Shopping Centre');
        $refurbishmentArr=array('1'=>'No','2'=>'Light Refurb  -  no planning permission required','3'=>'Heavy Refurb - planning permission required');
        $termTypeArr=array('1'=>'1 month','2'=>'2 months','3'=>'3 months','4'=>'4 months','5'=>'5 months','6'=>'6 months','7'=>'7 months','8'=>'8 months','9'=>'9 months','10'=>'10 months','11'=>'11 months','12'=>'12 months','13'=>'13 months','14'=>'14 months','15'=>'15 months','16'=>'16 months','17'=>'17 months','18'=>'18 months','19'=>'19 months','20'=>'20 months','21'=>'21 months','22'=>'22 months','23'=>'23 months','24'=>'24 months');
        $adverseTypeArr=array('1'=>'No','2'=>'Minor','3'=>'Light','4'=>'Heavy');
        $chargeTypeArr=array('1'=>'1st charge bridge','2'=>'2nd charge bridge','3'=>'Development loan','4'=>'commercial loan', '5' => 'buy to let', '6' => 'Mezz');
        $valuationTypeArr=array('1'=>'Purchase Price','2'=>'Market Value','3'=>'Open Market Value');
        $interestServicingOptionArr=array('1'=>'Deducted for entire term','2'=>'Serviced Monthly','3'=>'Rolled Up');
        $incomeArr=array('Provable' => 'Provable', 'Not Provable' => 'Not Provable');
        $ltvTypeArr=array('1'=>'0-50%','2'=>'50.01-60%','3'=>'60.01-65%','4'=>'65.01-70%','5'=>'70.01-75%','6'=>'75.01-80.55%','7'=>'80.56-81%');

        $preofferTypeArr=array('1' => "A fully completed Application Form signed by each applicant.", '2' => "2 items of address ID for each applicant, one of which should be a utility bill for the applicant's home address dated within last 3 months", '3' => "A copy of Photo ID (Passport or Driving License) for each applicant.", '4' => "Last 3 months personal bank statements", '5' => "Last 3 months business bank statements.", '6' => "Solicitors details, solicitors need to be registered with the Law Society and have a minimum of 2 partners", '7' => "Payment of the Valuation fee", '8' => "Full A & L statement", '9' => "Sales particulars.", '10' => "Last 12 months mortgage history - if not showing on our credit search");*/
        /*$chargeid=$leadUserDet->product;
        $chargedetail=Charges::findFirst(array('conditions' => "id='".$chargeid."'"));
        $chargeRequired= stripslashes($chargedetail->charge_name);
        $purchase_price="";
        $amount_required="";
        $ltv_required="";
        $term_required="";
        $term_required="";
        $servicing="";

        $current_lender="";
        $balance_of_any_exist_charge="";
        $date_of_purchase="";
        $original_purchase_price="";

        $own_d_property="";
        $total_build_cost="";
        $gdv="";
        $development_type="";
        $what_is_the_exit="";
        $planning_reference_no="";
        $proposed_start_date="";
        $build_term="";
        $sales_period="";
        $amount_outstanding="";
        $amount_spent_to_date_on_build="";
        $did_you_buy_without_planning="";
        $did_you_buy_without_planning="";
        $current_market_value="";
        $is_planning="";

        $cost_of_works="£ ".$leadUserDet->cost_of_work;
        if($leadUserDet->purpose=="Purchase" && $leadUserDet->product!=3){
            $purchase_price="£ ".number_format($leadUserDet->purchase_price, 2);
            $amount_required="£ ".number_format($leadUserDet->amount_required, 2);
            $ltv_required=number_format($leadUserDet->ltv_required, 2)."%";
            $term_required=$termTypeArr[$leadUserDet->term_required];
            $servicing=$interestServicingOptionArr[$leadUserDet->servicing];

        }
        if($leadUserDet->purpose=="Refinance" && $leadUserDet->product!=3){
            $current_lender=$leadUserDet->current_lender;
            $ltv_required=$leadUserDet->fin_ltv_required;
            $balance_of_any_exist_charge=$leadUserDet->balance_of_any_exist_charge;
            $date_of_purchase=date("d-m-Y", strtotime($leadUserDet->date_of_purchase));
            $amount_required="£ ".number_format($leadUserDet->fin_amount_required, 2);
            $original_purchase_price="£ ".number_format($leadUserDet->original_purchase_price, 2);
            $term_required=$termTypeArr[$leadUserDet->fin_term_required];
            $servicing=$interestServicingOptionArr[$leadUserDet->fin_servicing];

        }
        if($leadUserDet->purpose=="Purchase" && $leadUserDet->product==3){
            $own_d_property=$leadUserDet->dev_pur_purchase_price;
            $purchase_price=$leadUserDet->dev_pur_purchase_price;
            $total_build_cost=$leadUserDet->dev_tot_build_cost;
            $gdv=$leadUserDet->dev_purchase_gdv;
            $development_type=$leadUserDet->dev_pur_development_type;
            $what_is_the_exit=$leadUserDet->dev_pur_what_the_exit;
            $planning_reference_no=$leadUserDet->dev_pur_planning_reff_no;
            $proposed_start_date=$leadUserDet->dev_pur_proposed_start_date;
            $build_term=$leadUserDet->dev_pur_build_term;
            $sales_period=$leadUserDet->dev_pur_sales_period;
        }
        if($leadUserDet->purpose=="Refinance" && $leadUserDet->product==3){
            $own_d_property=$leadUserDet->dev_finance_own_d_property;
            $original_purchase_price="£ ".number_format($leadUserDet->dev_fin_ori_purchase_price, 2);
            $current_lender=$leadUserDet->dev_fin_current_lender;
            $amount_outstanding=$leadUserDet->dev_fin_amt_outstanding;
            $amount_spent_to_date_on_build=$leadUserDet->amount_spent_to_date_on_build;
            $did_you_buy_without_planning=$leadUserDet->dev_fin_buy_without_planning;
            $current_market_value=$leadUserDet->dev_fin_cur_market_val;
            $total_build_cost=$leadUserDet->dev_fin_tot_build_cost;
            $gdv=$leadUserDet->dev_fin_gdv;
            $development_type=$devPurDevelopmentTypeArr[$leadUserDet->dev_fin_development_type];
            $what_is_the_exit=$devPurDevelopmentTypeArr[$leadUserDet->dev_fin_what_is_the_exit];
            $is_planning=$devPerIsplanningArr[$leadUserDet->dev_fin_is_planning];
            $planning_reference_no=$leadUserDet->dev_finplanning_ref_no;
            $proposed_start_date=$leadUserDet->dev_fin_proposed_srt_dt;
            $build_term=$termTypeArr[$leadUserDet->dev_fin_build_term];
            $sales_period=$leadUserDet->dev_fin_sales_period;

        }*/
        /*$full_address="";
        $primary_postcode="";
        $tenure="";
        $leasehold_year_remaining="";
        $ex_local="";
        if($leadUserDet->purpose!=''){
            $full_address=$leadUserDet->security_address;
            $primary_postcode=$leadUserDet->security_postcode;
            if($leadUserDet->security_tenure==1){ $tenure= "Freehold"; }else{ $tenure= "Leasehold"; }
            if($leadUserDet->security_tenure==0){$leasehold_year_remaining=$leadUserDet->security_leasehold_remain_year;}
            if($leadUserDet->security_ex_local==1){ $ex_local="Yes";}else{$ex_local="No";}
        }

        $name_of_comany="";
        $no_of_director="";
        $no_of_shareholder="";
        $registration_number="";
        if($leadUserDet->borrower_type==2){
            $name_of_comany=$leadUserDet->name_of_comany;
            $no_of_director=$leadUserDet->no_of_director;
            $no_of_shareholder=$leadUserDet->no_of_shareholder;
            $registration_number=$leadUserDet->registration_number;

        }
        $dob="";
        if($leadUserDet->borrower_dob!='0000-00-00'){ $dob= date("d-m-Y", strtotime($leadUserDet->borrower_dob));}
        $lead_source="";
        $sourceID=$leadUserDet->lead_source;
        if($sourceID!=''){
          $sourceDetail=Leadsource::findFirst(array('conditions' => "id='".$sourceID."'"));
          $lead_source= stripslashes($sourceDetail->source_name);
        }*/


        if(!empty($mailContentDetail) && count($mailContentDetail)>0){
            $mailSubject=$mailContentDetail->compose_subject;
            $mailContent=$mailContentDetail->compose_msg;



            $mailContent=UIElements::replaceEnquiryEmailMessage($leadUserDet->id,$mailContent);
            $mailSubject=UIElements::replaceEnquiryEmailMessage($leadUserDet->id,$mailSubject);

            //$mailContent=str_replace("{name}", stripslashes($leadUserDet->first_name." ".$leadUserDet->last_name),$mailContent);

            echo json_encode(array('mailSubject' => $mailSubject,'mailContent' => $mailContent, 'template_id' => $composeID));
        }
        exit;
    }

    /**
    * getmailtemplate sendemail Action To get mail content
    * Action Name: leadsendemailAction
    * Author By: Rajesh Kumar Sahoo
    * Created Date: 17-09-2018
    **/
    public function getmailtemplateDataAction(){
        $response = new \Phalcon\Http\Response();
        $postval=$this->request->getPost();
        $composeID=$postval['template_id'];
        $toUserMainID=$postval['main_lead_id'];
        $leadUserDet=Datatab::findFirst(array('conditions' => "id='".$toUserMainID."'", 'limit' => 1));

        $mailContentDetail=ComposeMail::findFirst(array('conditions' => "compose_id='".$composeID."'", 'limit' => 1));

        if(!empty($mailContentDetail) && count($mailContentDetail)>0){
            $mailSubject=$mailContentDetail->compose_subject;
            $mailContent=$mailContentDetail->compose_msg;

            $mailContent=UIElements::replaceDataEmailMessage($toUserMainID,$mailContent);

            //$mailContent=str_replace("{name}", stripslashes($leadUserDet->first_name." ".$leadUserDet->last_name),$mailContent);

            echo json_encode(array('mailSubject' => $mailSubject,'mailContent' => $mailContent));
        }
        exit;
    }
    /**
* Lead delete Action To Manage HZA lead delete Page
* Action Name: leaddeleteAction
* Author By: Chittaranjan Sahoo
* Created Date: 26-06-2018
**/
    public function leaddeleteAction($id=''){
        $sucMsg=0;
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            //echo "<pre>";print_r($allPost);exit;

            if(isset($allPost['enqChk']) && !empty($allPost['enqChk'])){
                foreach($allPost['enqChk'] as $singLeadid){
                    $delete=$this->modelsManager->executeQuery("update Enquiry set is_active='3' where id='".$singLeadid."'");
                    if($delete){
                        $sucMsg=1;
                        /*$this->modelsManager->executeQuery("delete from Loanbook where lead_id='".$singLeadid."'");
                        $this->modelsManager->executeQuery("delete from Users where lead_id='".$singLeadid."'");
                        $this->modelsManager->executeQuery("delete from QuickQuote where lead_id='".$singLeadid."'");
                         $this->modelsManager->executeQuery("delete from Placement where enquiry_id='".$singLeadid."'");*/
                    }
                }
            }
        }
        if($sucMsg==1){
            echo 1;
        }else{
            echo 2;
        }
        exit();
    }

    /**
* Lead restore Action To Manage HZA lead delete Page
* Action Name: leadrestoreAction
* Author By: Chittaranjan Sahoo
* Created Date: 16-07-2021
**/
    public function leadrestoreAction($id=''){
        $sucMsg=0;
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

            if(isset($allPost['enqChk']) && !empty($allPost['enqChk'])){
                foreach($allPost['enqChk'] as $singLeadid){
                    $update=$this->modelsManager->executeQuery("update Enquiry set is_active=1 where id='".$singLeadid."'");
                    if($update){
                        $sucMsg=1;
                        /*$this->modelsManager->executeQuery("delete from Loanbook where lead_id='".$singLeadid."'");
                        $this->modelsManager->executeQuery("delete from Users where lead_id='".$singLeadid."'");
                        $this->modelsManager->executeQuery("delete from QuickQuote where lead_id='".$singLeadid."'");
                         $this->modelsManager->executeQuery("delete from Placement where enquiry_id='".$singLeadid."'");*/
                    }
                }
            }
        }
        if($sucMsg==1){
            echo 1;
        }else{
            echo 2;
        }
        exit();
    }

     /**
* Lead delete Action To Manage HZA lead delete Page
* Action Name: enquirytrashdeleteAction
* Author By: Chittaranjan Sahoo
* Created Date: 16-07-2021
**/
    public function enquirytrashdeleteAction($id=''){
        $sucMsg=0;
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

            if(isset($allPost['enqChk']) && !empty($allPost['enqChk'])){
                foreach($allPost['enqChk'] as $singLeadid){
                    $delete=$this->modelsManager->executeQuery("delete from Enquiry where id='".$singLeadid."'");
                    if($delete){
                        $sucMsg=1;
                        /*$this->modelsManager->executeQuery("delete from Loanbook where lead_id='".$singLeadid."'");
                        $this->modelsManager->executeQuery("delete from Users where lead_id='".$singLeadid."'");
                        $this->modelsManager->executeQuery("delete from QuickQuote where lead_id='".$singLeadid."'");
                         $this->modelsManager->executeQuery("delete from Placement where enquiry_id='".$singLeadid."'");*/
                    }
                }
            }
        }
        if($sucMsg==1){
            echo 1;
        }else{
            echo 2;
        }
        exit();
    }


     /**
* Single Lead delete Action To Manage HZA lead delete Page
* Action Name: singledeleteAction
* Author By: Chittaranjan Sahoo
* Created Date: 29-01-2020
**/
    public function singledeleteAction($id=''){
        $response = new \Phalcon\Http\Response();
        $delete=$this->modelsManager->executeQuery("update Enquiry set is_active='3' where id='".$id."'");
        if($delete){
            /*$this->modelsManager->executeQuery("delete from Loanbook where lead_id='".$id."'");
            $this->modelsManager->executeQuery("delete from Users where lead_id='".$id."'");
            $this->modelsManager->executeQuery("delete from QuickQuote where lead_id='".$id."'");
             $this->modelsManager->executeQuery("delete from Placement where enquiry_id='".$id."'");*/
             $this->flashSession->success("Enquiry Deleted successfully.");
        }else{
            $this->flashSession->success("Enquiry Deleting Failed.");
        }
       return $response->redirect("dashboard/enquiry");
       exit();
    }

    /**
* Leads approve Action To Manage HZA Leads approve
* Action Name: leadapproveAction
* Author By: Chittaranjan Sahoo
* Created Date: 26-06-2018
**/
    public function leadapproveAction($id=''){
        $sucMsg=0;
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if(isset($allPost['enqChk']) && !empty($allPost['enqChk'])){
                foreach($allPost['enqChk'] as $singLeadid){

                    if($allPost['taskselect']==1){$status=1;}else if($allPost['taskselect']==3){$status=0;}
                    $update=$this->modelsManager->executeQuery("update Enquiry set approve_lead='".$status."' where id='".$singLeadid."'");
                    if($update){
                         //=======Save track report========
                        if($status==1){
                            $trackData['track_for']='ApprovedLeadYes';
                        }else{
                            $trackData['track_for']='ApprovedLeadNo';
                        }
                        $trackData['userid']=$this->session->get('sessUserID');
                        $trackData['track_save_id']=$singLeadid;
                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);

                        //=======Save track report End========

                        $chkLenderApprove=Enquiry::find(array('conditions' => "id='".$singLeadid."' and approve_lead=1 and approve_by_lender>0", 'limit' => 1));
                        if(count($chkLenderApprove)>0){
                            //========User create===========

                            $userpost['email_id']=$chkLenderApprove[0]->borrower_email;
                            $emailVal = Users::find(array('conditions' => "email_id='".$userpost['email_id']."'", 'limit' => 1));
                            $userpost['is_mail_confirm']=0;
                            $userpost['mail_code']=rand(10, 100000);

                            if(count($emailVal)<=0){
                                $userRes=UIElements::BapCustUniGetList('Users',array(),1, $offset='',$order="id desc");
                                if(count($userRes)>0){
                                    $userid=$userRes[0]->customer_no;
                                    $userArr=explode("CUST",$userid);
                                    //print_r($userArr);exit;
                                    $fistID=$userArr[0];
                                    $secID=intval($userArr[1])+1;
                                    $userpost['customer_no']="CUST".$secID;
                                }
                                else{
                                    $userpost['customer_no']="CUST10001";
                                }
                                $userpost['lead_id']=$singLeadid;
                                $userpost['username']=$userpost['email_id'];
                                $userpost['u_type']=2;
                                $userpost['first_name']=stripslashes($chkLenderApprove[0]->borrower_name);
                                $passVal=rand(10, 1000000);
                                $userpost['password']=base64_encode($passVal);
                                $userpost['contact_no']=$chkLenderApprove[0]->borrower_mob;
                                $userpost['is_active']=1;
                                $userpost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                $userpost['parent_id']=$this->session->get('sessUserID');
                                $userDb=new Users();
                                $save=$userDb->save($userpost);
                                if($save){
                                    $this->modelsManager->executeQuery("update Enquiry set user_id='".$userDb->id."' where id='".$singLeadid."'");

                                    //=======Save track report========
                                    $trackData['track_for']='AddCustomer';
                                    $trackData['userid']=$this->session->get('sessUserID');
                                    $trackData['track_save_id']=$singLeadid;
                                    $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                                    $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                                    $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                    $trackClickSave = new TrackClickSave();
                                    $saveTrack=$trackClickSave->save($trackData);

                                    //=======Save track report End========
                                }
                                //==========Mail code start here=======
                                $activationLink=BASEURL."Index/activate?email=".base64_encode($userpost['email_id'])."&activation_code=".$userpost['mail_code']."&task=1";
                                $siteAdmin = Sitesetting::findFirst(array("id=1"));
                                $mailContent=UIElements::bapCustUniGetMailText(2);
                                $sendMsg=$mailContent['body'];
                                $sendMsg=str_replace('{Name}', ucfirst($userpost['first_name']), $sendMsg);
                                $activeURL="<a href='".$activationLink."'>Click here</a><br>
                                        ".$activationLink."<br>";
                                $sendMsg=str_replace('{AccountActiveURL}', $activeURL, $sendMsg);
                                 $logindetail="<table><tr>
                                    <td><strong>Email Id:</strong>".$userpost['email_id']."</td>
                                </tr>
                                <tr>
                                    <td><strong>Password:</strong>".base64_decode($userpost["password"])."</td>
                                </tr></table>";
                                $sendMsg=str_replace('{LoginDetail}', $logindetail, $sendMsg);

                                //$subject =  stripslashes($siteAdmin->site_title).':  Loan Approved';
                                $subject =  $mailContent['subject'];

                                $sendMsg=UIElements::replaceEnquiryEmailMessage($singLeadid,$sendMsg);
                                $subject=UIElements::replaceEnquiryEmailMessage($singLeadid,$subject);
                                $userEmailID="";
                                if(strpos($userpost['email_id'],"gov.")!==false){

                                }else if(strpos($userpost['email_id'],"police.")!==false){

                                }else if(strpos($userpost['email_id'],"nhs.")!==false){

                                }else if(strpos($userpost['email_id'],"sch.")!==false){

                                }else if(strpos($userpost['email_id'],"ac.")!==false){
                                }else{
                                    $userEmailID=$userpost['email_id'];
                                }
                                if($userEmailID!=''){
                                    $sentUmail =UIElements::sendEmail($userEmailID, $subject, $sendMsg);
                                }

                                //==========Mail code end here=========
                            }else{
                                $update=$this->modelsManager->executeQuery("update Enquiry set user_id='".$emailVal[0]->id."' where id='".$singLeadid."'");
                                $this->modelsManager->executeQuery("update Users set lead_id='".$singLeadid."' where id='".$emailVal[0]->id."'");
                                if($update){
                                    //=======Save track report========
                                    $trackData['track_for']='ApproveCustomer';
                                    $trackData['userid']=$this->session->get('sessUserID');
                                    $trackData['track_save_id']=$singLeadid;
                                    $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                                    $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                                    $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                    $trackClickSave = new TrackClickSave();
                                    $saveTrack=$trackClickSave->save($trackData);

                                    //=======Save track report End========
                                     //==========Mail code start here=======
                                    $siteAdmin = Sitesetting::findFirst(array("id=1"));
                                    $mailContent=UIElements::bapCustUniGetMailText(9);
                                    $sendMsg=$mailContent['body'];
                                    $sendMsg=str_replace('{Name}', ucfirst($emailVal[0]->first_name), $sendMsg);
                                    //$subject =  stripslashes($siteAdmin->site_title).':  Loan Approved';
                                    $subject =  $mailContent['subject'];
                                    $sendMsg=UIElements::replaceEnquiryEmailMessage($singLeadid,$sendMsg);
                                    $subject=UIElements::replaceEnquiryEmailMessage($singLeadid,$subject);
                                    $EmailID="";
                                    if(strpos($emailVal[0]->email_id,"gov.")!==false){

                                    }else if(strpos($emailVal[0]->email_id,"police.")!==false){

                                    }else if(strpos($emailVal[0]->email_id,"nhs.")!==false){

                                    }else if(strpos($emailVal[0]->email_id,"sch.")!==false){

                                    }else if(strpos($emailVal[0]->email_id,"ac.")!==false){
                                    }else{
                                        $EmailID=$emailVal[0]->email_id;
                                    }
                                    if($EmailID!=''){
                                        $sentUmail =UIElements::sendEmail($EmailID, $subject, $sendMsg);
                                    }

                                    //==========Mail code end here=========
                                }
                            }

                            //========End user Create=========
                        }
                        $sucMsg=1;
                    }
                }
            }
        }
        if($sucMsg==1){
            echo 1;
        }else{
            echo 2;
        }
        exit();
    }
    public function emaillenderlistAction(){
        $responseArr=array('response' => 2, 'contentval' => "");
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            //print_r($allPost);exit();
            if(isset($allPost['leadid'])){
                $placements=Placement::find(array('conditions' => "enquiry_id='".$allPost['leadid']."'", 'limit' => 1, 'order' => 'id desc'));
                $leadDetail=Enquiry::findFirst(array('conditions' => "id='".$allPost['leadid']."'"));

                if(count($placements)>0){
                    $lendersIDs=$placements[0]->leanders_id;
                    //echo $lendersIDs;
                    if($lendersIDs!=''){
                        $lendersIDArr=explode(",", $lendersIDs);
                        //print_r($lendersIDArr); exit();
                        if(count($lendersIDArr)>0){
                            $content="<ul>";
                            foreach($lendersIDArr as $index => $lenderGetID){
                                //$rateDetail=LenderRates::findFirst(array('conditions' => "id='".$lenderRateSing."'"));
                                $lenderSing=$lenderGetID;
                                if($leadDetail->approve_by_lender>0){
                                    if($leadDetail->approve_by_lender==$lenderSing){
                                        $select=" checked";
                                    }else{
                                        $select="";
                                    }
                                }else{
                                    $select="";
                                }
                                $userDetail=Users::findFirst(array('conditions' => "id='".$lenderSing."'"));
                                $content.='<li><label for="approvetolender'.$index.'"><input type="radio" name="approvetolender" id="approvetolender'.$index.'" class="leanderinputcls" value="'.$lenderSing.'"'.$select.'>&nbsp;'.stripslashes($userDetail->first_name).'</label></li>';
                            }
                            $content.='<input type="hidden" name="lead_user_id" id="lead_user_id'.$index.'" value="'.$allPost['leadid'].'"><ul>';
                            $responseArr=array('response' => 1, 'contentval' => $content);
                        }
                    }
                }
            }
        }
        echo json_encode($responseArr);
        exit();
    }

    public function manualemaillenderlistAction(){
        $responseArr=array('response' => 2, 'contentval' => "");
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $leadDetail=Enquiry::findFirst(array('conditions' => "id='".$allPost['leadid']."'"));
            //print_r($allPost);exit();
                //$lenders=Lenders::find(array('conditions' => "is_active=1", 'order' => "id asc"));
                $lenders=Users::find(array('conditions' => "u_type=1 and is_active=1", 'order' => "first_name asc"));
                if(count($lenders)>0){
                    $content="<ul>";
                    foreach($lenders as $index => $lender){

                        $lenderSing=$lender->id;
                        if($leadDetail->approve_by_lender>0){
                            if($leadDetail->approve_by_lender==$lenderSing){
                                $select=" checked";
                            }else{
                                $select="";
                            }
                        }else{
                            $select="";
                        }
                        $userDetail=Users::findFirst(array('conditions' => "id='".$lenderSing."'"));
                        $lender=Lenders::findFirst(array('conditions' => "is_active=1 and lender_id='".$lenderSing."'", 'order' => "id asc"));
                        $content.='<li><label for="approvetolender'.$index.'"><input type="radio" name="approvetolender" id="approvetolender'.$index.'" class="leanderinputcls" value="'.$lenderSing.'"'.$select.'>&nbsp;'.stripslashes($userDetail->first_name).'</label></li>';
                    }
                    $content.='<input type="hidden" name="lead_user_id" id="lead_user_id'.$index.'" value="'.$allPost['leadid'].'"><ul>';
                    $responseArr=array('response' => 1, 'contentval' => $content);
                }
        }
        echo json_encode($responseArr);
        exit();
    }
    /**
    * For multi quote calculation
    * Action Name: multiquotecalculationAction
    * Author By: Madhusmita Pratihary
    * Created Date : 11-01-2021
    **/
    public function multiquotecalculationAction($calculateId = NULL){
        $response = new \Phalcon\Http\Response();
        if(UIElements::bapCustUniNewAdvChk()==1){
            return $response->redirect('dashboard');
        }
        if($_SERVER['HTTP_REFERER']!=''){

            if($this->session->has('multiquoteredirect')){
                $sessionredirect=$this->session->get('multiquoteredirect');
            }else{
                $this->session->set('multiquoteredirect', $_SERVER['HTTP_REFERER']);
                $sessionredirect=$this->session->get('multiquoteredirect');
            }

        }
        $lenderLists=Lenders::find(array('conditions' => "is_active=1", 'order' => "id asc"));
        $this->view->setVar('lenderLists', $lenderLists);
        if(isset($calculateId) && $calculateId!=''){
            $getMultiQuoteDetails=MultiQuoteCalculation::findFirst(array('conditions' => "id=".$calculateId));
            $this->view->setVar('getMultiQuoteDetails', $getMultiQuoteDetails);
            $this->view->setVar('calculateId', $calculateId);

        }
        if($this->request->isPost()){
            $postData=$this->request->getPost();
            //$dataAry['lender'] = json_encode($postData['lender']);
            $dataAry['purchase_price'] = json_encode($postData['purchase_price']);
            $dataAry['gross_ltv'] = json_encode($postData['gross_ltv']);
            $dataAry['gross_loan'] = json_encode($postData['gross_loan']);
            $dataAry['rate_per_month'] = json_encode($postData['rate_per_month']);
            $dataAry['rate_per_annum'] = json_encode($postData['rate_per_annum']);
            $dataAry['term'] = json_encode($postData['term']);
            $dataAry['cost_per_month'] = json_encode($postData['cost_per_month']);
            $dataAry['cost_per_term'] = json_encode($postData['cost_per_term']);
            $dataAry['in_percent'] = json_encode($postData['in_percent']);
            $dataAry['in_cal'] = json_encode($postData['in_cal']);
            $dataAry['broker_percent'] = json_encode($postData['broker_percent']);
            $dataAry['broker'] = json_encode($postData['broker']);
            $dataAry['net_loan_serviced'] = json_encode($postData['net_loan_serviced']);
            $dataAry['net_ltv_serviced'] = json_encode($postData['net_ltv_serviced']);
            $dataAry['net_loan_deducted'] = json_encode($postData['net_loan_deducted']);
            $dataAry['net_ltv_deducted'] = json_encode($postData['net_ltv_deducted']);
            $dataAry['exit_fee'] = json_encode($postData['exit_fee']);
            $dataAry['valuation_fee'] = json_encode($postData['valuation_fee']);
            $dataAry['legal_fee'] = json_encode($postData['legal_fee']);
            if(isset($postData['lead_id']) && $postData['lead_id']!=''){
                $dataAry['lead_id'] = $postData['lead_id'];
            }
            if(isset($calculateId) && $calculateId!=''){
                $dataAry['modified'] = date('Y-m-d');
                $dataAry['id'] = $calculateId;
                $dataAry['created'] = $getMultiQuoteDetails->created;

            }else{
                $dataAry['created'] = date('Y-m-d');
            }
            $multiQuoteCalculationObj = new MultiQuoteCalculation();
            if($multiQuoteCalculationObj->save($dataAry)){
                if(isset($calculateId) && $calculateId!=''){
                    $this->flashSession->success('Multi Quote Calculation Updated Successfully.');
                }else{
                    $this->flashSession->success('Multi Quote Calculation Saved Successfully.');
                }

                if($postData['form_enquiry'] && $postData['form_enquiry']!=''){
                    return $response->redirect('dashboard/enquirydetail/'.$postData['lead_id']);
                }else{
                    return $response->redirect($sessionredirect);
                }

            }else{
                $this->flashSession->error('Multi Quote Calculation Saving Failed.');
                return $response->redirect($sessionredirect);
            }
        }
    }
    public function multiquotecalculationlistAction(){
        $response = new \Phalcon\Http\Response();
        if(UIElements::bapCustUniNewAdvChk()==1){
            return $response->redirect('dashboard');
        }
        if($this->session->has('multiquoteredirect')){
            $this->session->remove('multiquoteredirect');
        }
        //===========pagination===========
        $paged=$this->dispatcher->getParam("paged");
        $page = (int) (!isset($paged) ? 1 : $paged);
        $page = ($page == 0 ? 1 : $page);
        $perpage =20;
        $startpoint = ($page * $perpage) - $perpage;

        $totrecord=MultiQuoteCalculation::find(array('order' => 'id desc'));
        $multiQuoteCalculationList=MultiQuoteCalculation::find(array('order' => 'id desc', 'limit' => array($perpage, $startpoint)));

        //================================
        $this->view->setVar('multiQuoteCalculationList', $multiQuoteCalculationList);
        $this->view->setVar('totrecord', count($totrecord));
        $this->view->setVar('perpage', $perpage);
        $this->view->setVar('paged', $paged);
        $this->view->setVar('startpoint', $startpoint);
    }
    public function multiquotecalculationprintAction($calculateId = NULL){
        $response = new \Phalcon\Http\Response();
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            //print_r($allPost);exit();
        }
    }
    public function deletemultiquoteAction($calculateId){
        $response = new \Phalcon\Http\Response();
        if(isset($calculateId) && $calculateId!=''){
            $deleteMultiQuote = $this->modelsManager->executeQuery("delete from MultiQuoteCalculation where id='".$calculateId."'");
            if($deleteMultiQuote){
                $this->flashSession->success('Multi Quote Calculation Deleted Successfully.');
            }else{
                $this->flashSession->success('Multi Quote Calculation Deleteding Failed.');
            }
            if($this->request->get('lead_id') && $this->request->get('lead_id')!=''){
                return $response->redirect('dashboard/enquirydetail/'.$this->request->get('lead_id'));
            }else{
                return $response->redirect('dashboard/multiquotecalculationlist/');
            }
        }
    }
    public function deleteselectedmultiquoteAction(){
        $sucMsg=0;
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if(isset($allPost['multiquoteid']) && !empty($allPost['multiquoteid'])){
                foreach($allPost['multiquoteid'] as $multiquoteid){
                    $delete=$this->modelsManager->executeQuery("delete from MultiQuoteCalculation where id='".$multiquoteid."'");
                    if($delete){
                        $sucMsg=1;
                    }
                }
            }
        }
        if($sucMsg==1){
            echo 1;
        }else{
            echo 2;
        }
        exit();
    }

     /**
* approve lead Action To Manage HZA Leads single record approve
* Action Name: approvecustomerAction
* Author By: Chittaranjan Sahoo
* Created Date: 06-06-2019
**/
    public function approvecustomerAction($id=''){

        $response = new \Phalcon\Http\Response();
        $sucMsg=0;
        if($id!=''){
            $singLeadid=$id;

            $status=1;
            //echo "update Enquiry set approve_lead='".$status."' where id='".$singLeadid."'"; exit();
            $update=$this->modelsManager->executeQuery("update Enquiry set approve_lead='".$status."' where id='".$singLeadid."'");
            if($update){

                 //=======Save track report========
                if($status==1){
                    $trackData['track_for']='ApprovedLeadYes';
                }else{
                    $trackData['track_for']='ApprovedLeadNo';
                }
                $trackData['userid']=$this->session->get('sessUserID');
                $trackData['track_save_id']=$singLeadid;
                $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $trackClickSave = new TrackClickSave();
                $saveTrack=$trackClickSave->save($trackData);

                //=======Save track report End========

                $chkLenderApprove=Enquiry::find(array('conditions' => "id='".$singLeadid."' and approve_lead=1 and approve_by_lender>0", 'limit' => 1));
                if(count($chkLenderApprove)>0){
                    //========User create===========

                    $userpost['email_id']=$chkLenderApprove[0]->borrower_email;
                    $emailVal = Users::find(array('conditions' => "email_id='".$userpost['email_id']."'", 'limit' => 1));
                    $userpost['is_mail_confirm']=0;
                    $userpost['mail_code']=rand(10, 100000);

                    if(count($emailVal)<=0){
                        $userRes=UIElements::BapCustUniGetList('Users',array(),1, $offset='',$order="id desc");
                        if(count($userRes)>0){
                            $userid=$userRes[0]->customer_no;
                            $userArr=explode("CUST",$userid);
                            //print_r($userArr);exit;
                            $fistID=$userArr[0];
                            $secID=intval($userArr[1])+1;
                            $userpost['customer_no']="CUST".$secID;
                        }
                        else{
                            $userpost['customer_no']="CUST10001";
                        }
                        $userpost['lead_id']=$singLeadid;
                        $userpost['username']=$userpost['email_id'];
                        $userpost['u_type']=2;
                        $userpost['first_name']=stripslashes($chkLenderApprove[0]->borrower_name);
                        $passVal=rand(10, 1000000);
                        $userpost['password']=base64_encode($passVal);
                        $userpost['contact_no']=$chkLenderApprove[0]->borrower_mob;
                        $userpost['is_active']=1;
                        $userpost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $userpost['parent_id']=$this->session->get('sessUserID');
                        $userDb=new Users();
                        $save=$userDb->save($userpost);
                        if($save){
                            $this->modelsManager->executeQuery("update Enquiry set user_id='".$userDb->id."' where id='".$singLeadid."'");

                            //=======Save track report========
                            $trackData['track_for']='AddCustomer';
                            $trackData['userid']=$this->session->get('sessUserID');
                            $trackData['track_save_id']=$singLeadid;
                            $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                            $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                            $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $trackClickSave = new TrackClickSave();
                            $saveTrack=$trackClickSave->save($trackData);

                            //=======Save track report End========
                        }
                        //==========Mail code start here=======
                        $activationLink=BASEURL."Index/activate?email=".base64_encode($userpost['email_id'])."&activation_code=".$userpost['mail_code']."&task=1";
                        $siteAdmin = Sitesetting::findFirst(array("id=1"));
                        $mailContent=UIElements::bapCustUniGetMailText(2);
                        $sendMsg=$mailContent['body'];
                        $sendMsg=str_replace('{Name}', ucfirst($userpost['first_name']), $sendMsg);
                        $activeURL="<a href='".$activationLink."'>Click here</a><br>
                                ".$activationLink."<br>";
                        $sendMsg=str_replace('{AccountActiveURL}', $activeURL, $sendMsg);
                         $logindetail="<table><tr>
                            <td><strong>Email Id:</strong>".$userpost['email_id']."</td>
                        </tr>
                        <tr>
                            <td><strong>Password:</strong>".base64_decode($userpost["password"])."</td>
                        </tr></table>";
                        $sendMsg=str_replace('{LoginDetail}', $logindetail, $sendMsg);

                        //$subject =  stripslashes($siteAdmin->site_title).':  Loan Approved';
                        $subject =  $mailContent['subject'];

                        $sendMsg=UIElements::replaceEnquiryEmailMessage($singLeadid,$sendMsg);
                        $subject=UIElements::replaceEnquiryEmailMessage($singLeadid,$subject);
                        $EmailID="";
                        if(strpos($userpost['email_id'],"gov.")!==false){

                        }else if(strpos($userpost['email_id'],"police.")!==false){

                        }else if(strpos($userpost['email_id'],"nhs.")!==false){

                        }else if(strpos($userpost['email_id'],"sch.")!==false){

                        }else if(strpos($userpost['email_id'],"ac.")!==false){
                        }else{
                            $EmailID=$userpost['email_id'];
                        }
                        if($EmailID!=''){

                             $sentUmail =UIElements::sendEmail($EmailID, $subject, $sendMsg);
                        }

                        //==========Mail code end here=========
                    }else{
                        $update=$this->modelsManager->executeQuery("update Enquiry set user_id='".$emailVal[0]->id."' where id='".$singLeadid."'");
                        $this->modelsManager->executeQuery("update Users set lead_id='".$singLeadid."' where id='".$emailVal[0]->id."'");
                        if($update){
                            //=======Save track report========
                            $trackData['track_for']='ApproveCustomer';
                            $trackData['userid']=$this->session->get('sessUserID');
                            $trackData['track_save_id']=$singLeadid;
                            $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                            $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                            $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $trackClickSave = new TrackClickSave();
                            $saveTrack=$trackClickSave->save($trackData);

                            //=======Save track report End========
                             //==========Mail code start here=======
                            $siteAdmin = Sitesetting::findFirst(array("id=1"));
                            $mailContent=UIElements::bapCustUniGetMailText(9);
                            $sendMsg=$mailContent['body'];
                            $sendMsg=str_replace('{Name}', ucfirst($emailVal[0]->first_name), $sendMsg);
                            //$subject =  stripslashes($siteAdmin->site_title).':  Loan Approved';
                            $subject =  $mailContent['subject'];
                            $sendMsg=UIElements::replaceEnquiryEmailMessage($singLeadid,$sendMsg);
                            $subject=UIElements::replaceEnquiryEmailMessage($singLeadid,$subject);
                            $EmailID="";
                            if(strpos($emailVal[0]->email_id,"gov.")!==false){

                            }else if(strpos($emailVal[0]->email_id,"police.")!==false){

                            }else if(strpos($emailVal[0]->email_id,"nhs.")!==false){

                            }else if(strpos($emailVal[0]->email_id,"sch.")!==false){

                            }else if(strpos($emailVal[0]->email_id,"ac.")!==false){
                            }else{
                                $EmailID=$emailVal[0]->email_id;
                            }
                            if($EmailID!=''){


                                 $sentUmail =UIElements::sendEmail($EmailID, $subject, $sendMsg);
                            }

                            //==========Mail code end here=========
                        }
                    }

                    //========End user Create=========
                }
                $sucMsg=1;
            }
        }
        if($sucMsg==1){
            $this->flashSession->success('Approved to customer successfully.');
            return $response->redirect('dashboard/enquirydetail/'.$id);
        }else{
            $this->flashSession->success('Approving Failed.');
            return $response->redirect('dashboard/enquirydetail/'.$id);
        }
        exit();
    }

    public function updateprofileAction(){
        // echo 123;
        // exit;

        $allGet=$this->request->get();

        $response = new \Phalcon\Http\Response();


        //print_r($userDetail->toArray());exit;
        //$userArray=$userDetail->toArray();
        //print_r($userArray);exit;
        $userid=$this->session->get('sessUserID');
        $this->view->setVar('userid', $userid);
        if ($this->request->isPost()) {

                $all_post=$this->request->getPost();
                $all_post["id"]=$userid;

                $userChk=Users::find(array(
                'conditions' => "email_id='".$all_post["email_id"]."' and id!='".$userid."' " ,
                'limit' => 1
                ));
                $userDetail=Users::findFirst(array("conditions" => "id='".$userid."'", "limit" => 1));
            if(count($userChk)>0){
                 $this->flashSession->error('Email Id is Already Exist!!');
            }
            else{
                if($this->request->hasFiles()== true)
                {
                    $baselocation=ROOTPATH.'/uploads/userprofile/';

                    $arrfiles=$this->request->getUploadedFiles();
                    //echo "<pre>";print_r($arrfiles); exit();
                    if(count($arrfiles)>0){
                        foreach($arrfiles as $arrfile){
                            if($arrfile->getError()!=4){
                                $file=$arrfile;
                               // print_r($file);exit();
                                $filename=time().$file->getName();
                                $file->moveTo($baselocation.$filename);

                                // ============ Resize banners Image 1600x650==================
                                //UIElements::BapCustUniResizeImg('banner',$filename,1600,650,'crop',80);
                                if($file->getKey()=='adv_signature'){
                                    if($userDetail->adv_signature!=''){
                                        @unlink($baselocation.$userDetail->adv_signature);
                                    }
                                }
                                if($file->getKey()=='profile_image'){
                                    if($userDetail->profile_image!=''){
                                        @unlink($baselocation.$userDetail->profile_image);
                                    }
                                }
                                $all_post[$file->getKey()]=$filename;

                            }else{
                                if($arrfile->getKey()=='adv_signature'){
                                    $all_post['adv_signature']=$userDetail->adv_signature;
                                }
                                if($arrfile->getKey()=='profile_image'){
                                    $all_post['profile_image']=$userDetail->profile_image;
                                }

                            }
                        }
                    }

                }
                else
                {
                    $all_post['adv_signature']=$userDetail->adv_signature;
                    $all_post['profile_image']=$userDetail->profile_image;
                }
                //$all_post['adv_signature']=$filename;
                $all_post['password']=base64_encode($all_post['password']);

                //$chkQuote=Enquiry::find(array('conditions' => "id='".$allPost['id']."'", 'limit' => 1));
                //echo "<pre>";print_r($chkQuote->toArray());exit;
                    $all_post=array_merge($userDetail->toArray(),$all_post);
                $users=new Users();
               // print_r($all_post);exit;
                $saveUser=$users->save($all_post);
                // print_r($all_post);exit;
                if($saveUser)
                {
                    //=======Save track report========
                    $trackData['track_for']='UpdateProfile';
                    $trackData['userid']=$this->session->get('sessUserID');
                    $trackData['track_save_id']=$userid;
                    $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                    $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                    $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $trackClickSave = new TrackClickSave();
                    $saveTrack=$trackClickSave->save($trackData);
                    //=======Save track report End========
                    $this->flashSession->success('Well done! Profile updated successfully');
                    //return $response->redirect("dashboard/updateprofile");
                }else{
                    $this->flashSession->error('Oh snap! Change a few things up and try submitting again.');
                    //return $response->redirect("dashboard/updateprofile");
                }
            }
        }
        //echo $userid;exit;
        $userDetail=Users::findFirst(array("conditions" => "id='".$userid."'", "limit" => 1))->toArray();
        $this->view->setVar('userDetail', $userDetail);
    }

        public function changepasswordAction(){

        $userid=$this->session->get('sessUserID');

         if($userid!="") {

            $response = new Phalcon\Http\Response();

            if ($this->request->isPost()) {

                $postval=$this->request->getPost();

                $userDetail2=Users::findFirst(array("conditions" => "id='".$userid."'", "limit" => 1))->toArray();

                $this->view->setVar('userDetail2', $userDetail2);

                $currpassword=$userDetail2['password'];

                $usrcurrpwd=addslashes($postval['current_password']);

                $usrnewpwd=addslashes($postval['new_password']);

                $usrcnfpwd=addslashes($postval['confirm_password']);

                if($currpassword==base64_encode($usrcurrpwd)){

                    if($usrnewpwd == $usrcnfpwd){

                        $userPassword=base64_encode($usrcnfpwd);

                        $phql = "UPDATE Users SET password='".$userPassword."'  where id=".$userid."";

                        if($this->modelsManager->executeQuery($phql))

                        {
                            //=======Save track report========
                            $trackData['track_for']='changePassword';
                            $trackData['userid']=$this->session->get('sessUserID');
                            $trackData['track_save_id']=$userid;
                            $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                            $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                            $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $trackClickSave = new TrackClickSave();
                            $saveTrack=$trackClickSave->save($trackData);
                            //=======Save track report End========
                            $this->flashSession->success('Well done! Password changed successfully');

                            //return $response->redirect("dashboard/changepassword");
                        }

                        else

                        {

                            $this->flashSession->error(' Change a few things up and try submitting again.');
                        }

                    }

                    else{

                        $this->flashSession->error('Mismatch in password .');
                    }

                }

                else{

                    $this->flashSession->error('Invalid current password.');
                }
            }

            else

            {
                $userDetail2=Users::findFirst(array("conditions" => "id='".$userid."'", "limit" => 1))->toArray();

                $this->view->setVar('userDetail2', $userDetail2);

            }

        }

         else

        {
            $this->flashSession->error('Something is missing. Please try again.');
        }

    }
    public function profileimgAction(){

        $response = new \Phalcon\Http\Response();
        $userid=$this->session->get('sessUserID');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if($this->request->hasFiles()== true)
            {
                $baselocation=ROOTPATH.'/uploads/userprofile/';

                $arrfile=$this->request->getUploadedFiles();
                if(!empty($arrfile) && $arrfile[0]->getError()!=4){
                    $file=$arrfile[0];
                    $filename=time().$file->getName();
                    $file->moveTo($baselocation.$filename);
                    UIElements::BapCustUniResizeImg('userprofile',$filename,263,263,'crop',80);
                    // ============ Resize banners Image 1600x650==================
                    //UIElements::BapCustUniResizeImg('banner',$filename,1600,650,'crop',80);
                    $userDetail=Users::findFirst(array("conditions" => "id='".$userid."'", "limit" => 1));
                    if($userDetail->profile_image!=''){
                        @unlink($baselocation.$userDetail->profile_image);
                        @unlink($baselocation."263X263_".$userDetail->profile_image);
                    }
                }else{
                    $filename='';
                }
            }
            else
            {
                $filename='';
            }
            if($filename!=''){
                $all_post['profile_image']=$filename;
                //echo "update Users set profile_image='".$filename."' where id='".$userid."'";exit();
                $updateProfileImg=$this->modelsManager->executeQuery("update Users set profile_image='".$filename."' where id='".$userid."'");
                if($updateProfileImg){
                    //=======Save track report========
                    $trackData['track_for']='uploadProfileImg';
                    $trackData['userid']=$this->session->get('sessUserID');
                    $trackData['track_save_id']=$userid;
                    $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                    $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                    $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $trackClickSave = new TrackClickSave();
                    $saveTrack=$trackClickSave->save($trackData);
                    //=======Save track report End========
                    $this->flashSession->success("Profile Image Changed successfully.");
                    return $response->redirect('dashboard/profileimg');
                }else{
                    $this->flashSession->error("Profile Image Changing Failed.");
                }
            }else{
                $this->flashSession->error("choose a image to set as profile Image.");
            }
        }
    }


    public function lenderapprovesubmitAction(){
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $dateUpdate=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            $update=$this->modelsManager->executeQuery("update Enquiry set approve_by_lender='".$allPost['approvetolender']."', approve_lender_date='".$dateUpdate."' where id='".$allPost['lead_user_id']."'");
            if($update){
                //=======Save track report========
                $trackData['track_for']='ApprovedLender';
                $trackData['userid']=$this->session->get('sessUserID');
                $trackData['track_save_id']=$allPost['lead_user_id'];
                $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $trackClickSave = new TrackClickSave();
                $saveTrack=$trackClickSave->save($trackData);

                //=======Save track report End========
                $chkLenderApprove=Enquiry::find(array('conditions' => "id='".$allPost['lead_user_id']."' and approve_lead=1 and approve_by_lender>0", 'limit' => 1));
                if(count($chkLenderApprove)>0){
                    //========User create===========

                    $userpost['email_id']=$chkLenderApprove[0]->borrower_email;
                    $emailVal = Users::find(array('conditions' => "email_id='".$userpost['email_id']."'", 'limit' => 1));
                    $userpost['is_mail_confirm']=0;
                    $userpost['mail_code']=rand(10, 100000);

                    if(count($emailVal)<=0){
                        $userRes=UIElements::BapCustUniGetList('Users',array(),1, $offset='',$order="id desc");
                        if(count($userRes)>0){
                            $userid=$userRes[0]->customer_no;
                            $userArr=explode("CUST",$userid);
                            //print_r($userArr);exit;
                            $fistID=$userArr[0];
                            $secID=intval($userArr[1])+1;
                            $userpost['customer_no']="CUST".$secID;
                        }
                        else{
                            $userpost['customer_no']="CUST10001";
                        }
                        $userpost['username']=$userpost['email_id'];
                        $userpost['lead_id']=$allPost['lead_user_id'];
                        $userpost['u_type']=2;
                        $userpost['first_name']=stripslashes($chkLenderApprove[0]->borrower_name);
                        $passVal=rand(10, 1000000);
                        $userpost['password']=base64_encode($passVal);
                        $userpost['contact_no']=$chkLenderApprove[0]->borrower_mob;
                        $userpost['is_active']=1;
                        $userpost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $userpost['parent_id']=$this->session->get('sessUserID');

                        $userDb=new Users();
                        $save=$userDb->save($userpost);
                        if($save){
                            $this->modelsManager->executeQuery("update Enquiry set user_id='".$userDb->id."' where id='".$allPost['lead_user_id']."'");

                            //=======Save track report========
                            $trackData['track_for']='AddCustomer';
                            $trackData['userid']=$this->session->get('sessUserID');
                            $trackData['track_save_id']=$allPost['lead_user_id'];
                            $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                            $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                            $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $trackClickSave = new TrackClickSave();
                            $saveTrack=$trackClickSave->save($trackData);

                            //=======Save track report End========
                        }

                        //==========Mail code start here=======
                        $activationLink=BASEURL."Index/activate?email=".base64_encode($userpost['email_id'])."&activation_code=".$userpost['mail_code']."&task=1";
                        $siteAdmin = Sitesetting::findFirst(array("id=1"));

                        $mailContent=UIElements::bapCustUniGetMailText(2);
                        $sendMsg=$mailContent['body'];
                        $sendMsg=str_replace('{Name}', ucfirst($userpost['first_name']), $sendMsg);
                        $activeURL="<a href='".$activationLink."'>Click here</a><br>
                                ".$activationLink."<br>";
                        $sendMsg=str_replace('{AccountActiveURL}', $activeURL, $sendMsg);
                        $logindetail="<table><tr>
                                    <td><strong>Email Id:</strong>".$userpost['email_id']."</td>
                                </tr>
                                <tr>
                                    <td><strong>Password:</strong>".base64_decode($userpost["password"])."</td>
                                </tr></table>";
                        $sendMsg=str_replace('{LoginDetail}', $logindetail, $sendMsg);

                        /*$umsg="<table width='100%'  style='line-height:20px; font-size:12px'>
                                <thead>
                                    <th style='height:80px; font-size:24px; background:#'>
                                        <center>Registration Successful by advisor</center>
                                    </th>
                                </thead>
                            </table>
                            <table width='100%'  style='line-height:20px; font-size:12px'>
                                <tr>
                                    <td><h4 style='font-weight:bold;'>Hi ".ucfirst($userpost['first_name']).",</h4></td>
                                </tr>
                                 <tr>
                                <td>Congratulation ! Your loan has been approved by advisor.
                                <br> Click on the given Link or paste the given URL in browser address bar to verify and activate your account. <a href='".$activationLink."'>Click here</a><br>
                                ".$activationLink."<br>
                                Follow the below provided credential to login and see the enquiry detail and fillup the application form</a><br>
                                </td>
                                </tr>
                                <tr>
                                    <td><h4 style='font-weight:bold;'>Your Credential Details.</h4></td>
                                </tr>
                                 <tr>
                                    <td>&nbsp;</td>
                                </tr>
                                <tr>
                                    <td><strong>Email Id:</strong>".$userpost['email_id']."</td>
                                </tr>
                                <tr>
                                    <td><strong>Password:</strong>".base64_decode($userpost["password"])."</td>
                                </tr>
                                <tr>
                                    <td ><strong>Thanking You,</strong></td>
                                </tr>
                                <tr>
                                    <td style='color:#78b454;'>The ".stripslashes($siteAdmin->site_title)." Team</td>
                                </tr>
                            </table>";*/

                        //$subject =  stripslashes($siteAdmin->site_title).':  Loan Approved';
                        $subject =  $mailContent['subject'];

                        $sendMsg=UIElements::replaceEnquiryEmailMessage($allPost['lead_user_id'],$sendMsg);
                        $subject=UIElements::replaceEnquiryEmailMessage($allPost['lead_user_id'],$subject);
                        $EmailID="";
                        if(strpos($userpost['email_id'],"gov.")!==false){

                        }else if(strpos($userpost['email_id'],"police.")!==false){

                        }else if(strpos($userpost['email_id'],"nhs.")!==false){

                        }else if(strpos($userpost['email_id'],"sch.")!==false){

                        }else if(strpos($userpost['email_id'],"ac.")!==false){
                        }else{
                            $EmailID=$userpost['email_id'];
                        }
                        if($EmailID!=''){
                             $sentUmail =UIElements::sendEmail($EmailID, $subject, $sendMsg);
                        }


                        //==========Mail code end here=========
                    }else{
                            $update=$this->modelsManager->executeQuery("update Enquiry set user_id='".$emailVal[0]->id."' where id='".$allPost['lead_user_id']."'");
                            $this->modelsManager->executeQuery("update Users set lead_id='".$allPost['lead_user_id']."' where id='".$emailVal[0]->id."'");
                            if($update){
                                //=======Save track report========
                                $trackData['track_for']='ApproveCustomer';
                                $trackData['userid']=$this->session->get('sessUserID');
                                $trackData['track_save_id']=$allPost['lead_user_id'];
                                $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                                $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                                $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                $trackClickSave = new TrackClickSave();
                                $saveTrack=$trackClickSave->save($trackData);

                                //=======Save track report End========
                                 //==========Mail code start here=======
                                $siteAdmin = Sitesetting::findFirst(array("id=1"));
                                $mailContent=UIElements::bapCustUniGetMailText(9);
                                $sendMsg=$mailContent['body'];
                                $sendMsg=str_replace('{Name}', ucfirst($emailVal[0]->first_name), $sendMsg);
                                //$subject =  stripslashes($siteAdmin->site_title).':  Loan Approved';
                                $subject =  $mailContent['subject'];
                                 $sendMsg=UIElements::replaceEnquiryEmailMessage($allPost['lead_user_id'],$sendMsg);
                                $subject=UIElements::replaceEnquiryEmailMessage($allPost['lead_user_id'],$subject);
                                $EmailID="";
                                if(strpos($emailVal[0]->email_id,"gov.")!==false){

                                }else if(strpos($emailVal[0]->email_id,"police.")!==false){

                                }else if(strpos($emailVal[0]->email_id,"nhs.")!==false){

                                }else if(strpos($emailVal[0]->email_id,"sch.")!==false){

                                }else if(strpos($emailVal[0]->email_id,"ac.")!==false){
                                }else{
                                    $EmailID=$emailVal[0]->email_id;
                                }
                                if($EmailID!=''){
                                     $sentUmail =UIElements::sendEmail($EmailID, $subject, $sendMsg);
                                }

                                //==========Mail code end here=========
                            }
                        }

                    //========End user Create=========
                }
                $responseArr=array('response' => 1, 'contentval' => '');
            }else{
                $responseArr=array('response' => 2, 'contentval' => '');
            }
        }
        echo json_encode($responseArr);
        exit();
    }
    public function leaddelAction($id=''){
        $response = new \Phalcon\Http\Response();
        if($id!=''){
            $delete=$this->modelsManager->executeQuery("delete from Enquiry where id='".$id."'");
            if($delete){
                $this->modelsManager->executeQuery("delete from QuickQuote where lead_id='".$id."'");
                $this->modelsManager->executeQuery("delete from Placement where enquiry_id='".$id."'");
                $this->flashSession->success("Lead Deleted Successfully");
            }else{
                $this->flashSession->success("Deleting Failed");
            }
        }else{
                $this->flashSession->success("Deleting Failed");
        }
        return $response->redirect("dashboard/enquiry");
        exit();
    }
    public function applicationAction($id='', $offerid=''){
        //echo 123;exit;
        $response = new \Phalcon\Http\Response();
        $leadDetail=Enquiry::findFirst(array('conditions' => "id='".$id."'"));
        $this->view->setVar('leadDetail', $leadDetail);
        $loanDetail=QuickQuote::findFirst(array('conditions' => "lead_id='".$id."'"));
        $this->view->setVar('loanDetail', $loanDetail);
        //print_r($loanDetail->toArray());exit;
        $this->view->setVar('id', $id);
        $this->view->setVar('offerid', $offerid);
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $allPost["lead_id"]=$id;
            $allPost["posted_by"]=$this->session->get('sessUserID');
            $allPost["pd_company"]=implode(":::",$allPost["pd_company"]);
            $allPost["pd_fullname"]=implode(":::",$allPost["pd_fullname"]);
            $allPost["pd_fathersname"]=implode(":::",$allPost["pd_fathersname"]);
            $allPost["pd_mothersname"]=implode(":::",$allPost["pd_mothersname"]);
            $allPost["pd_dob"]=implode(":::",$allPost["pd_dob"]);
            $allPost["pd_nin"]=implode(":::",$allPost["pd_nin"]);
            $allPost["pd_nationality"]=implode(":::",$allPost["pd_nationality"]);
            $allPost["pd_residency_country"]=implode(":::",$allPost["pd_residency_country"]);
            $allPost["pd_living_year"]=implode(":::",$allPost["pd_living_year"]);
            $allPost["pd_birth_country"]=implode(":::",$allPost["pd_birth_country"]);
            $allPost["pd_marital_status"]=implode(":::",$allPost["pd_marital_status"]);
            $allPost["pd_residential_status"]=implode(":::",$allPost["pd_residential_status"]);
            $allPost["pd_residential_address"]=implode(":::",$allPost["pd_residential_address"]);
            $allPost["pd_current_address"]=implode(":::",$allPost["pd_current_address"]);
            $allPost["pd_mortage_balance"]=implode(":::",$allPost["pd_mortage_balance"]);
            $allPost["pd_mortage_lender"]=implode(":::",$allPost["pd_mortage_lender"]);
            $allPost["pd_home_number"]=implode(":::",$allPost["pd_home_number"]);
            $allPost["pd_buisness_number"]=implode(":::",$allPost["pd_buisness_number"]);
            $allPost["pd_mobile_number"]=implode(":::",$allPost["pd_mobile_number"]);
            $allPost["pd_email_address"]=implode(":::",$allPost["pd_email_address"]);
            $allPost["pd_investment_outside"]=implode(":::",$allPost["pd_investment_outside"]);
            $allPost["pd_employed"]=implode(":::",$allPost["pd_employed"]);
            $allPost["pd_income_per_anum"]=implode(":::",$allPost["pd_income_per_anum"]);
            //$allPost["mo_company"]=implode(":::",$allPost["mo_company"]);
            $allPost["mo_mortgage_payment"]=implode(":::",$allPost["mo_mortgage_payment"]);
            $allPost["mo_lender_name"]=implode(":::",$allPost["mo_lender_name"]);
            $allPost["mo_other_mortgage_payment"]=implode(":::",$allPost["mo_other_mortgage_payment"]);
            $allPost["mo_bank_loan"]=implode(":::",$allPost["mo_bank_loan"]);
            $allPost["mo_credit_cards"]=implode(":::",$allPost["mo_credit_cards"]);
            $allPost["mo_council_tax"]=implode(":::",$allPost["mo_council_tax"]);
            $allPost["mo_utility_bills"]=implode(":::",$allPost["mo_utility_bills"]);
            $allPost["mo_car_travel"]=implode(":::",$allPost["mo_car_travel"]);
            $allPost["mo_other_regular_expenses"]=implode(":::",$allPost["mo_other_regular_expenses"]);
            //$allPost["al_company"]=implode(":::",$allPost["al_company"]);
            $allPost["al_main_residance"]=implode(":::",$allPost["al_main_residance"]);
            $allPost["al_other_property_value"]=implode(":::",$allPost["al_other_property_value"]);
            $allPost["al_cash_resource"]=implode(":::",$allPost["al_cash_resource"]);
            $allPost["al_stock_share"]=implode(":::",$allPost["al_stock_share"]);
            $allPost["al_other_investment"]=implode(":::",$allPost["al_other_investment"]);
            $allPost["al_other_assets"]=implode(":::",$allPost["al_other_assets"]);
            $allPost["liabilities_mortage_balance"]=implode(":::",$allPost["liabilities_mortage_balance"]);
            $allPost["liabilities_property_mortage"]=implode(":::",$allPost["liabilities_property_mortage"]);
            $allPost["liabilities_balance"]=implode(":::",$allPost["liabilities_balance"]);
            $allPost["liabilities_bank_loans_od"]=implode(":::",$allPost["liabilities_bank_loans_od"]);
            $allPost["liabilities_loans_hp"]=implode(":::",$allPost["liabilities_loans_hp"]);
            $allPost["liabilities_ccstore_card_balance"]=implode(":::",$allPost["liabilities_ccstore_card_balance"]);
            $allPost["liabilities_guarantees"]=implode(":::",$allPost["liabilities_guarantees"]);
            $allPost["liabilities_total"]=implode(":::",$allPost["liabilities_total"]);
            $allPost["pbfh_associate_company"]=implode(":::",$allPost["pbfh_associate_company"]);
            $allPost["pbfh_bankrupt_sequartsed"]=implode(":::",$allPost["pbfh_bankrupt_sequartsed"]);
            $allPost["pbfh_repayment_mortgage_credit"]=implode(":::",$allPost["pbfh_repayment_mortgage_credit"]);
            $allPost["pbfh_ccj"]=implode(":::",$allPost["pbfh_ccj"]);
            $allPost["pbfh_iva"]=implode(":::",$allPost["pbfh_iva"]);
            $allPost["pbfh_is_credit_refused"]=implode(":::",$allPost["pbfh_is_credit_refused"]);
            $allPost["pbfh_is_property_repossessed"]=implode(":::",$allPost["pbfh_is_property_repossessed"]);
            $allPost["pbfh_is_replace_reduced_amount"]=implode(":::",$allPost["pbfh_is_replace_reduced_amount"]);

            //=====Schedule field save======================
            if($allPost["owner_name"]!=''){
                $allPost["owner_name"]=implode(":::",$allPost["owner_name"]);
            }
            if($allPost["full_address"]!=''){
                $allPost["full_address"]=implode(":::",$allPost["full_address"]);
            }
            if($allPost["estimated_current_valuation"]!=''){
                $allPost["estimated_current_valuation"]=implode(":::",$allPost["estimated_current_valuation"]);
            }
            if($allPost["current_monthly_rental"]!=''){
                $allPost["current_monthly_rental"]=implode(":::",$allPost["current_monthly_rental"]);
            }
            if($allPost["tenancy_type"]!=''){
                $allPost["tenancy_type"]=implode(":::",$allPost["tenancy_type"]);
            }
            if($allPost["property_type"]!=''){
                $allPost["property_type"]=implode(":::",$allPost["property_type"]);
            }
            if($allPost["purchase_date"]!=''){
                $allPost["purchase_date"]=implode(":::",$allPost["purchase_date"]);
            }
            if($allPost["original_purchase_price"]!=''){
                $allPost["original_purchase_price"]=implode(":::",$allPost["original_purchase_price"]);
            }
            if($allPost["current_mortage_payment"]!=''){
                $allPost["current_mortage_payment"]=implode(":::",$allPost["current_mortage_payment"]);
            }
            if($allPost["current_mortage_outstanding"]!=''){
                $allPost["current_mortage_outstanding"]=implode(":::",$allPost["current_mortage_outstanding"]);
            }

            if($allPost["lender_name"]!=''){
                $allPost["lender_name"]=implode(":::",$allPost["lender_name"]);
            }
            if(isset($allPost["id"]) && $allPost["created"]==''){
                $allPost["created"]=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            }
            //======Schedule field save end=================

            //echo "<pre>";print_r($allPost);exit;
            if($allPost['save_exit']==0){
                $application=new LeadApplication();
                $saveApplication=$application->save($allPost);

                if($saveApplication)
                {
                    $chkSaveApp=SaveApplication::find(array('conditions' => "lead_id='".$id."'"));
                    if(count($chkSaveApp)>0){
                        $this->modelsManager->executeQuery("delete from SaveApplication where lead_id='".$id."'");
                    }

                    //============Update Modified Enquiry Start=====
                    $modifiedDate=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $phqlEnquiryUpdate="update Enquiry set modified='".$modifiedDate."' where id='".$allPost['lead_id']."'";
                    $updatemodifiedEnquiry=$this->modelsManager->executeQuery($phqlEnquiryUpdate);
                    //============Update Modified Enquiry Start=====
                    //=======Save track report========
                    if(isset($allPost['id'])){
                        $trackData['track_for']='editApplication';
                    }else{
                        $trackData['track_for']='addApplication';
                    }
                    $trackData['userid']=$this->session->get('sessUserID');
                    $trackData['track_save_id']=$application->id;
                    $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                    $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                    $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $trackClickSave = new TrackClickSave();
                    $saveTrack=$trackClickSave->save($trackData);

                    //=======Save track report End========



                    //========Loan Complete functionality=======
                    $chkComplete=PreofferComplete::find(array('conditions' => "lead_id='".$allPost["lead_id"]."' and offer_id='".$offerid."'", 'limit' => 1));
                    if(count($chkComplete)<=0){
                        $offerdata['lead_id']=$allPost["lead_id"];
                        $postedBy=($this->session->get('sessUserType')<=0)?2:1;
                        $offerdata['posted_by']=$postedBy;
                        $offerdata['posted_userid']=$this->session->get('sessUserID');
                        $offerdata['offer_id']=$offerid;
                        $offerdata['created']=date("Y-m-d");
                        $preofferComplete= new PreofferComplete();
                        $save=$preofferComplete->save($offerdata);
                    }

                    $chkloanComplete=UIElements::BapCustUniloanCompleteChk($allPost["lead_id"]);
                    if($chkloanComplete==1){
                        $this->modelsManager->executeQuery("update Enquiry set approved_loan=1 where id='".$allPost["lead_id"]."'");
                    }
                    //==========Loan Complete functionality end========


                    $insertId=$application->id;
                    /*$ownernames=$allPost["owner_name"];
                    for($i=0;$i<count($ownernames);$i++)
                    {
                        $allpost_new=array();
                        $allpost_new["app_id"]= $insertId;
                        $allpost_new["lead_id"]= $id;
                        $allpost_new["owner_name"]=$allPost["owner_name"][$i];
                        $allpost_new["full_address"]=$allPost["full_address"][$i];
                        $allpost_new["estimated_current_valuation"]=$allPost["estimated_current_valuation"][$i];
                        $allpost_new["current_monthly_rental"]=$allPost["current_monthly_rental"][$i];
                        $allpost_new["tenancy_type"]=$allPost["tenancy_type"][$i];
                        $allpost_new["property_type"]=$allPost["property_type"][$i];
                        $allpost_new["purchase_date"]=$allPost["purchase_date"][$i];
                        $allpost_new["original_purchase_price"]=$allPost["original_purchase_price"][$i];
                        $allpost_new["current_mortage_payment"]=$allPost["current_mortage_payment"][$i];
                        $allpost_new["lender_name"]=$allPost["lender_name"][$i];
                        $leadproductapplication=new LeadApplicationProductSchedule();
                        $saveLeadApplication=$leadproductapplication->save($allpost_new);


                    }*/
                    $this->flashSession->success("Application has been saved successfully.");
                    return $response->redirect("dashboard/preoffer/".$id);
                }
                else
                {
                    $this->flashSession->error("Application saving failed.");
                }
            }else{
                //==========Save & exit save feature===========
                $chkSaveApp=SaveApplication::find(array('conditions' => "lead_id='".$id."'"));
                if(count($chkSaveApp)>0){
                    $allPost['id']=$chkSaveApp[0]->id;
                }
                $saveapplication=new SaveApplication();
                $saveApplication=$saveapplication->save($allPost);
                if($saveApplication)
                {
                    //============Update Modified Enquiry Start=====
                    $modifiedDate=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $phqlEnquiryUpdate="update Enquiry set modified='".$modifiedDate."' where id='".$allPost['lead_id']."'";
                    $updatemodifiedEnquiry=$this->modelsManager->executeQuery($phqlEnquiryUpdate);
                    //============Update Modified Enquiry Start=====
                    //=======Save track report========
                    $trackData['track_for']='SaveApplication';
                    $trackData['userid']=$this->session->get('sessUserID');
                    $trackData['track_save_id']=$saveapplication->id;
                    $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                    $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                    $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $trackClickSave = new TrackClickSave();
                    $saveTrack=$trackClickSave->save($trackData);

                    //=======Save track report End========


                    $insertId=$saveapplication->id;

                    $this->flashSession->success("Application inputted data saved successfully.");
                    return $response->redirect("dashboard/preoffer/".$id);
                }
                else
                {
                    $this->flashSession->error("Application inputted data saving failed.");
                }
                //==========Save & exit end feature============
            }
        }

        $applicationDetails=LeadApplication::find(array('conditions' => "lead_id='".$id."'", 'limit' => 1))->toArray();
        if(count($applicationDetails)>0){
            $_POST=$applicationDetails[0];
        }else{
             $applicationDetails=SaveApplication::find(array('conditions' => "lead_id='".$id."'", 'limit' => 1))->toArray();
             if(count($applicationDetails)>0){
                $_POST=$applicationDetails[0];
                unset($_POST['id']);
             }
        }

    }
    public function lendermanagementAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if($this->session->has('lendersourceredirect')){
            $this->session->remove('lendersourceredirect');
        }
        if(UIElements::bapCustUniNewAdvChk()==1){
            return $response->redirect('dashboard');
        }
        $sessionID=$this->session->get('sessUserID');
        $whr=array("Lenders.is_active=1");
        $ord=array();
        $joinArr=array();
        $groupBy="";
        if($this->request->isGet()){
            $allGet=$this->request->get();
            if(isset($allGet['searchTxt']) && $allGet['searchTxt']!=''){
                $srhtxt=$allGet['searchTxt'];
                array_push($whr, "(Users.first_name like '%".$srhtxt."%' or Users.last_name like '%".$srhtxt."%' or CONCAT(Users.first_name, ' ', Users.last_name) like '%".$srhtxt."%' or Lenders.first_name like '%".$srhtxt."%' or Lenders.surname like '%".$srhtxt."%' or CONCAT(Lenders.first_name, ' ', Lenders.surname) like '%".$srhtxt."%' or Users.email_id like '%".$srhtxt."%' or Users.email_id like '%".$srhtxt."%' or Users.customer_no = '".$srhtxt."')");
            }
            if((isset($allGet['products']) && $allGet['products']!='')){
                array_push($whr, "(find_in_set('".$allGet['products']."', Lenders.products))");
            }

             if(isset($allGet['ground_up']) && $allGet['ground_up']!=''){
                 $ground_up=$allGet['ground_up'];
                 array_push($whr, "Lenders.ground_up='".$ground_up."'");
             }

             if(isset($allGet['conversions']) && $allGet['conversions']!=''){
                 $conversions=$allGet['conversions'];
                 array_push($whr, "Lenders.conversions='".$conversions."'");
             }
            /*if((isset($allGet['product']) && $allGet['product']!='') && (isset($allGet['ltv']) && $allGet['ltv']!='')){
                $product=$allGet['product'];
                switch($product){
                    case 1 :
                    array_push($whr, "(ltv_ist_crg_bridge >=".$allGet['ltv'].")");
                    break;
                     case 2 :
                    array_push($whr, "(ltv_semi_ist_chrg_bridge >=".$allGet['ltv'].")");
                    break;
                     case 3 :
                    array_push($whr, "(ltv_comm_ist_charg_bridge >=".$allGet['ltv'].")");
                    break;
                     case 4 :
                    array_push($whr, "(ltv_resi_ist_light_refurb_bridge >=".$allGet['ltv'].")");
                    break;
                     case 5 :
                    array_push($whr, "(ltv_resi_ist_heavy_refurb_bridge >=".$allGet['ltv'].")");
                    break;
                     case 6 :
                    array_push($whr, "(ltv_resi_sec_charge_bridge >=".$allGet['ltv'].")");
                    break;
                     case 7 :
                    array_push($whr, "(ltv_semi_sec_charge_bridge >=".$allGet['ltv'].")");
                    break;
                     case 8 :
                    array_push($whr, "(ltv_comm_sec__charge_bridge >=".$allGet['ltv'].")");
                    break;
                     case 9 :
                    array_push($whr, "(land_with_planning >=".$allGet['ltv'].")");
                    break;
                     case 10 :
                    array_push($whr, "(land_without_planning >=".$allGet['ltv'].")");
                    break;
                     case 11 :
                    array_push($whr, "(ltgdv_development >=".$allGet['ltv'].")");
                    break;
                    case 12 :
                    array_push($whr, "(mezzanine>0 and mezzanine >=".$allGet['ltv'].")");
                    break;
                     case 13 :
                    array_push($whr, "(ltv_btl_mortgage >=".$allGet['ltv'].")");
                    break;
                    case 14 :
                    array_push($whr, "(ltv_btl_semi_commercial >=".$allGet['ltv'].")");
                    break;
                    case 15 :
                    array_push($whr, "(ltv_btl_commercial >=".$allGet['ltv'].")");
                    break;
                    case 16 :
                    array_push($whr, "(bridging_finance>=".$allGet['ltv'].")");
                    break;
                     case 17 :
                    array_push($whr, "(corporate_finance>=".$allGet['ltv'].")");
                    break;
                    case 18 :
                    array_push($whr, "(equity_funding >=".$allGet['ltv'].")");
                    break;
                    case 19 :
                    array_push($whr, "(leasing_asset_finance>=".$allGet['ltv'].")");
                    break;
                    case 20 :
                    array_push($whr, "(mezzanine_growth_debt_finance>=".$allGet['ltv'].")");
                    break;
                    case 21 :
                    array_push($whr, "(trade_finance>=".$allGet['ltv'].")");
                    break;
                    case 22 :
                    array_push($whr, "(turnarround_funding>=".$allGet['ltv'].")");
                    break;
                    default:
                    break;
                }
            }*/
            /*if(isset($allGet['property_type']) && $allGet['property_type']!=''){
                $property_type=$allGet['property_type'];
                array_push($whr, "find_in_set('".$property_type."', Lenders.property_type)");
            }
            if(isset($allGet['refurbishment']) && $allGet['refurbishment']!=''){
                $refurbishment=$allGet['refurbishment'];
                array_push($whr, "find_in_set('".$refurbishment."', Lenders.refurbishment)");
            }*/
            /*if(isset($allGet['status']) && $allGet['status']!=''){
                    $statusval = $allGet['status'];
                     array_push($whr, "(Lenders.status like '%".$statusval."%')");
            }
            if(isset($allGet['loan_size']) && $allGet['loan_size']!=''){
                array_push($whr, "Lenders.max_loan>='".$allGet['loan_size']."' ");
            }*/

            /*echo "<pre>";
            print_r($whr);exit();*/
            /*$ltv=$allGet['ltv'];
            if(isset($allGet['ltv']) && $ltv !=""){
                array_push($whr, "LenderRates.ltv=".$ltv);
                array_push($joinArr, "left join LenderRates on Lenders.lender_id=LenderRates.lender_id");
                $groupBy=" group by LenderRates.lender_id";
            }*/
            array_push($joinArr, "left join Users on Lenders.lender_id=Users.id");
            $ordrqry='Users.first_name asc';
            if(isset($allGet['sorting']) && $allGet['sorting']!=''){
                $orderbyVal=$allGet['sorting'];
                if(isset($allGet['orderby']) && $allGet['orderby']!=''){
                    $orderby=$allGet['orderby'];
                    if($orderbyVal=='first_name'){
                        $ordrqry="Users.".$orderbyVal.' '.$orderby;
                    }elseif($orderbyVal=='regi_bridge'){
                        $ordrqry="Lenders.regi_bridge ".$orderby;
                    }elseif($orderbyVal=='semi_comm_bridge'){
                        $ordrqry="Lenders.semi_comm_bridge ".$orderby;
                    }elseif($orderbyVal=='land_bridge'){
                        $ordrqry="Lenders.land_bridge ".$orderby;
                    }elseif($orderbyVal=='bridge_ltp'){
                        $ordrqry="Lenders.bridge_ltp ".$orderby;
                    }elseif($orderbyVal=='jv_equity'){
                        $ordrqry="Lenders.jv_equity ".$orderby;
                    }elseif($orderbyVal=='min_loan'){
                        $ordrqry="Lenders.min_loan ".$orderby;
                    }elseif($orderbyVal=='max_loan'){
                        $ordrqry="Lenders.max_loan ".$orderby;
                    }elseif($orderbyVal=='in_fee'){
                        $ordrqry="Lenders.in_fee ".$orderby;
                    }elseif($orderbyVal=='exit_fee'){
                        $ordrqry="Lenders.exit_fee ".$orderby;
                    }elseif($orderbyVal=='intermerdiaries'){
                        $ordrqry="Lenders.intermerdiaries ".$orderby;
                    }
                    /*else if($orderbyVal=='contact_no'){
                        $ordrqry="Users.".$orderbyVal.' '.$orderby;
                    }else if($orderbyVal=='email_id'){
                        $ordrqry="Users.".$orderbyVal.' '.$orderby;
                    }else if($orderbyVal=='fname'){
                         $ordrqry="Lenders.first_name ".$orderby;
                    }*/else{
                        $ordrqry="Lenders.".$orderbyVal.' '.$orderby;
                    }
                }
                if($ordrqry!=''){
                    $ordrqry=$ordrqry;
                }else{
                    $ordrqry='Users.first_name asc';
                }
            }else{
                    $ordrqry='Users.first_name asc';
                }
        }
        if(isset($allGet['searchTxt']) && $allGet['searchTxt']!=''){
        }else if(isset($allGet['sorting']) && $allGet['sorting']!=''){
            if($allGet['sorting']=='first_name'){
            }
        }
        $where="";
        $joinString='';
        if(!empty($whr)){
            $where=" where ".implode(" and ", $whr);
        }
        if(!empty($joinArr)){
            $joinString=" ".implode(" ", $joinArr);
        }
        //===========pagination===========
        $paged=$this->dispatcher->getParam("paged");
        $page = (int) (!isset($paged) ? 1 : $paged);
        $page = ($page == 0 ? 1 : $page);
        $perpage =20;
        $startpoint = ($page * $perpage) - $perpage;
       if((isset($allGet['product']) && $allGet['product']!='') && $allGet['ltv']==''){
         $totrecord=array();
           $lenderRes=array();
       }else{
             $totrecord=$this->modelsManager->executeQuery("select Lenders.* from Lenders".$joinString.$where.$groupBy." order by Lenders.id desc")->toArray();
            //echo "select Lenders.* from Lenders".$joinString.$where." order by Lenders.id desc"; exit();
           //if(!$this->request->get('showall')){
            //echo "select Lenders.* from Lenders".$joinString.$where.$groupBy." order by ".$ordrqry." limit ".$startpoint.", ".$perpage; exit();
              //$lenderRes=$this->modelsManager->executeQuery("select Lenders.* from Lenders".$joinString.$where.$groupBy." order by ".$ordrqry." limit ".$startpoint.", ".$perpage)->toArray();
           //}else{
            //echo "select Lenders.* from Lenders".$joinString.$where.$groupBy." order by ".$ordrqry; exit();
                 $lenderRes=$this->modelsManager->executeQuery("select Lenders.* from Lenders".$joinString.$where.$groupBy." order by ".$ordrqry)->toArray();
           //}
       }

       //echo "select Lenders.* from Lenders".$joinString.$where." order by ".$ordrqry; exit();
        //print_r($lenderRes->toArray());exit;
       //echo "select Lenders.* from Lenders".$joinString.$where." order by ".$ordrqry." limit ".$startpoint.", ".$perpage;exit();

        //================================

        //$adminRes=AdminUsers::findByAll()->toArray();
        $this->view->setVar('userDetail', $userDetail);
        $this->view->setVar('lenderRes', $lenderRes);
        $this->view->setVar('totrecord', count($totrecord));
        $this->view->setVar('perpage', $perpage);
        $this->view->setVar('paged', $paged);
        $this->view->setVar('startpoint', $startpoint);
    }
    public function savelenderinformationAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if($this->request->isPost()){
            $allPost = $this->request->getPost();
            foreach ($this->request->getPost('min_loan') as $key => $minloan) {
                $lenderinfoDb = new LenderInformation();
                if($allPost['lender_info_id'][$key]!='' && $allPost['lender_info_id'][$key]>0){
                    $lendrInfoUpdate="update LenderInformation set lender_id='".$allPost['lender_id']."',min_loan='".$minloan."',max_loan='".$allPost['max_loan'][$key]."',residential='".$allPost['residential'][$key]."',semi_commercial='".$allPost['semi_commercial'][$key]."',commercial='".$allPost['commercial'][$key]."',rates_from='".$allPost['rates_from'][$key]."',modified_date='".date('Y-m-d H:i:s')."' where id='".$allPost['lender_info_id'][$key]."'";
                    $updatemodifiedLendrInfo=$this->modelsManager->executeQuery($lendrInfoUpdate);
                }else{
                    $dataAry['min_loan'] = $minloan;
                    $dataAry['lender_id'] = $allPost['lender_id'];
                    $dataAry['max_loan'] = $allPost['max_loan'][$key];
                    $dataAry['residential'] = $allPost['residential'][$key];
                    $dataAry['semi_commercial'] = $allPost['semi_commercial'][$key];
                    $dataAry['commercial'] = $allPost['commercial'][$key];
                    $dataAry['rates_from'] = $allPost['rates_from'][$key];
                    $dataAry['created_date'] = date('Y-m-d H:i:s');
                    $save=$lenderinfoDb->save($dataAry);
                }
            }
            echo 1;
            exit();
        }
    }
    public function deletelenderinfoAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if($this->request->isPost()){
            if($this->request->getPost('lenderinfoid')){
                $deleteLendrInfo = $this->modelsManager->executeQuery("delete from LenderInformation where id='".$this->request->getPost('lenderinfoid')."'");
                if($deleteLendrInfo){
                    echo 1;
                }else{
                    echo 2;
                }
                exit();
            }
        }
    }



    public function addlenderAction(){
        //echo "<pre>";print_r($this->request->getPost());die;
        $response = new \Phalcon\Http\Response();

        if(UIElements::bapCustUniNewAdvChk()==1){
            return $response->redirect('dashboard');
        }
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if($this->request->isPost('add_lender_submit')){
            $allPost=$this->request->getPost();
            $lenderval              = $allPost['lender_id'];

            $LednerIdData           = '';
            if($allPost['lender_id']=='other'){
                $slug               = str_replace(' ', '-', $allPost['lender_name']); // Replaces all spaces with hyphens.
                $slug               = preg_replace('/[^A-Za-z0-9\-]/', '', $slug); // Removes special chars.

                $userData['first_name']      = $allPost['lender_name'];
                $userData['email_id']        = $allPost['email'];
                $userData['contact_no']      = $allPost['contact_no'];
                $userData['is_mail_confirm'] = 1;
                $userData['is_active']       = 1;
                $userData['u_type']          = 1;
                $userData['mail_code']       = rand(10, 100000);
                //$userData['customer_no']   = 1;
                $userData['username']        = addslashes($slug);
                $userChk    = Users::find(array('conditions' => "username='".$userData['username']."'"));
                $emailChk   = Users::find(array('conditions' => "email_id='".$userData['email_id']."'"));
                $lenId = Array();
                if(count($userChk)<=0 && count($emailChk)<=0){
                    $userData['created']  = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $userData['modified'] = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $userRes=UIElements::BapCustUniGetList('Users',array(),1, $offset='',$order="id desc");

                    if(count($userRes)>0){
                        $userid     = $userRes[0]->customer_no;
                        $userArr    = explode("CUST",$userid);
                        $fistID     = $userArr[0];
                        $secID      = intval($userArr[1])+1;
                        $userData['customer_no'] = "CUST".$secID;
                    }
                    else{
                        $userData['customer_no'] = "CUST10001";
                    }
                    $usersDb   = new Users();
                    $saveUser  = $usersDb->save($userData);
                    $idLen     = Array();      //print_r($this->db->getSQLStatement());exit;
                    if($saveUser){
                        $LednerId = $usersDb->id;
                    }
                    array_push($idLen,$LednerId);
                    $lenId['id'] = $idLen;
                }
                $LednerIdData = $lenId['id'];
            }
            if($lenderval =='other'){
                $allPost['lender_id'] = implode(' ',$LednerIdData);
            }
            if($allPost['status'] != ''){
                $allPost['status'] = implode(":::", $allPost['status']);
            }

            $allPost["min_loan"]           = str_replace(",", "", $allPost["min_loan"]);
            $allPost["max_loan"]           = str_replace(",", "", $allPost["max_loan"]);
            $allPost['created']    = date("Y-m-d H:i:s", strtotime("+60 minutes"));
            $allPost['modified']   = date("Y-m-d H:i:s", strtotime("+60 minutes"));
            $allPost['products']   = implode(",", $allPost['products']);
            $allPost               = array_filter($allPost);

            // echo "<pre>"; print_r($allPost); exit();
            $lenderDB   = new Lenders();
            $save       = $lenderDB->save($allPost);
            // var_dump($save);die;
            if($save){
                // var_dump($allPost['is_prefered_lender']==1);die;
                if($allPost['is_prefered_lender']==1){
                    $dataArr    = array();
                    $sessionID  = $this->session->get('sessUserID');

                    $dataArr['adv_id']          = $sessionID;
                    $dataArr["first_name"]      = $allPost['first_name'];
                    $dataArr["surname"]         = $allPost['surname'];
                    $dataArr["lender_name"]     = $allPost['first_name']." ".$allPost['surname'];
                    $dataArr["email_id"]        = $allPost['email'];
                    $dataArr["address"]         = $allPost['lender_address'];
                    $dataArr["phone_no"]        = $allPost['contact_no'];
                    $dataArr["min_loan"]        = $allPost['min_loan'];
                    $dataArr["max_loan"]        = $allPost['max_loan'];
                    $dataArr["lender_id"]       = $allPost['lender_id'];
                    $dataArr['lender_product']  = implode(",", $allPost['products']);
                    $dataArr['regi_bridge']     = $allPost['regi_bridge'];
                    $dataArr['semi_comm_bridge']= $allPost['semi_comm_bridge'];
                    $dataArr['comm_bridge']     = $allPost['comm_bridge'];
                    $dataArr['land_bridge']     = $allPost['land_bridge'];
                    $dataArr['sec_bridge']      = $allPost['sec_bridge'];
                    $dataArr['refurb_bridge']   = $allPost['refurb_bridge'];
                    $dataArr['deve']            = $allPost['deve'];
                    $dataArr['mezz']            = $allPost['mezz'];
                    $dataArr['resi_investiment']      = $allPost['resi_investiment'];
                    $dataArr['semi_comm_investment']  = $allPost['semi_comm_investment'];
                    $dataArr['comm_investiment']      = $allPost['comm_investiment'];

                    // echo "<pre>"; print_r($dataArr);die;
                    $lenderDB    = new PreferLender();
                    $updateUser  = $lenderDB->save($dataArr);
                }
                //=====Lender Rate======
                $lenderDetail    = LenderRateTbl::find(array('conditions' => "lender_id='".$lenderDB->lender_id."'", 'limit' => 1));
                // echo(count($lenderDetail));die;
                $allRatePost     = $this->request->getPost();
                $allRatePost['lender_id']  = $lenderDB->lender_id;
                $allRatePost['created']    = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $allRatePost['modified']   = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                // echo "<pre>"; print_r($allRatePost);die;
                if(count($lenderDetail)>0){
                    $allRatePost['id'] = $lenderDetail[0]->id;
                }
                // echo $allRatePost['id'];die;
                $lenderrDB  = new LenderRateTbl();
                $save       = $lenderrDB->save($allRatePost);
                //=====End Lender Rate==
                // var_dump($lenderval != 'other');die;
                if($lenderval != 'other'){
                    $emailChk  = Users::find(array('conditions' => "email_id='".$allPost['email']."' and id!=".$allPost['lender_id']));
                    if(count($emailChk)<1){
                        $this->modelsManager->executeQuery("update Users set email_id='".$allPost['email']."', contact_no='".$allPost['contact_no']."' where id=".$allPost['lender_id']);
                    }
                }

                $allPost2['lender_id']       = $lenderDB->id;
                $allPost2['min_loan']        = $allPost['min_loan'];
                $allPost2['max_loan']        = $allPost['max_loan'];
                $allPost2['residential']     = '';
                $allPost2['semi_commercial'] = '';
                $allPost2['commercial']      = '';
                $allPost2['rates_from']      = '';
                $allPost2['created_date']    = date('Y-m-d H:i:s');
                // echo "<pre>"; print_r($allPost2);die;
                $lenderInfoDB = new LenderInformation();
                $save2        = $lenderInfoDB->save($allPost2);

                //=======Lender Document===========
                $filearr = $this->request->getUploadedFiles();
                // echo "<pre>";print_r($filearr);exit();

                $finalFileArr = array();
                // var_dump(!empty($filearr));die;
                if(!empty($filearr))
                {
                    //print_r($filearr); exit();
                    $baseLocation = "uploads/lender_documents/";
                    if(!file_exists($baseLocation)){
                        mkdir("uploads/lender_documents", "0777");
                    }
                    foreach($filearr as $file)
                    {
                        //$file=$filearr[$i];//echo $file->getKey();
                        $display_name   = $file->getName();
                        $fileSize       = $file->getSize();
                        $fileType       = $file->getType();
                        $filename       = uniqid().$file->getName();
                        $fileError      = $file->getError();
                        // var_dump($fileError!=4);die;
                        if($fileError!=4){
                            $file->moveTo($baseLocation.$filename);
                            array_push($finalFileArr, $filename);

                            $sessionID=$this->session->get('sessUserID');
                            $lenderUploaddata['lender_id']    = $lenderDB->id;
                            $lenderUploaddata['file_name']    = $display_name;
                            $lenderUploaddata['upload_file']  = $filename;
                            $lenderUploaddata['file_size']    = $fileSize;
                            $lenderUploaddata['file_type']    = $fileType;
                            $lenderUploaddata['is_active']    = 1;
                            $lenderUploaddata['user_id']      = $sessionID;
                            $lenderUploaddata['created']      = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $documentDb   = new LenderDocuments();
                            //print_r($allPost); exit();
                            $saveDocument = $documentDb->save($lenderUploaddata);
                            if($saveDocument){
                                    //=======Save track report========
                                    $trackData['track_for']      = 'SaveLenderDocument';
                                    $trackData['userid']         = $this->session->get('sessUserID');
                                    $trackData['track_save_id']  = $lender_id;
                                    $trackData['detailid']       = $documentDb->id;
                                    $trackData['server_detail']  = $_SERVER['HTTP_USER_AGENT'];
                                    $trackData['server_ip']      = $_SERVER['REMOTE_ADDR'];
                                    $trackData['created']        = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                    $trackClickSave              = new TrackClickSave();
                                    $saveTrack                   = $trackClickSave->save($trackData);

                                    //=======Save track report End========
                            }
                        }
                    }
                }
                // die;
                //========Lender document end======
                $this->flashSession->success("Lender detail saved successfully.");
                return $response->redirect("dashboard/lendermanagement");
            }else{
                $this->flashSession->error("Lender detail saving failed.");
            }
        }
    }


    public function editlenderAction($id=NULL){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if($_SERVER['HTTP_REFERER']!=''){

            if($this->session->has('lendersourceredirect')){
                $sessionredirect=$this->session->get('lendersourceredirect');
            }else{
                $this->session->set('lendersourceredirect', $_SERVER['HTTP_REFERER']);
                $sessionredirect=$this->session->get('lendersourceredirect');
            }

        }
        if(UIElements::bapCustUniNewAdvChk()==1){
            return $response->redirect('dashboard');
        }
        if($id!='')
        {
            if($this->request->isPost())
            {

                $lenderDetail  = Lenders::findFirst(array('conditions' => "id='".$id."'"));
                $allPost       = $this->request->getPost();

                $allPost['id'] = $id;
               // print_r($allPost); exit();
                $allPost['products']=implode(",", $allPost['products']);
                $allPost['location']=implode(",", $allPost['location']);
                $allPost['created']=$lenderDetail->created;
                $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $allPost['id']=$lenderDetail->id;
                if($allPost['status']!=''){
                    $allPost['status']=implode(":::", $allPost['status']);

               }
               //print_r($allPost['products']); exit();
                $allPost=array_filter($allPost);
                $lenderDB = new Lenders();
                //print_r($allPost); exit();
                $updateUser=$lenderDB->save($allPost);
                if($updateUser){
                    if($allPost['is_prefered_lender']==1){
                        $dataArr=array();
                        $sessionID=$this->session->get('sessUserID');

                        $dataArr['adv_id']=$sessionID;
                        $dataArr["first_name"]=$allPost['first_name'];
                        $dataArr["surname"]=$allPost['surname'];
                        $dataArr["lender_name"]=$allPost['first_name']." ".$allPost['surname'];
                        $dataArr["email_id"]=$allPost['email'];
                        $dataArr["address"]=$allPost['lender_address'];
                        $dataArr["phone_no"]=$allPost['contact_no'];
                        $dataArr["min_loan"]=$allPost['min_loan'];
                        $dataArr["max_loan"]=$allPost['max_loan'];
                        $dataArr["lender_id"]=$allPost['lender_id'];
                        $dataArr['lender_product']=implode(",", $allPost['products']);
                        $dataArr['regi_bridge']=$allPost['regi_bridge'];
                        $dataArr['semi_comm_bridge']=$allPost['semi_comm_bridge'];
                        $dataArr['comm_bridge']=$allPost['comm_bridge'];
                        $dataArr['land_bridge']=$allPost['land_bridge'];
                        $dataArr['sec_bridge']=$allPost['sec_bridge'];
                        $dataArr['refurb_bridge']=$allPost['refurb_bridge'];
                        $dataArr['deve']=$allPost['deve'];
                        $dataArr['mezz']=$allPost['mezz'];
                        $dataArr['resi_investiment']=$allPost['resi_investiment'];
                        $dataArr['semi_comm_investment']=$allPost['semi_comm_investment'];
                        $dataArr['comm_investiment']=$allPost['comm_investiment'];


                        $lenderDB = new PreferLender();
                        $updateUser=$lenderDB->save($dataArr);
                    }

                    //===========Lender Rate===============
                    $lenderDetails=LenderRateTbl::findFirst(array('conditions' => "lender_id='".$allPost['lender_id']."'"));
                    $allPost=$this->request->getPost();


                    $allPost["min_loan"]           = str_replace(",", "", $allPost["min_loan"]);
                    $allPost["max_loan"]           = str_replace(",", "", $allPost["max_loan"]);
                    $allPost['created']=$lenderDetail->created;
                    $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $allPost['id']=$lenderDetail->id;
                    $lenderrDB = new LenderRateTbl();

                    $updateUser=$lenderrDB->save($allPost);
                    //===========End Lender rate=============
                    if($lenderDetail->lender_id!="other"){

                        $emailChk = Users::find(array('conditions' => "email_id='".$allPost['email']."' and id!='".$allPost['lender_id']."'"));
                        //echo $allPost['lender_id'];exit();
                        if(count($emailChk)<1){
                            $this->modelsManager->executeQuery("update Users set email_id='".$allPost['email']."', contact_no='".$allPost['contact_no']."' where id=".$allPost['lender_id']);
                            //echo "update Users set email_id='".$allPost['email']."', contact_no='".$allPost['contact_no']."' where id=".$allPost['lender_id']; exit();
                        }
                    }
                    $lInfomationChk=LenderInformation::find(array('conditions' => "lender_id=".$lenderDB->id, 'limit' => 1));
                    if(count($lInfomationChk)>0){
                        $this->modelsManager->executeQuery("update LenderInformation set min_loan='".$allPost['min_loan']."', max_loan='".$allPost['max_loan']."' where lender_id=".$lenderDB->id);
                    }else{
                        $allPost2['lender_id'] = $lenderDB->id;
                        $allPost2['min_loan'] = $allPost['min_loan'];
                        $allPost2['max_loan'] = $allPost['max_loan'];
                        $allPost2['residential'] = '';
                        $allPost2['semi_commercial'] = '';
                        $allPost2['commercial'] = '';
                        $allPost2['rates_from'] = '';
                        $allPost2['created_date'] = date('Y-m-d H:i:s');
                        $lenderInfoDB = new LenderInformation();
                        $save2=$lenderInfoDB->save($allPost2);
                    }

                    $filearr=$this->request->getUploadedFiles();//echo "<pre>";print_r($filearr);exit();
                    $finalFileArr=array();
                    if(!empty($filearr))
                    {
                        //print_r($filearr); exit();
                        $baseLocation="uploads/lender_documents/";
                        if(!file_exists($baseLocation)){
                            mkdir("uploads/lender_documents", "0777");
                        }
                        foreach($filearr as $file)
                        {
                            //$file=$filearr[$i];//echo $file->getKey();
                            $display_name=$file->getName();
                            $fileSize=$file->getSize();
                            $fileType=$file->getType();
                            $filename=uniqid().$file->getName();
                            $fileError = $file->getError();
                            if($fileError!=4){
                                $file->moveTo($baseLocation.$filename);
                                array_push($finalFileArr, $filename);

                                $sessionID=$this->session->get('sessUserID');
                                $lenderUploaddata['lender_id'] = $lenderDB->id;
                                $lenderUploaddata['file_name']=$display_name;
                                $lenderUploaddata['upload_file']=$filename;
                                $lenderUploaddata['file_size']=$fileSize;
                                $lenderUploaddata['file_type']=$fileType;
                                $lenderUploaddata['is_active']=1;
                                $lenderUploaddata['user_id']=$sessionID;
                                $lenderUploaddata['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                $documentDb= new LenderDocuments();
                                //print_r($lenderUploaddata); exit();
                                $saveDocument=$documentDb->save($lenderUploaddata);
                                if($saveDocument){

                                        //=======Save track report========
                                        $trackData['track_for']='SaveLenderDocument';
                                        $trackData['userid']=$this->session->get('sessUserID');
                                        $trackData['track_save_id']=$lender_id;
                                        $trackData['detailid']=$documentDb->id;
                                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                        $trackClickSave = new TrackClickSave();
                                        $saveTrack=$trackClickSave->save($trackData);

                                        //=======Save track report End========

                                }
                            }

                        }

                    }


                    $this->flashSession->success('Well done! Lender Details Updated Successfully');
                    //return $response->redirect('dashboard/lendermanagement');
                    return $response->redirect($sessionredirect);
                } else {
                    $this->flashSession->error('Lender Details Updating Failed');
                    $lenderDetail=Lenders::findFirst(array("conditions" => "id='".$id."'"))->toArray();

                    if($lenderDetail['lender_id']!="other"){
                        $Userdetail=Users::findFirst(array("conditions" => "id='".$lenderDetail['lender_id']."'"));
                    }
                    $_POST=$lenderDetail;
                    if(!empty($Userdetail))
                    {
                        $_POST['email']=$Userdetail->email_id;
                        $_POST['contact_no']=$Userdetail->contact_no;
                    }

                    if($lenderDetail['status']!=''){
                        $_POST['status']=explode(":::", $lenderDetail['status']);

                   }

                   //===========Lender Rate=============
                   $lenderRateDetails=LenderRateTbl::find(array("conditions" => "lender_id='".$lenderDetail['lender_id']."'", 'limit' => 1))->toArray();
                    if(count($lenderRateDetails)>0)
                    {
                        $lenderRateDetail=$lenderRateDetails[0];
                        $lenderRateDetail['lender_rate_id']=$lenderRateDetail['id'];
                        unset($lenderRateDetail['id']);
                        //print_r($lenderRateDetail); exit();
                        //print_r($adminUsers);exit;
                        $_POST+=$lenderRateDetail;

                        //$this->view->setVar('lenderRateDetail', $lenderRateDetail);
                    }
                }

            }
            $lenderDetail=Lenders::findFirst(array("conditions" => "id='".$id."'"))->toArray();

            $Userdetails=Users::find(array("conditions" => "id='".$lenderDetail['lender_id']."'", 'limit' =>1))->toArray();
            $_POST=$lenderDetail;
            if(count($Userdetail)>0){
                $Userdetail=$Userdetails[0];
            }else{
                $Userdetail=array();
            }
            $_POST['email']=$Userdetail['email_id'];
            $_POST['contact_no']=$Userdetail['contact_no'];
            if($lenderDetail['status']!=''){
                $_POST['status']=explode(":::", $lenderDetail['status']);

           }

           //===========Lender Rate=============
           $lenderRateDetails=LenderRateTbl::find(array("conditions" => "lender_id='".$lenderDetail['lender_id']."'", 'limit' => 1))->toArray();
            if(count($lenderRateDetails)>0)
            {
                $lenderRateDetail=$lenderRateDetails[0];
                $lenderRateDetail['lender_rate_id']=$lenderRateDetail['id'];
                unset($lenderRateDetail['id']);
                //print_r($lenderRateDetail); exit();
                //print_r($adminUsers);exit;
                $_POST+=$lenderRateDetail;

                //$this->view->setVar('lenderRateDetail', $lenderRateDetail);
            }
        }else{
            return $response->redirect('dashboard/lendermanagement');
        }
    }






    public function importlenderAction(){
        $response = new \Phalcon\Http\Response();
        if(UIElements::bapCustUniNewAdvChk()==1){
            return $response->redirect('dashboard');
        }
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if($this->request->isPost()){
            $applicantTypeArr=array('Individual' => 1,'Limited Company'=> 2,'Sole Trader' => 3,'Partnership' => 4,'LLP' => 5);
            $loanTypeArr=array('Investment' => 1,'Regulated' => 2);
            $propertyTypeArr=array('Residential' => 1,'Semi Commercial' => 2,'Commercial' => 3,'Land no planning' => 4,'Land With Planning' => 5);
            $refurbishmentArr=array('No' => 1,'Light Refurb  -  no planning permission required' => 2,'Heavy Refurb - planning permission required' => 3);
            $adverseTypeArr=array('No' => 1,'Minor' => 2,'Light' => 3,'Heavy' => 4);
            $valuationTypeArr=array('Purchase Price' => 1,'Market Value' => 2,'Open Market Value' => 3);
            $interestServicingOptionArr=array('Deducted for entire term' => 1,'Serviced Monthly' => 2,'Rolled Up' => 3);
            if($this->request->hasFiles()== true){
                $baselocation='uploads/profileimg/';
                $arrfile=$this->request->getUploadedFiles();
                if(!empty($arrfile) && $arrfile[0]->getError()!=4){
                    $file=$arrfile[0];
                    $filename=time().$file->getName();
                    $tmpName=$file->getTempName();
                    $handle = fopen($tmpName, "r");
                    $fcount=1;
                    while (($data = fgetcsv($handle, 0, ",")) !== FALSE) {
                        if($fcount>1){
                           // echo "<pre>";print_r($data);exit();
                            $title=$data[0];
                            $slug = str_replace(' ', '-', $title); // Replaces all spaces with hyphens.
                            $slug=preg_replace('/[^A-Za-z0-9\-]/', '', $slug); // Removes special chars.

                            $userData['first_name']=addslashes($data[0]);
                            $userData['username']=addslashes($slug);
                            $userData['email_id']=addslashes($data[3]);
                            $userData['contact_no']=addslashes($data[2]);
                            $userData['is_mail_confirm']=1;
                            $userData['mail_code']=rand(10, 100000);
                            $userData['u_type']=1;
                            $userData['is_active']=1;
                            $userChk = Users::find(array('conditions' => "username='".$userData['username']."'", 'limit' => 1));
                            $emailChk = Users::find(array('conditions' => "email_id='".$userData['email_id']."'", 'limit' => 1));

                            if( count($userChk)<=0 && count($emailChk)<=0){

                                $userData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                $userData['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                $userRes=UIElements::BapCustUniGetList('Users',array(),1, $offset='',$order="id desc");
                                if(count($userRes)>0){
                                    $userid=$userRes[0]->customer_no;
                                    $userArr=explode("CUST",$userid);
                                    $fistID=$userArr[0];
                                    $secID=intval($userArr[1])+1;
                                    $userData['customer_no']="CUST".$secID;
                                }
                                else{
                                    $userData['customer_no']="CUST10001";
                                }
                                if($usersDb){
                                    unset($usersDb);
                                }
                                $usersDb=new Users();
                                $saveUser=$usersDb->save($userData);
                                if($saveUser){
                                    $insertUserid=$usersDb->id;
                                    $lenderData['lender_id']=$insertUserid;
                                    /*if($data[3]!='' && $data[3]=='Yes'){
                                        $lenderData['show_name_on_print']=1;
                                    }else{
                                        $lenderData['show_name_on_print']=0;
                                    }*/

                                    $lenderData['show_name_on_print']=0;

                                    /*if($data[1]!=''){
                                        $primeStatus='';
                                        if($data[1]=='Yes'){
                                            $primeStatus=1;
                                        }else if($data[1]=='No'){
                                            $primeStatus=2;
                                        }
                                        $lenderData['prime_status']=$primeStatus;
                                    }
                                    if($data[2]!=''){
                                        $nonStatus='';
                                        if($data[1]=='Yes'){
                                            $nonStatus=1;
                                        }else if($data[1]=='No'){
                                            $nonStatus=2;
                                        }
                                        $lenderData['non_status']=$nonStatus;
                                    }*/
                                    $minLoan=preg_replace("/[^0-9.]/", "", $data[5]);

                                    $maxLoan=preg_replace("/[^0-9.]/", "", $data[6]);

                                    if(strpos($data[5],"m")){
                                        $minLoan=$minLoan*1000000;
                                    }else if(strpos($data[5],"million")){
                                        $minLoan=$minLoan*1000000;
                                    }else if(strpos($data[5],"k")){
                                        $minLoan=$minLoan*1000;
                                    }else if(strpos($data[5],"K")){
                                        $minLoan=$minLoan*1000;
                                    }else if(strpos($data[5],"M")){
                                        $minLoan=$minLoan*1000000;
                                    }

                                    if(strpos($data[6],"m")){
                                        $maxLoan=$maxLoan*1000000;
                                    }else if(strpos($data[6],"M")){
                                        $maxLoan=$maxLoan*1000000;
                                    }else if(strpos($data[6],"million")){
                                        $maxLoan=$maxLoan*1000000;
                                    }else if(strpos($data[6],"K")){
                                        $maxLoan=$maxLoan*1000;
                                    }else if(strpos($data[6],"k")){
                                        $maxLoan=$maxLoan*1000;
                                    }


                                    $lenderData['contact']=addslashes($data[1]);
                                    $lenderData['web_url']=addslashes($data[4]);

                                     $lenderData['min_loan']=$minLoan;
                                    $lenderData['max_loan']=$maxLoan;
                                    $lenderData['first_name']=addslashes($data[7]);
                                    $lenderData['surname']=addslashes($data[8]);
                                    $lenderData['products']=str_replace("::", ",", $data[9]);
                                    $lenderData['regi_bridge']=str_replace("%", "", $data[10]);
                                    $lenderData['semi_comm_bridge']=str_replace("%", "", $data[11]);
                                    $lenderData['comm_bridge']=str_replace("%", "", $data[12]);
                                    $lenderData['land_bridge']=str_replace("%", "", $data[13]);
                                    $lenderData['sec_bridge']=str_replace("%", "", $data[14]);
                                    $lenderData['bridge_ltp']=str_replace("%", "", $data[15]);

                                    $lenderData['refurb_bridge']=str_replace("%", "", $data[16]);
                                    $lenderData['deve']=str_replace("%", "", $data[17]);
                                    $lenderData['deve_ltc']=str_replace("%", "", $data[18]);
                                    $lenderData['mezz']=str_replace("%", "", $data[19]);
                                    $lenderData['jv_equity']=str_replace("%", "", $data[20]);
                                    $lenderData['resi_investiment']=str_replace("%", "", $data[21]);
                                    $lenderData['semi_comm_investment']=str_replace("%", "", $data[22]);
                                    $lenderData['comm_investiment']=str_replace("%", "", $data[23]);
                                    $lenderData['in_fee']=str_replace("%", "", $data[24]);
                                    $lenderData['exit_fee']=str_replace("%", "", $data[25]);
                                    $lenderData['intermerdiaries']=str_replace("%", "", $data[26]);
                                    $lenderData['lender_address']=$data[27];

                                     $lenderData['is_active']=1;

                                    $lenderData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                    $lenderData['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                    //print_r($lenderData); exit();
                                    $lenderDb= new Lenders();
                                    $savelender=$lenderDb->save($lenderData);
                                    if($savelender){
                                        $lenderInfoData['lender_id'] = $lenderDb->id;
                                        $lenderInfoData['min_loan'] = $minLoan;
                                        $lenderInfoData['max_loan'] = $maxLoan;
                                        $lenderInfoData['residential'] = '';
                                        $lenderInfoData['semi_commercial'] = '';
                                        $lenderInfoData['commercial'] = '';
                                        $lenderInfoData['rates_from'] = '';
                                        $lenderInfoData['created_date'] = date('Y-m-d H:i:s');
                                        $lenderInfoDb= new LenderInformation();
                                        $savelenderInfo=$lenderInfoDb->save($lenderInfoData);
                                    }
                                }
                            }else{
                                if(count($userChk)>0){
                                    $insertUserid=$userChk[0]->id;
                                }else if(count($emailChk)>0){
                                    $insertUserid=$emailChk[0]->id;
                                }
                                $lenderChk=Lenders::find(array('conditions' => "lender_id=".$insertUserid, 'limit' => 1));
                                if(count($lenderChk)>0){
                                    $lenderData['id']=$lenderChk[0]->id;
                                    $lenderData['created']=$lenderChk[0]->created;
                                }else{
                                    $lenderData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                }
                                $lenderData['lender_id']=$insertUserid;
                                /*if($data[3]!='' && $data[3]=='Yes'){
                                    $lenderData['show_name_on_print']=1;
                                }else{
                                    $lenderData['show_name_on_print']=0;
                                }*/
                                $lenderData['show_name_on_print']=0;

                               /* if($data[1]!=''){
                                    $primeStatus='';
                                    if($data[1]=='Yes'){
                                        $primeStatus=1;
                                    }else if($data[1]=='No'){
                                        $primeStatus=2;
                                    }
                                    $lenderData['prime_status']=$primeStatus;
                                }
                                if($data[2]!=''){
                                    $nonStatus='';
                                    if($data[1]=='Yes'){
                                        $nonStatus=1;
                                    }else if($data[1]=='No'){
                                        $nonStatus=2;
                                    }
                                    $lenderData['non_status']=$nonStatus;
                                }*/


                                    /*$lenderData['contact']=addslashes($data[1]);
                                    $lenderData['web_url']=addslashes($data[4]);*/
                                    $minLoan=preg_replace("/[^0-9.]/", "", $data[5]);

                                    $maxLoan=preg_replace("/[^0-9.]/", "", $data[6]);

                                    if(strpos($data[5],"m")){
                                        $minLoan=$minLoan*1000000;
                                    }else if(strpos($data[5],"million")){
                                        $minLoan=$minLoan*1000000;
                                    }else if(strpos($data[5],"k")){
                                        $minLoan=$minLoan*1000;
                                    }else if(strpos($data[5],"K")){
                                        $minLoan=$minLoan*1000;
                                    }else if(strpos($data[5],"M")){
                                        $minLoan=$minLoan*1000000;
                                    }

                                    if(strpos($data[6],"m")){
                                        $maxLoan=$maxLoan*1000000;
                                    }else if(strpos($data[6],"M")){
                                        $maxLoan=$maxLoan*1000000;
                                    }else if(strpos($data[6],"million")){
                                        $maxLoan=$maxLoan*1000000;
                                    }else if(strpos($data[6],"K")){
                                        $maxLoan=$maxLoan*1000;
                                    }else if(strpos($data[6],"k")){
                                        $maxLoan=$maxLoan*1000;
                                    }

                                    $lenderData['contact']=addslashes($data[1]);
                                    $lenderData['web_url']=addslashes($data[4]);

                                     $lenderData['min_loan']=$minLoan;
                                    $lenderData['max_loan']=$maxLoan;
                                    $lenderData['first_name']=addslashes($data[7]);
                                    $lenderData['surname']=addslashes($data[8]);
                                    $lenderData['products']=str_replace("::", ",", $data[9]);
                                    $lenderData['regi_bridge']=str_replace("%", "", $data[10]);
                                    $lenderData['semi_comm_bridge']=str_replace("%", "", $data[11]);
                                    $lenderData['comm_bridge']=str_replace("%", "", $data[12]);
                                    $lenderData['land_bridge']=str_replace("%", "", $data[13]);
                                    $lenderData['sec_bridge']=str_replace("%", "", $data[14]);
                                    $lenderData['bridge_ltp']=str_replace("%", "", $data[15]);

                                    $lenderData['refurb_bridge']=str_replace("%", "", $data[16]);
                                    $lenderData['deve']=str_replace("%", "", $data[17]);
                                    $lenderData['deve_ltc']=str_replace("%", "", $data[18]);
                                    $lenderData['mezz']=str_replace("%", "", $data[19]);
                                    $lenderData['jv_equity']=str_replace("%", "", $data[20]);
                                    $lenderData['resi_investiment']=str_replace("%", "", $data[21]);
                                    $lenderData['semi_comm_investment']=str_replace("%", "", $data[22]);
                                    $lenderData['comm_investiment']=str_replace("%", "", $data[23]);
                                    $lenderData['in_fee']=str_replace("%", "", $data[24]);
                                    $lenderData['exit_fee']=str_replace("%", "", $data[25]);
                                    $lenderData['intermerdiaries']=str_replace("%", "", $data[26]);
                                    $lenderData['lender_address']=$data[27];

                                 $lenderData['is_active']=1;


                                $lenderData['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                $lenderDb= new Lenders();
                                $savelender=$lenderDb->save($lenderData);
                                if($savelender){


                                    $emailChk = Users::find(array('conditions' => "email_id='".$data[3]."' and id!=".$lenderData['lender_id']));
                                    if(count($emailChk)<1){
                                        $this->modelsManager->executeQuery("update Users set email_id='".$data[3]."', contact_no='".$data[2]."' where id=".$lenderData['lender_id']);
                                    }
                                    $lInfomationChk=LenderInformation::find(array('conditions' => "lender_id=".$lenderDb->id, 'limit' => 1));
                                    if(count($lInfomationChk)>0){
                                        $this->modelsManager->executeQuery("update LenderInformation set min_loan='".$minLoan."', max_loan='".$maxLoan."' where lender_id=".$lenderDb->id);
                                    }else{
                                        $lenderInfoData['lender_id'] = $lenderDb->id;
                                        $lenderInfoData['min_loan'] = $minLoan;
                                        $lenderInfoData['max_loan'] = $maxLoan;
                                        $lenderInfoData['residential'] = '';
                                        $lenderInfoData['semi_commercial'] = '';
                                        $lenderInfoData['commercial'] = '';
                                        $lenderInfoData['rates_from'] = '';
                                        $lenderInfoData['created_date'] = date('Y-m-d H:i:s');
                                        $lenderInfoDb= new LenderInformation();
                                        $savelenderInfo=$lenderInfoDb->save($lenderInfoData);
                                    }
                                }

                            }
                            unset($lenderData);
                            unset($lenderInfoData);
                            unset($userData);
                        }
                        $fcount++;
                    }
                    $this->flashSession->success('Lender Imported Successfully');
                    return $response->redirect("dashboard/lendermanagement");
                } else {
                    $this->flashSession->success('Something is wrong.Please try Again.');
                }
            }
        }
    }
    /**
    * lender document upload Action To upload lender document
    * Action Name: lendermanagementAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 26-07-2018
    **/
    public function lenderdocumentAction($id=''){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        $this->view->setVar('lender_id', $id);
        $sessionID=$this->session->get('sessUserID');
    }
     /**
    * Document save Action To upload the documents file
    * Action Name: lenderdocumentsaveAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 26-10-2018
    **/
        public function lenderdocumentsaveAction(){
            $responseArr=array('response' => 2, 'content' => '');
            if($this->request->isPost()){
                //print_r($_POST);exit();
                //$allPost=$this->request->getPost();
                $allPost=$_POST;
                $lender_id=$allPost['lender_id'];
                //print_r($_FILES);
                //print_r($allPost); exit();
                $filearr=$this->request->getUploadedFiles();//echo "<pre>";print_r($filearr);exit();
                $finalFileArr=array();
                    if(!empty($filearr))
                    {
                        //print_r($filearr); exit();
                        $baseLocation="uploads/lender_documents/";
                        if(!file_exists($baseLocation)){
                            mkdir("uploads/lender_documents", "0777");
                        }
                        foreach($filearr as $file)
                        {
                            //$file=$filearr[$i];//echo $file->getKey();
                            $display_name=$file->getName();
                            $fileSize=$file->getSize();
                            $fileType=$file->getType();
                            $filename=uniqid().$file->getName();
                            $fileError = $file->getError();
                            $file->moveTo($baseLocation.$filename);
                            array_push($finalFileArr, $filename);

                            $sessionID=$this->session->get('sessUserID');
                            $allPost['file_name']=$display_name;
                            $allPost['upload_file']=$filename;
                            $allPost['file_size']=$fileSize;
                            $allPost['file_type']=$fileType;
                            $allPost['is_active']=1;
                            $allPost['user_id']=$sessionID;
                            $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $documentDb= new LenderDocuments();
                            //print_r($allPost); exit();
                            $saveDocument=$documentDb->save($allPost);
                            if($saveDocument){

                                    //=======Save track report========
                                    $trackData['track_for']='SaveLenderDocument';
                                    $trackData['userid']=$this->session->get('sessUserID');
                                    $trackData['track_save_id']=$lender_id;
                                    $trackData['detailid']=$documentDb->id;
                                    $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                                    $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                                    $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                    $trackClickSave = new TrackClickSave();
                                    $saveTrack=$trackClickSave->save($trackData);

                                    //=======Save track report End========

                                    //========Note result return==========

                                    $content="";
                                    $documentRes=LenderDocuments::find(array(
                                      'conditions' => "lender_id='".$allPost['lender_id']."' and is_active=1",
                                      'order' => "id desc",
                                      ));
                                    if(count($documentRes)>0){
                                        $documentCount=1;
                                        $content.='<table class="table table-bordered table">
                                          <thead>
                                          <th>SL#</th>
                                            <th>File Name</th>
                                            <th>Attached By</th>
                                            <th>Date Added</th>
                                            <th>Size</th>
                                            <th>Action</th>
                                          </thead>
                                          <tbody>';
                                        foreach($documentRes as $documentResult){
                                          $userDetail=Users::findFirst(array('conditions' => "id='".$documentResult->user_id."'"));
                                          $content.=' <tr id="removeDocumentNote'.$documentResult->id.'">
                                              <td>'.$documentCount.'</td>
                                              <td>
                                                '.stripslashes($documentResult->file_name).'
                                              </td>
                                              <td>'.stripslashes($userDetail->first_name).'</td>
                                              <td>'.date("d M, Y H:iA", strtotime($documentResult->created)).'</td>
                                              <td>'.UIElements::bapCustUniSizeAsKb($documentResult->file_size).'</td>
                                              <td>
                                                <a href="'.BASEURL.'uploads/lender_documents/'.$documentResult->upload_file.'" class="btn btn-primary" download>Download</a>
                                                <a href="javascript:void(0);" class="btn btn-danger removedocumentcls" data-id="'.$documentResult->id.'">Delete</a>
                                              </td>
                                            </tr>';
                                            $documentCount++;
                                        }
                                        $content.='</tbody>
                                        </table>';

                                      }
                                    //========Note result return end=======
                                    $responseArr=array('response' => 1, 'content' => $content);
                            }

                        }

                    }



            }

            echo json_encode($responseArr);
            exit();
        }
    /**
    * Document delete Action To upload the documents file
    * Action Name: lenderdocumentdelAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 26-10-2018
    **/
        public function lenderdocumentdelAction(){
            $responseArr=array('response' => 2, 'noteid' => '');
            if($this->request->isPost()){
                $allPost=$this->request->getPost();
                if($allPost['noteid']!=''){
                    $documentDetail=LenderDocuments::findFirst(array(
                        'conditions' => "id='".$allPost['noteid']."'"
                        ));
                    if($documentDetail->upload_file!=''){
                        @unlink("uploads/lender_documents/".$documentDetail->upload_file);
                    }
                    $delete=$this->modelsManager->executeQuery("delete from LenderDocuments where id='".$allPost['noteid']."'");
                        $responseArr=array('response' => 1, 'noteid' => $allPost['noteid']);

                }
            }
            echo json_encode($responseArr);
            exit();
        }
    /**
    * application view Action To view application detail
    * Action Name: applicationviewAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 13-07-2018
    **/
    public function applicationviewAction($id=''){
        $response = new \Phalcon\Http\Response();
        if($id=='' || $id==0){
            return $response->redirect('/dashboard/leads');
        }
        $applicationDetail=LeadApplication::findFirst(array('conditions' => "id='".$id."'", 'limit' => 1));
        $this->view->setVar('leadid', $id);
        $this->view->setVar('applicationDetail', $applicationDetail);
    }
    /**
    * application view print Action To view print application detail
    * Action Name: printapplicationAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 19-07-2018
    **/
    public function printapplicationAction($id=''){
        $response = new \Phalcon\Http\Response();
        if($id=='' || $id==0){
            return $response->redirect('/dashboard/leads');
        }
        $applicationDetail=LeadApplication::findFirst(array('conditions' => "id='".$id."'", 'limit' => 1));
        $this->view->setVar('leadid', $id);
        $this->view->setVar('applicationDetail', $applicationDetail);
    }


    /**
* Lead Edit Action To Edit Lead User by Advisor
* Action Name: leadeditAction
* Author By: Chittaranjan Sahoo
* Created Date: 16-07-2018
**/
    public function leadeditAction($id=''){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
         //============Save enquiry start here=========
        if($id!=''){
            if($this->request->isPost()){
                $allPost=$this->request->getPost();

                    $chkEmail=Enquiry::find(array('conditions' => "borrower_email='".$allPost['borrower_email']."' and id!='".$id."'", 'limit' => 1));
                    $chkPhone=Enquiry::find(array('conditions' => "borrower_mob='".$allPost['borrower_mob']."' and id!='".$id."'", 'limit' => 1));
                $chkEmail=array();
                $chkPhone=array();
                if(count($chkEmail)>0){
                    $this->flashSession->error("Email ID Already Exist");
                }else if(count($chkPhone)>0){
                    $this->flashSession->error("Phone No Already Exist");
                }else{
                     $enquiryID=$id;
                        $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
                    $allPost['exit_submit']=$enquiryDetails['exit_submit'];
                    $allPost['approved_postoffer']=$enquiryDetails['approved_postoffer'];
                    /*$allPost['advisor_id']=$enquiryDetails['advisor_id'];*/
                    $allPost['approve_lead']=$enquiryDetails['approve_lead'];
                    $allPost['approve_by_lender']=$enquiryDetails['approve_by_lender'];
                    $allPost['approve_lender_date']=$enquiryDetails['approve_lender_date'];
                    $allPost['approved_loan']=$enquiryDetails['approved_loan'];
                    $allPost['approved_postoffer']=$enquiryDetails['approved_postoffer'];
                    $allPost['not_proceeding']=$enquiryDetails['not_proceeding'];
                    $allPost['not_send_mail']=$enquiryDetails['not_send_mail'];
                    $allPost['user_id']=$enquiryDetails['user_id'];
                    $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $allPost['no_of_borrower']=($allPost['no_of_borrower']!='')?$allPost['no_of_borrower']:0;

                        $allPost['lead_id']=$enquiryDetails['lead_id'];
                        $allPost['lead_unique_id']=$enquiryDetails['lead_unique_id'];
                        $allPost['created']=$enquiryDetails['created'];
                        $allPost['id']=$enquiryDetails['id'];
                    $allPost['is_active']=$enquiryDetails['is_active'];
                    $allPost['date_of_purchase']=date("Y-m-d", strtotime($allPost['date_of_purchase']));
                    /*if($allPost['borrower_dob']!=''){
                        $allPost['borrower_dob']=date("Y-m-d", strtotime($allPost['borrower_dob']));
                    }*/
                    if($allPost['build_period']!=''){
                        $allPost['build_period']=date("Y-m-d", strtotime($allPost['build_period']));
                    }
                    /*if($allPost['no_of_borrower']>0){
                        for($i=1; $i<=$allPost['no_of_borrower']; $i++){
                            if($allPost['borrower_dob'.$i]!=''){
                                $allPost['borrower_dob'.$i]=date("Y-m-d", strtotime($allPost['borrower_dob'.$i]));
                            }
                        }
                    }*/
                    //$allPost=array_filter($allPost);
                    //print_r($allPost);exit();
                    $enquiryDB = new Enquiry();
                    $save=$enquiryDB->save($allPost);
                    if($save){
                        $enquiryID=$enquiryDB->id;
                        //=========Note Save========
                        /*if($allPost['note_text']!='' && $allPost['note_id']==''){
                            $sessionID=$this->session->get('sessUserID');
                            $notePost['user_id']=$sessionID;
                            $notePost['lead_id']=$enquiryID;
                            $notePost['note_text']=addslashes($allPost['note_text']);
                            $notePost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $notesDb= new Notes();
                            $saveNote=$notesDb->save($notePost);
                            if($saveNote){
                                $this->modelsManager->executeQuery("update Enquiry set note_id='".$notesDb->id."' where id='".$enquiryID."'");
                            }
                        }else{
                            if($allPost['note_id']!=''){
                                $this->modelsManager->executeQuery("update Notes set note_text='".$allPost['note_text']."' where lead_id='".$enquiryID."' and id='".$allPost['note_id']."'");
                            }
                        }*/
                        //========Note Save End=====
                        //=======Save track report========
                        $trackData['track_for']='leadEdit';
                        $trackData['userid']=$this->session->get('sessUserID');
                        $trackData['track_save_id']=$enquiryID;
                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);
                        //=======Save track report End========
                        //$this->session->set('enquirySessID', $enquiryID);
                        $this->flashSession->success("Lead Detail Updated Successfully.");
                        return $response->redirect("dashboard/leaddetail/".$id);
                    }else{
                        //$this->flashSession->error("Enquiry Saving Failed.");
                    }
                }

            }
            $enquiryID=$id;
            $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
            $_POST=$enquiryDetails;
        }
        //============End here========================
    }
    public function customersAction(){

        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        $sessionID=$this->session->get('sessUserID');
        // =============Search Functionality===============
        //$whr=array("parent_id='".$sessionID."'");
        $whr=array("u_type=2 and is_active!=3");
        $where="";

        if($this->request->get())
        {
            $getall=$this->request->get();
            $searchtxt=$getall['searchtxt'];
            if($searchtxt!='')
            {
                array_push($whr, "(first_name like '%".$searchtxt."%' or last_name like '%".$searchtxt."%' or CONCAT(first_name, ' ', last_name) like '%".$searchtxt."%' or email_id like '%".$searchtxt."%' or email_id like '%".$searchtxt."%' or customer_no = '".$searchtxt."')");
                // print_r($whr);exit;
            }

        }
        if(!empty($whr))
        {
            $where=implode(" and ", $whr);
            // echo $where;exit;
        }
        //===========pagination===========
        $paged=$this->dispatcher->getParam("paged");
        $page = (int) (!isset($paged) ? 1 : $paged);
        $page = ($page == 0 ? 1 : $page);
        $perpage =20;
        $startpoint = ($page * $perpage) - $perpage;

        //================================
        $totrecord=Users::find(array("conditions" => $where,"order" => "id desc",))->toArray();
            $customerRes=Users::find(array("conditions" => $where,"order" => "id desc","limit" => array($perpage, $startpoint)))->toArray();

        //print_r($adminRes);exit;
        $this->view->setVar('customerRes', $customerRes);
        $this->view->setVar('totrecord', count($totrecord));
        $this->view->setVar('perpage', $perpage);
        $this->view->setVar('paged', $paged);
        $this->view->setVar('startpoint', $startpoint);
        $this->view->setVar('userType', $userType);

    }
    /**
    * completed client Action To list the completed clients
    * Action Name: completedclientAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 24-04-2019
    **/
    public function completedclientAction(){

        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        $sessionID=$this->session->get('sessUserID');
        // =============Search Functionality===============
        //$whr=array("parent_id='".$sessionID."'");
        $whr=array("u_type=2 and is_active=3");
        $where="";

        if($this->request->get())
        {
            $getall=$this->request->get();
            $searchtxt=$getall['searchtxt'];
            if($searchtxt!='')
            {
                array_push($whr, "(first_name like '%".$searchtxt."%' or last_name like '%".$searchtxt."%' or CONCAT(first_name, ' ', last_name) like '%".$searchtxt."%' or email_id like '%".$searchtxt."%' or email_id like '%".$searchtxt."%' or customer_no = '".$searchtxt."')");
                // print_r($whr);exit;
            }

        }
        if(!empty($whr))
        {
            $where=implode(" and ", $whr);
            // echo $where;exit;
        }
        //===========pagination===========
        $paged=$this->dispatcher->getParam("paged");
        $page = (int) (!isset($paged) ? 1 : $paged);
        $page = ($page == 0 ? 1 : $page);
        $perpage =20;
        $startpoint = ($page * $perpage) - $perpage;

        //================================
        $totrecord=Users::find(array("conditions" => $where,"order" => "id desc",))->toArray();
            $customerRes=Users::find(array("conditions" => $where,"order" => "id desc","limit" => array($perpage, $startpoint)))->toArray();

        //print_r($adminRes);exit;
        $this->view->setVar('customerRes', $customerRes);
        $this->view->setVar('totrecord', count($totrecord));
        $this->view->setVar('perpage', $perpage);
        $this->view->setVar('paged', $paged);
        $this->view->setVar('startpoint', $startpoint);
        $this->view->setVar('userType', $userType);

    }
    /**
    * Edit Placement Action To Edit Lead User placement by Advisor
    * Action Name: editplacementAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 21-07-2018
    **/
    public function editplacementAction($enquiryID=''){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        /*$chkLender=Enquiry::find(array('conditions'=>"id='".$enquiryID."' and approve_by_lender>0", 'limit' => 1))->toArray();
        if(count($chkLender)>0){
            $this->flashSession->error("You have already approved leander, so now you can't change.");
            return $response->redirect('/dashboard/leads');
        }*/
        $placementDetails=Placement::find(array('conditions'=>"enquiry_id='".$enquiryID."'"))->toArray();
        if(count($placementDetails[0])>0){
            $_POST=$placementDetails[0];
            $_POST['product']=$_POST['charge'];
        }
        $this->view->setVar('leadid', $enquiryID);
    }
    /**
    * Pre Offer Action To assign pre offer form to Lead User by Advisor
    * Action Name: preofferAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 24-07-2018
    **/
    public function preofferAction($leadID=''){
        $response = new \Phalcon\Http\Response();
        /*if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }*/
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $sessionID=$this->session->get('sessUserID');
            $allPost['advisor_id']=$sessionID;
            $preofferTypeArr=$allPost['pre_offer_type'];
            $allPost['pre_offer_type']=implode(",", $allPost['pre_offer_type']);
            $chkofferAdded=0;
            if(!isset($allPost['id'])){
               $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            }else{
                $chkofferAdded=UIElements::checkofferadd($allPost['id'], $preofferTypeArr);
                $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            }

            //print_r($allPost);exit();
            $preofferDb = new Preoffer();
            $save=$preofferDb->save($allPost);
            if($save){
                if($chkofferAdded[0]==1){
                    $this->modelsManager->executeQuery("update Enquiry set approved_loan=0 where id='".$allPost['lead_id']."'");

                }
                if($chkofferAdded[1]==1){
                    $this->modelsManager->executeQuery("delete from PreofferComplete where lead_id='".$allPost['lead_id']."' and offer_id NOT IN(".$allPost['pre_offer_type'].")");
                }
                //=======Save track report========
                if(isset($allPost['id'])){
                    $trackData['track_for']='editPreoffer';
                }else{
                    $trackData['track_for']='addPreoffer';
                }
                $trackData['userid']=$this->session->get('sessUserID');
                $trackData['track_save_id']=$preofferDb->id;
                $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $trackClickSave = new TrackClickSave();
                $saveTrack=$trackClickSave->save($trackData);

                //=======Save track report End========
                $this->flashSession->success("Pre offer Allocated to lead successfully");
            }else{
                $this->flashSession->success("Pre Offer Allocating Failed");
            }
        }
        $chkOffer=Preoffer::find(array('conditions' => "lead_id='".$leadID."'", 'limit' => 1));

        if(count($chkOffer)>0){
            $_POST=$chkOffer[0]->toArray();
            $_POST['pre_offer_type']=explode(",", $_POST['pre_offer_type']);
        }
        $this->view->setVar('chkOffer', $chkOffer);

        $this->view->setVar('leadid', $leadID);
    }
    /**
    * Pre Offer sub Application Action To fill pre offer sub application details
    * Action Name: subapplicationAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 20-09-2018
    **/
    public function subapplicationAction($leadid='', $offerid=''){
        $response = new \Phalcon\Http\Response();
        if($leadid==''){
            return $response->redirect('dashboard/leads');
        }
        if($offerid==''){
            return $response->redirect('dashboard/preoffer/'.$leadid);
        }
        $offerChk=Managepreoffer::find(array('conditions' => "id='".$offerid."' and is_active=1", 'limit' => 1));
        if(count($offerChk)>0){
            if($offerChk[0]->is_application_offer==1 && $offerChk[0]->application_portion==2){

            }else{
                $this->flashSession->error('Something is worng. Please try again');
                return $response->redirect('dashboard/preoffer/'.$leadid);
            }
        }
        //========Loan Complete functionality=======
        $chkComplete=PreofferComplete::find(array('conditions' => "lead_id='".$leadid."' and offer_id='".$offerid."'", 'limit' => 1));
        if(count($chkComplete)<=0){
            $offerdata['lead_id']=$leadid;
            $postedBy=($this->session->get('sessUserType')<=0)?2:1;
            $offerdata['posted_by']=$postedBy;
            $offerdata['posted_userid']=$this->session->get('sessUserID');
            $offerdata['offer_id']=$offerid;
            $offerdata['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            $preofferComplete= new PreofferComplete();
            $save=$preofferComplete->save($offerdata);
            if($save){
                //=======Save track report========
                $trackData['track_for']='Preoffersubapplication:';
                $trackData['userid']=$this->session->get('sessUserID');
                $trackData['track_save_id']=$leadid;
                $trackData['detailid']=$offerid;
                $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $trackClickSave = new TrackClickSave();
                $saveTrack=$trackClickSave->save($trackData);

                //=======Save track report End========
            }
        }

        $chkloanComplete=UIElements::BapCustUniloanCompleteChk($leadid);
        if($chkloanComplete==1){
            $this->modelsManager->executeQuery("update Enquiry set approved_loan=1 where id='".$leadid."'");
            //=======Save track report========
            $trackData['track_for']='ApprovedLoan';
            $trackData['userid']=$this->session->get('sessUserID');
            $trackData['track_save_id']=$leadid;
            $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
            $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
            $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            $trackClickSave = new TrackClickSave();
            $saveTrack=$trackClickSave->save($trackData);

            //=======Save track report End========
        }
        return $response->redirect('dashboard/application/'.$leadid."/");
        //==========Loan Complete functionality end========
        exit();
    }
     /**
    * Pre Offer custom form Action To fill pre offer document details
    * Action Name: customofferAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 20-09-2018
    **/
    public function customofferAction($leadid='', $offerid=''){
        $response = new \Phalcon\Http\Response();
        if($leadid==''){
            return $response->redirect('dashboard/leads');
        }
        if($offerid==''){
            return $response->redirect('dashboard/preoffer/'.$leadid);
        }
        $offerChk=Managepreoffer::find(array('conditions' => "id='".$offerid."' and is_active=1", 'limit' => 1));
        if(count($offerChk)>0){
            if($offerChk[0]->is_application_offer==0){

            }else{
                $this->flashSession->error('Something is worng. Please try again');
                return $response->redirect('dashboard/preoffer/'.$leadid);
            }
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $data['lead_id']=$allPost['lead_id'];
            $data['offer_id']=$allPost['offer_id'];
            $data['posted_by']=$this->session->get('sessUserID');
            $data['user_type']=$this->session->get('sessUserType');

            if(isset($allPost['attribute']) && !empty($allPost['attribute'])){
                foreach($allPost['attribute'] as $index => $val){
                    $fieldDetail=explode(":::", $index);
                    $data['meta_id']=$fieldDetail[1];
                    $data['meta_name']=$fieldDetail[0];
                    $data['meta_value']=$val;
                    if(is_array($val)){
                        $data['meta_value']=json_encode($val);
                    }
                    $OfferfieldvaltblChk=Offerfieldvaltbl::find(array('conditions' => "lead_id='".$leadid."' and offer_id='".$offerid."' and meta_id='".$data['meta_id']."'", 'limit' =>1));
                    if(count($OfferfieldvaltblChk)>0){
                        $data['created']=$OfferfieldvaltblChk[0]->created;
                        $data['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $data['id']=$OfferfieldvaltblChk[0]->id;
                    }else{
                        $data['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    }

                    $offerfieldvaltbl= new Offerfieldvaltbl();
                    $save=$offerfieldvaltbl->save($data);
                }
            }
            if(isset($_FILES['attribute']['name']) && !empty($_FILES['attribute']['name'])){
                $baseLocation = 'uploads/leadDocuments/';
                foreach($_FILES['attribute']['name'] as $fileIndex => $fileName){
                    if(is_array($_FILES['attribute']['name'][$fileIndex])){
                        $fileEmptyChk=array_filter($_FILES['attribute']['name'][$fileIndex]);
                    }else{
                       $fileEmptyChk=trim($_FILES['attribute']['name'][$fileIndex]);
                    }
                    //print_r($fileEmptyChk);exit();
                    if(!empty($fileEmptyChk)){

                        $metaArr=explode(":::", $fileIndex);
                        $data['meta_id']=$metaArr[1];
                        $data['meta_name']=$metaArr[0];
                        $OfferfieldvaltblChk=Offerfieldvaltbl::find(array('conditions' => "lead_id='".$leadid."' and offer_id='".$offerid."' and meta_id='".$data['meta_id']."'", 'limit' =>1));
                        if(is_array($fileName)){
                            $newfiles=array();
                            foreach($fileName as $multiIndex => $singFile){
                                $sfileNameCreate=uniqid().$singFile;
                                array_push($newfiles, $sfileNameCreate);
                                move_uploaded_file($_FILES['attribute']['tmp_name'][$fileIndex][$multiIndex], $baseLocation.$sfileNameCreate);
                            }
                            if(count($OfferfieldvaltblChk)>0){
                                $dbFileVal=json_decode($OfferfieldvaltblChk[0]->meta_value, true);
                                if($dbFileVal){
                                    foreach($newfiles as $newfile){
                                        array_push($dbFileVal, $newfile);
                                    }
                                    $data['meta_value']=json_encode($dbFileVal);
                                }else{
                                    $data['meta_value']=json_encode($newfiles);
                                }
                                //$dbFileVal+=$fileName;

                            }else{
                                $data['meta_value']=json_encode($newfiles);
                            }

                        }else{
                            $fileNameCreate=uniqid().$fileName;
                            move_uploaded_file($_FILES['attribute']['tmp_name'][$fileIndex], $baseLocation.$fileNameCreate);
                            $data['meta_value']=$fileNameCreate;
                        }

                        if(count($OfferfieldvaltblChk)>0){
                            $data['created']=$OfferfieldvaltblChk[0]->created;
                            $data['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $data['id']=$OfferfieldvaltblChk[0]->id;
                        }else{
                            $data['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        }
                        //$data['meta_value']=json_encode($fileName);
                        //print_r($data);exit();
                        $offerfieldvaltbl= new Offerfieldvaltbl();
                        $save2=$offerfieldvaltbl->save($data);
                    }

                }

            }
            if($save || $save2){

                //=======Save track report========
                $trackData['track_for']='customoffer';
                $trackData['detailid']=$offerid;
                $trackData['userid']=$this->session->get('sessUserID');
                $trackData['track_save_id']=$leadid;
                $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $trackClickSave = new TrackClickSave();
                $saveTrack=$trackClickSave->save($trackData);

                //=======Save track report End========
                //========Loan Complete functionality=======
                $chkComplete=PreofferComplete::find(array('conditions' => "lead_id='".$leadid."' and offer_id='".$offerid."'", 'limit' => 1));
                if(count($chkComplete)<=0){
                    $offerdata['lead_id']=$leadid;
                    $postedBy=($this->session->get('sessUserType')<=0)?2:1;
                    $offerdata['posted_by']=$postedBy;
                    $offerdata['posted_userid']=$this->session->get('sessUserID');
                    $offerdata['offer_id']=$offerid;
                    $offerdata['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $preofferComplete= new PreofferComplete();
                    $save=$preofferComplete->save($offerdata);
                }

                $chkloanComplete=UIElements::BapCustUniloanCompleteChk($leadid);
                if($chkloanComplete==1){
                    $this->modelsManager->executeQuery("update Enquiry set approved_loan=1 where id='".$leadid."'");
                    //=======Save track report========
                    $trackData['track_for']='ApprovedLoan';
                    $trackData['userid']=$this->session->get('sessUserID');
                    $trackData['track_save_id']=$leadid;
                    $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                    $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                    $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $trackClickSave = new TrackClickSave();
                    $saveTrack=$trackClickSave->save($trackData);

                    //=======Save track report End========
                }
                //==========Loan Complete functionality end========
                $this->flashSession->success("Offer required detail saved successfully");
                return $response->redirect('dashboard/preoffer/'.$leadid);

            }
        }
        $Offerdatares=Offerfieldvaltbl::find(array('conditions' => "lead_id='".$leadid."' and offer_id='".$offerid."'", 'limit' => 1));
        if(count($Offerdatares)>0){
            $this->view->setVar('OfferdataRes', $Offerdatares[0]);
        }else{
            $this->view->setVar('OfferdataRes', array());
        }
        $this->view->setVar('leadid', $leadid);
        $this->view->setVar('offerid', $offerid);
        $this->view->setVar('offerRes', $offerChk[0]);

    }

       /**
    * Illustration Offer form Action To fill illustration offer document details
    * Action Name: illustrationcustomofferAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 01-11-2019
    **/
    public function illustrationcustomofferAction($leadid='', $offerid=''){
        $response = new \Phalcon\Http\Response();
        if($leadid==''){
            return $response->redirect('dashboard/enquiry');
        }
        if($offerid==''){
            return $response->redirect('dashboard/illustrationdoc/');
        }
        $offerChk=Manageillustrationoffer::find(array('conditions' => "id='".$offerid."' and is_active=1", 'limit' => 1));
        if(count($offerChk)>0){
            if($offerChk[0]->is_application_offer==0){

            }else{
                $this->flashSession->error('Something is worng. Please try again');
                return $response->redirect('dashboard/illustrationdoc/');
            }
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $data['lead_id']=$allPost['lead_id'];
            $data['offer_id']=$allPost['offer_id'];
            $data['posted_by']=$this->session->get('sessUserID');
            $data['user_type']=$this->session->get('sessUserType');

            if(isset($allPost['attribute']) && !empty($allPost['attribute'])){
                foreach($allPost['attribute'] as $index => $val){
                    $fieldDetail=explode(":::", $index);
                    $data['meta_id']=$fieldDetail[1];
                    $data['meta_name']=$fieldDetail[0];
                    $data['meta_value']=$val;
                    if(is_array($val)){
                        $data['meta_value']=json_encode($val);
                    }
                    $OfferfieldvaltblChk=Illuofferfieldvaltbl::find(array('conditions' => "lead_id='".$leadid."' and offer_id='".$offerid."' and meta_id='".$data['meta_id']."'", 'limit' =>1));
                    if(count($OfferfieldvaltblChk)>0){
                        $data['created']=$OfferfieldvaltblChk[0]->created;
                        $data['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $data['id']=$OfferfieldvaltblChk[0]->id;
                    }else{
                        $data['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    }

                    $offerfieldvaltbl= new Illuofferfieldvaltbl();
                    $save=$offerfieldvaltbl->save($data);
                }
            }
            if(isset($_FILES['attribute']['name']) && !empty($_FILES['attribute']['name'])){
                $baseLocation = 'uploads/leadDocuments/';
                foreach($_FILES['attribute']['name'] as $fileIndex => $fileName){
                    if(is_array($_FILES['attribute']['name'][$fileIndex])){
                        $fileEmptyChk=array_filter($_FILES['attribute']['name'][$fileIndex]);
                    }else{
                       $fileEmptyChk=trim($_FILES['attribute']['name'][$fileIndex]);
                    }
                    //print_r($fileEmptyChk);exit();
                    if(!empty($fileEmptyChk)){

                        $metaArr=explode(":::", $fileIndex);
                        $data['meta_id']=$metaArr[1];
                        $data['meta_name']=$metaArr[0];
                        $OfferfieldvaltblChk=Illuofferfieldvaltbl::find(array('conditions' => "lead_id='".$leadid."' and offer_id='".$offerid."' and meta_id='".$data['meta_id']."'", 'limit' =>1));
                        if(is_array($fileName)){
                            $newfiles=array();
                            foreach($fileName as $multiIndex => $singFile){
                                $sfileNameCreate=uniqid().$singFile;
                                array_push($newfiles, $sfileNameCreate);
                                move_uploaded_file($_FILES['attribute']['tmp_name'][$fileIndex][$multiIndex], $baseLocation.$sfileNameCreate);
                            }
                            if(count($OfferfieldvaltblChk)>0){
                                $dbFileVal=json_decode($OfferfieldvaltblChk[0]->meta_value, true);
                                if($dbFileVal){
                                    foreach($newfiles as $newfile){
                                        array_push($dbFileVal, $newfile);
                                    }
                                    $data['meta_value']=json_encode($dbFileVal);
                                }else{
                                    $data['meta_value']=json_encode($newfiles);
                                }
                                //$dbFileVal+=$fileName;

                            }else{
                                $data['meta_value']=json_encode($newfiles);
                            }

                        }else{
                            $fileNameCreate=uniqid().$fileName;
                            move_uploaded_file($_FILES['attribute']['tmp_name'][$fileIndex], $baseLocation.$fileNameCreate);
                            $data['meta_value']=$fileNameCreate;
                        }

                        if(count($OfferfieldvaltblChk)>0){
                            $data['created']=$OfferfieldvaltblChk[0]->created;
                            $data['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $data['id']=$OfferfieldvaltblChk[0]->id;
                        }else{
                            $data['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        }
                        //$data['meta_value']=json_encode($fileName);
                        //print_r($data);exit();
                        $offerfieldvaltbl= new Illuofferfieldvaltbl();
                        $save2=$offerfieldvaltbl->save($data);
                    }

                }

            }
            if($save || $save2){

                //=======Save track report========
                $trackData['track_for']='illustrationcustomoffer';
                $trackData['detailid']=$offerid;
                $trackData['userid']=$this->session->get('sessUserID');
                $trackData['track_save_id']=$leadid;
                $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $trackClickSave = new TrackClickSave();
                $saveTrack=$trackClickSave->save($trackData);

                //=======Save track report End========
                //========Loan Complete functionality=======
                $chkComplete=IllustrationofferComplete::find(array('conditions' => "lead_id='".$leadid."' and offer_id='".$offerid."'", 'limit' => 1));
                if(count($chkComplete)<=0){
                    $offerdata['lead_id']=$leadid;
                    $postedBy=($this->session->get('sessUserType')<=0)?2:1;
                    $offerdata['posted_by']=$postedBy;
                    $offerdata['posted_userid']=$this->session->get('sessUserID');
                    $offerdata['offer_id']=$offerid;
                    $offerdata['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $preofferComplete= new IllustrationofferComplete();
                    $save=$preofferComplete->save($offerdata);
                }

                $chkloanComplete=UIElements::BapCustUniillustrationCompleteChk($leadid);
                if($chkloanComplete==1){
                    //$this->modelsManager->executeQuery("update Enquiry set approved_loan=1 where id='".$leadid."'");
                    //=======Save track report========
                    /*$trackData['track_for']='ApprovedLoan';
                    $trackData['userid']=$this->session->get('sessUserID');
                    $trackData['track_save_id']=$leadid;
                    $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                    $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                    $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $trackClickSave = new TrackClickSave();
                    $saveTrack=$trackClickSave->save($trackData);
                    */
                    //=======Save track report End========
                }
                //==========Loan Complete functionality end========
                $this->flashSession->success("Offer required detail saved successfully");
                return $response->redirect('dashboard/illustrationdoc/');

            }
        }
        $Offerdatares=Illuofferfieldvaltbl::find(array('conditions' => "lead_id='".$leadid."' and offer_id='".$offerid."'", 'limit' => 1));
        if(count($Offerdatares)>0){
            $this->view->setVar('OfferdataRes', $Offerdatares[0]);
        }else{
            $this->view->setVar('OfferdataRes', array());
        }
        $this->view->setVar('leadid', $leadid);
        $this->view->setVar('offerid', $offerid);
        $this->view->setVar('offerRes', $offerChk[0]);

    }

    /**
    * Pre Offer two Action To upload pre offer step 2 documents to Lead User by Advisor or by customer
    * Action Name: preoffertwoAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 26-07-2018
    **/
    public function preoffertwoAction($leadid=''){
        $response = new \Phalcon\Http\Response();
        if($leadid==''){
            return $response->redirect('dashboard/leads');
        }
        if($this->request->isPost()){
            if($this->request->hasFiles() == true){
                $baseLocation = 'uploads/leadDocuments/';
                $filearr=$this->request->getUploadedFiles();//echo "<pre>";print_r($filearr);exit();
                if(!empty($filearr))
                {

                    //print_r($filearr);
                    foreach($filearr as $file)
                    {
                        //$file=$filearr[$i];//echo $file->getKey();
                        $filename=uniqid().$file->getName();
                        $fileError = $file->getError();
                        $file->moveTo($baseLocation.$filename);
                        //echo $filename;
                        /*if ($file->getKey()=="logo" && $fileError!=4) {//echo $filename;
                            $logo = $filename;
                        }*/
                        $data['lead_id']=$leadid;
                        $postedBy=($this->session->get('sessUserType')<=0)?2:1;
                        $data['posted_by']=$postedBy;
                        $data['post_user_id']=$this->session->get('sessUserID');
                        $data['upload_file']=$filename;
                        $data['upload_title']=$file->getName();
                        $data['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $preoffertwoDb= new Preoffertwo();
                        $save=$preoffertwoDb->save($data);
                        if($save){
                            //=======Save track report========
                            $trackData['track_for']='addPreoffertwo';
                            $trackData['userid']=$this->session->get('sessUserID');
                            $trackData['track_save_id']=$preoffertwoDb->id;
                            $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                            $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                            $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $trackClickSave = new TrackClickSave();
                            $saveTrack=$trackClickSave->save($trackData);

                            //=======Save track report End========
                        }

                    }
                    //========Loan Complete functionality=======
                    $chkComplete=PreofferComplete::find(array('conditions' => "lead_id='".$leadid."' and offer_id=2", 'limit' => 1));
                    if(count($chkComplete)<=0){
                        $offerdata['lead_id']=$leadid;
                        $postedBy=($this->session->get('sessUserType')<=0)?2:1;
                        $offerdata['posted_by']=$postedBy;
                        $offerdata['posted_userid']=$this->session->get('sessUserID');
                        $offerdata['offer_id']=2;
                        $offerdata['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $preofferComplete= new PreofferComplete();
                        $save=$preofferComplete->save($offerdata);
                    }

                    $chkloanComplete=UIElements::BapCustUniloanCompleteChk($leadid);
                    if($chkloanComplete==1){
                        $this->modelsManager->executeQuery("update Enquiry set approved_loan=1 where id='".$leadid."'");
                        //=======Save track report========
                        $trackData['track_for']='ApprovedLoan';
                        $trackData['userid']=$this->session->get('sessUserID');
                        $trackData['track_save_id']=$leadid;
                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);

                        //=======Save track report End========
                    }
                    //==========Loan Complete functionality end========
                    $this->flashSession->success("Documents uploaded successfully");
                    return $response->redirect('dashboard/preoffer/'.$leadid);
                }else{
                    $this->flashSession->success("Add Documents to upload");
                }
            }
        }
    }
    /**
    * Pre Offer three Action To upload pre offer step 3 documents to Lead User by Advisor or by customer
    * Action Name: preofferthreeAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 26-07-2018
    **/
    public function preofferthreeAction($leadid=''){
        $response = new \Phalcon\Http\Response();
        if($leadid==''){
            return $response->redirect('dashboard/leads');
        }
        if($this->request->isPost()){
            if($this->request->hasFiles() == true){
                $baseLocation = 'uploads/leadDocuments/';
                $filearr=$this->request->getUploadedFiles();//echo "<pre>";print_r($filearr);exit();
                if(!empty($filearr))
                {

                    //print_r($filearr);
                    foreach($filearr as $file)
                    {
                        //$file=$filearr[$i];//echo $file->getKey();
                        $filename=uniqid().$file->getName();
                        $fileError = $file->getError();
                        $file->moveTo($baseLocation.$filename);
                        //echo $filename;
                        /*if ($file->getKey()=="logo" && $fileError!=4) {//echo $filename;
                            $logo = $filename;
                        }*/
                        $data['lead_id']=$leadid;
                        $postedBy=($this->session->get('sessUserType')<=0)?2:1;
                        $data['posted_by']=$postedBy;
                        $data['post_user_id']=$this->session->get('sessUserID');
                        $data['upload_file']=$filename;
                        $data['upload_title']=$file->getName();
                        $data['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $preofferthreeDb= new Preofferthree();
                        $save=$preofferthreeDb->save($data);
                        if($save){
                            //=======Save track report========
                            $trackData['track_for']='preofferThree';
                            $trackData['userid']=$this->session->get('sessUserID');
                            $trackData['track_save_id']=$preofferthreeDb->id;
                            $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                            $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                            $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $trackClickSave = new TrackClickSave();
                            $saveTrack=$trackClickSave->save($trackData);

                            //=======Save track report End========
                        }

                    }
                    //========Loan Complete functionality=======
                    $chkComplete=PreofferComplete::find(array('conditions' => "lead_id='".$leadid."' and offer_id=3", 'limit' => 1));
                    if(count($chkComplete)<=0){
                        $offerdata['lead_id']=$leadid;
                        $postedBy=($this->session->get('sessUserType')<=0)?2:1;
                        $offerdata['posted_by']=$postedBy;
                        $offerdata['posted_userid']=$this->session->get('sessUserID');
                        $offerdata['offer_id']=3;
                        $offerdata['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $preofferComplete= new PreofferComplete();
                        $save=$preofferComplete->save($offerdata);
                    }

                    $chkloanComplete=UIElements::BapCustUniloanCompleteChk($leadid);
                    if($chkloanComplete==1){
                        $this->modelsManager->executeQuery("update Enquiry set approved_loan=1 where id='".$leadid."'");
                        //=======Save track report========
                        $trackData['track_for']='ApprovedLoan';
                        $trackData['userid']=$this->session->get('sessUserID');
                        $trackData['track_save_id']=$leadid;
                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);

                        //=======Save track report End========
                    }
                    //==========Loan Complete functionality end========
                    $this->flashSession->success("Documents uploaded successfully");
                    return $response->redirect('dashboard/preoffer/'.$leadid);
                }else{
                    $this->flashSession->success("Add Documents to upload");
                }
            }
        }
    }
    /**
    * Pre Offer four Action To upload pre offer step 4 documents to Lead User by Advisor or by customer
    * Action Name: preofferfourAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 26-07-2018
    **/
    public function preofferfourAction($leadid=''){
        $response = new \Phalcon\Http\Response();
        if($leadid==''){
            return $response->redirect('dashboard/leads');
        }
        if($this->request->isPost()){
            if($this->request->hasFiles() == true){
                $baseLocation = 'uploads/leadDocuments/';
                $filearr=$this->request->getUploadedFiles();//echo "<pre>";print_r($filearr);exit();
                if(!empty($filearr))
                {

                    //print_r($filearr);
                    foreach($filearr as $file)
                    {
                        //$file=$filearr[$i];//echo $file->getKey();
                        $filename=uniqid().$file->getName();
                        $fileError = $file->getError();
                        $file->moveTo($baseLocation.$filename);
                        //echo $filename;
                        /*if ($file->getKey()=="logo" && $fileError!=4) {//echo $filename;
                            $logo = $filename;
                        }*/
                        $data['lead_id']=$leadid;
                        $postedBy=($this->session->get('sessUserType')<=0)?2:1;
                        $data['posted_by']=$postedBy;
                        $data['post_user_id']=$this->session->get('sessUserID');
                        $data['upload_file']=$filename;
                        $data['upload_title']=$file->getName();
                        $data['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $preofferfourDb= new Preofferfour();
                        $save=$preofferfourDb->save($data);
                        if($save){
                            //=======Save track report========
                            $trackData['track_for']='PreofferFour';
                            $trackData['userid']=$this->session->get('sessUserID');
                            $trackData['track_save_id']=$preofferfourDb->id;
                            $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                            $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                            $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $trackClickSave = new TrackClickSave();
                            $saveTrack=$trackClickSave->save($trackData);

                            //=======Save track report End========
                        }

                    }
                    //========Loan Complete functionality=======
                    $chkComplete=PreofferComplete::find(array('conditions' => "lead_id='".$leadid."' and offer_id=4", 'limit' => 1));
                    if(count($chkComplete)<=0){
                        $offerdata['lead_id']=$leadid;
                        $postedBy=($this->session->get('sessUserType')<=0)?2:1;
                        $offerdata['posted_by']=$postedBy;
                        $offerdata['posted_userid']=$this->session->get('sessUserID');
                        $offerdata['offer_id']=4;
                        $offerdata['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $preofferComplete= new PreofferComplete();
                        $save=$preofferComplete->save($offerdata);
                    }

                    $chkloanComplete=UIElements::BapCustUniloanCompleteChk($leadid);
                    if($chkloanComplete==1){
                        $this->modelsManager->executeQuery("update Enquiry set approved_loan=1 where id='".$leadid."'");
                        //=======Save track report========
                        $trackData['track_for']='ApprovedLoan';
                        $trackData['userid']=$this->session->get('sessUserID');
                        $trackData['track_save_id']=$leadid;
                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);

                        //=======Save track report End========
                    }
                    //==========Loan Complete functionality end========
                    $this->flashSession->success("Documents uploaded successfully");
                    return $response->redirect('dashboard/preoffer/'.$leadid);
                }else{
                    $this->flashSession->success("Add Documents to upload");
                }
            }
        }
    }
    /**
    * Pre Offer five Action To upload pre offer step 5 documents to Lead User by Advisor or by customer
    * Action Name: preofferfiveAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 26-07-2018
    **/
    public function preofferfiveAction($leadid=''){
        $response = new \Phalcon\Http\Response();
        if($leadid==''){
            return $response->redirect('dashboard/leads');
        }
        if($this->request->isPost()){
            if($this->request->hasFiles() == true){
                $baseLocation = 'uploads/leadDocuments/';
                $filearr=$this->request->getUploadedFiles();//echo "<pre>";print_r($filearr);exit();
                if(!empty($filearr))
                {

                    //print_r($filearr);
                    foreach($filearr as $file)
                    {
                        //$file=$filearr[$i];//echo $file->getKey();
                        $filename=uniqid().$file->getName();
                        $fileError = $file->getError();
                        $file->moveTo($baseLocation.$filename);
                        //echo $filename;
                        /*if ($file->getKey()=="logo" && $fileError!=4) {//echo $filename;
                            $logo = $filename;
                        }*/
                        $data['lead_id']=$leadid;
                        $postedBy=($this->session->get('sessUserType')<=0)?2:1;
                        $data['posted_by']=$postedBy;
                        $data['post_user_id']=$this->session->get('sessUserID');
                        $data['upload_file']=$filename;
                        $data['upload_title']=$file->getName();
                        $data['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $preofferFiveDb= new Preofferfive();
                        $save=$preofferFiveDb->save($data);
                        if($save){
                            //=======Save track report========
                            $trackData['track_for']='addPreofferFive';
                            $trackData['userid']=$this->session->get('sessUserID');
                            $trackData['track_save_id']=$preofferFiveDb->id;
                            $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                            $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                            $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $trackClickSave = new TrackClickSave();
                            $saveTrack=$trackClickSave->save($trackData);

                            //=======Save track report End========
                        }

                    }
                    //========Loan Complete functionality=======
                    $chkComplete=PreofferComplete::find(array('conditions' => "lead_id='".$leadid."' and offer_id=5", 'limit' => 1));
                    if(count($chkComplete)<=0){
                        $offerdata['lead_id']=$leadid;
                        $postedBy=($this->session->get('sessUserType')<=0)?2:1;
                        $offerdata['posted_by']=$postedBy;
                        $offerdata['posted_userid']=$this->session->get('sessUserID');
                        $offerdata['offer_id']=5;
                        $offerdata['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $preofferComplete= new PreofferComplete();
                        $save=$preofferComplete->save($offerdata);
                    }

                    $chkloanComplete=UIElements::BapCustUniloanCompleteChk($leadid);
                    if($chkloanComplete==1){
                        $this->modelsManager->executeQuery("update Enquiry set approved_loan=1 where id='".$leadid."'");
                        //=======Save track report========
                        $trackData['track_for']='ApprovedLoan';
                        $trackData['userid']=$this->session->get('sessUserID');
                        $trackData['track_save_id']=$leadid;
                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);

                        //=======Save track report End========
                    }
                    //==========Loan Complete functionality end========
                    $this->flashSession->success("Documents uploaded successfully");
                    return $response->redirect('dashboard/preoffer/'.$leadid);
                }else{
                    $this->flashSession->success("Add Documents to upload");
                }
            }
        }
    }
    /**
    * Pre Offer six Action To fill pre offer step 6 details to Lead User by Advisor or by customer
    * Action Name: preoffersixAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 26-07-2018
    **/
    public function preoffersixAction($leadid=''){
        $response = new \Phalcon\Http\Response();
        if($leadid==''){
            return $response->redirect('dashboard/leads');
        }
        //========Loan Complete functionality=======
        $chkComplete=PreofferComplete::find(array('conditions' => "lead_id='".$leadid."' and offer_id=6", 'limit' => 1));
        if(count($chkComplete)<=0){
            $offerdata['lead_id']=$leadid;
            $postedBy=($this->session->get('sessUserType')<=0)?2:1;
            $offerdata['posted_by']=$postedBy;
            $offerdata['posted_userid']=$this->session->get('sessUserID');
            $offerdata['offer_id']=6;
            $offerdata['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            $preofferComplete= new PreofferComplete();
            $save=$preofferComplete->save($offerdata);
            if($save){
                //=======Save track report========
                $trackData['track_for']='Preoffersix';
                $trackData['userid']=$this->session->get('sessUserID');
                $trackData['track_save_id']=$leadid;
                $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $trackClickSave = new TrackClickSave();
                $saveTrack=$trackClickSave->save($trackData);

                //=======Save track report End========
            }
        }

        $chkloanComplete=UIElements::BapCustUniloanCompleteChk($leadid);
        if($chkloanComplete==1){
            $this->modelsManager->executeQuery("update Enquiry set approved_loan=1 where id='".$leadid."'");
            //=======Save track report========
            $trackData['track_for']='ApprovedLoan';
            $trackData['userid']=$this->session->get('sessUserID');
            $trackData['track_save_id']=$leadid;
            $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
            $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
            $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            $trackClickSave = new TrackClickSave();
            $saveTrack=$trackClickSave->save($trackData);

            //=======Save track report End========
        }
        return $response->redirect('dashboard/application/'.$leadid."/?#solicitordiv");
        //==========Loan Complete functionality end========
        exit();
    }

    /**
    * Pre Offer eight Action To fill pre offer step 8 details to Lead User by Advisor or by customer
    * Action Name: preoffereightAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 26-07-2018
    **/
    public function preoffereightAction($leadid=''){
        $response = new \Phalcon\Http\Response();
        if($leadid==''){
            return $response->redirect('dashboard/leads');
        }
        //========Loan Complete functionality=======
        $chkComplete=PreofferComplete::find(array('conditions' => "lead_id='".$leadid."' and offer_id=8", 'limit' => 1));
        if(count($chkComplete)<=0){
            $offerdata['lead_id']=$leadid;
            $postedBy=($this->session->get('sessUserType')<=0)?2:1;
            $offerdata['posted_by']=$postedBy;
            $offerdata['posted_userid']=$this->session->get('sessUserID');
            $offerdata['offer_id']=8;
            $offerdata['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            $preofferComplete= new PreofferComplete();
            $save=$preofferComplete->save($offerdata);
            if($save){
                //=======Save track report========
                $trackData['track_for']='preofferEight';
                $trackData['userid']=$this->session->get('sessUserID');
                $trackData['track_save_id']=$leadid;
                $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $trackClickSave = new TrackClickSave();
                $saveTrack=$trackClickSave->save($trackData);
                //=======Save track report End========
            }
        }

        $chkloanComplete=UIElements::BapCustUniloanCompleteChk($leadid);
        if($chkloanComplete==1){
            $this->modelsManager->executeQuery("update Enquiry set approved_loan=1 where id='".$leadid."'");
            //=======Save track report========
            $trackData['track_for']='ApprovedLoan';
            $trackData['userid']=$this->session->get('sessUserID');
            $trackData['track_save_id']=$leadid;
            $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
            $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
            $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            $trackClickSave = new TrackClickSave();
            $saveTrack=$trackClickSave->save($trackData);
            //=======Save track report End========
        }
        return $response->redirect('dashboard/application/'.$leadid."/?#assectandlibdiv");
        //==========Loan Complete functionality end========
        exit();
    }
    /**
    * Pre Offer nine Action To fill pre offer step 9 details to Lead User by Advisor or by customer
    * Action Name: preoffernineAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 26-07-2018
    **/
    public function preoffernineAction($leadid=''){
        $response = new \Phalcon\Http\Response();
        if($leadid==''){
            return $response->redirect('dashboard/leads');
        }
        //========Loan Complete functionality=======
        $chkComplete=PreofferComplete::find(array('conditions' => "lead_id='".$leadid."' and offer_id=9", 'limit' => 1));
        if(count($chkComplete)<=0){
            $offerdata['lead_id']=$leadid;
            $postedBy=($this->session->get('sessUserType')<=0)?2:1;
            $offerdata['posted_by']=$postedBy;
            $offerdata['posted_userid']=$this->session->get('sessUserID');
            $offerdata['offer_id']=9;
            $offerdata['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            $preofferComplete= new PreofferComplete();
            $save=$preofferComplete->save($offerdata);
            if($save){
                //=======Save track report========
                $trackData['track_for']='preofferNine';
                $trackData['userid']=$this->session->get('sessUserID');
                $trackData['track_save_id']=$leadid;
                $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $trackClickSave = new TrackClickSave();
                $saveTrack=$trackClickSave->save($trackData);
                //=======Save track report End========
            }
        }

        $chkloanComplete=UIElements::BapCustUniloanCompleteChk($leadid);
        if($chkloanComplete==1){
            $this->modelsManager->executeQuery("update Enquiry set approved_loan=1 where id='".$leadid."'");
            //=======Save track report========
            $trackData['track_for']='ApprovedLoan';
            $trackData['userid']=$this->session->get('sessUserID');
            $trackData['track_save_id']=$leadid;
            $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
            $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
            $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            $trackClickSave = new TrackClickSave();
            $saveTrack=$trackClickSave->save($trackData);
            //=======Save track report End========
        }
        return $response->redirect('dashboard/application/'.$leadid);
        //==========Loan Complete functionality end========
        exit();
    }

    /**
    * Pre Offer Ten Action To upload pre offer step 10 documents to Lead User by Advisor or by customer
    * Action Name: preoffertenAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 26-07-2018
    **/
    public function preoffertenAction($leadid=''){
        $response = new \Phalcon\Http\Response();
        if($leadid==''){
            return $response->redirect('dashboard/leads');
        }
        if($this->request->isPost()){
            if($this->request->hasFiles() == true){
                $baseLocation = 'uploads/leadDocuments/';
                $filearr=$this->request->getUploadedFiles();//echo "<pre>";print_r($filearr);exit();
                if(!empty($filearr))
                {

                    //print_r($filearr);
                    foreach($filearr as $file)
                    {
                        //$file=$filearr[$i];//echo $file->getKey();
                        $filename=uniqid().$file->getName();
                        $fileError = $file->getError();
                        $file->moveTo($baseLocation.$filename);
                        //echo $filename;
                        /*if ($file->getKey()=="logo" && $fileError!=4) {//echo $filename;
                            $logo = $filename;
                        }*/
                        $data['lead_id']=$leadid;
                        $postedBy=($this->session->get('sessUserType')<=0)?2:1;
                        $data['posted_by']=$postedBy;
                        $data['post_user_id']=$this->session->get('sessUserID');
                        $data['upload_file']=$filename;
                        $data['upload_title']=$file->getName();
                        $data['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $preoffertenDb= new Preofferten();
                        $save=$preoffertenDb->save($data);
                        if($save){
                            //=======Save track report========
                            $trackData['track_for']='preofferTen';
                            $trackData['userid']=$this->session->get('sessUserID');
                            $trackData['track_save_id']=$preoffertenDb->id;
                            $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                            $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                            $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $trackClickSave = new TrackClickSave();
                            $saveTrack=$trackClickSave->save($trackData);
                            //=======Save track report End========
                        }

                    }
                    //========Loan Complete functionality=======
                    $chkComplete=PreofferComplete::find(array('conditions' => "lead_id='".$leadid."' and offer_id=10", 'limit' => 1));
                    if(count($chkComplete)<=0){
                        $offerdata['lead_id']=$leadid;
                        $postedBy=($this->session->get('sessUserType')<=0)?2:1;
                        $offerdata['posted_by']=$postedBy;
                        $offerdata['posted_userid']=$this->session->get('sessUserID');
                        $offerdata['offer_id']=10;
                        $offerdata['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $preofferComplete= new PreofferComplete();
                        $save=$preofferComplete->save($offerdata);
                    }

                    $chkloanComplete=UIElements::BapCustUniloanCompleteChk($leadid);
                    if($chkloanComplete==1){
                        $this->modelsManager->executeQuery("update Enquiry set approved_loan=1 where id='".$leadid."'");
                        //=======Save track report========
                        $trackData['track_for']='ApprovedLoan';
                        $trackData['userid']=$this->session->get('sessUserID');
                        $trackData['track_save_id']=$leadid;
                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);
                        //=======Save track report End========
                    }
                    //==========Loan Complete functionality end========
                    $this->flashSession->success("Documents uploaded successfully");
                    return $response->redirect('dashboard/preoffer/'.$leadid);
                }else{
                    $this->flashSession->success("Add Documents to upload");
                }
            }
        }
    }
    public function removedocumentAction(){
        $responseArr=array('response' => 0, 'removeid' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            switch($allPost['documentof']){
                case 'preoffertwo':
                $findDetail=Preoffertwo::findFirst(array('conditions' => "id='".$allPost['doc_id']."'"));
                $delete=$this->modelsManager->executeQuery("delete from Preoffertwo where id='".$allPost['doc_id']."'");
                if($delete){
                    @unlink("uploads/leadDocuments/".$findDetail->upload_file);
                    $responseArr=array('response' => 1, 'removeid' => 'doc-preoffertwo-'.$allPost['doc_id']);
                }else{
                   $responseArr=array('response' => 1, 'removeid' => 'doc-preoffertwo-'.$allPost['doc_id']);
                }
                break;
                case 'preofferthree':
                $findDetail=Preofferthree::findFirst(array('conditions' => "id='".$allPost['doc_id']."'"));
                $delete=$this->modelsManager->executeQuery("delete from Preofferthree where id='".$allPost['doc_id']."'");
                if($delete){
                    @unlink("uploads/leadDocuments/".$findDetail->upload_file);
                    $responseArr=array('response' => 1, 'removeid' => 'doc-preofferthree-'.$allPost['doc_id']);
                }else{
                   $responseArr=array('response' => 1, 'removeid' => 'doc-preofferthree-'.$allPost['doc_id']);
                }
                break;
                case 'preofferfour':
                $findDetail=Preofferfour::findFirst(array('conditions' => "id='".$allPost['doc_id']."'"));
                $delete=$this->modelsManager->executeQuery("delete from Preofferfour where id='".$allPost['doc_id']."'");
                if($delete){
                    @unlink("uploads/leadDocuments/".$findDetail->upload_file);
                    $responseArr=array('response' => 1, 'removeid' => 'doc-preofferfour-'.$allPost['doc_id']);
                }else{
                   $responseArr=array('response' => 1, 'removeid' => 'doc-preofferfour-'.$allPost['doc_id']);
                }
                break;
                case 'preofferfive':
                $findDetail=Preofferfive::findFirst(array('conditions' => "id='".$allPost['doc_id']."'"));
                $delete=$this->modelsManager->executeQuery("delete from Preofferfive where id='".$allPost['doc_id']."'");
                if($delete){
                    @unlink("uploads/leadDocuments/".$findDetail->upload_file);
                    $responseArr=array('response' => 1, 'removeid' => 'doc-preofferfive-'.$allPost['doc_id']);
                }else{
                   $responseArr=array('response' => 1, 'removeid' => 'doc-preofferfive-'.$allPost['doc_id']);
                }
                break;
                 case 'preofferten':
                $findDetail=Preofferten::findFirst(array('conditions' => "id='".$allPost['doc_id']."'"));
                $delete=$this->modelsManager->executeQuery("delete from Preofferten where id='".$allPost['doc_id']."'");
                if($delete){
                    @unlink("uploads/leadDocuments/".$findDetail->upload_file);
                    $responseArr=array('response' => 1, 'removeid' => 'doc-preofferten-'.$allPost['doc_id']);
                }else{
                   $responseArr=array('response' => 1, 'removeid' => 'doc-preofferten-'.$allPost['doc_id']);
                }
                break;
                default:
                break;
            }
        }
        echo json_encode($responseArr);
        exit();
    }
    public function removeplacementdocumentAction(){
        $responseArr=array('response' => 0, 'removeid' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $findDetail=PlacementAttachment::findFirst(array('conditions' => "id='".$allPost['doc_id']."'"));
            $delete=$this->modelsManager->executeQuery("delete from PlacementAttachment where id='".$allPost['doc_id']."'");
            if($delete){
                @unlink("uploads/placement/".$findDetail->attach_file);
                $responseArr=array('response' => 1, 'removeid' => 'doc-placement-'.$allPost['doc_id']);
            }else{
               $responseArr=array('response' => 1, 'removeid' => 'doc-placement-'.$allPost['doc_id']);
            }
        }
        echo json_encode($responseArr);
        exit();
    }
    /**
    * preofferpayment Action To make lead user payment
    * Action Name: preofferpaymentAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 30-07-2018
    **/
    public function preofferpaymentAction($leadid='', $offerid=''){
        $response = new \Phalcon\Http\Response();
        if($leadid==''){
            return $response->redirect('dashboard/leads');
        }
        $leadDetail=Users::findFirst(array('conditions' => "lead_id='".$leadid."'"));
        $this->view->setVar('leadDetail', $leadDetail);
        $this->view->setVar('lead_id', $leadid);
        $this->view->setVar('offerid', $offerid);
    }
    /**
    * paymentdata Action To save lead user payment detail
    * Action Name: paymentdataAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 30-07-2018
    **/
    public function paymentdataAction(){
        $responseArr=array('response' => 2, 'amt' => 0);
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $this->session->set('paymentdata', $allPost);
            $responseArr=array('response' => 1, 'amt' => $allPost['payment_amt']);
        }
        echo json_encode($responseArr);
        exit();
    }
    /**
    * paymentsuccess Action To save lead user payment detail
    * Action Name: paymentsuccessAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 30-07-2018
    **/
    public function paymentsuccessAction(){
        $response = new \Phalcon\Http\Response();
        if(!$this->session->has('paymentdata')){
            return $response->redirect('dashboard/leads');
        }
        $paymentData=$this->session->get('paymentdata');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if(isset($allPost['txn_id']) && $allPost['txn_id']!=''){
                $pmtData['name']=$paymentData['payment_name'];
                $pmtData['email']=$paymentData['payment_email'];
                $pmtData['phone_no']=$paymentData['payment_phone'];
                $pmtData['company_name']=$paymentData['company_name'];
                $pmtData['name_of_valuer']=$paymentData['name_of_valuer'];
                $pmtData['date_instructed']=$paymentData['date_instructed'];
                $pmtData['date_of_inspection']=$paymentData['date_of_inspection'];
                $pmtData['date_report_receive']=$paymentData['date_report_receive'];
                $pmtData['copy_of_report']=$paymentData['copy_of_report'];

                $pmtData['lead_id']=$paymentData['lead_id'];
                $pmtData['payment_by']=$this->session->get('sessUserID');
                $pmtData['payment_status']=1;
                $pmtData['txn_id']=$allPost['txn_id'];
                $pmtData['payment_amt']=$allPost['payment_gross'];
                $pmtData['payment_date']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $lastPayments=PreofferPayment::find(array('order' => "id desc", 'limit' => 1));
                if(count($lastPayments)>0){
                    $lastID=$lastPayments[0]->payment_id;
                    $lastIdArr=implode("T", $lastID);
                    $increaseID=$lastIdArr[1]+1;
                    $pmtData['payment_id']="PMT".$increaseID;
                }else{
                    $pmtData['payment_id']="PMT10001";
                }
                $PreofferPaymentDb= new PreofferPayment();
                $saveDb=$PreofferPaymentDb->save($pmtData);
                if($saveDb){
                        //=======Save track report========
                        $trackData['track_for']='preofferPayment';
                        $trackData['userid']=$this->session->get('sessUserID');
                        $trackData['track_save_id']=$PreofferPaymentDb->id;
                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);
                        //=======Save track report End========

                    //========Loan Complete functionality=======
                    $leadid=$paymentData['lead_id'];
                    $offerID=$paymentData['offerid'];
                    $chkComplete=PreofferComplete::find(array('conditions' => "lead_id='".$leadid."' and offer_id='".$offerID."'", 'limit' => 1));
                    if(count($chkComplete)<=0){
                        $offerdata['lead_id']=$leadid;
                        $postedBy=($this->session->get('sessUserType')<=0)?2:1;
                        $offerdata['posted_by']=$postedBy;
                        $offerdata['posted_userid']=$this->session->get('sessUserID');
                        $offerdata['offer_id']=$offerID;
                        $offerdata['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $preofferComplete= new PreofferComplete();
                        $save=$preofferComplete->save($offerdata);
                    }

                    $chkloanComplete=UIElements::BapCustUniloanCompleteChk($leadid);
                    if($chkloanComplete==1){
                        $this->modelsManager->executeQuery("update Enquiry set approved_loan=1 where id='".$leadid."'");
                        //=======Save track report========
                        $trackData['track_for']='ApprovedLoan';
                        $trackData['userid']=$this->session->get('sessUserID');
                        $trackData['track_save_id']=$leadid;
                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);
                        //=======Save track report End========
                    }
                    //==========Loan Complete functionality end========

                    //$this->flashSession->success("Payment Made Successfully");

                    //============mail Send feature start here==========
                    $leadDetail=Users::findFirst(array('conditions' => "lead_id='".$paymentData['lead_id']."'"));
                    $enquiryDetail=Enquiry::findFirst(array('conditions' => "id='".$paymentData['lead_id']."'"));
                    $siteAdmin = Sitesetting::findFirst(array("id=1"));

                    $PaymentDetail="<table>
                            
                            <tr>
                                <td><strong>Name:</strong>".$paymentData['payment_name']."</td>
                            </tr>
                            <tr>
                                <td><strong>Email Id:</strong>".$paymentData['payment_email']."</td>
                            </tr>
                            <tr>
                                <td><strong>Phone No:</strong>".$paymentData['payment_phone']."</td>
                            </tr>
                            <tr>
                                <td><strong>Company Name:</strong>".$paymentData['company_name']."</td>
                            </tr>
                            <tr>
                                <td><strong>Name Of Valuer:</strong>".$paymentData['name_of_valuer']."</td>
                            </tr>
                            <tr>
                                <td><strong>Date Instructed:</strong>".$paymentData['date_instructed']."</td>
                            </tr>
                            <tr>
                                <td><strong>Date Of Inspection:</strong>".$paymentData['date_of_inspection']."</td>
                            </tr>
                            <tr>
                                <td><strong>Date Report Receive:</strong>".$paymentData['date_report_receive']."</td>
                            </tr>
                            <tr>
                                <td><strong>Copy Of Report:</strong>".$paymentData['copy_of_report']."</td>
                            </tr>
                            <tr>
                                <td><strong>Lead ID:</strong>".$enquiryDetail->lead_id."</td>
                            </tr>
                            <tr>
                                <td><strong>Payment ID:</strong>".$pmtData['payment_id']."</td>
                            </tr>
                            
                        </table>";


                    $mailContent=UIElements::bapCustUniGetMailText(4);
                    $amsg=$mailContent['body'];
                    $amsg=str_replace('{PaymentDetail}', $PaymentDetail, $amsg);


                    $subject =  $mailContent['subject'];

                     $amsg=UIElements::replaceEnquiryEmailMessage($paymentData['lead_id'],$amsg);
                    $subject=UIElements::replaceEnquiryEmailMessage($paymentData['lead_id'],$subject);
                    $sentUmail =UIElements::sendEmail($siteAdmin->admin_mail_id, $subject, $amsg);

                    //------user mail send--------------
                    $sessionID=$this->session->get('sessUserID');
                    $sessuserDetail=Users::findFirst(array('conditions' => "id='".$sessionID."'"));
                    if($this->session->get('sessUserType')<=0){

                        $PaymentDetail="<table>
                            
                            <tr>
                                <td><strong>Name:</strong>".$paymentData['payment_name']."</td>
                            </tr>
                            <tr>
                                <td><strong>Email Id:</strong>".$paymentData['payment_email']."</td>
                            </tr>
                            <tr>
                                <td><strong>Phone No:</strong>".$paymentData['payment_phone']."</td>
                            </tr>
                            <tr>
                                <td><strong>Lead ID:</strong>".$enquiryDetail->lead_id."</td>
                            </tr>
                            <tr>
                                <td><strong>Payment ID:</strong>".$pmtData['payment_id']."</td>
                            </tr>
                            
                        </table>";

                        //$subject =  stripslashes($siteAdmin->site_title).':  Payment Success';
                        //$sentUmail =UIElements::sendEmail($paymentData['payment_email'], $subject, $umsg);
                        $mailContent=UIElements::bapCustUniGetMailText(5);
                        $umsg=$mailContent['body'];
                        $umsg=str_replace('{Name}', stripslashes($leadDetail->first_name), $umsg);
                        $umsg=str_replace('{PaymentDetail}', $PaymentDetail, $umsg);



                        $subject =  $mailContent['subject'];
                        $umsg=UIElements::replaceEnquiryEmailMessage($paymentData['lead_id'],$umsg);
                        $subject=UIElements::replaceEnquiryEmailMessage($paymentData['lead_id'],$subject);

                        $paymentEmailID="";
                        if(strpos($paymentData['payment_email'],"gov.")!==false){

                        }else if(strpos($paymentData['payment_email'],"police.")!==false){

                        }else if(strpos($paymentData['payment_email'],"nhs.")!==false){

                        }else if(strpos($paymentData['payment_email'],"sch.")!==false){

                        }else if(strpos($paymentData['payment_email'],"ac.")!==false){
                        }else{
                            $paymentEmailID=$paymentData['payment_email'];
                        }
                        if($paymentEmailID!=''){
                             $sentUmail =UIElements::sendEmail($paymentEmailID, $subject, $umsg);
                        }


                    }
                    //-------user mail send--------------

                    //---------Mail send To Adviser----------
                    $adviserID=$enquiryDetail->advisor_id;
                    $adviserDetail=Users::findFirst(array('conditions' => "id='".$adviserID."'"));
                    if($this->session->get('sessUserType')>0){
                        $PaymentDetail="<table>
                            
                            <tr>
                                <td><strong>Name:</strong>".$paymentData['payment_name']."</td>
                            </tr>
                            <tr>
                                <td><strong>Email Id:</strong>".$paymentData['payment_email']."</td>
                            </tr>
                            <tr>
                                <td><strong>Phone No:</strong>".$paymentData['payment_phone']."</td>
                            </tr>
                            <tr>
                                <td><strong>Lead ID:</strong>".$enquiryDetail->lead_id."</td>
                            </tr>
                            <tr>
                                <td><strong>Payment ID:</strong>".$pmtData['payment_id']."</td>
                            </tr>
                            
                        </table>";
                        $mailContent=UIElements::bapCustUniGetMailText(8);
                        $advMsg=$mailContent['body'];
                        $advMsg=str_replace('{Name}', stripslashes($leadDetail->first_name), $advMsg);
                        $advMsg=str_replace('{AdvisorName}', stripslashes($adviserDetail->first_name), $advMsg);
                        $advMsg=str_replace('{PaymentDetail}', $PaymentDetail, $advMsg);



                        $subject =  $mailContent['subject'];

                        $advMsg=UIElements::replaceEnquiryEmailMessage($paymentData['lead_id'],$advMsg);
                        $subject=UIElements::replaceEnquiryEmailMessage($paymentData['lead_id'],$subject);
                        $paymentEmailID="";
                        if(strpos($paymentData['payment_email'],"gov.")!==false){

                        }else if(strpos($paymentData['payment_email'],"police.")!==false){

                        }else if(strpos($paymentData['payment_email'],"nhs.")!==false){

                        }else if(strpos($paymentData['payment_email'],"sch.")!==false){

                        }else if(strpos($paymentData['payment_email'],"ac.")!==false){
                        }else{
                            $paymentEmailID=$paymentData['payment_email'];
                        }
                        if($paymentEmailID!=''){
                             $sentUmail =UIElements::sendEmail($paymentEmailID, $subject, $advMsg);
                        }


                    }
                    //---------Advisor mail send end------
                    //============Mail Send Feature end here============
                    $this->session->remove('paymentdata');
                }
            }else{
                $this->flashSession->error("Payment Failed! please Try Again.");
            }
        }else{
            return $response->redirect('dashboard/preoffer/'.$paymentData['lead_id']);
        }
    }
    /**
    * paymenterror Action To show lead user payment error message
    * Action Name: paymenterrorAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 31-07-2018
    **/
    public function paymenterrorAction(){

    }
    /**
    * statistics Action To show statistics of loan
    * Action Name: statisticsAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 13-07-2018
    **/
    public function statisticsAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if(UIElements::bapCustUniNewAdvChk()==1){
            return $response->redirect('dashboard');
        }
        //Top 3 Most popular courses end======
        if($this->request->isGet()){
            $allGet=$this->request->get();
            if((isset($allGet['fromdate']) && $allGet['fromdate']!='') && (isset($allGet['todate']) && $allGet['todate']!='') ){

                $fromDate=str_replace('/', "-", $allGet['fromdate']);
                $curdate=date("Y-m-d", strtotime($fromDate));
                $currentdate=$curdate;

                $toDate=str_replace('/', "-", $allGet['todate']);
                $toDate=date("Y-m-d", strtotime($toDate));


                $currentYear=date("Y", strtotime($curdate));
                $currentMonth=date("m", strtotime($curdate));

                $monthStartDate=$curdate;
                $monthEndRawDate=date("Y-m-t", strtotime($curdate));
                if($toDate>$monthEndRawDate){
                    $monthEndDate=$monthEndRawDate;
                }else{
                    $monthEndDate=$toDate;
                }

                $yearstartdate=$curdate;
                $yearRawenddate=date("Y-12-31", strtotime($curdate));
                if($toDate>$yearRawenddate){
                    $yearenddate=$yearRawenddate;
                }else{
                    $yearenddate=$toDate;
                }
            }else if((isset($allGet['fromdate']) && $allGet['fromdate']!='') && (isset($allGet['todate']) && $allGet['todate']=='') ){

                $fromDate=str_replace('/', "-", $allGet['fromdate']);
                $curdate=date("Y-m-d", strtotime($fromDate));
                $currentdate=$curdate;



                $currentYear=date("Y", strtotime($curdate));
                $currentMonth=date("m", strtotime($curdate));

                $monthStartDate=date("Y-m-01", strtotime($curdate));
                $monthEndRawDate=date("Y-m-t", strtotime($curdate));
                $monthEndDate=$monthEndRawDate;

                $yearstartdate=date("Y-01-01", strtotime($curdate));
                $yearRawenddate=date("Y-12-31", strtotime($curdate));
                $yearenddate=$yearRawenddate;
            }else if((isset($allGet['fromdate']) && $allGet['fromdate']=='') && (isset($allGet['todate']) && $allGet['todate']!='') ){

                $toDate=str_replace('/', "-", $allGet['todate']);
                $curdate=date("Y-m-d", strtotime($toDate));
                $currentdate=$curdate;




                $currentYear=date("Y", strtotime($curdate));
                $currentMonth=date("m", strtotime($curdate));

                $monthStartDate=date("Y-m-01", strtotime($curdate));
                $monthEndRawDate=date("Y-m-t", strtotime($curdate));
                $monthEndDate=$monthEndRawDate;

                $yearstartdate=date("Y-01-01", strtotime($curdate));
                $yearRawenddate=date("Y-12-31", strtotime($curdate));
                $yearenddate=$yearRawenddate;
            }else{
                $curdate=date("Y-m-d");
                $monthStartDate=date("Y-m-01");
                $monthEndDate=date("Y-m-t");
                $currentdate=date("Y-m-d");
                $yearstartdate=date("Y-01-01");
                $yearenddate=date("Y-12-31");
            }
            if(isset($allGet['advisor_id']) && $allGet['advisor_id']!=''){
                $advIDCond=" and advisor_id='".$allGet['advisor_id']."'";
                $advIDJoinCond=" and enquiry.advisor_id='".$allGet['advisor_id']."'";
            }else{
                $advIDCond="";
                $advIDJoinCond="";
            }
        }else{
            $curdate=date("Y-m-d");
            $monthStartDate=date("Y-m-01");
            $monthEndDate=date("Y-m-t");
            $currentdate=date("Y-m-d");
            $yearstartdate=date("Y-01-01");
            $yearenddate=date("Y-12-31");
            $advIDCond="";
        }

        $weeklyDates=UIElements::BapCustUniweekStaratEnd();
        // echo "<pre>";print_r($weeklyDates);exit;
        $sessionID=$this->session->get('sessUserID');
        //Today no of lead Add=========
        //echo "select count(*) as totlead from enquiry where date(created)='".$curdate."'".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)"; exit();
        $todayleadAdd=Enquiry::findList("select count(*) as totlead from enquiry where date(created)='".$curdate."'".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('todayleadAdd', $todayleadAdd);
        //Today no of lead Add End=========

        //Weekly no of lead Add=========

        $weeklyLeadAdd=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('weeklyLeadAdd', $weeklyLeadAdd);
        //Weekly no of lead Add End=========

         //Monthly no of lead Add=========

        $monthlyLeadAdd=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$monthStartDate."' and date(created)<='".$monthEndDate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('monthlyLeadAdd', $monthlyLeadAdd);
        //Monthly no of lead Add End=========

        //Quarterly no of lead add==========
       //echo $date=ceil(date('n', time()) / 3);exit();
        $quarterdateArr=array();
        for($count=1; $count<4; $count++){
            $incAmt=122*$count;
            $newdate=date('Y-m-d', strtotime("+".$incAmt." day", strtotime($yearstartdate)));
            array_push($quarterdateArr, $newdate);
            if(count($quarterdateArr)>0){

                $decVal=$count-2;
                $quarterdateArr[$decVal];
                if($currentdate>$quarterdateArr[$decVal] && $currentdate<$newdate){
                    if($decVal==-1){
                        $qtStartDate=$yearstartdate;
                    }else{
                        $qtStartDate=$quarterdateArr[$decVal];
                    }

                    $qtEnddate=$newdate;
                }else if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }else{
                if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }

        }
       // echo $qtEnddate;
       // echo $qtStartDate;
        //echo "select count(*) as totlead from enquiry where (date(created)>='".$qtStartDate."' and date(created)<='".$qtEnddate."') and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)";
       //print_r($quarterdateArr); exit();
        $quarterLeadApp=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$qtStartDate."' and date(created)<='".$qtEnddate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('quarterLeadApp', $quarterLeadApp);
        //echo $quarterLeadApp[0]['totlead'];
        // exit();
        //Quarterly no of lead add=============

        //yearly no of lead add================

        $yearlyLeadApp=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$yearstartdate."' and date(created)<='".$yearenddate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('yearlyLeadApp', $yearlyLeadApp);
        //yearly no of lead add End================

        //=========================Approve to lender==============

        $weeklyDates=UIElements::BapCustUniweekStaratEnd();
        // echo "<pre>";print_r($weeklyDates);exit;
        $sessionID=$this->session->get('sessUserID');
        //Today no of lead Add=========

        $todayLenderApprove=Enquiry::findList("select count(*) as totlead from enquiry where date(approve_lender_date)='".$curdate."' and approve_by_lender>0".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('todayLenderApprove', $todayLenderApprove);
        //Today no of lead Add End=========

        //Weekly no of lead Add=========

        $weeklyLenderApprove=Enquiry::findList("select count(*) as totlead from enquiry where (date(approve_lender_date)>='".$weeklyDates[0]."' and date(approve_lender_date)<='".$weeklyDates[1]."') and approve_by_lender>0".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('weeklyLenderApprove', $weeklyLenderApprove);
        //Weekly no of lead Add End=========

         //Monthly no of lead Add=========
        $monthlyLenderApprove=Enquiry::findList("select count(*) as totlead from enquiry where (date(approve_lender_date)>='".$monthStartDate."' and date(approve_lender_date)<='".$monthEndDate."')".$advIDCond." and approve_by_lender>0 and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('monthlyLenderApprove', $monthlyLenderApprove);
        //Monthly no of lead Add End=========

        //Quarterly no of lead add==========
       //echo $date=ceil(date('n', time()) / 3);exit();
        $quarterdateArr=array();
        for($count=1; $count<4; $count++){
            $incAmt=122*$count;
            $newdate=date('Y-m-d', strtotime("+".$incAmt." day", strtotime($yearstartdate)));
            array_push($quarterdateArr, $newdate);
            if(count($quarterdateArr)>0){
                $decVal=$count-2;
                //echo $quarterdateArr[$decVal];
                if($currentdate>$quarterdateArr[$decVal] && $currentdate<$newdate){
                    if($decVal==-1){
                        $qtStartDate=$yearstartdate;
                    }else{
                        $qtStartDate=$quarterdateArr[$decVal];
                    }
                    $qtEnddate=$newdate;
                }else if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }else{
                if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }

        }

        $quarterLenderApprove=Enquiry::findList("select count(*) as totlead from enquiry where (date(approve_lender_date)>='".$qtStartDate."' and date(approve_lender_date)<='".$qtEnddate."') and approve_by_lender>0".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('quarterLenderApprove', $quarterLenderApprove);
        //Quarterly no of lead add=============

        //yearly no of lead add================
        $yearlyLenderApprove=Enquiry::findList("select count(*) as totlead from enquiry where (date(approve_lender_date)>='".$yearstartdate."' and date(approve_lender_date)<='".$yearenddate."') and approve_by_lender>0".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('yearlyLenderApprove', $yearlyLenderApprove);
        //yearly no of lead add End================

        //=========================Approve to lender==============

         //=========================Pre Completion==============

        $weeklyDates=UIElements::BapCustUniweekStaratEnd();
        // echo "<pre>";print_r($weeklyDates);exit;
        $sessionID=$this->session->get('sessUserID');
        //Today no of lead Add=========

       /* $todayPreCompletion=Enquiry::findList("select count(*) as totlead from enquiry inner join caserequirement_precompletion on enquiry.id=caserequirement_precompletion.lead_id where date(caserequirement_precompletion.created)='".$curdate."'".$advIDJoinCond." and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL)")->toArray();
        $this->view->setVar('todayPreCompletion', $todayPreCompletion);
        //Today no of lead Add End=========

        //Weekly no of lead Add=========

        $weeklyPreCompletion=Enquiry::findList("select count(*) as totlead from enquiry inner join caserequirement_precompletion on enquiry.id=caserequirement_precompletion.lead_id where (date(caserequirement_precompletion.created)>='".$weeklyDates[0]."' and date(caserequirement_precompletion.created)<='".$weeklyDates[1]."')".$advIDJoinCond." and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL)")->toArray();
        $this->view->setVar('weeklyPreCompletion', $weeklyPreCompletion);
        //Weekly no of lead Add End=========

         //Monthly no of lead Add=========
        $monthlyPreCompletion=Enquiry::findList("select count(*) as totlead from enquiry inner join caserequirement_precompletion on enquiry.id=caserequirement_precompletion.lead_id where (date(caserequirement_precompletion.created)>='".$monthStartDate."' and date(caserequirement_precompletion.created)<='".$monthEndDate."')".$advIDJoinCond." and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL)")->toArray();
        $this->view->setVar('monthlyPreCompletion', $monthlyPreCompletion);
        //Monthly no of lead Add End=========

        //Quarterly no of lead add==========
       //echo $date=ceil(date('n', time()) / 3);exit();
        $quarterdateArr=array();
        for($count=1; $count<4; $count++){
            $incAmt=122*$count;
            $newdate=date('Y-m-d', strtotime("+".$incAmt." day", strtotime($yearstartdate)));
            array_push($quarterdateArr, $newdate);
            if(count($quarterdateArr)>0){
                $decVal=$count-2;
                //echo $quarterdateArr[$decVal];
                if($currentdate>$quarterdateArr[$decVal] && $currentdate<$newdate){
                    if($decVal==-1){
                        $qtStartDate=$yearstartdate;
                    }else{
                        $qtStartDate=$quarterdateArr[$decVal];
                    }
                    $qtEnddate=$newdate;
                }else if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }else{
                if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }

        }

        $quarterPreCompletion=Enquiry::findList("select count(*) as totlead from enquiry inner join caserequirement_precompletion on enquiry.id=caserequirement_precompletion.lead_id where (date(caserequirement_precompletion.created)>='".$qtStartDate."' and date(caserequirement_precompletion.created)<='".$qtEnddate."')".$advIDJoinCond." and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL)")->toArray();
        $this->view->setVar('quarterPreCompletion', $quarterPreCompletion);
        //Quarterly no of lead add=============

        //yearly no of lead add================
        $yearlyPreCompletion=Enquiry::findList("select count(*) as totlead from enquiry inner join caserequirement_precompletion on enquiry.id=caserequirement_precompletion.lead_id where (date(caserequirement_precompletion.created)>='".$yearstartdate."' and date(caserequirement_precompletion.created)<='".$yearenddate."')".$advIDJoinCond." and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL)")->toArray();
        $this->view->setVar('yearlyPreCompletion', $yearlyPreCompletion);
        //yearly no of lead add End================*/

        //=========================pre completion==============


        //========================Completed lead=================
        $weeklyDates=UIElements::BapCustUniweekStaratEnd();
        // echo "<pre>";print_r($weeklyDates);exit;
        $sessionID=$this->session->get('sessUserID');
        //Today no of lead Add=========

        $todayCompleted=Enquiry::findList("select count(*) as totlead from enquiry where date(complete_date)='".$curdate."'".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('todayCompleted', $todayCompleted);
        //Today no of lead Add End=========

        //Weekly no of lead Add=========

        $weeklyCompleted=Enquiry::findList("select count(*) as totlead from enquiry where (date(complete_date)>='".$weeklyDates[0]."' and date(complete_date)<='".$weeklyDates[1]."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('weeklyCompleted', $weeklyCompleted);
        //Weekly no of lead Add End=========

         //Monthly no of lead Add=========
        $monthlyCompleted=Enquiry::findList("select count(*) as totlead from enquiry where (date(complete_date)>='".$monthStartDate."' and date(complete_date)<='".$monthEndDate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('monthlyCompleted', $monthlyCompleted);
        //Monthly no of lead Add End=========

        //Quarterly no of lead add==========
       //echo $date=ceil(date('n', time()) / 3);exit();
        $quarterdateArr=array();
        for($count=1; $count<4; $count++){
            $incAmt=122*$count;
            $newdate=date('Y-m-d', strtotime("+".$incAmt." day", strtotime($yearstartdate)));
            array_push($quarterdateArr, $newdate);
            if(count($quarterdateArr)>0){
                $decVal=$count-2;
                //echo $quarterdateArr[$decVal];
                if($currentdate>$quarterdateArr[$decVal] && $currentdate<$newdate){
                    if($decVal==-1){
                        $qtStartDate=$yearstartdate;
                    }else{
                        $qtStartDate=$quarterdateArr[$decVal];
                    }
                    $qtEnddate=$newdate;
                }else if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }else{
                if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }

        }

        $quarterCompleted=Enquiry::findList("select count(*) as totlead from enquiry where (date(complete_date)>='".$qtStartDate."' and date(complete_date)<='".$qtEnddate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('quarterCompleted', $quarterCompleted);
        //Quarterly no of lead add=============

        //yearly no of lead add================
        $yearlyCompleted=Enquiry::findList("select count(*) as totlead from enquiry where (date(complete_date)>='".$yearstartdate."' and date(complete_date)<='".$yearenddate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('yearlyCompleted', $yearlyCompleted);
        //yearly no of lead add End================
        //========================End completed lead==============


        //==============Total new lead===================
        $weeklyDates=UIElements::BapCustUniweekStaratEnd();
        // echo "<pre>";print_r($weeklyDates);exit;
        $sessionID=$this->session->get('sessUserID');
        //Today no of lead Add=========

        $todayTotalleadAdd=Enquiry::findList("select count(*) as totlead from enquiry where date(created)='".$curdate."'".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('todayTotalleadAdd', $todayTotalleadAdd);
        //Today no of lead Add End=========

        //Weekly no of lead Add=========

        $weeklyTotalLeadAdd=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('weeklyTotalLeadAdd', $weeklyTotalLeadAdd);
        //Weekly no of lead Add End=========

         //Monthly no of lead Add=========
        $monthlyTotalLeadAdd=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$monthStartDate."' and date(created)<='".$monthEndDate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('monthlyTotalLeadAdd', $monthlyTotalLeadAdd);
        //Monthly no of lead Add End=========

        //Quarterly no of lead add==========
       //echo $date=ceil(date('n', time()) / 3);exit();
        $quarterdateArr=array();
        for($count=1; $count<4; $count++){
            $incAmt=122*$count;
            $newdate=date('Y-m-d', strtotime("+".$incAmt." day", strtotime($yearstartdate)));
            array_push($quarterdateArr, $newdate);
            if(count($quarterdateArr)>0){
                $decVal=$count-2;
                //echo $quarterdateArr[$decVal];
                if($currentdate>$quarterdateArr[$decVal] && $currentdate<$newdate){
                    if($decVal==-1){
                        $qtStartDate=$yearstartdate;
                    }else{
                        $qtStartDate=$quarterdateArr[$decVal];
                    }
                    $qtEnddate=$newdate;
                }else if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }else{
                if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }

        }

        $quarterTotalLeadApp=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$qtStartDate."' and date(created)<='".$qtEnddate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('quarterTotalLeadApp', $quarterTotalLeadApp);
        //Quarterly no of lead add=============

        //yearly no of lead add================
        $yearlyTotalLeadApp=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$yearstartdate."' and date(created)<='".$yearenddate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('yearlyTotalLeadApp', $yearlyTotalLeadApp);
        //yearly no of lead add End================
        //==============Total New lead End===============



        //==============Total Gross Loan lead===================
        $weeklyDates=UIElements::BapCustUniweekStaratEnd();
        // echo "<pre>";print_r($weeklyDates);exit;
        $sessionID=$this->session->get('sessUserID');
        //Today no of lead Add=========

        $todayleadGross=Enquiry::findList("select SUM( amount_required ) AS totloangross, SUM( purchase_price ) totpurchase from enquiry where date(created)='".$curdate."'".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('todayleadGross', $todayleadGross);
        //Today no of lead Add End=========

        //Weekly no of lead Add=========

        $weeklyleadGross=Enquiry::findList("select SUM( amount_required ) AS totloangross, SUM( purchase_price ) totpurchase from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('weeklyleadGross', $weeklyleadGross);
        //Weekly no of lead Add End=========

         //Monthly no of lead Add=========
        $monthlyleadGross=Enquiry::findList("select SUM( amount_required ) AS totloangross, SUM( purchase_price ) totpurchase from enquiry where (date(created)>='".$monthStartDate."' and date(created)<='".$monthEndDate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('monthlyleadGross', $monthlyleadGross);
        //Monthly no of lead Add End=========

        //Quarterly no of lead add==========
       //echo $date=ceil(date('n', time()) / 3);exit();
        $quarterdateArr=array();
        for($count=1; $count<4; $count++){
            $incAmt=122*$count;
            $newdate=date('Y-m-d', strtotime("+".$incAmt." day", strtotime($yearstartdate)));
            array_push($quarterdateArr, $newdate);
            if(count($quarterdateArr)>0){
                $decVal=$count-2;
                //echo $quarterdateArr[$decVal];
                if($currentdate>$quarterdateArr[$decVal] && $currentdate<$newdate){
                    if($decVal==-1){
                        $qtStartDate=$yearstartdate;
                    }else{
                        $qtStartDate=$quarterdateArr[$decVal];
                    }
                    $qtEnddate=$newdate;
                }else if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }else{
                if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }

        }

        $quarterleadGross=Enquiry::findList("select SUM( amount_required ) AS totloangross, SUM( purchase_price ) totpurchase from enquiry where (date(created)>='".$qtStartDate."' and date(created)<='".$qtEnddate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('quarterleadGross', $quarterleadGross);
        //Quarterly no of lead add=============

        //yearly no of lead add================
        $yearlyleadGross=Enquiry::findList("select SUM( amount_required ) AS totloangross, SUM( purchase_price ) totpurchase from enquiry where (date(created)>='".$yearstartdate."' and date(created)<='".$yearenddate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('yearlyleadGross', $yearlyleadGross);
        //yearly no of lead add End================
        //==============Total Gross Loan lead End===============


        //==============Total LTV percent of leads===================
        $weeklyDates=UIElements::BapCustUniweekStaratEnd();
        // echo "<pre>";print_r($weeklyDates);exit;
        $sessionID=$this->session->get('sessUserID');
        //Today no of lead Add=========

        $todayLeadBelowSixtyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where date(created)='".$curdate."'".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>0 and ltv_required<60)")->toArray();
        $this->view->setVar('todayLeadBelowSixtyLtv', $todayLeadBelowSixtyLtv);

        $todayLeadSixtyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where date(created)='".$curdate."'".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=60 and ltv_required<70)")->toArray();
        $this->view->setVar('todayLeadSixtyLtv', $todayLeadSixtyLtv);

        $todayLeadSeventyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where date(created)='".$curdate."'".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=70 and ltv_required<80)")->toArray();
        $this->view->setVar('todayLeadSeventyLtv', $todayLeadSeventyLtv);

         $todayLeadEightyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where date(created)='".$curdate."'".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=80 and ltv_required<90)")->toArray();
        $this->view->setVar('todayLeadEightyLtv', $todayLeadEightyLtv);

        $todayLeadNightyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where date(created)='".$curdate."'".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=90 and ltv_required<100)")->toArray();
        $this->view->setVar('todayLeadNightyLtv', $todayLeadNightyLtv);
        //Today no of lead Add End=========

        //Weekly no of lead Add=========

        $weeklyLeadBelowSixtyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>0 and ltv_required<60)")->toArray();
        $this->view->setVar('weeklyLeadBelowSixtyLtv', $weeklyLeadBelowSixtyLtv);

        $weeklyLeadSixtyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=60 and ltv_required<70)")->toArray();
        $this->view->setVar('weeklyLeadSixtyLtv', $weeklyLeadSixtyLtv);

        $weeklyLeadSeventyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=70 and ltv_required<80)")->toArray();
        $this->view->setVar('weeklyLeadSeventyLtv', $weeklyLeadSeventyLtv);

         $weeklyLeadEightyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=80 and ltv_required<90)")->toArray();
        $this->view->setVar('weeklyLeadEightyLtv', $weeklyLeadEightyLtv);

        $weeklyLeadnintyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=90 and ltv_required<100)")->toArray();
        $this->view->setVar('weeklyLeadnintyLtv', $weeklyLeadnintyLtv);
        //Weekly no of lead Add End=========

         //Monthly no of lead Add=========
        $monthlyLeadBelowSixtyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$monthStartDate."' and date(created)<='".$monthEndDate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>0 and ltv_required<60)")->toArray();
        $this->view->setVar('monthlyLeadBelowSixtyLtv', $monthlyLeadBelowSixtyLtv);

        $monthlyLeadSixtyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$monthStartDate."' and date(created)<='".$monthEndDate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=60 and ltv_required<70)")->toArray();
        $this->view->setVar('monthlyLeadSixtyLtv', $monthlyLeadSixtyLtv);

         $monthlyLeadSeventyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$monthStartDate."' and date(created)<='".$monthEndDate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=70 and ltv_required<80)")->toArray();
        $this->view->setVar('monthlyLeadSeventyLtv', $monthlyLeadSeventyLtv);

         $monthlyLeadEightyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$monthStartDate."' and date(created)<='".$monthEndDate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=80 and ltv_required<90)")->toArray();
        $this->view->setVar('monthlyLeadEightyLtv', $monthlyLeadEightyLtv);

         $monthlyLeadnintyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$monthStartDate."' and date(created)<='".$monthEndDate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=90 and ltv_required<100)")->toArray();
        $this->view->setVar('monthlyLeadnintyLtv', $monthlyLeadnintyLtv);
        //Monthly no of lead Add End=========

        //Quarterly no of lead add==========
       //echo $date=ceil(date('n', time()) / 3);exit();
        $quarterdateArr=array();
        for($count=1; $count<4; $count++){
            $incAmt=122*$count;
            $newdate=date('Y-m-d', strtotime("+".$incAmt." day", strtotime($yearstartdate)));
            array_push($quarterdateArr, $newdate);
            if(count($quarterdateArr)>0){
                $decVal=$count-2;
                //echo $quarterdateArr[$decVal];
                if($currentdate>$quarterdateArr[$decVal] && $currentdate<$newdate){
                    if($decVal==-1){
                        $qtStartDate=$yearstartdate;
                    }else{
                        $qtStartDate=$quarterdateArr[$decVal];
                    }
                    $qtEnddate=$newdate;
                }else if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }else{
                if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }

        }

        $quarterLeadBelowSixtyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$qtStartDate."' and date(created)<='".$qtEnddate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>0 and ltv_required<60)")->toArray();
        $this->view->setVar('quarterLeadBelowSixtyLtv', $quarterLeadBelowSixtyLtv);

        $quarterLeadSixtyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$qtStartDate."' and date(created)<='".$qtEnddate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=60 and ltv_required<70)")->toArray();
        $this->view->setVar('quarterLeadSixtyLtv', $quarterLeadSixtyLtv);

        $quarterLeadSeventyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$qtStartDate."' and date(created)<='".$qtEnddate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=70 and ltv_required<80)")->toArray();
        $this->view->setVar('quarterLeadSeventyLtv', $quarterLeadSeventyLtv);

        $quarterLeadEightyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$qtStartDate."' and date(created)<='".$qtEnddate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=80 and ltv_required<90)")->toArray();
        $this->view->setVar('quarterLeadEightyLtv', $quarterLeadEightyLtv);

        $quarterLeadNintyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$qtStartDate."' and date(created)<='".$qtEnddate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=90 and ltv_required<100)")->toArray();
        $this->view->setVar('quarterLeadNintyLtv', $quarterLeadNintyLtv);
        //Quarterly no of lead add=============

        //yearly no of lead add================
        $yearlyLeadBelowSixtyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$yearstartdate."' and date(created)<='".$yearenddate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>0 and ltv_required<60)")->toArray();
        $this->view->setVar('yearlyLeadBelowSixtyLtv', $yearlyLeadBelowSixtyLtv);

         $yearlyLeadSixtyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$yearstartdate."' and date(created)<='".$yearenddate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=60 and ltv_required<70)")->toArray();
        $this->view->setVar('yearlyLeadSixtyLtv', $yearlyLeadSixtyLtv);

         $yearlyLeadSeventyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$yearstartdate."' and date(created)<='".$yearenddate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=70 and ltv_required<80)")->toArray();
        $this->view->setVar('yearlyLeadSeventyLtv', $yearlyLeadSeventyLtv);

         $yearlyLeadeightyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$yearstartdate."' and date(created)<='".$yearenddate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=80 and ltv_required<90)")->toArray();
        $this->view->setVar('yearlyLeadeightyLtv', $yearlyLeadeightyLtv);

         $yearlyLeadNintyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$yearstartdate."' and date(created)<='".$yearenddate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=90 and ltv_required<100)")->toArray();
        $this->view->setVar('yearlyLeadNintyLtv', $yearlyLeadNintyLtv);
        //yearly no of lead add End================
        //==============Total LTV percent of leads End===============

























         //Today no of pre application=========

        $todaypreApp=Enquiry::findList("select count(*) as totlead from enquiry where date(created)='".$curdate."' and (approved_loan<1 or approved_loan IS NULL) and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('todaypreApp', $todaypreApp);
        //Today no of pre application End=========

        //Weekly no of pre application=========

        $weeklyPreApp=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."') and (approved_loan<1 or approved_loan IS NULL) and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('weeklyPreApp', $weeklyPreApp);
        //Weekly no of pre application End=========

        //Today no of pre offer=========

        $todaypreOffer=Enquiry::findList("select count(*) as totlead from enquiry where date(created)='".$curdate."' and approved_loan=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('todaypreOffer', $todaypreOffer);
        //Today no of pre application End=========

        //Weekly no of pre application=========

        $weeklyPreOffer=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."')  and approved_loan=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('weeklyPreOffer', $weeklyPreOffer);
        //Weekly no of pre application End=========

        //Today no of post offer=========

        $todayPostoffer=Enquiry::findList("select count(*) as totlead from enquiry where date(created)='".$curdate."' and approved_loan=1 and approved_postoffer=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('todayPostoffer', $todayPostoffer);
        //Today no of post offer End=========

        //Weekly no of post offer=========

        $weeklyPostoffer=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."') and approved_loan=1 and approved_postoffer=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('weeklyPostoffer', $weeklyPostoffer);
        //Weekly no of post offer End=========



        //Today message to Customer=========

        $todayMsgToCustomer=Message::findAll("SELECT send_to FROM message WHERE date(created)='".$curdate."' and status=1 and send_by='".$sessionID."' group by send_to")->toArray();
        $this->view->setVar('todayMsgToCustomer', $todayMsgToCustomer);
        //Today message to customer End=========

        //Weekly message to customer=========

        $weeklyMsgToCustomer=Message::findAll("SELECT send_to FROM message WHERE (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."') and status=1 and send_by='".$sessionID."' group by send_to")->toArray();
        $this->view->setVar('weeklyMsgToCustomer', $weeklyMsgToCustomer);
        //Weekly message to customer End=========

        //Today no of msg=========

        $todayNoOfMsg=Message::findAll("SELECT count(*) as totNumMsg FROM message WHERE date(created)='".$curdate."' and status=1 and send_by='".$sessionID."'")->toArray();
        $this->view->setVar('todayNoOfMsg', $todayNoOfMsg);
        //Today no of msg End=========

        //Weekly no of msg=========

        $weeklyNoOfMsg=Message::findAll("SELECT count(*) as totNumMsg FROM message WHERE (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."') and status=1 and send_by='".$sessionID."'")->toArray();
        $this->view->setVar('weeklyNoOfMsg', $weeklyNoOfMsg);
        //Weekly no of msg End=========

         //Today no of reply=========

        $todayNoOfReply=Message::findAll("SELECT count(*) as totNumReply FROM message WHERE date(created)='".$curdate."' and status=1 and send_to='".$sessionID."'")->toArray();
        $this->view->setVar('todayNoOfReply', $todayNoOfReply);
        //Today no of reply End=========

        //Weekly no of msg=========

        $weeklyNoOfReply=Message::findAll("SELECT count(*) as totNumReply FROM message WHERE (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."') and status=1 and send_to='".$sessionID."'")->toArray();
        $this->view->setVar('weeklyNoOfReply', $weeklyNoOfReply);
        //Weekly no of msg End=========


        //----------------------Statistics-----------------------------
        //======================total user calculation========================
        if(date('D')!='Mon')
        {
         //take the last monday
          $staticstart = date('Y-m-d',strtotime('last Monday'));

        }else{
            $staticstart = date('Y-m-d');
        }

        //always next saturday

        if(date('D')!='Sun')
        {
            $staticfinish = date('Y-m-d',strtotime('next Sunday'));
        }else{

                $staticfinish = date('Y-m-d');
        }
        $thiswekstart=$staticstart;
        $thiswekfinish=$staticfinish;
        $lstwekfinish = date("Y-m-d",strtotime("-1 day",strtotime($staticstart)));
        $lstwekstrt=date("Y-m-d", strtotime("-7 day",strtotime($staticstart)));
        $first_day_this_month = date('Y-m-01');
        $last_day_this_month  = date('Y-m-t');
        $lastmonth=date('m',strtotime('first day of last month'));
        $first_day_last_month = date('Y-'.$lastmonth.'-01');
        $last_day_last_month = date('Y-m-d',strtotime('last day of last month'));
        $first_day_this_year = date('Y-01-01');
        $last_day_this_year=date('Y-12-31');
        $first_day_last_year = date("Y-m-d",strtotime("last year January 1st"));
        $last_day_last_year = date("Y-m-d",strtotime("last year December 31st"));

        //==============================Total user=====================

        $registrations=new Users();
        $registrations_list = $registrations->find(array(
            "conditions" => "parent_id='".$sessionID."' and u_type=2",
            "order" => "id desc"

            ));
        $this->view->setVar('registrations_list', $registrations_list);

        //week calculation=================

        $registrations_thisweekinterval = $registrations->findAll("SELECT * FROM  users WHERE (date(created)<='".$thiswekfinish."' and date(created)>='".$thiswekstart."') and parent_id='".$sessionID."' and u_type=2");

        $this->view->setVar('registrations_thisweekinterval', $registrations_thisweekinterval);

        $registrations_lastweekinterval = $registrations->findAll("SELECT * FROM  users WHERE (date(created)<='".$lstwekfinish."' and date(created)>='".$lstwekstrt."') and parent_id='".$sessionID."' and u_type=2");
        $this->view->setVar('registrations_lastweekinterval', $registrations_lastweekinterval);

        //Month calculation===================
        $registrations_thismonthinterval =$registrations->findAll("SELECT * FROM  users WHERE (date(created)<='".$last_day_this_month."' and date(created)>='".$first_day_this_month."') and parent_id='".$sessionID."' and u_type=2");
        $this->view->setVar('registrations_thismonthinterval', $registrations_thismonthinterval);

        $registrations_lastmonthinterval =$registrations->findAll("SELECT * FROM  users WHERE (date(created)<='".$last_day_last_month."' and date(created)>='".$first_day_last_month."') and parent_id='".$sessionID."' and u_type=2");

        $this->view->setVar('registrations_lastmonthinterval', $registrations_lastmonthinterval);

        //year calculation================================
        $registrations_thisyearinterval =$registrations->findAll("SELECT * FROM  users WHERE (date(created)<='".$last_day_this_year."' and date(created)>='".$first_day_this_year."') and parent_id='".$sessionID."' and u_type=2");
        $this->view->setVar('registrations_thisyearinterval', $registrations_thisyearinterval);

        $registrations_lastyearinterval =$registrations->findAll("SELECT * FROM  users WHERE (date(created)<='".$last_day_last_year."' and date(created)>='".$first_day_last_year."') and parent_id='".$sessionID."' and u_type=2");
        $this->view->setVar('registrations_lastyearinterval', $registrations_lastyearinterval);
        //=================================Total user=========================

        //==============================Total Lead=====================

        $enquiry=new Enquiry();
        $lead_list = $enquiry->find(array(
            "conditions" => "advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)",
            "order" => "id desc"

            ));
        $this->view->setVar('lead_list', $lead_list);

        //week calculation=================

        $leads_thisweekinterval = $enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$thiswekfinish."' and date(created)>='".$thiswekstart."') and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");

        $this->view->setVar('leads_thisweekinterval', $leads_thisweekinterval);

        $leads_lastweekinterval = $enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$lstwekfinish."' and date(created)>='".$lstwekstrt."') and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");
        $this->view->setVar('leads_lastweekinterval', $leads_lastweekinterval);

        //Month calculation===================
        $leads_thismonthinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_this_month."' and date(created)>='".$first_day_this_month."') and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");

        $this->view->setVar('leads_thismonthinterval', $leads_thismonthinterval);

        $leads_lastmonthinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_last_month."' and date(created)>='".$first_day_last_month."') and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");

        $this->view->setVar('leads_lastmonthinterval', $leads_lastmonthinterval);

        //year calculation================================
        $leads_thisyearinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_this_year."' and date(created)>='".$first_day_this_year."') and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");
        $this->view->setVar('leads_thisyearinterval', $leads_thisyearinterval);

        $leads_lastyearinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_last_year."' and date(created)>='".$first_day_last_year."') and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");
        $this->view->setVar('leads_lastyearinterval', $leads_lastyearinterval);
        //=================================Total Lead End=========================


         //==============================Total Pre Application=====================

        $enquiry=new Enquiry();
        $preApplications = $enquiry->find(array(
            "conditions" => "advisor_id='".$sessionID."' and (approved_loan<1 or approved_loan IS NULL) and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)",
            "order" => "id desc"

            ));
        $this->view->setVar('preApplications', $preApplications);

        //week calculation=================

        $prepplication_thisweekinterval = $enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$thiswekfinish."' and date(created)>='".$thiswekstart."') and (approved_loan<1 or approved_loan IS NULL) and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");

        $this->view->setVar('prepplication_thisweekinterval', $prepplication_thisweekinterval);

        $prepplication_lastweekinterval = $enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$lstwekfinish."' and date(created)>='".$lstwekstrt."') and (approved_loan<1 or approved_loan IS NULL) and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");
        $this->view->setVar('prepplication_lastweekinterval', $prepplication_lastweekinterval);

        //Month calculation===================
        $prepplication_thismonthinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_this_month."' and date(created)>='".$first_day_this_month."') and (approved_loan<1 or approved_loan IS NULL) and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");

        $this->view->setVar('prepplication_thismonthinterval', $prepplication_thismonthinterval);

        $prepplication_lastmonthinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_last_month."' and date(created)>='".$first_day_last_month."') and (approved_loan<1 or approved_loan IS NULL) and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");

        $this->view->setVar('prepplication_lastmonthinterval', $prepplication_lastmonthinterval);

        //year calculation================================
        $prepplication_thisyearinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_this_year."' and date(created)>='".$first_day_this_year."') and (approved_loan<1 or approved_loan IS NULL) and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");
        $this->view->setVar('prepplication_thisyearinterval', $prepplication_thisyearinterval);

        $prepplication_lastyearinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_last_year."' and date(created)>='".$first_day_last_year."') and (approved_loan<1 or approved_loan IS NULL) and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");
        $this->view->setVar('prepplication_lastyearinterval', $prepplication_lastyearinterval);
        //=================================Total Pre Application End=========================


        //==============================Total Pre Offer=====================

        $enquiry=new Enquiry();
        $preOffers = $enquiry->find(array(
            "conditions" => "advisor_id='".$sessionID."' and approved_loan=1 and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)",
            "order" => "id desc"

            ));
        $this->view->setVar('preOffers', $preOffers);

        //week calculation=================

        $preOffers_thisweekinterval = $enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$thiswekfinish."' and date(created)>='".$thiswekstart."') and approved_loan=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");

        $this->view->setVar('preOffers_thisweekinterval', $preOffers_thisweekinterval);

        $preOffers_lastweekinterval = $enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$lstwekfinish."' and date(created)>='".$lstwekstrt."') and approved_loan=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");
        $this->view->setVar('preOffers_lastweekinterval', $preOffers_lastweekinterval);

        //Month calculation===================
        $preOffers_thismonthinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_this_month."' and date(created)>='".$first_day_this_month."') and approved_loan=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");

        $this->view->setVar('preOffers_thismonthinterval', $preOffers_thismonthinterval);

        $preOffers_lastmonthinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_last_month."' and date(created)>='".$first_day_last_month."') and approved_loan=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");

        $this->view->setVar('preOffers_lastmonthinterval', $preOffers_lastmonthinterval);

        //year calculation================================
        $preOffers_thisyearinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_this_year."' and date(created)>='".$first_day_this_year."') and approved_loan=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");
        $this->view->setVar('preOffers_thisyearinterval', $preOffers_thisyearinterval);

        $preOffers_lastyearinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_last_year."' and date(created)>='".$first_day_last_year."') and approved_loan=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");
        $this->view->setVar('preOffers_lastyearinterval', $preOffers_lastyearinterval);
        //=================================Total Pre Offer End=========================

        //==============================Total Post Offer=====================

        $enquiry=new Enquiry();
        $postOffers = $enquiry->find(array(
            "conditions" => "advisor_id='".$sessionID."' and approved_loan=1 and approved_postoffer=1 and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)",
            "order" => "id desc"

            ));
        $this->view->setVar('postOffers', $postOffers);

        //week calculation=================

        $postOffers_thisweekinterval = $enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$thiswekfinish."' and date(created)>='".$thiswekstart."') and approved_loan=1 and approved_postoffer=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");

        $this->view->setVar('postOffers_thisweekinterval', $postOffers_thisweekinterval);

        $postOffers_lastweekinterval = $enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$lstwekfinish."' and date(created)>='".$lstwekstrt."') and approved_loan=1 and approved_postoffer=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");
        $this->view->setVar('postOffers_lastweekinterval', $postOffers_lastweekinterval);

        //Month calculation===================
        $postOffers_thismonthinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_this_month."' and date(created)>='".$first_day_this_month."') and approved_loan=1 and approved_postoffer=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");

        $this->view->setVar('postOffers_thismonthinterval', $postOffers_thismonthinterval);

        $postOffers_lastmonthinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_last_month."' and date(created)>='".$first_day_last_month."') and approved_loan=1 and approved_postoffer=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");

        $this->view->setVar('postOffers_lastmonthinterval', $postOffers_lastmonthinterval);

        //year calculation================================
        $postOffers_thisyearinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_this_year."' and date(created)>='".$first_day_this_year."') and approved_loan=1 and approved_postoffer=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");
        $this->view->setVar('postOffers_thisyearinterval', $postOffers_thisyearinterval);

        $postOffers_lastyearinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_last_year."' and date(created)>='".$first_day_last_year."') and approved_loan=1 and approved_postoffer=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");
        $this->view->setVar('postOffers_lastyearinterval', $postOffers_lastyearinterval);
        //=================================Total Post Offer End=========================


        //==============================Total Sent Message=====================

        $messageDb=new Message();
        $sentMsgs = $messageDb->find(array(
            "conditions" => "send_by='".$sessionID."' and parent_id=0 and status=1",
            "order" => "id desc"

            ));
        $this->view->setVar('sentMsgs', $sentMsgs);

        //week calculation=================

        $sentMsgs_thisweekinterval = $messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$thiswekfinish."' and date(created)>='".$thiswekstart."') and send_by='".$sessionID."' and parent_id=0 and status=1");

        $this->view->setVar('sentMsgs_thisweekinterval', $sentMsgs_thisweekinterval);

        $sentMsgs_lastweekinterval = $messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$lstwekfinish."' and date(created)>='".$lstwekstrt."') and send_by='".$sessionID."' and parent_id=0 and status=1");
        $this->view->setVar('sentMsgs_lastweekinterval', $sentMsgs_lastweekinterval);

        //Month calculation===================
        $sentMsgs_thismonthinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_this_month."' and date(created)>='".$first_day_this_month."') and send_by='".$sessionID."' and parent_id=0 and status=1");

        $this->view->setVar('sentMsgs_thismonthinterval', $sentMsgs_thismonthinterval);

        $sentMsgs_lastmonthinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_last_month."' and date(created)>='".$first_day_last_month."') and send_by='".$sessionID."' and parent_id=0 and status=1");

        $this->view->setVar('sentMsgs_lastmonthinterval', $sentMsgs_lastmonthinterval);

        //year calculation================================
        $sentMsgs_thisyearinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_this_year."' and date(created)>='".$first_day_this_year."') and send_by='".$sessionID."' and parent_id=0 and status=1");
        $this->view->setVar('sentMsgs_thisyearinterval', $sentMsgs_thisyearinterval);

        $sentMsgs_lastyearinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_last_year."' and date(created)>='".$first_day_last_year."') and send_by='".$sessionID."' and parent_id=0 and status=1");
        $this->view->setVar('sentMsgs_lastyearinterval', $sentMsgs_lastyearinterval);
        //=================================Total sent message End=========================

        //==============================Total Replied Message=====================

        $messageDb=new Message();
        $replyMsg = $messageDb->find(array(
            "conditions" => "send_by='".$sessionID."' and parent_id>0 and status=1",
            "order" => "id desc"

            ));
        $this->view->setVar('replyMsg', $replyMsg);

        //week calculation=================

        $replyMsg_thisweekinterval = $messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$thiswekfinish."' and date(created)>='".$thiswekstart."') and send_by='".$sessionID."' and parent_id>0 and status=1");

        $this->view->setVar('replyMsg_thisweekinterval', $replyMsg_thisweekinterval);

        $replyMsg_lastweekinterval = $messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$lstwekfinish."' and date(created)>='".$lstwekstrt."') and send_by='".$sessionID."' and parent_id>0 and status=1");
        $this->view->setVar('replyMsg_lastweekinterval', $replyMsg_lastweekinterval);

        //Month calculation===================
        $replyMsg_thismonthinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_this_month."' and date(created)>='".$first_day_this_month."') and send_by='".$sessionID."' and parent_id>0 and status=1");

        $this->view->setVar('replyMsg_thismonthinterval', $replyMsg_thismonthinterval);

        $replyMsg_lastmonthinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_last_month."' and date(created)>='".$first_day_last_month."') and send_by='".$sessionID."' and parent_id>0 and status=1");

        $this->view->setVar('replyMsg_lastmonthinterval', $replyMsg_lastmonthinterval);

        //year calculation================================
        $replyMsg_thisyearinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_this_year."' and date(created)>='".$first_day_this_year."') and send_by='".$sessionID."' and parent_id>0 and status=1");
        $this->view->setVar('replyMsg_thisyearinterval', $replyMsg_thisyearinterval);

        $replyMsg_lastyearinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_last_year."' and date(created)>='".$first_day_last_year."') and send_by='".$sessionID."' and parent_id>0 and status=1");
        $this->view->setVar('replyMsg_lastyearinterval', $replyMsg_lastyearinterval);
        //=================================Total reply message End=========================

        //==============================Total get Message=====================

        $messageDb=new Message();
        $getMsg = $messageDb->find(array(
            "conditions" => "send_to='".$sessionID."' and parent_id<=0 and status=1",
            "order" => "id desc"

            ));
        $this->view->setVar('getMsg', $getMsg);

        //week calculation=================

        $getMsg_thisweekinterval = $messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$thiswekfinish."' and date(created)>='".$thiswekstart."') and send_to='".$sessionID."' and parent_id<=0 and status=1");

        $this->view->setVar('getMsg_thisweekinterval', $getMsg_thisweekinterval);

        $replyMsg_lastweekinterval = $messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$lstwekfinish."' and date(created)>='".$lstwekstrt."') and send_to='".$sessionID."' and parent_id<=0 and status=1");
        $this->view->setVar('getMsg_lastweekinterval', $getMsg_lastweekinterval);

        //Month calculation===================
        $getMsg_thismonthinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_this_month."' and date(created)>='".$first_day_this_month."') and send_to='".$sessionID."' and parent_id<=0 and status=1");

        $this->view->setVar('getMsg_thismonthinterval', $getMsg_thismonthinterval);

        $getMsg_lastmonthinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_last_month."' and date(created)>='".$first_day_last_month."') and send_to='".$sessionID."' and parent_id<=0 and status=1");

        $this->view->setVar('getMsg_lastmonthinterval', $getMsg_lastmonthinterval);

        //year calculation================================
        $getMsg_thisyearinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_this_year."' and date(created)>='".$first_day_this_year."') and send_to='".$sessionID."' and parent_id<=0 and status=1");
        $this->view->setVar('getMsg_thisyearinterval', $getMsg_thisyearinterval);

        $getMsg_lastyearinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_last_year."' and date(created)>='".$first_day_last_year."') and send_to='".$sessionID."' and parent_id<=0 and status=1");
        $this->view->setVar('getMsg_lastyearinterval', $getMsg_lastyearinterval);
        //=================================Total get message End=========================


        //==============================Total get Reply=====================

        $messageDb=new Message();
        $getReply = $messageDb->find(array(
            "conditions" => "send_to='".$sessionID."' and parent_id>0 and status=1",
            "order" => "id desc"

            ));
        $this->view->setVar('getReply', $getReply);

        //week calculation=================

        $getReply_thisweekinterval = $messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$thiswekfinish."' and date(created)>='".$thiswekstart."') and send_to='".$sessionID."' and parent_id<=0 and status=1");

        $this->view->setVar('getReply_thisweekinterval', $getReply_thisweekinterval);

        $getReply_lastweekinterval = $messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$lstwekfinish."' and date(created)>='".$lstwekstrt."') and send_to='".$sessionID."' and parent_id<=0 and status=1");
        $this->view->setVar('getReply_lastweekinterval', $getReply_lastweekinterval);

        //Month calculation===================
        $getReply_thismonthinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_this_month."' and date(created)>='".$first_day_this_month."') and send_to='".$sessionID."' and parent_id<=0 and status=1");

        $this->view->setVar('getReply_thismonthinterval', $getReply_thismonthinterval);

        $getReply_lastmonthinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_last_month."' and date(created)>='".$first_day_last_month."') and send_to='".$sessionID."' and parent_id<=0 and status=1");

        $this->view->setVar('getReply_lastmonthinterval', $getReply_lastmonthinterval);

        //year calculation================================
        $getReply_thisyearinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_this_year."' and date(created)>='".$first_day_this_year."') and send_to='".$sessionID."' and parent_id<=0 and status=1");
        $this->view->setVar('getReply_thisyearinterval', $getReply_thisyearinterval);

        $getReply_lastyearinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_last_year."' and date(created)>='".$first_day_last_year."') and send_to='".$sessionID."' and parent_id<=0 and status=1");
        $this->view->setVar('getReply_lastyearinterval', $getReply_lastyearinterval);
        //=================================Total get reply End=========================


        //----------------------End Statis tics------------------------
    }

    /**
    * statistics Action To show statistics of loan
    * Action Name: statisticsAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 13-07-2018
    **/
    public function statistics_oldAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        //Top 3 Most popular courses end======

        $curdate=date("Y-m-d");
        $weeklyDates=UIElements::BapCustUniweekStaratEnd();
        // echo "<pre>";print_r($weeklyDates);exit;
        $sessionID=$this->session->get('sessUserID');
        //Today no of lead Add=========

        $todayleadAdd=Enquiry::findList("select count(*) as totlead from enquiry where date(created)='".$curdate."' and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('todayleadAdd', $todayleadAdd);
        //Today no of lead Add End=========

        //Weekly no of lead Add=========

        $weeklyLeadAdd=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."') and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('weeklyLeadAdd', $weeklyLeadAdd);
        //Weekly no of lead Add End=========

         //Today no of pre application=========

        $todaypreApp=Enquiry::findList("select count(*) as totlead from enquiry where date(created)='".$curdate."' and (approved_loan<1 or approved_loan IS NULL) and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('todaypreApp', $todaypreApp);
        //Today no of pre application End=========

        //Weekly no of pre application=========

        $weeklyPreApp=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."') and (approved_loan<1 or approved_loan IS NULL) and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('weeklyPreApp', $weeklyPreApp);
        //Weekly no of pre application End=========

        //Today no of pre offer=========

        $todaypreOffer=Enquiry::findList("select count(*) as totlead from enquiry where date(created)='".$curdate."' and approved_loan=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('todaypreOffer', $todaypreOffer);
        //Today no of pre application End=========

        //Weekly no of pre application=========

        $weeklyPreOffer=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."')  and approved_loan=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('weeklyPreOffer', $weeklyPreOffer);
        //Weekly no of pre application End=========

        //Today no of post offer=========

        $todayPostoffer=Enquiry::findList("select count(*) as totlead from enquiry where date(created)='".$curdate."' and approved_loan=1 and approved_postoffer=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('todayPostoffer', $todayPostoffer);
        //Today no of post offer End=========

        //Weekly no of post offer=========

        $weeklyPostoffer=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."') and approved_loan=1 and approved_postoffer=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('weeklyPostoffer', $weeklyPostoffer);
        //Weekly no of post offer End=========



        //Today message to Customer=========

        $todayMsgToCustomer=Message::findAll("SELECT send_to FROM message WHERE date(created)='".$curdate."' and status=1 and send_by='".$sessionID."' group by send_to")->toArray();
        $this->view->setVar('todayMsgToCustomer', $todayMsgToCustomer);
        //Today message to customer End=========

        //Weekly message to customer=========

        $weeklyMsgToCustomer=Message::findAll("SELECT send_to FROM message WHERE (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."') and status=1 and send_by='".$sessionID."' group by send_to")->toArray();
        $this->view->setVar('weeklyMsgToCustomer', $weeklyMsgToCustomer);
        //Weekly message to customer End=========

        //Today no of msg=========

        $todayNoOfMsg=Message::findAll("SELECT count(*) as totNumMsg FROM message WHERE date(created)='".$curdate."' and status=1 and send_by='".$sessionID."'")->toArray();
        $this->view->setVar('todayNoOfMsg', $todayNoOfMsg);
        //Today no of msg End=========

        //Weekly no of msg=========

        $weeklyNoOfMsg=Message::findAll("SELECT count(*) as totNumMsg FROM message WHERE (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."') and status=1 and send_by='".$sessionID."'")->toArray();
        $this->view->setVar('weeklyNoOfMsg', $weeklyNoOfMsg);
        //Weekly no of msg End=========

         //Today no of reply=========

        $todayNoOfReply=Message::findAll("SELECT count(*) as totNumReply FROM message WHERE date(created)='".$curdate."' and status=1 and send_to='".$sessionID."'")->toArray();
        $this->view->setVar('todayNoOfReply', $todayNoOfReply);
        //Today no of reply End=========

        //Weekly no of msg=========

        $weeklyNoOfReply=Message::findAll("SELECT count(*) as totNumReply FROM message WHERE (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."') and status=1 and send_to='".$sessionID."'")->toArray();
        $this->view->setVar('weeklyNoOfReply', $weeklyNoOfReply);
        //Weekly no of msg End=========


        //----------------------Statistics-----------------------------
        //======================total user calculation========================
        if(date('D')!='Mon')
        {
         //take the last monday
          $staticstart = date('Y-m-d',strtotime('last Monday'));

        }else{
            $staticstart = date('Y-m-d');
        }

        //always next saturday

        if(date('D')!='Sun')
        {
            $staticfinish = date('Y-m-d',strtotime('next Sunday'));
        }else{

                $staticfinish = date('Y-m-d');
        }
        $thiswekstart=$staticstart;
        $thiswekfinish=$staticfinish;
        $lstwekfinish = date("Y-m-d",strtotime("-1 day",strtotime($staticstart)));
        $lstwekstrt=date("Y-m-d", strtotime("-7 day",strtotime($staticstart)));
        $first_day_this_month = date('Y-m-01');
        $last_day_this_month  = date('Y-m-t');
        $lastmonth=date('m',strtotime('first day of last month'));
        $first_day_last_month = date('Y-'.$lastmonth.'-01');
        $last_day_last_month = date('Y-m-d',strtotime('last day of last month'));
        $first_day_this_year = date('Y-01-01');
        $last_day_this_year=date('Y-12-31');
        $first_day_last_year = date("Y-m-d",strtotime("last year January 1st"));
        $last_day_last_year = date("Y-m-d",strtotime("last year December 31st"));

        //==============================Total user=====================

        $registrations=new Users();
        $registrations_list = $registrations->find(array(
            "conditions" => "parent_id='".$sessionID."' and u_type=2",
            "order" => "id desc"

            ));
        $this->view->setVar('registrations_list', $registrations_list);

        //week calculation=================

        $registrations_thisweekinterval = $registrations->findAll("SELECT * FROM  users WHERE (date(created)<='".$thiswekfinish."' and date(created)>='".$thiswekstart."') and parent_id='".$sessionID."' and u_type=2");

        $this->view->setVar('registrations_thisweekinterval', $registrations_thisweekinterval);

        $registrations_lastweekinterval = $registrations->findAll("SELECT * FROM  users WHERE (date(created)<='".$lstwekfinish."' and date(created)>='".$lstwekstrt."') and parent_id='".$sessionID."' and u_type=2");
        $this->view->setVar('registrations_lastweekinterval', $registrations_lastweekinterval);

        //Month calculation===================
        $registrations_thismonthinterval =$registrations->findAll("SELECT * FROM  users WHERE (date(created)<='".$last_day_this_month."' and date(created)>='".$first_day_this_month."') and parent_id='".$sessionID."' and u_type=2");
        $this->view->setVar('registrations_thismonthinterval', $registrations_thismonthinterval);

        $registrations_lastmonthinterval =$registrations->findAll("SELECT * FROM  users WHERE (date(created)<='".$last_day_last_month."' and date(created)>='".$first_day_last_month."') and parent_id='".$sessionID."' and u_type=2");

        $this->view->setVar('registrations_lastmonthinterval', $registrations_lastmonthinterval);

        //year calculation================================
        $registrations_thisyearinterval =$registrations->findAll("SELECT * FROM  users WHERE (date(created)<='".$last_day_this_year."' and date(created)>='".$first_day_this_year."') and parent_id='".$sessionID."' and u_type=2");
        $this->view->setVar('registrations_thisyearinterval', $registrations_thisyearinterval);

        $registrations_lastyearinterval =$registrations->findAll("SELECT * FROM  users WHERE (date(created)<='".$last_day_last_year."' and date(created)>='".$first_day_last_year."') and parent_id='".$sessionID."' and u_type=2");
        $this->view->setVar('registrations_lastyearinterval', $registrations_lastyearinterval);
        //=================================Total user=========================

        //==============================Total Lead=====================

        $enquiry=new Enquiry();
        $lead_list = $enquiry->find(array(
            "conditions" => "advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)",
            "order" => "id desc"

            ));
        $this->view->setVar('lead_list', $lead_list);

        //week calculation=================

        $leads_thisweekinterval = $enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$thiswekfinish."' and date(created)>='".$thiswekstart."') and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");

        $this->view->setVar('leads_thisweekinterval', $leads_thisweekinterval);

        $leads_lastweekinterval = $enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$lstwekfinish."' and date(created)>='".$lstwekstrt."') and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");
        $this->view->setVar('leads_lastweekinterval', $leads_lastweekinterval);

        //Month calculation===================
        $leads_thismonthinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_this_month."' and date(created)>='".$first_day_this_month."') and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");

        $this->view->setVar('leads_thismonthinterval', $leads_thismonthinterval);

        $leads_lastmonthinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_last_month."' and date(created)>='".$first_day_last_month."') and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");

        $this->view->setVar('leads_lastmonthinterval', $leads_lastmonthinterval);

        //year calculation================================
        $leads_thisyearinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_this_year."' and date(created)>='".$first_day_this_year."') and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");
        $this->view->setVar('leads_thisyearinterval', $leads_thisyearinterval);

        $leads_lastyearinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_last_year."' and date(created)>='".$first_day_last_year."') and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");
        $this->view->setVar('leads_lastyearinterval', $leads_lastyearinterval);
        //=================================Total Lead End=========================


         //==============================Total Pre Application=====================

        $enquiry=new Enquiry();
        $preApplications = $enquiry->find(array(
            "conditions" => "advisor_id='".$sessionID."' and (approved_loan<1 or approved_loan IS NULL) and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)",
            "order" => "id desc"

            ));
        $this->view->setVar('preApplications', $preApplications);

        //week calculation=================

        $prepplication_thisweekinterval = $enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$thiswekfinish."' and date(created)>='".$thiswekstart."') and (approved_loan<1 or approved_loan IS NULL) and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");

        $this->view->setVar('prepplication_thisweekinterval', $prepplication_thisweekinterval);

        $prepplication_lastweekinterval = $enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$lstwekfinish."' and date(created)>='".$lstwekstrt."') and (approved_loan<1 or approved_loan IS NULL) and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");
        $this->view->setVar('prepplication_lastweekinterval', $prepplication_lastweekinterval);

        //Month calculation===================
        $prepplication_thismonthinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_this_month."' and date(created)>='".$first_day_this_month."') and (approved_loan<1 or approved_loan IS NULL) and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");

        $this->view->setVar('prepplication_thismonthinterval', $prepplication_thismonthinterval);

        $prepplication_lastmonthinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_last_month."' and date(created)>='".$first_day_last_month."') and (approved_loan<1 or approved_loan IS NULL) and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");

        $this->view->setVar('prepplication_lastmonthinterval', $prepplication_lastmonthinterval);

        //year calculation================================
        $prepplication_thisyearinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_this_year."' and date(created)>='".$first_day_this_year."') and (approved_loan<1 or approved_loan IS NULL) and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");
        $this->view->setVar('prepplication_thisyearinterval', $prepplication_thisyearinterval);

        $prepplication_lastyearinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_last_year."' and date(created)>='".$first_day_last_year."') and (approved_loan<1 or approved_loan IS NULL) and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");
        $this->view->setVar('prepplication_lastyearinterval', $prepplication_lastyearinterval);
        //=================================Total Pre Application End=========================


        //==============================Total Pre Offer=====================

        $enquiry=new Enquiry();
        $preOffers = $enquiry->find(array(
            "conditions" => "advisor_id='".$sessionID."' and approved_loan=1 and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)",
            "order" => "id desc"

            ));
        $this->view->setVar('preOffers', $preOffers);

        //week calculation=================

        $preOffers_thisweekinterval = $enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$thiswekfinish."' and date(created)>='".$thiswekstart."') and approved_loan=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");

        $this->view->setVar('preOffers_thisweekinterval', $preOffers_thisweekinterval);

        $preOffers_lastweekinterval = $enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$lstwekfinish."' and date(created)>='".$lstwekstrt."') and approved_loan=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");
        $this->view->setVar('preOffers_lastweekinterval', $preOffers_lastweekinterval);

        //Month calculation===================
        $preOffers_thismonthinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_this_month."' and date(created)>='".$first_day_this_month."') and approved_loan=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");

        $this->view->setVar('preOffers_thismonthinterval', $preOffers_thismonthinterval);

        $preOffers_lastmonthinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_last_month."' and date(created)>='".$first_day_last_month."') and approved_loan=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");

        $this->view->setVar('preOffers_lastmonthinterval', $preOffers_lastmonthinterval);

        //year calculation================================
        $preOffers_thisyearinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_this_year."' and date(created)>='".$first_day_this_year."') and approved_loan=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");
        $this->view->setVar('preOffers_thisyearinterval', $preOffers_thisyearinterval);

        $preOffers_lastyearinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_last_year."' and date(created)>='".$first_day_last_year."') and approved_loan=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");
        $this->view->setVar('preOffers_lastyearinterval', $preOffers_lastyearinterval);
        //=================================Total Pre Offer End=========================

        //==============================Total Post Offer=====================

        $enquiry=new Enquiry();
        $postOffers = $enquiry->find(array(
            "conditions" => "advisor_id='".$sessionID."' and approved_loan=1 and approved_postoffer=1 and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)",
            "order" => "id desc"

            ));
        $this->view->setVar('postOffers', $postOffers);

        //week calculation=================

        $postOffers_thisweekinterval = $enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$thiswekfinish."' and date(created)>='".$thiswekstart."') and approved_loan=1 and approved_postoffer=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");

        $this->view->setVar('postOffers_thisweekinterval', $postOffers_thisweekinterval);

        $postOffers_lastweekinterval = $enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$lstwekfinish."' and date(created)>='".$lstwekstrt."') and approved_loan=1 and approved_postoffer=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");
        $this->view->setVar('postOffers_lastweekinterval', $postOffers_lastweekinterval);

        //Month calculation===================
        $postOffers_thismonthinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_this_month."' and date(created)>='".$first_day_this_month."') and approved_loan=1 and approved_postoffer=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");

        $this->view->setVar('postOffers_thismonthinterval', $postOffers_thismonthinterval);

        $postOffers_lastmonthinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_last_month."' and date(created)>='".$first_day_last_month."') and approved_loan=1 and approved_postoffer=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");

        $this->view->setVar('postOffers_lastmonthinterval', $postOffers_lastmonthinterval);

        //year calculation================================
        $postOffers_thisyearinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_this_year."' and date(created)>='".$first_day_this_year."') and approved_loan=1 and approved_postoffer=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");
        $this->view->setVar('postOffers_thisyearinterval', $postOffers_thisyearinterval);

        $postOffers_lastyearinterval =$enquiry->findAll("SELECT * FROM  enquiry WHERE (date(created)<='".$last_day_last_year."' and date(created)>='".$first_day_last_year."') and approved_loan=1 and approved_postoffer=1 and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)");
        $this->view->setVar('postOffers_lastyearinterval', $postOffers_lastyearinterval);
        //=================================Total Post Offer End=========================


        //==============================Total Sent Message=====================

        $messageDb=new Message();
        $sentMsgs = $messageDb->find(array(
            "conditions" => "send_by='".$sessionID."' and parent_id=0 and status=1",
            "order" => "id desc"

            ));
        $this->view->setVar('sentMsgs', $sentMsgs);

        //week calculation=================

        $sentMsgs_thisweekinterval = $messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$thiswekfinish."' and date(created)>='".$thiswekstart."') and send_by='".$sessionID."' and parent_id=0 and status=1");

        $this->view->setVar('sentMsgs_thisweekinterval', $sentMsgs_thisweekinterval);

        $sentMsgs_lastweekinterval = $messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$lstwekfinish."' and date(created)>='".$lstwekstrt."') and send_by='".$sessionID."' and parent_id=0 and status=1");
        $this->view->setVar('sentMsgs_lastweekinterval', $sentMsgs_lastweekinterval);

        //Month calculation===================
        $sentMsgs_thismonthinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_this_month."' and date(created)>='".$first_day_this_month."') and send_by='".$sessionID."' and parent_id=0 and status=1");

        $this->view->setVar('sentMsgs_thismonthinterval', $sentMsgs_thismonthinterval);

        $sentMsgs_lastmonthinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_last_month."' and date(created)>='".$first_day_last_month."') and send_by='".$sessionID."' and parent_id=0 and status=1");

        $this->view->setVar('sentMsgs_lastmonthinterval', $sentMsgs_lastmonthinterval);

        //year calculation================================
        $sentMsgs_thisyearinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_this_year."' and date(created)>='".$first_day_this_year."') and send_by='".$sessionID."' and parent_id=0 and status=1");
        $this->view->setVar('sentMsgs_thisyearinterval', $sentMsgs_thisyearinterval);

        $sentMsgs_lastyearinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_last_year."' and date(created)>='".$first_day_last_year."') and send_by='".$sessionID."' and parent_id=0 and status=1");
        $this->view->setVar('sentMsgs_lastyearinterval', $sentMsgs_lastyearinterval);
        //=================================Total sent message End=========================

        //==============================Total Replied Message=====================

        $messageDb=new Message();
        $replyMsg = $messageDb->find(array(
            "conditions" => "send_by='".$sessionID."' and parent_id>0 and status=1",
            "order" => "id desc"

            ));
        $this->view->setVar('replyMsg', $replyMsg);

        //week calculation=================

        $replyMsg_thisweekinterval = $messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$thiswekfinish."' and date(created)>='".$thiswekstart."') and send_by='".$sessionID."' and parent_id>0 and status=1");

        $this->view->setVar('replyMsg_thisweekinterval', $replyMsg_thisweekinterval);

        $replyMsg_lastweekinterval = $messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$lstwekfinish."' and date(created)>='".$lstwekstrt."') and send_by='".$sessionID."' and parent_id>0 and status=1");
        $this->view->setVar('replyMsg_lastweekinterval', $replyMsg_lastweekinterval);

        //Month calculation===================
        $replyMsg_thismonthinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_this_month."' and date(created)>='".$first_day_this_month."') and send_by='".$sessionID."' and parent_id>0 and status=1");

        $this->view->setVar('replyMsg_thismonthinterval', $replyMsg_thismonthinterval);

        $replyMsg_lastmonthinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_last_month."' and date(created)>='".$first_day_last_month."') and send_by='".$sessionID."' and parent_id>0 and status=1");

        $this->view->setVar('replyMsg_lastmonthinterval', $replyMsg_lastmonthinterval);

        //year calculation================================
        $replyMsg_thisyearinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_this_year."' and date(created)>='".$first_day_this_year."') and send_by='".$sessionID."' and parent_id>0 and status=1");
        $this->view->setVar('replyMsg_thisyearinterval', $replyMsg_thisyearinterval);

        $replyMsg_lastyearinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_last_year."' and date(created)>='".$first_day_last_year."') and send_by='".$sessionID."' and parent_id>0 and status=1");
        $this->view->setVar('replyMsg_lastyearinterval', $replyMsg_lastyearinterval);
        //=================================Total reply message End=========================

        //==============================Total get Message=====================

        $messageDb=new Message();
        $getMsg = $messageDb->find(array(
            "conditions" => "send_to='".$sessionID."' and parent_id<=0 and status=1",
            "order" => "id desc"

            ));
        $this->view->setVar('getMsg', $getMsg);

        //week calculation=================

        $getMsg_thisweekinterval = $messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$thiswekfinish."' and date(created)>='".$thiswekstart."') and send_to='".$sessionID."' and parent_id<=0 and status=1");

        $this->view->setVar('getMsg_thisweekinterval', $getMsg_thisweekinterval);

        $replyMsg_lastweekinterval = $messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$lstwekfinish."' and date(created)>='".$lstwekstrt."') and send_to='".$sessionID."' and parent_id<=0 and status=1");
        $this->view->setVar('getMsg_lastweekinterval', $getMsg_lastweekinterval);

        //Month calculation===================
        $getMsg_thismonthinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_this_month."' and date(created)>='".$first_day_this_month."') and send_to='".$sessionID."' and parent_id<=0 and status=1");

        $this->view->setVar('getMsg_thismonthinterval', $getMsg_thismonthinterval);

        $getMsg_lastmonthinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_last_month."' and date(created)>='".$first_day_last_month."') and send_to='".$sessionID."' and parent_id<=0 and status=1");

        $this->view->setVar('getMsg_lastmonthinterval', $getMsg_lastmonthinterval);

        //year calculation================================
        $getMsg_thisyearinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_this_year."' and date(created)>='".$first_day_this_year."') and send_to='".$sessionID."' and parent_id<=0 and status=1");
        $this->view->setVar('getMsg_thisyearinterval', $getMsg_thisyearinterval);

        $getMsg_lastyearinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_last_year."' and date(created)>='".$first_day_last_year."') and send_to='".$sessionID."' and parent_id<=0 and status=1");
        $this->view->setVar('getMsg_lastyearinterval', $getMsg_lastyearinterval);
        //=================================Total get message End=========================


        //==============================Total get Reply=====================

        $messageDb=new Message();
        $getReply = $messageDb->find(array(
            "conditions" => "send_to='".$sessionID."' and parent_id>0 and status=1",
            "order" => "id desc"

            ));
        $this->view->setVar('getReply', $getReply);

        //week calculation=================

        $getReply_thisweekinterval = $messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$thiswekfinish."' and date(created)>='".$thiswekstart."') and send_to='".$sessionID."' and parent_id<=0 and status=1");

        $this->view->setVar('getReply_thisweekinterval', $getReply_thisweekinterval);

        $getReply_lastweekinterval = $messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$lstwekfinish."' and date(created)>='".$lstwekstrt."') and send_to='".$sessionID."' and parent_id<=0 and status=1");
        $this->view->setVar('getReply_lastweekinterval', $getReply_lastweekinterval);

        //Month calculation===================
        $getReply_thismonthinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_this_month."' and date(created)>='".$first_day_this_month."') and send_to='".$sessionID."' and parent_id<=0 and status=1");

        $this->view->setVar('getReply_thismonthinterval', $getReply_thismonthinterval);

        $getReply_lastmonthinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_last_month."' and date(created)>='".$first_day_last_month."') and send_to='".$sessionID."' and parent_id<=0 and status=1");

        $this->view->setVar('getReply_lastmonthinterval', $getReply_lastmonthinterval);

        //year calculation================================
        $getReply_thisyearinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_this_year."' and date(created)>='".$first_day_this_year."') and send_to='".$sessionID."' and parent_id<=0 and status=1");
        $this->view->setVar('getReply_thisyearinterval', $getReply_thisyearinterval);

        $getReply_lastyearinterval =$messageDb->findAll("SELECT * FROM  message WHERE (date(created)<='".$last_day_last_year."' and date(created)>='".$first_day_last_year."') and send_to='".$sessionID."' and parent_id<=0 and status=1");
        $this->view->setVar('getReply_lastyearinterval', $getReply_lastyearinterval);
        //=================================Total get reply End=========================


        //----------------------End Statis tics------------------------
    }
    public function advisornoteAction(){
        $responseArr=array('response' => 2, 'content' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            //print_r($_FILES);
            $filearr=$this->request->getUploadedFiles();//echo "<pre>";print_r($filearr);exit();
            $finalFileArr=array();
                if(!empty($filearr))
                {
                    $baseLocation="uploads/notes/";
                    foreach($filearr as $file)
                    {
                        //$file=$filearr[$i];//echo $file->getKey();
                        $filename=uniqid().$file->getName();
                        $fileError = $file->getError();
                        $file->moveTo($baseLocation.$filename);
                        array_push($finalFileArr, $filename);

                    }
                }
                if(!empty($finalFileArr)){
                    $allPost['note_attachments']=implode(":::", $finalFileArr);
                }
                $sessionID=$this->session->get('sessUserID');
                $allPost['user_id']=$sessionID;
                $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $notesDb= new Notes();
                $saveNote=$notesDb->save($allPost);
                 if($saveNote){
                    //============Update Modified Enquiry Start=====
                    $modifiedDate=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $phqlEnquiryUpdate="update Enquiry set modified='".$modifiedDate."' where id='".$allPost['lead_id']."'";
                    $updatemodifiedEnquiry=$this->modelsManager->executeQuery($phqlEnquiryUpdate);
                    //============Update Modified Enquiry Start=====

                        //=======Save track report========
                        $trackData['track_for']='SaveNote';
                        $trackData['userid']=$this->session->get('sessUserID');
                        $trackData['track_save_id']=$leadid;
                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);

                        //=======Save track report End========

                        //========Note result return==========

                        $content="";
                        $notesRes=Notes::find(array(
                          'conditions' => "lead_id='".$allPost['lead_id']."'",
                          'order' => "id desc",
                          ));
                          if(count($notesRes)>0){
                            foreach($notesRes as $notesResult){
                              $userDetail=Users::findFirst(array('conditions' => "id='".$notesResult->user_id."'"));
                              $content.='<div class="note_result" id="removeNote'.$notesResult->id.'">
                                        <a href="javascript:void(0);" class="removenotecls" data-id="'.$notesResult->id.'"><i class="fa fa-remove fa-times"></i></a>
                                  <div class="row">
                                        <div class="col-md-12">
                                        <p> <span class="discusion_date"><img src="'.BASEURL.'frontfile/image/calender.png" class="img-responsive"/>
                                        '.date("d M, Y H:iA", strtotime($notesResult->created)).'
                                      </span></p>
                                      <p> <i class="fa fa-user"></i> '.stripslashes($userDetail->first_name).'</p>
                                      </div>
                                    </div>';
                                    if(!empty($notesResult->note_title)){
                                    $content.='<div class="row">
                                        <div class="col-md-12"><h5> '.stripslashes($notesResult->note_title).'</h5></div>
                                    </div>';
                                    }
                                      $content.='<div class="row">
                                        <div class="col-md-12"><p>'.nl2br(stripslashes($notesResult->note_text)).'</p></div>
                                       
                                      </div>';
                                    if(!empty($notesResult->note_attachments)){
                                      $attachmentArr=explode(":::", $notesResult->note_attachments);
                                     $content.='<div class="row">
                                        <div class="col-md-12">';
                                        if(count($attachmentArr)>0){
                                              $content.='<ul>';
                                              foreach($attachmentArr as $attachmentFile){
                                                   $content.='<li><a href="'.BASEURL.'uploads/notes/'.$attachmentFile.'" download="'.$attachmentFile.'" title="'.$attachmentFile.'"><img src="'.BASEURL.'frontfile/image/if_12.File_290138.png" />
                                                    <h6>'.$attachmentFile.'</h6>
                                                    </a></li>';
                                                }


                                                $content.='</ul>';
                                        }
                                          $content.='</div>
                                     </div>';
                                    }
                              $content.='</div>';
                            }
                          }
                        //========Note result return end=======
                        $responseArr=array('response' => 1, 'content' => $content);
                }

        }

        echo json_encode($responseArr);
        exit();
    }
    public function notedelAction(){
        $responseArr=array('response' => 2, 'noteid' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if($allPost['noteid']!=''){
                $noteDetail=Notes::findFirst(array(
                    'conditions' => "id='".$allPost['noteid']."'"
                    ));
                if($noteDetail->note_attachments!=''){
                    $fileArr=explode(":::", $noteDetail->note_attachments);
                    if(count($fileArr)>0){
                        foreach($fileArr as $filename){
                            //echo "uploads/notes/".$filename;
                            @unlink("uploads/notes/".$filename);
                        }
                    }
                }
                $delete=$this->modelsManager->executeQuery("delete from Notes where id='".$allPost['noteid']."'");
                    $responseArr=array('response' => 1, 'noteid' => $allPost['noteid']);

            }
        }
        echo json_encode($responseArr);
        exit();
    }

    public function integrativeadvisornoteAction(){
        $responseArr=array('response' => 2, 'content' => '');
        if($this->request->isPost()){
            //print_r($_POST);exit();
            //$allPost=$this->request->getPost();
            $allPost=$_POST;
            //print_r($_FILES);
            //print_r($allPost); exit();
            $filearr=$this->request->getUploadedFiles();//echo "<pre>";print_r($filearr);exit();
            $finalFileArr=array();
                if(!empty($filearr))
                {
                    $baseLocation="uploads/integrative_notes/";
                    foreach($filearr as $file)
                    {
                        //$file=$filearr[$i];//echo $file->getKey();
                        $filename=uniqid().$file->getName();
                        $fileError = $file->getError();
                        $file->moveTo($baseLocation.$filename);
                        array_push($finalFileArr, $filename);

                    }
                }
                if(!empty($finalFileArr)){
                    $allPost['note_attachments']=implode(":::", $finalFileArr);
                }
                $sessionID=$this->session->get('sessUserID');
                $allPost['user_id']=$sessionID;
                $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $notesDb= new IntegrativeNotes();
                //print_r($allPost); exit();
                $saveNote=$notesDb->save($allPost);
                 if($saveNote){
                    //============Update Modified Enquiry Start=====
                    $modifiedDate=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $phqlEnquiryUpdate="update Enquiry set modified='".$modifiedDate."' where id='".$allPost['lead_id']."'";
                    $updatemodifiedEnquiry=$this->modelsManager->executeQuery($phqlEnquiryUpdate);
                    //============Update Modified Enquiry Start=====

                        //=======Save track report========
                        $trackData['track_for']='SaveIntegrativeNote';
                        $trackData['userid']=$this->session->get('sessUserID');
                        $trackData['track_save_id']=$leadid;
                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);

                        //=======Save track report End========

                        //========Note result return==========

                        $content="";
                        $notesRes=IntegrativeNotes::find(array(
                          'conditions' => "lead_id='".$allPost['lead_id']."'",
                          'order' => "id desc",
                          ));
                          if(count($notesRes)>0){
                            foreach($notesRes as $notesResult){
                              $userDetail=Users::findFirst(array('conditions' => "id='".$notesResult->user_id."'"));
                              $content.='<div class="integrativenote_result" id="removeIntegrativeNote'.$notesResult->id.'">
                                        <a href="javascript:void(0);" class="removeintegrativenotecls" data-id="'.$notesResult->id.'"><i class="fa fa-remove fa-times"></i></a>
                                  <div class="row">
                                        <div class="col-md-12">
                                        <p> <span class="discusion_date"><img src="'.BASEURL.'frontfile/image/calender.png" class="img-responsive"/>
                                        '.date("d M, Y H:iA", strtotime($notesResult->created)).'
                                      </span></p>
                                      <p> <i class="fa fa-user"></i> '.stripslashes($userDetail->first_name).'</p>
                                      </div>
                                    </div>';
                                    if(!empty($notesResult->note_title)){
                                    $content.='<div class="row">
                                        <div class="col-md-12"><h5> '.stripslashes($notesResult->note_title).'</h5></div>
                                    </div>';
                                    }
                                      $content.='<div class="row">
                                        <div class="col-md-12"><p>'.nl2br(stripslashes($notesResult->note_text)).'</p></div>
                                       
                                      </div>';
                                    if(!empty($notesResult->note_attachments)){
                                      $attachmentArr=explode(":::", $notesResult->note_attachments);
                                     $content.='<div class="row">
                                        <div class="col-md-12">';
                                        if(count($attachmentArr)>0){
                                              $content.='<ul>';
                                              foreach($attachmentArr as $attachmentFile){
                                                   $content.='<li><a href="'.BASEURL.'uploads/integrative_notes/'.$attachmentFile.'" download="'.$attachmentFile.'" title="'.$attachmentFile.'"><img src="'.BASEURL.'frontfile/image/if_12.File_290138.png" />
                                                    <h6>'.$attachmentFile.'</h6>
                                                    </a></li>';
                                                }


                                                $content.='</ul>';
                                        }
                                          $content.='</div>
                                     </div>';
                                    }
                              $content.='</div>';
                            }
                          }
                        //========Note result return end=======
                        $responseArr=array('response' => 1, 'content' => $content);
                }

        }

        echo json_encode($responseArr);
        exit();
    }
    public function integrativenotedelAction(){
        $responseArr=array('response' => 2, 'noteid' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if($allPost['noteid']!=''){
                $noteDetail=IntegrativeNotes::findFirst(array(
                    'conditions' => "id='".$allPost['noteid']."'"
                    ));
                if($noteDetail->note_attachments!=''){
                    $fileArr=explode(":::", $noteDetail->note_attachments);
                    if(count($fileArr)>0){
                        foreach($fileArr as $filename){
                            //echo "uploads/notes/".$filename;
                            @unlink("uploads/integrative_notes/".$filename);
                        }
                    }
                }
                $delete=$this->modelsManager->executeQuery("delete from IntegrativeNotes where id='".$allPost['noteid']."'");
                    $responseArr=array('response' => 1, 'noteid' => $allPost['noteid']);

            }
        }
        echo json_encode($responseArr);
        exit();
    }
    /**
* removeofferdocument Action To delete multiple file of offer
* Action Name: removeofferdocumentAction
* Author By: Chittaranjan Sahoo
* Created Date: 25-09-2018
**/
    public function removeofferdocumentAction(){
        $responseArr=array('response' => 0, 'removeid' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if($allPost['doc_id']!=''){
                $offerfieldvaltbl=Offerfieldvaltbl::find(array('conditions' => "id='".$allPost['doc_id']."'", 'limit' => 1));
                if(count($offerfieldvaltbl)>0){
                    $valArr=json_decode($offerfieldvaltbl[0]->meta_value, true);
                    $docFile=urldecode($allPost['docFile']);
                    //print_r($allPost['docFile']); exit();
                    if(in_array($docFile, $valArr)){
                        $docKey=array_search($docFile, $valArr);
                        unset($valArr[$docKey]);
                        if(!empty($valArr)){
                            //print_r($valArr);exit();
                            $encodeFile=json_encode($valArr);
                        }else{
                            $encodeFile=" ";
                        }
                        $this->modelsManager->executeQuery("update Offerfieldvaltbl set meta_value='".$encodeFile."' where id='".$allPost['doc_id']."'");
                        @unlink("uploads/leadDocuments/".$docFile);
                    }

                    $responseArr=array('response' => 1, 'removeid' => 'doc-preofferFile-'.$allPost['doc_id'].'-'.$allPost['docIndex']);
                }

            }
        }
        echo json_encode($responseArr);
        exit();
    }
 /**
* single document delete Action
* Action Name: removesingofferdocumentAction
* Author By: Chittaranjan Sahoo
* Created Date: 25-09-2018
**/
    public function removesingofferdocumentAction(){
        $responseArr=array('response' => 0, 'removeid' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if($allPost['doc_id']!=''){
                $offerfieldvaltbl=Offerfieldvaltbl::find(array('conditions' => "id='".$allPost['doc_id']."'", 'limit' => 1));
                if(count($offerfieldvaltbl)>0){
                    $fileval=$offerfieldvaltbl[0]->meta_value;
                    $docFile=urldecode($allPost['docFile']);
                    //print_r($allPost['docFile']); exit();
                    if($fileval==$docFile){
                        $this->modelsManager->executeQuery("update Offerfieldvaltbl set meta_value=' ' where id='".$allPost['doc_id']."'");
                        @unlink("uploads/leadDocuments/".$docFile);
                    }

                    $responseArr=array('response' => 1, 'removeid' => 'doc-presingofferFile-'.$allPost['doc_id']);
                }

            }
        }
        echo json_encode($responseArr);
        exit();
    }
    /**
* Post Application Action to add application detail
* Action Name: postapplicationsubmitAction
* Author By: Chittaranjan Sahoo
* Created Date: 01-10-2018
**/
    public function postapplicationsubmitAction(){
        $responseArr=array('response' => 2, 'content' => '');
        if($this->request->isPost()){
            //print_r($_POST);exit();
            //$allPost=$this->request->getPost();
            $allPost=$_POST;
            //print_r($_FILES);
            //print_r($allPost); exit();
            $filearr=$this->request->getUploadedFiles();//echo "<pre>";print_r($filearr);exit();
            $finalFileArr=array();
                if(!empty($filearr))
                {
                    $baseLocation="uploads/post_application/";
                    if(!file_exists($baseLocation)){
                        mkdir("uploads/post_application", "0777");
                    }
                    foreach($filearr as $file)
                    {
                        //$file=$filearr[$i];//echo $file->getKey();
                        $filename=uniqid().$file->getName();
                        $fileError = $file->getError();
                        $file->moveTo($baseLocation.$filename);
                        array_push($finalFileArr, $filename);

                    }
                }
                if(!empty($finalFileArr)){
                    $allPost['note_attachments']=implode(":::", $finalFileArr);
                }
                $sessionID=$this->session->get('sessUserID');
                $allPost['user_id']=$sessionID;
                $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $notesDb= new PostApplication();
                //print_r($allPost); exit();
                $saveNote=$notesDb->save($allPost);
                 if($saveNote){

                        //=======Save track report========
                        $trackData['track_for']='SavePostApplication';
                        $trackData['userid']=$this->session->get('sessUserID');
                        $trackData['track_save_id']=$leadid;
                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);

                        //=======Save track report End========

                        //========Note result return==========

                        $content="";
                        $postAppRes=PostApplication::find(array(
                          'conditions' => "lead_id='".$allPost['lead_id']."'",
                          'order' => "id desc",
                          ));
                          if(count($postAppRes)>0){
                            foreach($postAppRes as $postAppResult){
                              $userDetail=Users::findFirst(array('conditions' => "id='".$postAppResult->user_id."'"));
                              $content.='<div class="PostApp_result allnoteboxresult" id="removePostApp'.$postAppResult->id.'">
                                        <a href="javascript:void(0);" class="removePostAppCls" data-id="'.$postAppResult->id.'"><i class="fa fa-remove fa-times"></i></a>
                                  <div class="row">
                                        <div class="col-md-12">
                                        <p> <span class="discusion_date"><img src="'.BASEURL.'frontfile/image/calender.png" class="img-responsive"/>
                                        '.date("d M, Y H:iA", strtotime($postAppResult->created)).'
                                      </span></p>
                                      <p> <i class="fa fa-user"></i> '.stripslashes($userDetail->first_name).'</p>
                                      </div>
                                    </div>';
                                    if(!empty($postAppResult->note_title)){
                                    $content.='<div class="row">
                                        <div class="col-md-12"><h5> '.stripslashes($postAppResult->note_title).'</h5></div>
                                    </div>';
                                    }
                                      $content.='<div class="row">
                                        <div class="col-md-12"><p>'.nl2br(stripslashes($postAppResult->note_text)).'</p></div>
                                       
                                      </div>';
                                    if(!empty($postAppResult->note_attachments)){
                                      $attachmentArr=explode(":::", $postAppResult->note_attachments);
                                     $content.='<div class="row">
                                        <div class="col-md-12">';
                                        if(count($attachmentArr)>0){
                                              $content.='<ul>';
                                              foreach($attachmentArr as $attachmentFile){
                                                   $content.='<li><a href="'.BASEURL.'uploads/post_application/'.$attachmentFile.'" download="'.$attachmentFile.'" title="'.$attachmentFile.'"><img src="'.BASEURL.'frontfile/image/if_12.File_290138.png" />
                                                    <h6>'.$attachmentFile.'</h6>
                                                    </a></li>';
                                                }


                                                $content.='</ul>';
                                        }
                                          $content.='</div>
                                     </div>';
                                    }
                              $content.='</div>';
                            }
                          }
                        //========Note result return end=======
                        $responseArr=array('response' => 1, 'content' => $content);
                }

        }

        echo json_encode($responseArr);
        exit();
    }
    /**
* Post Application Del Action to Delete Post application
* Action Name: postapplicationdelAction
* Author By: Chittaranjan Sahoo
* Created Date: 01-10-2018
**/
    public function postapplicationdelAction(){
        $responseArr=array('response' => 2, 'noteid' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if($allPost['noteid']!=''){
                $noteDetail=PostApplication::findFirst(array(
                    'conditions' => "id='".$allPost['noteid']."'"
                    ));
                if($noteDetail->note_attachments!=''){
                    $fileArr=explode(":::", $noteDetail->note_attachments);
                    if(count($fileArr)>0){
                        foreach($fileArr as $filename){
                            //echo "uploads/notes/".$filename;
                            @unlink("uploads/post_application/".$filename);
                        }
                    }
                }
                $delete=$this->modelsManager->executeQuery("delete from PostApplication where id='".$allPost['noteid']."'");
                    $responseArr=array('response' => 1, 'noteid' => $allPost['noteid']);

            }
        }
        echo json_encode($responseArr);
        exit();
    }

     /**
* Post Offer Action to add Post Offer detail
* Action Name: postoffersubmitAction
* Author By: Chittaranjan Sahoo
* Created Date: 01-10-2018
**/
    public function postoffersubmitAction(){
        $responseArr=array('response' => 2, 'content' => '');
        if($this->request->isPost()){
            //print_r($_POST);exit();
            //$allPost=$this->request->getPost();
            $allPost=$_POST;
            //print_r($_FILES);
            //print_r($allPost); exit();
            $filearr=$this->request->getUploadedFiles();//echo "<pre>";print_r($filearr);exit();
            $finalFileArr=array();
                if(!empty($filearr))
                {
                    $baseLocation="uploads/post_offer/";
                    if(!file_exists($baseLocation)){
                        mkdir("uploads/post_offer", "0777");
                    }
                    foreach($filearr as $file)
                    {
                        //$file=$filearr[$i];//echo $file->getKey();
                        $filename=uniqid().$file->getName();
                        $fileError = $file->getError();
                        $file->moveTo($baseLocation.$filename);
                        array_push($finalFileArr, $filename);

                    }
                }
                if(!empty($finalFileArr)){
                    $allPost['note_attachments']=implode(":::", $finalFileArr);
                }
                $sessionID=$this->session->get('sessUserID');
                $allPost['user_id']=$sessionID;
                $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $notesDb= new PostOffer();
                //print_r($allPost); exit();
                $saveNote=$notesDb->save($allPost);
                 if($saveNote){
                       $chkPostEnquiry=Enquiry::find(array('conditions' => "id='".$allPost['lead_id']."' and approved_postoffer=1"));
                       if(count($chkPostEnquiry)<=0){
                            $this->modelsManager->executeQuery("update Enquiry set approved_postoffer=1 where id='".$allPost['lead_id']."'");
                       }
                        //=======Save track report========
                        $trackData['track_for']='SavePostOffer';
                        $trackData['userid']=$this->session->get('sessUserID');
                        $trackData['track_save_id']=$allPost['lead_id'];
                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);

                        //=======Save track report End========

                        //========Note result return==========

                        $content="";
                        $postOfferRes=PostOffer::find(array(
                          'conditions' => "lead_id='".$allPost['lead_id']."'",
                          'order' => "id desc",
                          ));
                          if(count($postOfferRes)>0){
                            foreach($postOfferRes as $postOfferResult){
                              $userDetail=Users::findFirst(array('conditions' => "id='".$postOfferResult->user_id."'"));
                              $content.='<div class="PostOffer_result allnoteboxresult" id="removePostOffer'.$postOfferResult->id.'">
                                        <a href="javascript:void(0);" class="removePostOfferCls" data-id="'.$postOfferResult->id.'"><i class="fa fa-remove fa-times"></i></a>
                                  <div class="row">
                                        <div class="col-md-12">
                                        <p> <span class="discusion_date"><img src="'.BASEURL.'frontfile/image/calender.png" class="img-responsive"/>
                                        '.date("d M, Y H:iA", strtotime($postOfferResult->created)).'
                                      </span></p>
                                      <p> <i class="fa fa-user"></i> '.stripslashes($userDetail->first_name).'</p>
                                      </div>
                                    </div>';
                                    if(!empty($postOfferResult->note_title)){
                                    $content.='<div class="row">
                                        <div class="col-md-12"><h5> '.stripslashes($postOfferResult->note_title).'</h5></div>
                                    </div>';
                                    }
                                      $content.='<div class="row">
                                        <div class="col-md-12"><p>'.nl2br(stripslashes($postOfferResult->note_text)).'</p></div>
                                       
                                      </div>';
                                    if(!empty($postOfferResult->note_attachments)){
                                      $attachmentArr=explode(":::", $postOfferResult->note_attachments);
                                     $content.='<div class="row">
                                        <div class="col-md-12">';
                                        if(count($attachmentArr)>0){
                                              $content.='<ul>';
                                              foreach($attachmentArr as $attachmentFile){
                                                   $content.='<li><a href="'.BASEURL.'uploads/post_offer/'.$attachmentFile.'" download="'.$attachmentFile.'" title="'.$attachmentFile.'"><img src="'.BASEURL.'frontfile/image/if_12.File_290138.png" />
                                                    <h6>'.$attachmentFile.'</h6>
                                                    </a></li>';
                                                }


                                                $content.='</ul>';
                                        }
                                          $content.='</div>
                                     </div>';
                                    }
                              $content.='</div>';
                            }
                          }
                        //========Note result return end=======
                        $responseArr=array('response' => 1, 'content' => $content);
                }

        }

        echo json_encode($responseArr);
        exit();
    }
    /**
* Post Offer Del Action to Delete Post Offer
* Action Name: postofferdelAction
* Author By: Chittaranjan Sahoo
* Created Date: 01-10-2018
**/
    public function postofferdelAction(){
        $responseArr=array('response' => 2, 'noteid' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if($allPost['noteid']!=''){
                $noteDetail=PostOffer::findFirst(array(
                    'conditions' => "id='".$allPost['noteid']."'"
                    ));
                if($noteDetail->note_attachments!=''){
                    $fileArr=explode(":::", $noteDetail->note_attachments);
                    if(count($fileArr)>0){
                        foreach($fileArr as $filename){
                            //echo "uploads/notes/".$filename;
                            @unlink("uploads/post_offer/".$filename);
                        }
                    }
                }
                $delete=$this->modelsManager->executeQuery("delete from PostOffer where id='".$allPost['noteid']."'");
                    $responseArr=array('response' => 1, 'noteid' => $allPost['noteid']);

            }
        }
        echo json_encode($responseArr);
        exit();
    }
     /**
    * Barber ABI Action to list Barber
    * Action Name: barberabiAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 03-10-2018
    **/
    public function barberabiAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        $joinArr=array();
        $whr=array('is_active=1');
        if($this->request->isGet()){
            $allGet=$this->request->get();
            if(isset($allGet['searchtxt']) && $allGet['searchtxt']!=''){
                $srhtxt=$allGet['searchtxt'];
                array_push($whr, "(first_name like '%".$srhtxt."%' or last_name like '%".$srhtxt."%' or CONCAT(first_name, ' ', last_name) like '%".$srhtxt."%')");
            }
        }
        $order="id desc";
        $where="";
        if(!empty($whr)){
            $where=" where ".implode(" and ", $whr);
        }
        $joinString="";
        if(!empty($joinArr)){
            $joinString=" ".implode(" ", $joinArr);
        }
        //===========pagination===========
        $paged=$this->dispatcher->getParam("paged");
        $page = (int) (!isset($paged) ? 1 : $paged);
        $page = ($page == 0 ? 1 : $page);
        $perpage =20;
        $startpoint = ($page * $perpage) - $perpage;

        $totrecord=BarberAbi::findAll("select * from barber_abi".$joinString.$where." order by ".$order);
        $barberUsers=BarberAbi::findAll("select * from barber_abi".$joinString.$where." order by ".$order." limit ".$startpoint.", ".$perpage);

        //================================

        //$adminRes=AdminUsers::findByAll()->toArray();
        $this->view->setVar('barberUsers', $barberUsers);
        $this->view->setVar('totrecord', count($totrecord));
        $this->view->setVar('perpage', $perpage);
        $this->view->setVar('paged', $paged);
        $this->view->setVar('startpoint', $startpoint);

    }
    public function barberabiimportAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }

    }

    /**
    * Leads Action To Manage HZA DataTabs
    * Action Name: datatabAction
    * Author By: Rajesh Kumar Sahoo
    * Created Date: 08-10-2018
    **/
    public function datatabAction()
    {
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('dashboard');
        }
        if($this->session->has('sessionredirect')){
                $this->session->remove('sessionredirect');
            }
        if(UIElements::bapCustUniNewAdvChk()==1){
            return $response->redirect('dashboard');
        }
        $joinArr=array();
        $whr=array('is_active=1');
        if($this->request->isGet()){
            $allGet=$this->request->get();
            if(isset($allGet['deletrecord']) && $allGet['deletrecord']!=''){
                $dateval=urldecode($allGet['deletrecord']);
                $delete=$this->modelsManager->executeQuery("update Datatab set is_active=3 where date(created)='".$dateval."'");
                if($delete){
                    $this->flashSession->success("Data Deleted Successfully.");
                }else{
                   $this->flashSession->error("Data Deleting Failed.");
                }
            }
            if(isset($allGet['searchtxt']) && $allGet['searchtxt']!=''){
                $srhtxt=$allGet['searchtxt'];
                array_push($whr, "(first_name like '%".$srhtxt."%' or last_name like '%".$srhtxt."%' or CONCAT(first_name, ' ', last_name) like '%".$srhtxt."%' or company_name like '%".$srhtxt."%' or telephone = '".$srhtxt."' or mobile = '".$srhtxt."' or data_email like '%".$srhtxt."%' or notes like '%".$srhtxt."%' or code_description like '%".$srhtxt."%')");
            }
            if(isset($allGet['lead_source']) && $allGet['lead_source']!=''){
                $lead_source=$allGet['lead_source'];
                array_push($whr, "lead_source='".$lead_source."'");
            }
        }
        $order="id desc";
        if(isset($allGet['sorting']) && $allGet['sorting']!=''){
            $order=urldecode($allGet['sorting']);

        }
        $where="";
        if(!empty($whr)){
            $where=" where ".implode(" and ", $whr);
        }
        $joinString="";
        if(!empty($joinArr)){
            $joinString=" ".implode(" ", $joinArr);
        }
        //===========pagination===========
        $paged=$this->dispatcher->getParam("paged");
        $page = (int) (!isset($paged) ? 1 : $paged);
        $page = ($page == 0 ? 1 : $page);
        if($this->request->get('pagination') && $this->request->get('pagination')!=''){
            $perpage =$this->request->get('pagination');
        }else{
            $perpage =20;
        }
        $startpoint = ($page * $perpage) - $perpage;

        $totrecord=Datatab::findAll("select * from datatab".$joinString.$where." order by ".$order);
        $dataTabList=Datatab::findAll("select * from datatab".$joinString.$where." order by ".$order." limit ".$startpoint.", ".$perpage);

        //================================

        //$adminRes=AdminUsers::findByAll()->toArray();
        $this->view->setVar('dataTabList', $dataTabList);
        $this->view->setVar('totrecord', count($totrecord));
        $this->view->setVar('perpage', $perpage);
        $this->view->setVar('paged', $paged);
        $this->view->setVar('startpoint', $startpoint);
    }

    /**
    * Leads Action To Manage HZA DataTabs
    * Action Name: datatabtrashAction
    * Author By: Rajesh Kumar Sahoo
    * Created Date: 08-10-2018
    **/
    public function datatabtrashAction()
    {
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('dashboard');
        }
        if($this->session->has('sessionredirect')){
                $this->session->remove('sessionredirect');
            }
        if(UIElements::bapCustUniNewAdvChk()==1){
            return $response->redirect('dashboard');
        }
        $joinArr=array();
        $whr=array('is_active=3');
        if($this->request->isGet()){
            $allGet=$this->request->get();

            if(isset($allGet['searchtxt']) && $allGet['searchtxt']!=''){
                $srhtxt=$allGet['searchtxt'];
                array_push($whr, "(first_name like '%".$srhtxt."%' or last_name like '%".$srhtxt."%' or CONCAT(first_name, ' ', last_name) like '%".$srhtxt."%' or company_name like '%".$srhtxt."%' or telephone = '".$srhtxt."' or mobile = '".$srhtxt."' or data_email like '%".$srhtxt."%' or notes like '%".$srhtxt."%' or code_description like '%".$srhtxt."%')");
            }
            if(isset($allGet['lead_source']) && $allGet['lead_source']!=''){
                $lead_source=$allGet['lead_source'];
                array_push($whr, "lead_source='".$lead_source."'");
            }
        }
        $order="id desc";
        if(isset($allGet['sorting']) && $allGet['sorting']!=''){
            $order=urldecode($allGet['sorting']);

        }
        $where="";
        if(!empty($whr)){
            $where=" where ".implode(" and ", $whr);
        }
        $joinString="";
        if(!empty($joinArr)){
            $joinString=" ".implode(" ", $joinArr);
        }
        //===========pagination===========
        $paged=$this->dispatcher->getParam("paged");
        $page = (int) (!isset($paged) ? 1 : $paged);
        $page = ($page == 0 ? 1 : $page);
        if($this->request->get('pagination') && $this->request->get('pagination')!=''){
            $perpage =$this->request->get('pagination');
        }else{
            $perpage =20;
        }
        $startpoint = ($page * $perpage) - $perpage;

        $totrecord=Datatab::findAll("select * from datatab".$joinString.$where." order by ".$order);
        $dataTabList=Datatab::findAll("select * from datatab".$joinString.$where." order by ".$order." limit ".$startpoint.", ".$perpage);

        //================================

        //$adminRes=AdminUsers::findByAll()->toArray();
        $this->view->setVar('dataTabList', $dataTabList);
        $this->view->setVar('totrecord', count($totrecord));
        $this->view->setVar('perpage', $perpage);
        $this->view->setVar('paged', $paged);
        $this->view->setVar('startpoint', $startpoint);
    }
    public function datatabaddAction()
    {
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            /*$chkEmail=Datatab::find(array('conditions' => "data_email='".$allPost['data_email']."'", 'limit' => 1));
            if(count($chkEmail)>0){
                $this->flashSession->error("Email ID Already Exist");
            }else{*/
                $allPost['advisor_id']=$this->session->get('sessUserID');
                $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $allPost['is_active']=1;

                $datalast=Datatab::find(array('order' => "id desc", 'limit' => 1));
                if(count($datalast)>0){
                    $lastID=$datalast[0]->data_id;
                    $idArr=explode("TA", $lastID);
                    $increaseID=$idArr[1]+1;
                    $finalID="DATA".$increaseID;
                    $allPost['data_id']=$finalID;
                }else{
                    $allPost['data_id']="DATA10001";
                }
                $dataDB = new Datatab();
                $save=$dataDB->save($allPost);
                if($save){
                    $dataID=$dataDB->id;
                    //=======Save track report========
                        $trackData['track_for']='DataAdd';
                        $trackData['userid']=$this->session->get('sessUserID');
                        $trackData['track_save_id']=$dataID;
                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);

                    //=======Save track report End========

                    $this->flashSession->success("Data Saved Successfully.");
                }else{
                    $this->flashSession->error("Data Saving Failed.");
                }

            //}
        }
    }

    public function dataeditAction($id=''){
       // echo "<pre>";print_r($_SERVER); exit;
        if($_SERVER['HTTP_REFERER']!=''){

            if($this->session->has('sessionredirect')){
                $sessionredirect=$this->session->get('sessionredirect');
            }else{
                $this->session->set('sessionredirect', $_SERVER['HTTP_REFERER']);
                $sessionredirect=$this->session->get('sessionredirect');
            }

        }
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if($id!=''){
            $dataDet=Datatab::findFirst(array("conditions" => "id='".$id."'"));
            if(count($dataDet)>0){
                $this->view->setVar('dataDet', $dataDet);
                if($this->request->isPost()){
                    $allPost=$this->request->getPost();
                    $chkEmail=Datatab::find(array('conditions' => "data_email='".$allPost['data_email']."' and id !='".$id."'", 'limit' => 1));
                    if(count($chkEmail)>0){
                        $this->flashSession->error("Email ID Already Exist");
                    }else{
                        $allPost['id']=$id;
                        $allPost['advisor_id']=$this->session->get('sessUserID');
                        $allPost['created']=$dataDet->created;
                        $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $allPost['is_active']=$dataDet->is_active;

                        $datalast=Datatab::find(array('order' => "id desc", 'limit' => 1));
                        /*if(count($datalast)>0){
                            $lastID=$datalast[0]->data_id;
                            $idArr=explode("TA", $lastID);
                            $increaseID=$idArr[1]+1;
                            $finalID="DATA".$increaseID;
                            $allPost['data_id']=$finalID;
                        }else{
                            $allPost['data_id']="DATA10001";
                        }*/
                        $allPost['data_id']=$datalast[0]->data_id;
                        $dataDB = new Datatab();
                        $save=$dataDB->save($allPost);
                        if($save){
                            $dataID=$id;
                            //=======Save track report========
                            $trackData['track_for']='DataEdit';
                            $trackData['userid']=$this->session->get('sessUserID');
                            $trackData['track_save_id']=$dataID;
                            $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                            $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                            $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $trackClickSave = new TrackClickSave();
                            $saveTrack=$trackClickSave->save($trackData);

                            //=======Save track report End========
                            $this->flashSession->success("Data updated Successfully.");
                            return $response->redirect($sessionredirect);
                        }else{
                            $this->flashSession->error("Data updation Failed.");
                        }

                    }
                }
            }else{
                $this->flashSession->error("invalid Data edit requested.");
                return $response->redirect($sessionredirect);
            }
        }else{
            $this->flashSession->error("Data Saving Failed.");
            return $response->redirect($sessionredirect);
        }
    }

    public function datadetailAction($id=''){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if($id==''){
            return $response->redirect("dashboard/datatab");
        }
        $dataDetail=Datatab::findFirst(array('conditions' => "id='".$id."'"));
        if(!empty($dataDetail) && count($dataDetail)>0){
            $this->view->setVar('dataDetail', $dataDetail);
        }else{
            return $response->redirect("dashboard/datatab");
        }

    }

    /**
    * Data delete Action To Manage HZA lead delete Page
    * Action Name: datadeleteAction
    * Author By: Rajesh Kumar Sahoo
    * Created Date: 09-10-2018
    **/
    public function datadeleteAction($id=''){
        $sucMsg=0;
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

            if(isset($allPost['enqChk']) && !empty($allPost['enqChk'])){
                foreach($allPost['enqChk'] as $singLeadid){
                    $delete=$this->modelsManager->executeQuery("update Datatab set is_active=3 where id='".$singLeadid."'");
                    if($delete){
                        $sucMsg=1;
                    }
                }
            }
        }
        if($sucMsg==1){
            echo 1;
        }else{
            echo 2;
        }
        exit();
    }
    /**
    * Data permanent delete Action To Manage HZA lead delete Page
    * Action Name: datatrashdeleteAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 30-07-2021
    **/
    public function datatrashdeleteAction($id=''){
        $sucMsg=0;
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

            if(isset($allPost['enqChk']) && !empty($allPost['enqChk'])){
                foreach($allPost['enqChk'] as $singLeadid){
                    $delete=$this->modelsManager->executeQuery("delete from Datatab where id='".$singLeadid."' and is_active=3");
                    if($delete){
                        $sucMsg=1;
                    }
                }
            }
        }
        if($sucMsg==1){
            echo 1;
        }else{
            echo 2;
        }
        exit();
    }

    /**
    * Data restore Action To Manage HZA lead restore Page
    * Action Name: datarestoreAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 30-07-2021
    **/
    public function datarestoreAction($id=''){
        $sucMsg=0;
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

            if(isset($allPost['enqChk']) && !empty($allPost['enqChk'])){
                foreach($allPost['enqChk'] as $singLeadid){
                    $delete=$this->modelsManager->executeQuery("update Datatab set is_active=1 where id='".$singLeadid."'");
                    if($delete){
                        $sucMsg=1;
                    }
                }
            }
        }
        if($sucMsg==1){
            echo 1;
        }else{
            echo 2;
        }
        exit();
    }

    /**
    * Trackmail delete Action To Manage HZA track report delete Page
    * Action Name: trackmaildeleteAction
    * Author By: chittaranjan Sahoo
    * Created Date: 09-01-2021
    **/
    public function trackmaildeleteAction($id=''){
        $sucMsg=0;
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

            if(isset($allPost['enqChk']) && !empty($allPost['enqChk'])){
                foreach($allPost['enqChk'] as $singLeadid){
                    $delete=$this->modelsManager->executeQuery("delete from TrackMailReport where id='".$singLeadid."'");
                    if($delete){
                        $sucMsg=1;
                    }
                }
            }
        }
        if($sucMsg==1){
            echo 1;
        }else{
            echo 2;
        }
        exit();
    }

    public function advisordatanoteAction(){
        $responseArr=array('response' => 2, 'content' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            //print_r($_FILES);
            $filearr=$this->request->getUploadedFiles();//echo "<pre>";print_r($filearr);exit();
            $finalFileArr=array();
            if(!empty($filearr))
            {
                $baseLocation="uploads/notes/";
                foreach($filearr as $file)
                {
                    //$file=$filearr[$i];//echo $file->getKey();
                    $filename=uniqid().$file->getName();
                    $fileError = $file->getError();
                    $file->moveTo($baseLocation.$filename);
                    array_push($finalFileArr, $filename);

                }
            }
            if(!empty($finalFileArr)){
                $allPost['note_attachments']=implode(":::", $finalFileArr);
            }
            $sessionID=$this->session->get('sessUserID');
            $allPost['user_id']=$sessionID;
            $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            $notesDb= new DataNotes();
            $saveNote=$notesDb->save($allPost);
            if($saveNote){

                //=======Save track report========
                $trackData['track_for']='SaveDataNote';
                $trackData['userid']=$this->session->get('sessUserID');
                $trackData['track_save_id']=$allPost['data_id'];
                $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $trackClickSave = new TrackClickSave();
                $saveTrack=$trackClickSave->save($trackData);

                //=======Save track report End========

                //========Note result return==========

                $content="";
                $notesRes=DataNotes::find(array(
                  'conditions' => "data_id='".$allPost['data_id']."'",
                  'order' => "id desc",
                ));
                if(count($notesRes)>0){
                    foreach($notesRes as $notesResult){
                        $userDetail=Users::findFirst(array('conditions' => "id='".$notesResult->user_id."'"));
                        $content.='<div class="note_result" id="removeNote'.$notesResult->id.'">
                                <a href="javascript:void(0);" class="removenotecls" data-id="'.$notesResult->id.'"><i class="fa fa-remove fa-times"></i></a>
                          <div class="row">
                                <div class="col-md-12">
                                <p> <span class="discusion_date"><img src="'.BASEURL.'frontfile/image/calender.png" class="img-responsive"/>
                                '.date("d M, Y H:iA", strtotime($notesResult->created)).'
                              </span></p>
                              <p> <i class="fa fa-user"></i> '.stripslashes($userDetail->first_name).'</p>
                              </div>
                            </div>';
                            if(!empty($notesResult->note_title)){
                            $content.='<div class="row">
                                <div class="col-md-12"><h5> '.stripslashes($notesResult->note_title).'</h5></div>
                            </div>';
                            }
                              $content.='<div class="row">
                                <div class="col-md-12"><p>'.nl2br(stripslashes($notesResult->note_text)).'</p></div>
                               
                              </div>';
                            if(!empty($notesResult->note_attachments)){
                              $attachmentArr=explode(":::", $notesResult->note_attachments);
                             $content.='<div class="row">
                                <div class="col-md-12">';
                                if(count($attachmentArr)>0){
                                      $content.='<ul>';
                                      foreach($attachmentArr as $attachmentFile){
                                           $content.='<li><a href="'.BASEURL.'uploads/notes/'.$attachmentFile.'" download="'.$attachmentFile.'" title="'.$attachmentFile.'"><img src="'.BASEURL.'frontfile/image/if_12.File_290138.png" />
                                            <h6>'.$attachmentFile.'</h6>
                                            </a></li>';
                                        }


                                        $content.='</ul>';
                                }
                                  $content.='</div>
                             </div>';
                            }
                      $content.='</div>';
                    }
                }
                //========Note result return end=======
                $responseArr=array('response' => 1, 'content' => $content);
                }

        }

        echo json_encode($responseArr);
        exit();
    }
    public function datanotedelAction(){
        $responseArr=array('response' => 2, 'noteid' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if($allPost['noteid']!=''){
                $noteDetail=DataNotes::findFirst(array(
                    'conditions' => "id='".$allPost['noteid']."'"
                    ));
                if($noteDetail->note_attachments!=''){
                    $fileArr=explode(":::", $noteDetail->note_attachments);
                    if(count($fileArr)>0){
                        foreach($fileArr as $filename){
                            //echo "uploads/notes/".$filename;
                            @unlink("uploads/notes/".$filename);
                        }
                    }
                }
                $delete=$this->modelsManager->executeQuery("delete from DataNotes where id='".$allPost['noteid']."'");
                    $responseArr=array('response' => 1, 'noteid' => $allPost['noteid']);

            }
        }
        echo json_encode($responseArr);
        exit();
    }
    /**
    * leaddetail print Action To view print leaddetail
    * Action Name: printdatadetailAction
    * Author By: Rajesh Kumar Sahoo
    * Created Date: 10-10-2018
    **/
    public function printdatadetailAction($id=''){
        $response = new \Phalcon\Http\Response();

        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if($id==''){
            return $response->redirect("dashboard/datatab");
        }
        $dataDetail=Datatab::findFirst(array('conditions' => "id='".$id."'"));
        if(!empty($dataDetail) && count($dataDetail)>0){
            $this->view->setVar('dataDetail', $dataDetail);
        }else{
            return $response->redirect("dashboard/datatab");
        }
    }

    /**
    * data sendemail Action To mail datadetail
    * Action Name: datasendemailAction
    * Author By: Rajesh Kumar Sahoo
    * Created Date: 10-10-2018
    **/
    public function datasendemailAction($id=''){
        $response = new \Phalcon\Http\Response();
        if($id==''){
            return $response->redirect('dashboard/datatab');
        }
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }

        $dataDetail=Datatab::findFirst(array('conditions' => "id='".$id."'"));
        if(!empty($dataDetail) && count($dataDetail)>0){
            //$this->view->setVar('leadid', $id);
            $this->view->setVar('dataDetail', $dataDetail);
            $fromUserID=$this->session->get('sessUserID');

            if($this->request->isPost()){
                $allPost=$this->request->getPost();
                //print_r($allPost);exit();
                $composeID=$allPost['template_id'];
                //$mailContentDetail=ComposeMail::findFirst(array('conditions' => "compose_id='".$composeID."'", 'limit' => 1));
                //$allPost['mail_subject']=$mailContentDetail->compose_subject;
               // $allPost['mail_subject']=UIElements::replaceBaberEmailMessage($id,$allPost['mail_subject']);

                $allPost['status']=1;
                $allPost['data_id']=$id;
                $allPost['from_user']=$fromUserID;
                $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $allPost['to_user']=implode(',', $allPost['to_user']);
                $allPost['cc_user']=implode(',', $allPost['cc_user']);
                $allPost['bcc_user']=implode(',', $allPost['bcc_user']);

                $allPost['to_user_extra']=addslashes($allPost['to_user_extra']);
                $allPost['cc_user_extra']=addslashes($allPost['cc_user_extra']);
                $allPost['bcc_user_extra']=addslashes($allPost['bcc_user_extra']);

                $attachFileArr=array();
                $pdfAndVideoAttachArr=array();
                if(isset($_FILES['upload_attach_files'])){
                    //echo 1; exit();
                   if(count($_FILES['upload_attach_files']['name'])>0){
                        foreach($_FILES['upload_attach_files']['name'] as $fIndex => $attachFile){
                            $saveFileName=uniqid().$attachFile;
                            $tmpName=$_FILES['upload_attach_files']['tmp_name'][$fIndex];
                            move_uploaded_file($tmpName, 'uploads/sendmail/'.$saveFileName);
                            array_push($attachFileArr, $saveFileName);
                            array_push($pdfAndVideoAttachArr, "uploads/sendmail/".$saveFileName);
                        }
                   }
                }
                $allPost['attached_files']=implode(",", $attachFileArr);
                //echo "<pre>";print_r($allPost); exit();
                //=======Send Mail===========
                $siteAdmin = Sitesetting::findFirst(array("id=1"));

                    $toUserEmailArr=array();
                    $ccUserEmailArr=array();
                    $bccUserEmailArr=array();

                    $tooUserIdArr=array();
                    $cccUserIdArr=array();
                    $bcccUserIdArr=array();
                    $tooUsereidArr=array();
                    $cccUsereidArr=array();
                    $bcccUsereidArr=array();

                    if($allPost['to_user'] !=""){
                        $toUserIdArr=explode(',', $allPost['to_user']);
                        if(!empty($toUserIdArr) && count($toUserIdArr)>0){
                            foreach ($toUserIdArr as $toUserIdDet) {
                                $currdate=date("Y-m-d");
                                $date = strtotime($currdate);
                                $lastdate = strtotime("-6 day", $date);
                                $startdate=date("Y-m-d", $lastdate);

                                //$sixDaysInterval=date("Y-m-d", st)
                                //$chkSixDaysIntervals=DataSendEmail::findAll("select * from data_send_email where find_in_set('".$toUserIdDet."', to_user) and (date(created)>'".$startdate."' and date(created)<='".$currdate."') limit 1");

                                //if(count($chkSixDaysIntervals)<=0){

                                    $leadUserDet=Datatab::findFirst(array('conditions' => "id='".$toUserIdDet."'", 'limit' => 1));

                                    if(strpos($leadUserDet->data_email,"gov.")!==false){

                                    }else if(strpos($leadUserDet->data_email,"police.")!==false){

                                    }else if(strpos($leadUserDet->data_email,"nhs.")!==false){

                                    }else if(strpos($leadUserDet->data_email,"sch.")!==false){

                                    }else if(strpos($leadUserDet->data_email,"ac.")!==false){
                                    }else{
                                        array_push($toUserEmailArr, $leadUserDet->data_email);
                                        array_push($tooUserIdArr, $toUserIdDet);
                                    }
                                //}
                            }
                        }
                    }
                    if($allPost['to_user_extra'] !=""){
                       $toUserEmailExtraArr= explode(',', $allPost['to_user_extra']);
                       if(!empty($toUserEmailExtraArr) && count($toUserEmailExtraArr)>0){
                            foreach ($toUserEmailExtraArr as $toUserEmailExtra) {

                                $currdate=date("Y-m-d");
                                $date = strtotime($currdate);
                                $lastdate = strtotime("-6 day", $date);
                                $startdate=date("Y-m-d", $lastdate);

                                //$sixDaysInterval=date("Y-m-d", st)
                                //$chkSixDaysIntervals=DataSendEmail::findAll("select * from data_send_email where find_in_set('".$toUserEmailExtra."', to_user_extra) and (date(created)>'".$startdate."' and date(created)<='".$currdate."') limit 1");

                                //if(count($chkSixDaysIntervals)<=0){

                                    if(strpos($toUserEmailExtra,"gov.")!==false){

                                    }else if(strpos($toUserEmailExtra,"police.")!==false){

                                    }else if(strpos($toUserEmailExtra,"nhs.")!==false){

                                    }else if(strpos($toUserEmailExtra,"sch.")!==false){

                                    }else if(strpos($toUserEmailExtra,"ac.")!==false){
                                    }else{
                                        array_push($toUserEmailArr, $toUserEmailExtra);
                                        array_push($tooUsereidArr, $toUserEmailExtra);
                                    }
                                //}
                            }
                        }
                    }

                    if($allPost['cc_user'] !=""){
                        $ccUserIdArr=explode(',', $allPost['cc_user']);
                        if(!empty($ccUserIdArr) && count($ccUserIdArr)>0){
                            foreach ($ccUserIdArr as $ccUserIdDet) {

                                $currdate=date("Y-m-d");
                                $date = strtotime($currdate);
                                $lastdate = strtotime("-6 day", $date);
                                $startdate=date("Y-m-d", $lastdate);

                                //$sixDaysInterval=date("Y-m-d", st)
                                //$chkSixDaysIntervals=DataSendEmail::findAll("select * from data_send_email where find_in_set('".$ccUserIdDet."', cc_user) and (date(created)>'".$startdate."' and date(created)<='".$currdate."') limit 1");

                                //if(count($chkSixDaysIntervals)<=0){

                                    $leadUserDet=Datatab::findFirst(array('conditions' => "id='".$ccUserIdDet."'", 'limit' => 1));

                                    if(strpos($leadUserDet->borrower_email,"gov.")!==false){

                                    }else if(strpos($leadUserDet->borrower_email,"police.")!==false){

                                    }else if(strpos($leadUserDet->borrower_email,"nhs.")!==false){

                                    }else if(strpos($leadUserDet->borrower_email,"sch.")!==false){

                                    }else if(strpos($leadUserDet->borrower_email,"ac.")!==false){
                                    }else{
                                        array_push($ccUserEmailArr, $leadUserDet->borrower_email);
                                        array_push($cccUserIdArr, $ccUserIdDet);

                                    }
                                //}
                            }
                        }
                    }

                    if($allPost['cc_user_extra'] !=""){
                       $ccUserEmailExtraArr= explode(',', $allPost['cc_user_extra']);
                       if(!empty($ccUserEmailExtraArr) && count($ccUserEmailExtraArr)>0){
                            foreach ($ccUserEmailExtraArr as $ccUserEmailExtra) {

                                $currdate=date("Y-m-d");
                                $date = strtotime($currdate);
                                $lastdate = strtotime("-6 day", $date);
                                $startdate=date("Y-m-d", $lastdate);

                                //$sixDaysInterval=date("Y-m-d", st)
                                //$chkSixDaysIntervals=DataSendEmail::findAll("select * from data_send_email where find_in_set('".$ccUserEmailExtra."', cc_user_extra) and (date(created)>'".$startdate."' and date(created)<='".$currdate."') limit 1");

                                //if(count($chkSixDaysIntervals)<=0){


                                    if(strpos($ccUserEmailExtra,"gov.")!==false){

                                    }else if(strpos($ccUserEmailExtra,"police.")!==false){

                                    }else if(strpos($ccUserEmailExtra,"nhs.")!==false){

                                    }else if(strpos($ccUserEmailExtra,"sch.")!==false){

                                    }else if(strpos($ccUserEmailExtra,"ac.")!==false){
                                    }else{
                                        array_push($ccUserEmailArr, $ccUserEmailExtra);
                                        array_push($cccUsereidArr, $ccUserEmailExtra);
                                    }
                                //}
                            }
                        }
                    }

                    if($allPost['bcc_user'] !=""){
                        $bccUserIdArr=explode(',', $allPost['bcc_user']);
                        if(!empty($bccUserIdArr) && count($bccUserIdArr)>0){
                            foreach ($bccUserIdArr as $bccUserIdDet) {

                                $currdate=date("Y-m-d");
                                $date = strtotime($currdate);
                                $lastdate = strtotime("-6 day", $date);
                                $startdate=date("Y-m-d", $lastdate);

                                //$sixDaysInterval=date("Y-m-d", st)
                                //$chkSixDaysIntervals=DataSendEmail::findAll("select * from data_send_email where find_in_set('".$bccUserIdDet."', bcc_user) and (date(created)>'".$startdate."' and date(created)<='".$currdate."') limit 1");

                                //if(count($chkSixDaysIntervals)<=0){

                                    $leadUserDet=Datatab::findFirst(array('conditions' => "id='".$bccUserIdDet."'", 'limit' => 1));

                                     if(strpos($leadUserDet->borrower_email,"gov.")!==false){

                                    }else if(strpos($leadUserDet->borrower_email,"police.")!==false){

                                    }else if(strpos($leadUserDet->borrower_email,"nhs.")!==false){

                                    }else if(strpos($leadUserDet->borrower_email,"sch.")!==false){

                                    }else if(strpos($leadUserDet->borrower_email,"ac.")!==false){
                                    }else{
                                       array_push($bccUserEmailArr, $leadUserDet->borrower_email);
                                       array_push($bcccUserIdArr, $bccUserIdDet);

                                    }
                                //}
                            }
                        }
                    }

                    if($allPost['bcc_user_extra'] !=""){
                       $bccUserEmailExtraArr= explode(',', $allPost['bcc_user_extra']);
                       if(!empty($bccUserEmailExtraArr) && count($bccUserEmailExtraArr)>0){
                            foreach ($bccUserEmailExtraArr as $bccUserEmailExtra) {

                                $currdate=date("Y-m-d");
                                $date = strtotime($currdate);
                                $lastdate = strtotime("-6 day", $date);
                                $startdate=date("Y-m-d", $lastdate);

                                //$sixDaysInterval=date("Y-m-d", st)
                                //$chkSixDaysIntervals=DataSendEmail::findAll("select * from data_send_email where find_in_set('".$bccUserEmailExtra."', bcc_user_extra) and (date(created)>'".$startdate."' and date(created)<='".$currdate."') limit 1");

                                //if(count($chkSixDaysIntervals)<=0){

                                    if(strpos($bccUserEmailExtra,"gov.")!==false){

                                    }else if(strpos($bccUserEmailExtra,"police.")!==false){

                                    }else if(strpos($bccUserEmailExtra,"nhs.")!==false){

                                    }else if(strpos($bccUserEmailExtra,"sch.")!==false){

                                    }else if(strpos($bccUserEmailExtra,"ac.")!==false){
                                    }else{
                                       array_push($bccUserEmailArr, $bccUserEmailExtra);
                                       array_push($bcccUsereidArr, $bccUserEmailExtra);
                                    }
                                //}
                            }
                        }
                    }

                    $advisorDetail=Users::findFirst(array('conditions' => "id='".$fromUserID."'"));


                    $sendMsg=$allPost['mail_content'];
                    $subject = $allPost['mail_subject'];

                    $sendMsg=UIElements::replaceDataEmailMessage($id,$sendMsg);
                    $subject=UIElements::replaceDataEmailMessage($id,$subject);

                    $unsubscribeLink='<a href="'.BASEURL.'unsubscribemail/?actionof=data&sid='.base64_encode($id).'">Unsubscribe</a>';
                    $sendMsg=str_replace('{unsubscribeLink}', $unsubscribeLink, $sendMsg);
                    $subject=str_replace('{unsubscribeLink}', $unsubscribeLink, $subject);

                    /*echo $sendMsg;
                    echo $subject;
                    echo "Divide<br>";
                    echo $advisorDetail->first_name;
                    exit();*/
                    /*print_r($toUserEmailArr);
                    print_r($ccUserEmailArr);
                    print_r($bccUserEmailArr);
                    exit();*/

                    //$sentUmail =UIFront::sendEmailMultiple($toUserEmailArr,$ccUserEmailArr,$bccUserEmailArr, $subject, $sendMsg,$advisorDetail->email_id, $advisorDetail->email_id, $advisorDetail->first_name, $pdfAndVideoAttachArr);
                    $sessionID=rand(10, 1000000);
                    $trackData['session_id']=$sessionID;
                    $trackData['send_from']='DATA';
                    $trackData['sending_type']='SendMail';
                    $trackData['advisor_id']=$this->session->get('sessUserID');

                    if(count($toUserEmailArr)>0){
                        foreach($toUserEmailArr as $toUserEmailSing){

                            $randomid=rand(10, 1000);
                            $sendMsg.='<img src="https://www.google-analytics.com/collect?v=1&tid=UA-810265-7&cid='.$randomid.'&aip=1&t=event&ec=email&ea=open&dp=%2Femail%2Fdatasendmail&dt=Data%20Send%20Mail:'.$toUserEmailSing.'">';

                            $sentUmail =UIFront::sendEmailMultiple(array($toUserEmailSing),$ccUserEmailArr,$bccUserEmailArr, $subject, $sendMsg,$advisorDetail->email_id, $advisorDetail->email_id, $advisorDetail->first_name." ".$advisorDetail->last_name, $pdfAndVideoAttachArr);
                            if($sentUmail){
                                $trackData['send_user_id_type']='EMAIL';
                                $trackData['user_id']=$toUserEmailSing;
                                $trackData['status']='SUCCESS';
                                $trackData['error_reason']='';
                            }else{
                                $trackData['send_user_id_type']='EMAIL';
                                $trackData['user_id']=$toUserEmailSing;
                                $trackData['status']='FAILED';
                                $trackData['error_reason']='FailDelivery';
                            }
                            $trackData['track_on']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $trackMailReport= NEW TrackMailReport();
                            $savetrack=$trackMailReport->save($trackData);
                        }
                    }
                //=======End Send Mail=======

                $allPost['to_user']=implode(",", $tooUserIdArr);
                $allPost['cc_user']=implode(",", $cccUserIdArr);
                $allPost['bcc_user']=implode(",", $bcccUserIdArr);

                $allPost['to_user_extra']=implode(",", $tooUsereidArr);
                $allPost['cc_user_extra']=implode(",", $cccUsereidArr);
                $allPost['bcc_user_extra']=implode(",", $bcccUsereidArr);
                //print_r($allPost);exit();
                $sendMailDb= new DataSendEmail();
                $saveSendMail=$sendMailDb->save($allPost);
                if($saveSendMail){
                    $insertid=$sendMailDb->id;
                    //=======Save track report========
                    $trackData['track_for']='data_send_mail';
                    $trackData['userid']=$this->session->get('sessUserID');
                    $trackData['track_save_id']=$insertid;
                    $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                    $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                    $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $trackClickSave = new TrackClickSave();
                    $saveTrack=$trackClickSave->save($trackData);
                    //=======Save track report End========



                    $this->flashSession->success("Mail sent successfully.");

                }else{
                    $this->flashSession->error("Message sending failed!");
                }

            }
        }
    }
    /**
    * data import Action To import datadetail
    * Action Name: dataimportAction
    * Author By: Rajesh Kumar Sahoo
    * Created Date: 11-10-2018
    **/
    public function dataimportAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if($this->request->isPost()){
            if($this->request->hasFiles()== true)
            {
                //echo 123;exit;
                $baselocation='uploads/profileimg/';
                $arrfile=$this->request->getUploadedFiles();
                if(!empty($arrfile) && $arrfile[0]->getError()!=4)
                {
                    $file=$arrfile[0];
                    $filename=time().$file->getName();
                    $tmpName=$file->getTempName();
                    $handle = fopen($tmpName, "r");
                    $fcount=1;
                    while (($data = fgetcsv($handle, 0, ",")) !== FALSE) {
                        //print_r($data);exit();
                        if($fcount>1){
                            //==========User Save===============
                            $leadsourceDet=Leadsource::findFirst(array('conditions' => "source_name='".$data[0]."'", 'order' => "id asc"));
                            if(!empty($leadsourceDet) && count($leadsourceDet)>0){
                                $userData['lead_source']=$leadsourceDet->id;
                            }else{
                               $userData['lead_source']=0;
                            }

                            //$userData['lead_source']=$data[0];
                            $userData['company_name']=$data[1];
                            $userData['first_name']=$data[2];
                            $userData['last_name']=$data[3];
                            $userData['data_email']=$data[4];
                            $userData['telephone']=$data[5];
                            $userData['mobile']=$data[6];
                            $userData['notes']=$data[7];
                            $userData['is_active']=1;

                            //$emailChk = BarberAbi::find(array('conditions' => "email_address='".$userData['email_address']."'"));
                            //if(count($emailChk)<=0){
                            //$userData['advisor_id']=$this->session->get('sessUserID');
                            if($data[8]!=''){
                                 $userChk=Users::find(array('conditions' => "customer_no='".$data[8]."'", 'limit' => 1));
                                if(count($userChk)>0){
                                    $userData['advisor_id']=$userChk[0]->id;
                                }else{
                                    $userData['advisor_id']=$this->session->get('sessUserID');
                                }
                            }else{
                                $userData['advisor_id']=$this->session->get('sessUserID');
                            }

                            $userData['registration_number']=$data[9];
                            $userData['postcode']=$data[10];
                            $userData['geography_four']=$data[11];
                            $userData['geography_three']=$data[12];
                            $userData['geography_two']=$data[13];

                            $userData['website']=$data[14];
                            $userData['code_description']=$data[15];
                            $userData['director_name_one']=$data[16];

                            $userData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $userData['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $datalast=Datatab::find(array('order' => "id desc", 'limit' => 1));
                            if(count($datalast)>0){
                                $lastID=$datalast[0]->data_id;
                                $idArr=explode("TA", $lastID);
                                $increaseID=$idArr[1]+1;
                                $finalID="DATA".$increaseID;
                                $userData['data_id']=$finalID;
                            }else{
                                $userData['data_id']="DATA10001";
                            }
                            //print_r($userData);exit();
                            $usersDb=new Datatab();
                            $saveUser=$usersDb->save($userData);
                            if($saveUser){

                                $insertUserid=$usersDb->id;
                            }else {
                                /*echo "Sorry, the following problems were generated: ";
                                foreach ($usersDb->getMessages() as $message) {
                                    echo $message->getMessage(), "<br/>";
                                    exit();
                                }*/
                            }
                            //}

                            //==========User Save End===============
                        }
                        $fcount++;
                    }
                    $this->flashSession->success('Data Imported Successfully');
                    return $response->redirect("dashboard/dataimport");
                }else
                    {
                    $this->flashSession->success('Something is wrong.Please try Again.');
                }
            }
        }
    }
    public function notproceedAction($id=''){
        $response = new \Phalcon\Http\Response();
        if($id!=''){
            $date=date("Y-m-d H:i:s", strtotime("+60 minutes"));
             $update=$this->modelsManager->executeQuery("update Enquiry set not_proceeding=1, modified='".$date."' where id='".$id."'");
             //echo 1; exit();
            if($update){
                $this->flashSession->success("Enquiry has been set to not proceeding Successfully.");
                //=========Mail functionality goes here==========
                /*$enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$id."'"));
                    $sessionID=$this->session->get('sessUserID');
                    $sessuserDetail=Users::findFirst(array('conditions' => "id='".$sessionID."'"));
                    $mailContent=UIElements::bapCustUniGetMailText(10);
                    $siteAdmin = Sitesetting::findFirst(array("id=1"));
                    $bodyMsg=$mailContent['body'];
                    $bodyMsg=str_replace('{Name}', stripslashes($enquiryDetails->first_name." ".$enquiryDetails->last_name), $bodyMsg);
                    $subject=$mailContent['subject'];

                    $bodyMsg=UIElements::replaceEnquiryEmailMessage($id,$bodyMsg);
                    $subject=UIElements::replaceEnquiryEmailMessage($id,$subject);
                    $leadEmailID='';
                    if(strpos($enquiryDetails->borrower_email,"gov.")!==false){

                    }else if(strpos($enquiryDetails->borrower_email,"police.")!==false){

                    }else if(strpos($enquiryDetails->borrower_email,"nhs.")!==false){

                    }else if(strpos($enquiryDetails->borrower_email,"sch.")!==false){

                    }else if(strpos($enquiryDetails->borrower_email,"ac.")!==false){
                    }else{
                        $leadEmailID=$enquiryDetails->borrower_email;
                    }
                    if($leadEmailID!=''){
                        $sentUmail =UIElements::sendEmail($leadEmailID, $subject, $bodyMsg);
                    }*/
                //========End mail functionality here============
            }else{
                $this->flashSession->error("Enquiry  setting to not proceeding Failed.");
            }
        }else{
            $this->flashSession->error("Something is wrong. Please Try Again");
        }
        return $response->redirect('dashboard/enquiry');
    }
/**
* Leads Action To Manage HZA not proceeding
* Action Name: notproceedinglistAction
* Author By: Chittaranjan Sahoo
* Created Date: 24-10-2018
**/
    public function notproceedinglistAction(){

        $response = new \Phalcon\Http\Response();
        $allParam=$this->dispatcher->getParams();

        $sessionID=$this->session->get('sessUserID');
        if($this->session->get('sessUserType')>0){
            return $response->redirect("dashboard/");

        }
         $joinArr=array();
        $whr=array("enquiry.not_proceeding=1");
        if($this->request->isGet()){
            $allGet=$this->request->get();
            if(isset($allGet['searchtxt']) && $allGet['searchtxt']!=''){
                $srhtxt=$allGet['searchtxt'];
                array_push($whr, "(enquiry.borrower_name like '%".$srhtxt."%' or enquiry.first_name like '%".$srhtxt."%' or enquiry.last_name like '%".$srhtxt."%' or CONCAT(enquiry.first_name, ' ', enquiry.last_name) like '%".$srhtxt."%' or enquiry.borrower_email = '".$srhtxt."' or enquiry.borrower_mob = '".$srhtxt."' or enquiry.postcode = '".$srhtxt."' or enquiry.name_of_comany like '%".$srhtxt."%' or enquiry.borrower_address like '%".$srhtxt."%' or lead_application.pd_fullname like '%".$srhtxt."%' or lead_application.pd_email like '%".$srhtxt."%' or lead_application.pd_phone_no like '%".$srhtxt."%')");
                array_push($joinArr, "left join lead_application on enquiry.id=lead_application.lead_id");
            }
            /*if(isset($allGet['loan_type']) && $allGet['loan_type']!=''){
                $loan_type=$allGet['loan_type'];
                array_push($whr, "loan_type='".$loan_type."'");
            }*/
            if(isset($allGet['product']) && $allGet['product']!=''){
                $product=$allGet['product'];
                array_push($whr, "enquiry.product='".$product."'");
            }
            if(isset($allGet['purpose']) && $allGet['purpose']!=''){
                $purpose=$allGet['purpose'];
                array_push($whr, "enquiry.purpose='".$purpose."'");
            }
            if(isset($allGet['property_type']) && $allGet['property_type']!=''){
                $property_type=$allGet['property_type'];
                array_push($whr, "enquiry.property_type='".$property_type."'");
            }
            if(isset($allGet['refurbishment']) && $allGet['refurbishment']!=''){
                $refurbishment=$allGet['refurbishment'];
                array_push($whr, "enquiry.refurbishment='".$refurbishment."'");
            }
            if(isset($allGet['lead_source']) && $allGet['lead_source']!=''){
                $lead_source=$allGet['lead_source'];
                array_push($whr, "enquiry.lead_source='".$lead_source."'");
            }
            if(isset($allGet['modified']) && $allGet['modified']!=''){
                $modified=str_replace("/", "-", $allGet['modified']);
                $modified=date("Y-m-d", strtotime($modified));
                //echo $modified;exit;
                array_push($whr, "date(modified)= '".$modified."'");
            }
        }

        $order="modified desc";
        if(isset($allGet['sorting']) && $allGet['sorting']!=''){
            if(isset($allGet['atype']) && $allGet['atype']=='product'){
                array_push($joinArr, "left join charges on charges.id=enquiry.product");
                $order="charges.".urldecode($allGet['sorting']);
            }else if(isset($allGet['atype']) && $allGet['atype']=='user'){
                array_push($joinArr, "left join users on users.id=enquiry.advisor_id");
                $order="users.".urldecode($allGet['sorting']);
            }else if(isset($allGet['atype']) && $allGet['atype']=='lenduser'){
                array_push($joinArr, "left join users on users.id=enquiry.approve_by_lender");
                $order="users.".urldecode($allGet['sorting']);
            }else{
                $order="enquiry.".urldecode($allGet['sorting']);
            }

        }
        $where="";
        if(!empty($whr)){
            $where=" where ".implode(" and ", $whr);
        }
        $joinString="";
        if(!empty($joinArr)){
            $joinString=" ".implode(" ", $joinArr);
        }
        //===========pagination===========
        $paged=$this->dispatcher->getParam("paged");
        $page = (int) (!isset($paged) ? 1 : $paged);
        $page = ($page == 0 ? 1 : $page);
        $perpage =20;
        $startpoint = ($page * $perpage) - $perpage;
        //echo "select enquiry.* from enquiry".$joinString.$where." order by ".$order." limit ".$startpoint.", ".$perpage; exit();
        $totrecord=Enquiry::findAll("select enquiry.* from enquiry".$joinString.$where." order by ".$order);
        $leadRes=Enquiry::findAll("select enquiry.* from enquiry".$joinString.$where." order by ".$order." limit ".$startpoint.", ".$perpage);
        //$totrecord=Enquiry::find(array("conditions" => $where, "order" => $order,));
        //$leadRes=Enquiry::find(array("conditions" => $where, "order" => $order,"limit" => array($perpage, $startpoint)));
        //================================

        //$adminRes=AdminUsers::findByAll()->toArray();
        $this->view->setVar('leadRes', $leadRes);
        $this->view->setVar('totrecord', count($totrecord));
        $this->view->setVar('perpage', $perpage);
        $this->view->setVar('paged', $paged);
        $this->view->setVar('startpoint', $startpoint);
        //echo 'This page is comming Soon';exit;
    }


    /**
* Not Proceeding Lead Detail Action To Manage HZA not proceeding lead detail Page
* Action Name: leaddetailAction
* Author By: Chittaranjan Sahoo
* Created Date: 24-10-2018
**/
    public function notproceedingdetailAction($id=''){
        $response = new \Phalcon\Http\Response();
        $sessionID=$this->session->get('sessUserID');
        if($this->session->get('sessUserType')>0){
            return $response->redirect("dashboard/");

        }
        if($id==''){
            return $response->redirect("dashboard/notproceedinglist");
        }
        $leadDetail=Enquiry::findFirst(array('conditions' => "id='".$id."'"));
        /*if($leadDetail->not_proceeding!=1){
            $this->dispatcher->forward(array(
                'controller' => 'error',
                'action' => 'index'
            ));
        }*/
        $this->view->setVar('leadDetail', $leadDetail);
    }
    public function pipelineAction(){
        $response = new \Phalcon\Http\Response();
        $allParam=$this->dispatcher->getParams();

        $sessionID=$this->session->get('sessUserID');
        //$sessionsubmitBtn=$this->session->get('submitBtn');
        if($this->session->get('sessUserType')>0){
            return $response->redirect("dashboard/");

        }
        $whr=array("enquiry.in_progress=1");
        $joinArr=array();

        if($this->request->isGet()){
            $allGet=$this->request->get();
            //$this->session->set('submitBtn', $allGet['submitBtn']);
            if(isset($allGet['searchtxt']) && $allGet['searchtxt']!=''){
                $srhtxt=$allGet['searchtxt'];
                array_push($whr, "(enquiry.borrower_name like '%".$srhtxt."%' or enquiry.first_name like '%".$srhtxt."%' or enquiry.last_name like '%".$srhtxt."%' or CONCAT(enquiry.first_name, ' ', enquiry.last_name) like '%".$srhtxt."%' or enquiry.borrower_email = '".$srhtxt."' or enquiry.borrower_mob = '".$srhtxt."' or enquiry.postcode = '".$srhtxt."' or enquiry.name_of_comany like '%".$srhtxt."%' or enquiry.borrower_address like '%".$srhtxt."%' or lead_application.pd_fullname like '%".$srhtxt."%' or lead_application.pd_email like '%".$srhtxt."%' or lead_application.pd_phone_no like '%".$srhtxt."%')");
                array_push($joinArr, "left join lead_application on enquiry.id=lead_application.lead_id");
            }
            /*if(isset($allGet['loan_type']) && $allGet['loan_type']!=''){
                $loan_type=$allGet['loan_type'];
                array_push($whr, "loan_type='".$loan_type."'");
            }*/
            // ==========================================

            if(isset($allGet['product']) && $allGet['product']!=''){
               // array_push($joinArr, "inner join charges as ch on enquiry.product=ch.id");
				$product=$allGet['product'];
                array_push($whr, "enquiry.application_type='".$product."'");
            }
        
            // ==========================================

            // if(isset($allGet['product']) && $allGet['product']!=''){
            //     $product=$allGet['product'];
            //     array_push($whr, "(enquiry.product='".$product."' or enquiry.application_type='".$product."')");
            // }

            if(isset($allGet['purpose']) && $allGet['purpose']!=''){
                $purpose=$allGet['purpose'];
                array_push($whr, "enquiry.purpose='".$purpose."'");
            }
            if(isset($allGet['property_type']) && $allGet['property_type']!=''){
                $property_type=$allGet['property_type'];
                array_push($whr, "enquiry.property_type='".$property_type."'");
            }
            if(isset($allGet['refurbishment']) && $allGet['refurbishment']!=''){
                $refurbishment=$allGet['refurbishment'];
                array_push($whr, "enquiry.refurbishment='".$refurbishment."'");
            }
            if(isset($allGet['lead_source']) && $allGet['lead_source']!=''){
                $lead_source=$allGet['lead_source'];
                array_push($whr, "enquiry.lead_source='".$lead_source."'");
            }
            if(isset($allGet['modified']) && $allGet['modified']!=''){
                $modified=str_replace("/", "-", $allGet['modified']);
                $modified=date("Y-m-d", strtotime($modified));
                //echo $modified;exit;
                array_push($whr, "date(modified)= '".$modified."'");
            }
            if(isset($allGet['lead_given']) && $allGet['lead_given']!=''){
               // $modified=str_replace("/", "-", $allGet['modified']);
                $lead_given=$allGet['lead_given'];
                array_push($whr, "enquiry.lead_given_by='".$allGet['lead_given']."'");
            }
            if(isset($allGet['advisor_name']) && $allGet['advisor_name']!=''){
               // $modified=str_replace("/", "-", $allGet['modified']);
                $lead_given=$allGet['advisor_name'];
                array_push($whr, "enquiry.assign_advisor='".$allGet['advisor_name']."'");
            }
            if(isset($allGet['address']) && $allGet['address']!=''){
               // $modified=str_replace("/", "-", $allGet['modified']);
                $address=$allGet['address'];
                array_push($whr, "enquiry.security_address like '%".$allGet['address']."%'");
            }
            if(isset($allGet['case_status']) && $allGet['case_status']!=''){
               array_push($joinArr, "inner join workflow_task on enquiry.id=workflow_task.lead_id");
                array_push($whr, "workflow_task.in_progress_sub ='".$allGet['case_status']."'");
            }

            if(isset($allGet['case_manager']) && $allGet['case_manager']!=''){
                $case_manager=$allGet['case_manager'];
                array_push($whr, "enquiry.case_manager='".$case_manager."'");
            }

            if(isset($allGet['priority']) && $allGet['priority']!=''){
                array_push($joinArr, "inner join workflow_task as wt on enquiry.id=wt.lead_id");
                array_push($whr, "wt.priority='".$allGet['priority']."'");
            }

        }
        //$orders="priority desc"
        $order="id desc";
        // // echo "<pre>"; print_r($_REQUEST);die;
        // if(isset($allGet['sorting']) && $allGet['sorting']!=''){

        //     if(isset($allGet['atype']) && $allGet['atype']=='product'){
        //         array_push($joinArr, "left join charges as ch on ch.id=enquiry.product");
        //         $order="ch.".urldecode($allGet['sorting']);

        //     }else if(isset($allGet['atype']) && $allGet['atype']=='user'){

        //         array_push($joinArr, "left join users on users.id=enquiry.advisor_id");
        //         $order="users.".urldecode($allGet['sorting']);

        //     }else if(isset($allGet['atype']) && $allGet['atype']=='lenduser'){

        //         array_push($joinArr, "left join users on users.id=enquiry.approve_by_lender");
        //         $order="users.".urldecode($allGet['sorting']);

        //     }else if(isset($allGet['atype']) && $allGet['atype']=='lender'){
        //         array_push($joinArr, "left join workflow_task as wt on  wt.lead_id=enquiry.id");
        //         $order="wt.".urldecode($allGet['sorting']);

        //     }else if(isset($allGet['atype']) && $allGet['atype']=='priority'){
        //         array_push($joinArr, "left join workflow_task on workflow_task.lead_id=enquiry.id");
        //         $order="workflow_task.".urldecode($allGet['sorting']);

        //     }else{
        //         $order="enquiry.".urldecode($allGet['sorting']);
        //     }

        // }
        $where="";
        //echo $allGet['product'];die;
        //echo "<pre>";print_r($whr);die;
        if(!empty($whr)){
            $where=" where ".implode(" and ", $whr);
            //echo "<pre>";print_r($where);die;
        }
        $joinString="";
        if(!empty($joinArr)){
            $joinString=" ".implode(" ", $joinArr);
            //echo "<pre>"; print_r($joinString);die;
            // echo "<pre>"; print_r($joinString);die;
        }
        //===========pagination===========
        $paged=$this->dispatcher->getParam("paged");
        $page = (int) (!isset($paged) ? 1 : $paged);
        $page = ($page == 0 ? 1 : $page);
        $perpage =20;
        $startpoint = ($page * $perpage) - $perpage;
        //echo "select enquiry.* from enquiry".$joinString.$where." order by ".$order; exit();

        $brokerfeetot=0;
        $procfeetot=0;
        foreach($totrecord as $pipelinedetails)
        {
            if($pipelinedetails->inernal_broker_fee>0){
              $bfee=$pipelinedetails->inernal_broker_fee/100*$pipelinedetails->amount_required;
              $brokerfeetot+=$bfee;

            }
            if($pipelinedetails->internal_proc_fee>0){
              $pfee=$pipelinedetails->internal_proc_fee/100*$pipelinedetails->amount_required;
              $procfeetot+=$pfee;

            }
        }

        if(isset($allGet['case_status']) && $allGet['case_status']!=''){
            $totrecord=Enquiry::findAll("select enquiry.*,workflow_task.id as workflowtaskid from ((SELECT enquiry.*,enquiry.borrower_name as borrower_names FROM enquiry WHERE in_progress=1) UNION (SELECT SUBSTRING_INDEX(pd_fullname,':::', 1) AS borrower_names,enquiry.*  FROM enquiry join lead_application on enquiry.id=lead_application.lead_id WHERE in_progress=1 and (borrower_name='' or borrower_name is null))) as enquiry".$joinString.$where." ");

             $leadRes=Enquiry::findAll("select enquiry.*,workflow_task.id as workflowtaskid,workflow_task.in_progress_sub from ((SELECT enquiry.*,enquiry.borrower_name as borrower_names FROM enquiry WHERE in_progress=1) UNION (SELECT SUBSTRING_INDEX(pd_fullname,':::', 1) AS borrower_names,enquiry.*  FROM enquiry join lead_application on enquiry.id=lead_application.lead_id WHERE in_progress=1 and (borrower_name='' or borrower_name is null))) as enquiry".$joinString.$where." and (enquiry.is_active IS NULL or enquiry.is_active!=3) ");
            //echo "select enquiry.*,workflow_task.id as workflowtaskid from enquiry".$joinString.$where." order by ".$order." limit ".$startpoint.", ".$perpage;exit;
              }else if(isset($allGet['priority']) && $allGet['priority']!=''){
              $totrecord=Enquiry::findAll("select wt.priority,enquiry.* from ((SELECT enquiry.*,enquiry.borrower_name as borrower_names FROM enquiry WHERE in_progress=1) UNION (SELECT SUBSTRING_INDEX(pd_fullname,':::', 1) AS borrower_names,enquiry.*  FROM enquiry join lead_application on enquiry.id=lead_application.lead_id WHERE in_progress=1 and (borrower_name='' or borrower_name is null))) as enquiry".$joinString.$where."");

            $leadRes=Enquiry::findAll("select wt.priority,enquiry.* from ((SELECT enquiry.*,enquiry.borrower_name as borrower_names FROM enquiry WHERE in_progress=1) UNION (SELECT SUBSTRING_INDEX(pd_fullname,':::', 1) AS borrower_names,enquiry.*  FROM enquiry join lead_application on enquiry.id=lead_application.lead_id WHERE in_progress=1 and (borrower_name='' or borrower_name is null))) as enquiry".$joinString.$where." and (enquiry.is_active IS NULL or enquiry.is_active!=3)");

        }else if(isset($allGet['product']) && $allGet['product']!=''){
              $totrecord=Enquiry::findAll("select enquiry.* from ((SELECT enquiry.*,enquiry.borrower_name as borrower_names FROM enquiry WHERE in_progress=1) UNION (SELECT SUBSTRING_INDEX(pd_fullname,':::', 1) AS borrower_names,enquiry.*  FROM enquiry join lead_application on enquiry.id=lead_application.lead_id WHERE in_progress=1 and (borrower_name='' or borrower_name is null))) as enquiry".$joinString.$where." and (enquiry.is_active IS NULL or enquiry.is_active!=3)");

            $leadRes=Enquiry::findAll("select enquiry.* from ((SELECT enquiry.*,enquiry.borrower_name as borrower_names FROM enquiry WHERE in_progress=1) UNION (SELECT SUBSTRING_INDEX(pd_fullname,':::', 1) AS borrower_names,enquiry.*  FROM enquiry join lead_application on enquiry.id=lead_application.lead_id WHERE in_progress=1 and (borrower_name='' or borrower_name is null))) as enquiry".$joinString.$where." and (enquiry.is_active IS NULL or enquiry.is_active!=3)");
			// echo "<pre>"; print_r($joinString);die;
               }else{
            $totrecord = Enquiry::findAll("select enquiry.* from ((SELECT enquiry.*,enquiry.borrower_name as borrower_names FROM enquiry WHERE in_progress=1) UNION (SELECT SUBSTRING_INDEX(pd_fullname,':::', 1) AS borrower_names,enquiry.*  FROM enquiry join lead_application on enquiry.id=lead_application.lead_id WHERE in_progress=1 and (borrower_name='' or borrower_name is null))) as enquiry".$joinString.$where."");
            // workflow_task.priority

            $leadRes   = Enquiry::findAll("select enquiry.* from ((SELECT enquiry.*,enquiry.borrower_name as borrower_names FROM enquiry WHERE in_progress=1) UNION (SELECT SUBSTRING_INDEX(pd_fullname,':::', 1) AS borrower_names,enquiry.*  FROM enquiry join lead_application on enquiry.id=lead_application.lead_id WHERE in_progress=1 and (borrower_name='' or borrower_name is null))) as enquiry".$joinString.$where." and (enquiry.is_active IS NULL or enquiry.is_active!=3) ");
       }

        //================================

        //$adminRes=AdminUsers::findByAll()->toArray();
        // echo "<pre>"; print_r($leadRes);die;
        $this->view->setVar('leadRes', $leadRes);
        $this->view->setVar('totrecord', count($totrecord));
        $this->view->setVar('perpage', $perpage);
        $this->view->setVar('brokerfeetot', $brokerfeetot);
        $this->view->setVar('procfeetot', $procfeetot);
        $this->view->setVar('paged', $paged);
        $this->view->setVar('startpoint', $startpoint);
        //echo 'This page is comming Soon';exit;
    }
    public function pipelinedetailAction($id=''){
        $response = new \Phalcon\Http\Response();
        $sessionID= $this->session->get('sessUserID');
        if($this->session->get('sessUserType')>0){
            return $response->redirect("dashboard/");

        }

        if($id==''){
            return $response->redirect("dashboard/pipeline");
        }
        $leadDetail=Enquiry::findFirst(array('conditions' => "id='".$id."'"));
        /*if($leadDetail->in_progress!=1){
            $this->dispatcher->forward(array(
                'controller' => 'error',
                'action' => 'index'
            ));
        }*/
        $this->view->setVar('leadDetail', $leadDetail);
    }
/**
* Not Proceeding Lead Active function
* Action Name: activeleadAction
* Author By: Chittaranjan Sahoo
* Created Date: 24-10-2018
**/
    public function activeleadAction($id=''){
        $response = new \Phalcon\Http\Response();
        $sessionID=$this->session->get('sessUserID');
        if($this->session->get('sessUserType')>0){
            return $response->redirect("dashboard/");

        }
        if($id!=''){
            $date=date("Y-m-d H:i:s", strtotime("+60 minutes"));
             $update=$this->modelsManager->executeQuery("update Enquiry set not_proceeding=0, modified='".$date."' where id='".$id."'");
            if($update){
                $this->flashSession->success("Lead has been activate Successfully.");
                //=========Mail functionality goes here==========
                $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$id."'"));
                    $sessionID=$this->session->get('sessUserID');
                    $sessuserDetail=Users::findFirst(array('conditions' => "id='".$sessionID."'"));
                    $mailContent=UIElements::bapCustUniGetMailText(11);
                    $siteAdmin = Sitesetting::findFirst(array("id=1"));
                    $bodyMsg=$mailContent['body'];
                    $bodyMsg=str_replace('{Name}', stripslashes($enquiryDetails->first_name." ".$enquiryDetails->last_name), $bodyMsg);
                    $subject=$mailContent['subject'];

                    $bodyMsg=UIElements::replaceEnquiryEmailMessage($id,$bodyMsg);
                    $subject=UIElements::replaceEnquiryEmailMessage($id,$subject);
                    $leadEmailID='';
                    if(strpos($enquiryDetails->borrower_email,"gov.")!==false){

                    }else if(strpos($enquiryDetails->borrower_email,"police.")!==false){

                    }else if(strpos($enquiryDetails->borrower_email,"nhs.")!==false){

                    }else if(strpos($enquiryDetails->borrower_email,"sch.")!==false){

                    }else if(strpos($enquiryDetails->borrower_email,"ac.")!==false){
                    }else{
                        $leadEmailID=$enquiryDetails->borrower_email;
                    }
                    if($leadEmailID!=''){
                        $sentUmail =UIElements::sendEmail($leadEmailID, $subject, $bodyMsg);
                    }
                    //$sentUmail =UIElements::sendEmail($enquiryDetails->borrower_email, $subject, $bodyMsg);
                //========End mail functionality here============
            }else{
                $this->flashSession->error("Lead  Activating Failed.");
            }

        }
        return $response->redirect("dashboard/notproceedinglist");
    }
    public function unsubscribemailAction(){
        $response = new \Phalcon\Http\Response();
        if($this->request->isGet()){
            $allGet=$this->request->get();
            /*if($allGet['actionof']=='lead'){
                $update=$this->modelsManager->executeQuery("update Enquiry set not_send_mail=1 where id='".$uniqueID."'");
            }else if($allGet['actionof']=='data'){
                $update=$this->modelsManager->executeQuery("update Datatab set not_send_mail=1 where id='".$uniqueID."'");
            }else if($allGet['actionof']=='abi'){
                $update=$this->modelsManager->executeQuery("update BarberAbi set not_send_mail=1 where id='".$uniqueID."'");
            }*/
            if($allGet['actionof']=='abi' && $allGet['emailid']!=''){

                    $chkEmailID=BarberAbi::find(array('conditions' => "company_email like '%".$allGet['emailid']."%' or email_address like '%".$allGet['emailid']."%'"));
                    if(count($chkEmailID)>0){
                        $date=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        foreach($chkEmailID as $abires){
                            if($allGet['type']=='unsubscribe'){
                                $update=$this->modelsManager->executeQuery("update BarberAbi set not_send_mail=1, modified='".$date."' where id='".$abires->id."'");
                            }else if($allGet['type']=='automatic'){
                                $update=$this->modelsManager->executeQuery("update BarberAbi set automatic_stop=1, modified='".$date."' where id='".$abires->id."'");
                            }

                            //echo "update BarberAbi set not_send_mail=1, modified='".$date."' where id='".$abires->id."'";
                        }
                        if($update){
                            $sid=base64_decode($allGet['sid']);
                            return $response->redirect("dashboard/?sendmail=1&abisuccess=1&act=".$allGet['actionof']."&ssid=".$sid);
                        }else{
                            $sid=base64_decode($allGet['sid']);
                            return $response->redirect("dashboard/?sendmail=1&abisuccess=2&act=".$allGet['actionof']."&ssid=".$sid);
                        }


                    }else{
                        $sid=base64_decode($allGet['sid']);
                        return $response->redirect("dashboard/?sendmail=1&abisuccess=3&act=".$allGet['actionof']."&ssid=".$sid);
                    }

                }else{
                    return $response->redirect("dashboard/?sendmail=1&actionof=".$allGet['actionof']);
                    if($allGet['actionof']=='abi' || $allGet['actionof']=='bulkabi'){
                            return $response->redirect("dashboard/?sendmail=1&actionof=".$allGet['actionof']."&type=".$allGet['type']);
                        }else{

                            return $response->redirect("dashboard/?sendmail=1&actionof=".$allGet['actionof']);
                        }
                }

        }
        return $response->redirect("dashboard/");
    }
    public function unsubscribemailsubmitAction(){

        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $sessionID=$this->session->get('sessUserID');
            $chkEmailID=Users::find(array('conditions' => "id='".$sessionID."' and email_id='".$allPost['register_email']."'", 'limit' => 1));
            if(count($chkEmailID)>0){
                $chkEnquiry=Enquiry::find(array('conditions' => "lead_id='".$allPost['register_leadid']."'", 'limit' => 1));
                // and borrower_email='".$allPost['register_email']."'
                if(count($chkEnquiry)>0){
                    $update=$this->modelsManager->executeQuery("update Enquiry set not_send_mail=1 where id='".$chkEnquiry[0]->id."'");
                    if($update){
                        echo 1;
                    }else{
                        echo 2;
                    }

                }else{
                    echo 4;
                }
            }else{
                echo 3;
            }

        }
        exit();
    }
    /**
* Data lead Source mail send and list section function
* Action Name: dataleadsourceAction
* Author By: Chittaranjan Sahoo
* Created Date: 30-10-2018
**/
    public function dataleadsourceAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $sessionID=$this->session->get('sessUserID');
            $allPost['advisor_id']=$sessionID;
            $sessuserdetail=Users::find(array('conditions' => "id='".$sessionID."'", 'limit' => 1));
            $mailtemplates=ComposeMail::find(array('conditions' => "status=1 and find_in_set('4', user_type) and compose_id='".$allPost['mail_template']."'", 'order' => "compose_id asc", 'limit' => 1));
            if(count($mailtemplates)>0){
                $mailContentDetail=$mailtemplates[0];
                //echo $allPost['lead_source']; exit();

                if(in_array('test', $allPost['lead_source'])){
                    $testKey=array_search('test', $allPost['lead_source']);
                    $lenderSourceArr=$allPost['lead_source'];
                    unset($lenderSourceArr[$testKey]);
                    $leadSources=implode(",", $lenderSourceArr);

                }else{
                    $leadSources=implode(",", $allPost['lead_source']);
                }
                if($leadSources!=''){
                    $dataRes=Datatab::find(array('conditions' => "is_active=1 and lead_source IN (".$leadSources.")"));
                }else{
                    $dataRes=array();
                }
                //==========test mail send start from here=====================

                if(in_array('test', $allPost['lead_source'])){
                     $mailSubject=$mailContentDetail->compose_subject;
                     $mailContent=$mailContentDetail->compose_msg;
                     $sendEmail=UIElements::sendEmail('connor@hankzarihs.com',$mailSubject,$mailContent);
                }
                //==========test mail send end from here==========

                //echo count($dataRes); exit();
                $dataIDs=array();
                if(count($dataRes)>0){

                    $sessionID=rand(10, 1000000);
                    $trackData['session_id']=$sessionID;
                    $trackData['send_from']='DATA';
                    $trackData['sending_type']='DataBySource';
                    $trackData['advisor_id']=$this->session->get('sessUserID');

                    foreach($dataRes as $dataResult){

                        $trackData['send_user_id_type']='';
                        $trackData['user_id']='';
                        $trackData['status']='';
                        $trackData['error_reason']='';

                        $mailSubject=$mailContentDetail->compose_subject;
                        $mailSubject=UIElements::replaceDataEmailMessage($dataResult->id,$mailSubject);
                        $mailContent=$mailContentDetail->compose_msg;
                        $mailContent=UIElements::replaceDataEmailMessage($dataResult->id,$mailContent);
                        if($dataResult->not_send_mail==1){
                            $trackData['send_user_id_type']='ID';
                            $trackData['user_id']=$dataResult->id;
                            $trackData['status']='FAILED';
                            $trackData['error_reason']='Unsubscribe';
                        }else{
                            if($dataResult->data_email!=''){

                                $toID=$dataResult->data_email;
                                 $unsubscribeLink='<a href="'.BASEURL.'unsubscribemail/?actionof=data&sid='.base64_encode($dataResult->id).'">Unsubscribe</a>';
                                $mailContent=str_replace('{unsubscribeLink}', $unsubscribeLink, $mailContent);
                                $mailSubject=str_replace('{unsubscribeLink}', $unsubscribeLink, $mailSubject);
                                //echo $toID;
                                $finaltoID='';
                                if(strpos($toID,"gov.")!==false){
                                    $trackData['send_user_id_type']='ID';
                                    $trackData['user_id']=$dataResult->id;
                                    $trackData['status']='FAILED';
                                    $trackData['error_reason']='govtMail';
                                }else if(strpos($toID,"police.")!==false){
                                    $trackData['send_user_id_type']='ID';
                                    $trackData['user_id']=$dataResult->id;
                                    $trackData['status']='FAILED';
                                    $trackData['error_reason']='govtMail';
                                }else if(strpos($toID,"nhs.")!==false){
                                    $trackData['send_user_id_type']='ID';
                                    $trackData['user_id']=$dataResult->id;
                                    $trackData['status']='FAILED';
                                    $trackData['error_reason']='govtMail';
                                }else if(strpos($toID,"sch.")!==false){
                                    $trackData['send_user_id_type']='ID';
                                    $trackData['user_id']=$dataResult->id;
                                    $trackData['status']='FAILED';
                                    $trackData['error_reason']='govtMail';
                                }else if(strpos($toID,"ac.")!==false){
                                    $trackData['send_user_id_type']='ID';
                                    $trackData['user_id']=$dataResult->id;
                                    $trackData['status']='FAILED';
                                    $trackData['error_reason']='govtMail';
                                }else{
                                    $finaltoID=$toID;
                                }
                                if($finaltoID!=''){
                                    //echo $finaltoID;
                                    $randomid=rand(10, 1000);
                                    $mailContent.='<img src="https://www.google-analytics.com/collect?v=1&tid=UA-810265-7&cid='.$randomid.'&aip=1&t=event&ec=email&ea=open&dp=%2Femail%2Fdatasendbyleadsource&dt=Data%20Send%20By%20Lead%20Source:'.$finaltoID.'">';
                                     array_push($dataIDs, $dataResult->id);
                                     $sendEmail=UIElements::sendEmail($finaltoID,$mailSubject,$mailContent);
                                    if($sendmail){
                                        $trackData['send_user_id_type']='ID';
                                        $trackData['user_id']=$dataResult->id;
                                        $trackData['status']='SUCCESS';
                                        $trackData['error_reason']='';
                                    }else{
                                        $trackData['send_user_id_type']='ID';
                                        $trackData['user_id']=$dataResult->id;
                                        $trackData['status']='FAILED';
                                        $trackData['error_reason']='FailDelivery';
                                    }
                                }

                            }else{
                                $trackData['send_user_id_type']='ID';
                                $trackData['user_id']=$dataResult->id;
                                $trackData['status']='FAILED';
                                $trackData['error_reason']='InvalidAddress';
                            }
                        }

                        $trackData['track_on']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackMailReport= NEW TrackMailReport();
                        $savetrack=$trackMailReport->save($trackData);

                    }
                    //exit();
                    if(!empty($dataIDs)){
                        $allPost['data_users']=implode(",", $dataIDs);
                    }
                    $allPost['lead_source']=$leadSources;
                    $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $Dataleadsourcemail= new Dataleadsourcemail();
                    $save=$Dataleadsourcemail->save($allPost);
                    if($save){
                        $this->flashSession->success('Mail Sent Successfully.');
                        return $response->redirect('dashboard/dataleadsource');
                    }else{
                        $this->flashSession->error('Mail Sending Failed.');
                    }
                }else{
                    $this->flashSession->error('No data founds to send mail');
                }


            }else{
                    $this->flashSession->error('Template not available to send mail');
                }

        }
        /* List Start from here*/
        $whr=array();
        $order="id desc";
        $where="";
        if(!empty($whr)){
            $where=" where ".implode(" and ", $whr);
        }
        //===========pagination===========
        $paged=$this->dispatcher->getParam("paged");
        $page = (int) (!isset($paged) ? 1 : $paged);
        $page = ($page == 0 ? 1 : $page);
        $perpage =20;
        $startpoint = ($page * $perpage) - $perpage;

        $totrecord=Dataleadsourcemail::findAll("select * from dataleadsourcemail".$joinString.$where." order by ".$order);
        $sentList=Dataleadsourcemail::findAll("select * from dataleadsourcemail".$joinString.$where." order by ".$order." limit ".$startpoint.", ".$perpage);

        //================================

        //$adminRes=AdminUsers::findByAll()->toArray();
        $this->view->setVar('sentList', $sentList);
        $this->view->setVar('totrecord', count($totrecord));
        $this->view->setVar('perpage', $perpage);
        $this->view->setVar('paged', $paged);
        $this->view->setVar('startpoint', $startpoint);
    }
    /**
* Data lead Source mail sdelete function
* Action Name: dataleaddeleteAction
* Author By: Chittaranjan Sahoo
* Created Date: 30-10-2018
**/
    public function dataleaddeleteAction($id=''){
        $sucMsg=0;
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

            if(isset($allPost['enqChk']) && !empty($allPost['enqChk'])){
                foreach($allPost['enqChk'] as $singLeadid){
                    $delete=$this->modelsManager->executeQuery("delete from Dataleadsourcemail where id='".$singLeadid."'");
                    if($delete){
                        $sucMsg=1;
                    }
                }
            }
        }
        if($sucMsg==1){
            echo 1;
        }else{
            echo 2;
        }
        exit();
    }
    public function chkmailAction(){
        $sentUmail =UIElements::sendEmail('chittas970@gmail.com', 'test subject', 'test message');
        if($sentUmail){
            echo 'success';
        }else{
            echo 'failed';
        }
        /*if(mail('chittas970@gmail.com', 'test subject', 'test message', 'bapuni.ab@gmail.com')){
            echo 'success!';
        }else{
            echo 'failed!';
        }*/
        exit();
    }
    /**
* Data Create Lead Action To add lead from Data detail
* Action Name: createdataleadAction
* Author By: Chittaranjan Sahoo
* Created Date: 24-12-2018
**/
    public function createdataleadAction(){
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $dataid=$allPost['dataid'];
            if($allPost['createlead']==1){
                $chkLead=Datatab::find(array(
                    'conditions' => "id='".$dataid."' and is_lead=1",
                    "limit" => 1
                    ));
                if(count($chkLead)<1){
                    $datadetails=Datatab::find(array(
                    'conditions' => "id='".$dataid."'",
                    "limit" => 1
                    ))->toArray();
                    if(count($datadetails)>0){
                        $datadetail=$datadetails[0];
                        if($datadetail['company_name']!=''){
                            $leadDetail['borrower_type']=2;
                        }else{
                            $leadDetail['borrower_type']=1;
                        }
                        $leadData['name_of_comany']=$datadetail['company_name'];
                        $leadData['first_name']=$datadetail['first_name'];
                        $leadData['last_name']=$datadetail['last_name'];
                        $leadData['borrower_email']=$datadetail['data_email'];
                        $leadData['borrower_tel']=$datadetail['telephone'];
                        $leadData['borrower_mob']=$datadetail['mobile'];
                        $leadData['note_text']=$datadetail['notes'];
                        $leadData['lead_source']=$datadetail['lead_source'];

                        $leadData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $leadData['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $leadData['advisor_id']=$this->session->get('sessUserID');
                        $leadData['lead_unique_id']=rand(10, 1000000);
                        $leadData['is_active']=1;
                        $leadlast=Enquiry::find(array('order' => "id desc", 'limit' => 1));
                        if(count($leadlast)>0){
                            $lastID=$leadlast[0]->lead_id;
                            $idArr=explode("D", $lastID);
                            $increaseID=$idArr[1]+1;
                            $finalID="LEAD".$increaseID;
                            $leadData['lead_id']=$finalID;
                        }else{
                            $leadData['lead_id']="LEAD10001";
                        }
                         $enquiryDB = new Enquiry();
                        $save=$enquiryDB->save($leadData);
                        if($save){
                            $enquiryID=$enquiryDB->id;
                            //=======Save track report========
                            $trackData['track_for']='dataleadAdd';
                            $trackData['userid']=$this->session->get('sessUserID');
                            $trackData['track_save_id']=$enquiryID;
                            $trackData['detailid']=$dataid;
                            $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                            $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                            $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $trackClickSave = new TrackClickSave();
                            $saveTrack=$trackClickSave->save($trackData);
                            //=======Save track report End========
                            $this->modelsManager->executeQuery("update Datatab set is_lead=1, lead_id='".$enquiryID."' where id='".$dataid."'");
                            $responseArr=array('response' => 1);
                        }else{
                            $responseArr=array('response' => 2);
                        }
                    }else{
                       $responseArr=array('response' => 4);
                    }
                }else{
                    $responseArr=array('response' => 3);
                }

            }
            echo json_encode($responseArr);
        }
        exit();
    }
    /**
    * lendersendmail Action To mail lender
    * Action Name: lendersendmailAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 26-12-2018
    **/
    public function lendersendmailAction($id=''){
         //echo $id;exit;
         $response = new \Phalcon\Http\Response();

         if($this->request->get())
         {
             $getall=$this->request->get();
         }
         else
         {
             $getall=array();
         }
         if($id==''){
             return $response->redirect('/dashboard/enquiry');
         }
         if($this->session->get('sessUserType')>0){
             return $response->redirect('/dashboard');
         }
         $leadDetail=Enquiry::findFirst(array('conditions' => "id='".$id."'", 'limit' => 1));
         $quickQuote=QuickQuote::find(array('conditions' => "lead_id='".$id."'", 'limit' => 1));
         //echo "<pre>";print_r($quickQuote->toArray());exit;
         $lenderArr=array();
         if(count($quickQuote)>0)
         {
             $quoteDet=QuickquoteDetails::find(array('conditions' => "quickquoteid='".$quickQuote[0]->id."' and checked_lender=1",));
             if(count($quoteDet)>0)
             {
                 foreach($quoteDet as $quoteDt)
                 {
                     array_push($lenderArr, $quoteDt->lender_id);
                 }
             }

         }
         //count($lenderArr);exit;
        /* if(count($lenderArr)==0)
         {*/
            //$lenderArr=$this->session->get('checkedLenderArr');
            //$prelendercheckedArr=$this->session->get('preLenderCheckedArr');
         /*}
         else
         {
            $lenderArr=array();
            $prelendercheckedArr=array();
         }*/

        //print_r($lenderArr);
        //print_r($prelendercheckedArr);exit;
         //$this->view->setVar('leadid', $id);
         $this->view->setVar('lenderArr', $lenderArr);
         $this->view->setVar('leadDetail', $leadDetail);
         $this->view->setVar('prelendercheckedArr', $prelendercheckedArr);
         $fromUserID=$this->session->get('sessUserID');


        echo $this->request->isPost();
        // var_dump($this->request->isPost());die;
         if($this->request->isPost()){
             $allPost=$this->request->getPost();
             //echo $htmlContent=UIElements::BapCustUniGetLeadPdfHtml($id);
             //pdf_create($htmlContent, "uploads/leadpdf/user-".$id."-enquirydetail.pdf", false);
             //exit();
             //echo "<pre>"; print_r($allPost); exit();
             $composeID=$allPost['template_id'];
             $mailContentDetail=ComposeMail::findFirst(array('conditions' => "compose_id='".$composeID."'", 'limit' => 1));

             $allPost['mail_subject']  = $mailContentDetail->compose_subject;
             $allPost['mail_subject']  = UIElements::replaceEnquiryEmailMessage($id,$allPost['mail_subject']);
             $allPost['status']        = 1;
             $allPost['lead_id']       = $id;
             $allPost['from_user']     = $fromUserID;
             $allPost['created']       = date("Y-m-d H:i:s", strtotime('+1 hour'));
             $allPost['to_user']       = implode(',', $allPost['to_user']);
             //$allPost['to_user_bdms']=implode(',', $allPost['to_user_bdms']);

             $attachFileArr=array();
             $pdfAndVideoAttachArr=array();
             //print_r($_FILES);exit();
             if(isset($_FILES['upload_attach_files'])){
                 //echo 1; exit();
                if(count($_FILES['upload_attach_files']['name'])>0){
                     foreach($_FILES['upload_attach_files']['name'] as $fIndex => $attachFile){
                         if($attachFile!=''){
                             $saveFileName=uniqid().$attachFile;
                             $tmpName=$_FILES['upload_attach_files']['tmp_name'][$fIndex];
                             move_uploaded_file($tmpName, 'uploads/sendmail/'.$saveFileName);
                             array_push($attachFileArr, $saveFileName);
                             array_push($pdfAndVideoAttachArr, "uploads/sendmail/".$saveFileName);
                         }
                     }
                }
             }
             //print($pdfAndVideoAttachArr); exit;
             $allPost['attached_files']=implode(",", $attachFileArr);
            // echo "<pre>";print_r($allPost); exit();
             $sendMailDb= new LenderSendEmail();
             $saveSendMail=$sendMailDb->save($allPost);
             if($saveSendMail){
                 $insertid=$sendMailDb->id;
                 //=======Save track report========
                 $trackData['track_for']    = 'lender_send_mail';
                 $trackData['userid']       = $this->session->get('sessUserID');
                 $trackData['track_save_id']= $insertid;
                 $trackData['server_detail']= $_SERVER['HTTP_USER_AGENT'];
                 $trackData['server_ip']    = $_SERVER['REMOTE_ADDR'];
                 $trackData['created']      = date("Y-m-d H:i:s", strtotime('+1 hour'));
                 $trackClickSave = new TrackClickSave();
                 $saveTrack=$trackClickSave->save($trackData);
                 //=======Save track report End========


                 $siteAdmin = Sitesetting::findFirst(array("id=1"));

                 $toUserEmailArr=array();
                 $ccUserEmailArr=array();
                 $bccUserEmailArr=array();

                 $advisorDetail=Users::findFirst(array('conditions' => "id='".$fromUserID."'"));

                 //$htmlContent=UIElements::BapCustUniGetLeadPdfHtml($id);
                 $htmlContent=$this->view->getRender('dashboard', 'leaddetailpdf', array('leadDetail' => $leadDetail));

                 //$html = $view->render('salesreports', $optionalParams);
                 //echo $htmlContent; exit();
                 //$htmlContent=$this->view->getRender('dashboard', 'leaddetailpdf', array('leadDetail' => $leadDetail));

                $xyz = pdf_create($htmlContent, "uploads/leadpdf/user-".$id."-enquirydetail.pdf", false);
                // echo "<pre>";
                // print_r($xyz);exit;
                 //echo "uploads/leadpdf/user-".$id."-enquirydetail.pdf";exit();
                 $fileattachedarr = array("uploads/leadpdf/user-".$id."-enquirydetail.pdf");
                //  echo $fileattachedarr;die;
                // var_dump($allPost['to_user'] !="");die;
                 if($allPost['to_user'] !=""){

                     $toUserIdArr=explode(',', $allPost['to_user']);
                     if(!empty($toUserIdArr) && count($toUserIdArr)>0){
                         $sessionID                 = rand(10, 1000000);
                         $trackData['session_id']   = $sessionID;
                         $trackData['send_from']    = 'Lead';
                         $trackData['sending_type'] = 'LenderSendMail';
                         $trackData['advisor_id']   = $this->session->get('sessUserID');

                         //==========Copy of lender send mail=======
                        // echo "<pre>"; print_r($fileattachedarr);die;
                        // echo "<pre>"; print_r($pdfAndVideoAttachArr);die;
                        $brokersendMsg       = $allPost['mail_content'];
                        $brokersubject       = $allPost['mail_subject'];
                        $brokersendMsg       = UIElements::replaceEnquiryEmailMessage($id,$brokersendMsg);
                        $brokersubject       = UIElements::replaceEnquiryEmailMessage($id,$brokersubject);
                        $brokertotAttachArr  = array_merge($pdfAndVideoAttachArr,$fileattachedarr);
                        // echo "<pre>"; print_r($brokertotAttachArr);die;

                        // var_dump((isset($allPost['is_pdf']) || $allPost['is_pdf']['all']==1));die;
                        if((isset($allPost['is_pdf']) || $allPost['is_pdf']['all'] ==1))
                        {
                             $sentAdvUmail = UIElements::sendAttachmentEmail($advisorDetail->email_id,$brokersubject,$brokersendMsg,$brokertotAttachArr, $advisorDetail->email_id);
                            //  echo "<pre>"; print_r($sentAdvUmail);die;

                         }
                         else
                         {
                            //  echo 2;die;
                             $attachmentArrList = array();
                             $sentAdvUmail      = UIElements::sendAttachmentEmail($advisorDetail->email_id,$brokersubject,$brokersendMsg,$attachmentArrList, $advisorDetail->email_id);
                            //  echo "<pre>"; print_r($sentAdvUmail);die;
                         }
                         //=========Copy of lender send mail==========
                         foreach ($toUserIdArr as $toUserIdDet) {

                             $sendMsg=$allPost['mail_content'];
                                 $subject = $allPost['mail_subject'];

                             if($allPost['panelval']==1){
                                 $lenderDetail=PreferLender::findFirst(array('conditions' => "id='".$toUserIdDet."'", 'limit' => 1));
                                 if($lenderDetail->first_name!=''){
                                     $contact = stripslashes($lenderDetail->first_name);
                                 }else{
                                     $contact = stripslashes($lenderDetail->lender_name);
                                 }

                                 $sendMsg=str_replace("{lender_first_name}", $contact, $sendMsg);
                                 $leadUserDet=$lenderDetail;

                             }else{
                                 $leadUserDet=Users::findFirst(array('conditions' => "id='".$toUserIdDet."'", 'limit' => 1));
                                 $lenderDetail=Lenders::findFirst(array('conditions' => "lender_id='".$toUserIdDet."'", 'limit' => 1));
                                 $contact = stripslashes($lenderDetail->contact);
                                 if($lenderDetail->first_name!=''){
                                     $sendMsg=str_replace("{lender_first_name}", stripslashes($lenderDetail->first_name), $sendMsg);
                                 }else{
                                     $sendMsg=str_replace("{lender_first_name}", stripslashes($leadUserDet->first_name." ".$leadUserDet->last_name), $sendMsg);
                                 }

                             }


                             //array_push($toUserEmailArr, $leadUserDet->email_id);




                                 $contact= preg_replace('/\W\w+\s*(\W*)$/', '$1', $contact);
                                 $sendMsg=str_replace("{contact}", $contact, $sendMsg);


                                 //$sendMsg=str_replace("{contact}", stripslashes($lenderDetail->contact), $sendMsg);

                                 $sendMsg=UIElements::replaceEnquiryEmailMessage($id,$sendMsg);
                                 $subject=UIElements::replaceEnquiryEmailMessage($id,$subject);
                                // $sentUmail =UIFront::sendEmailMultiple($toUserEmailArr,$ccUserEmailArr,$bccUserEmailArr, $subject, $sendMsg,$advisorDetail->email_id, $advisorDetail->email_id, $advisorDetail->first_name, $fileattachedarr);
                                 $leadEmailID='';
                                 if(strpos($leadUserDet->email_id,"gov.")!==false){
                                     $trackData['send_user_id_type']='ID';
                                     $trackData['user_id']=$leadUserDet->id;
                                     $trackData['status']='FAILED';
                                     $trackData['error_reason']='govtMail';
                                 }else if(strpos($leadUserDet->email_id,"police.")!==false){
                                     $trackData['send_user_id_type']='ID';
                                     $trackData['user_id']=$leadUserDet->id;
                                     $trackData['status']='FAILED';
                                     $trackData['error_reason']='govtMail';
                                 }else if(strpos($leadUserDet->email_id,"nhs.")!==false){
                                     $trackData['send_user_id_type']='ID';
                                     $trackData['user_id']=$leadUserDet->id;
                                     $trackData['status']='FAILED';
                                     $trackData['error_reason']='govtMail';
                                 }else if(strpos($leadUserDet->email_id,"sch.")!==false){
                                     $trackData['send_user_id_type']='ID';
                                     $trackData['user_id']=$leadUserDet->id;
                                     $trackData['status']='FAILED';
                                     $trackData['error_reason']='govtMail';
                                 }else if(strpos($leadUserDet->email_id,"ac.")!==false){
                                     $trackData['send_user_id_type']='ID';
                                     $trackData['user_id']=$leadUserDet->id;
                                     $trackData['status']='FAILED';
                                     $trackData['error_reason']='govtMail';
                                 }else{
                                     $leadEmailID=$leadUserDet->email_id;
                                 }
                                 if((isset($allPost['is_pdf']) && $allPost['is_pdf'][$toUserIdDet]==1) || (isset($allPost['is_pdf']) && $allPost['is_pdf']['all']==1))
                                 {
                                 /*if(isset($allPost['is_pdf']) && $allPost['is_pdf'][$toUserIdDet]==1)
                                 {*/
                                     //$pdfAndVideoAttachArr+=$fileattachedarr;
                                     $totAttachArr=array_merge($pdfAndVideoAttachArr,$fileattachedarr);
                                     //print_r($totAttachArr);exit();
                                     //echo 1;
                                     if($leadEmailID!=''){
                                         $randomid=rand(10, 1000);
                                         $sendMsg.='<img src="https://www.google-analytics.com/collect?v=1&tid=UA-810265-7&cid='.$randomid.'&aip=1&t=event&ec=email&ea=open&dp=%2Femail%2Flendersendmail&dt=Lender%20Send%20Mail:'.$leadEmailID.'">';
                                         $sentUmail =UIElements::sendAttachmentEmail($leadEmailID,$subject,$sendMsg,$totAttachArr, $advisorDetail->email_id,1);
                                         if($sentUmail){
                                             $trackData['send_user_id_type']='EMAIL';
                                             $trackData['user_id']=$leadEmailID;
                                             $trackData['status']='SUCCESS';
                                             $trackData['error_reason']='';
                                         }else{
                                             $trackData['send_user_id_type']='EMAIL';
                                             $trackData['user_id']=$leadEmailID;
                                             $trackData['status']='FAILED';
                                             $trackData['error_reason']='FailDelivery';
                                         }
                                     }
                                     //echo "go";
                                 }else{
                                     //echo 2;
                                     if($leadEmailID!=''){
                                         $randomid=rand(10, 1000);
                                         $sendMsg.='<img src="https://www.google-analytics.com/collect?v=1&tid=UA-810265-7&cid='.$randomid.'&aip=1&t=event&ec=email&ea=open&dp=%2Femail%2Flendersendmail&dt=Lender%20Send%20Mail:'.$leadEmailID.'">';
                                         $sentUmail =UIElements::sendAttachmentEmail($leadEmailID,$subject,$sendMsg,$pdfAndVideoAttachArr, $advisorDetail->email_id,1);
                                         if($sentUmail){
                                             $trackData['send_user_id_type']='EMAIL';
                                             $trackData['user_id']=$leadEmailID;
                                             $trackData['status']='SUCCESS';
                                             $trackData['error_reason']='';
                                         }else{
                                             $trackData['send_user_id_type']='EMAIL';
                                             $trackData['user_id']=$leadEmailID;
                                             $trackData['status']='FAILED';
                                             $trackData['error_reason']='FailDelivery';
                                         }
                                     }
                                    // echo "no";
                                 }

                                 $trackData['track_on']=date("Y-m-d H:i:s", strtotime('+1 hour'));
                                 $trackMailReport= NEW TrackMailReport();
                                 $savetrack=$trackMailReport->save($trackData);

                         }
                     }
                 }
                 //echo "<pre>";print_r($allPost['to_user_bdms']);exit;
                 /*if($allPost['to_user_bdms'] !=""){
                     $toUserIdArr=explode(',', $allPost['to_user_bdms']);
                    // print_r($toUserIdArr);exit;
                     if(!empty($toUserIdArr) && count($toUserIdArr)>0){
                         foreach ($toUserIdArr as $toUserIdDet) {
                             //echo 123;exit;
                             $leadUserDet=Lenders::findFirst(array('conditions' => "lender_id='".$toUserIdDet."'", 'limit' => 1));
                             //$lenderDetail=Lenders::findFirst(array('conditions' => "lender_id='".$toUserIdDet."'", 'limit' => 1));
                            //echo "<pre>";print_r($leadUserDet->toArray());
                             //array_push($toUserEmailArr, $leadUserDet->email_id);
                                 $sendMsg=$allPost['mail_content'];
                                 $subject = $allPost['mail_subject'];

                                 $contact = stripslashes($leadUserDet->contact);
                                 $contact= preg_replace('/\W\w+\s*(\W*)$/', '$1', $contact);
                                 $sendMsg=str_replace("{contact}", $contact, $sendMsg);

                                 $sendMsg=UIElements::replaceEnquiryEmailMessage($id,$sendMsg);
                                 $subject=UIElements::replaceEnquiryEmailMessage($id,$subject);
                                // $sentUmail =UIFront::sendEmailMultiple($toUserEmailArr,$ccUserEmailArr,$bccUserEmailArr, $subject, $sendMsg,$advisorDetail->email_id, $advisorDetail->email_id, $advisorDetail->first_name, $fileattachedarr);
                                 $leadEmailID='';
                                 if(strpos($leadUserDet->bdms_email,"gov.")!==false){

                                 }else if(strpos($leadUserDet->bdms_email,"police.")!==false){

                                 }else if(strpos($leadUserDet->bdms_email,"nhs.")!==false){

                                 }else if(strpos($leadUserDet->bdms_email,"sch.")!==false){

                                 }else if(strpos($leadUserDet->bdms_email,"ac.")!==false){
                                 }else{
                                     $leadEmailID=$leadUserDet->bdms_email;
                                 }
                                 if(isset($allPost['is_pdf_bdms']) && $allPost['is_pdf_bdms'][$toUserIdDet]==1)
                                 {
                                     //$pdfAndVideoAttachArr+=$fileattachedarr;
                                     $totAttachArr=array_merge($pdfAndVideoAttachArr,$fileattachedarr);
                                     //echo $leadEmailID;
                                     //print_r($totAttachArr);exit();
                                     //echo 1;
                                     if($leadEmailID!=''){
                                         $sentUmail =UIElements::sendAttachmentEmail($leadEmailID,$subject,$sendMsg,$totAttachArr, $advisorDetail->email_id);
                                     }
                                     //echo "go";
                                 }else{
                                     //echo 2;
                                     if($leadEmailID!=''){
                                         $sentUmail =UIElements::sendAttachmentEmail($leadEmailID,$subject,$sendMsg,$pdfAndVideoAttachArr, $advisorDetail->email_id);
                                     }
                                    // echo "no";
                                 }

                         }
                     }
                 }*/
                 if(isset($getall["quotetype"]) && $getall["quotetype"]=="lender"){
                      return $response->redirect('dashboard/enquiry');
                 }
                 else
                 {
                      @unlink("uploads/leadpdf/user-".$id."-enquirydetail.pdf");
                     $this->flashSession->success("Mail sent successfully.");
                 }

             }else{
                 $this->flashSession->error("Message sending failed!");
             }

         }
     }


    /**
    * loadlenderbycharge Action To load lender by charge
    * Action Name: loadlenderbychargeAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 26-12-2018
    **/
    public function loadlenderbychargeAction(){
        $responseArr=array('response' => 0, 'todata' => '', 'tobdmsdata' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if($allPost['charge_id']!=''){
                /*$lenderList=Lenders::find(array(
                    'conditions' => "find_in_set('".$allPost['charge_id']."', Lenders.charge) and is_active=1",
                    'order' => "lender_id desc",
                    ));*/

                    /*$whr=array("lenders.is_active=1 and users.first_name!=''");
                    $bdmwhr=array("lenders.is_active=1 and lenders.contact!='' and lenders.bdms_email!=''");
                    $where="";
                    $bdmwhere="";
                    $product=$allPost['charge_id'];
                        switch($product){
                        case 'RB' :
                        //$productLtv=" and (regi_bridge >=".$allPost['ltv'].")";
                        array_push($whr, "lenders.regi_bridge!=''");
                        array_push($bdmwhr, "lenders.regi_bridge!=''");
                        break;
                         case 'SCB' :
                        //$productLtv=" and (semi_comm_bridge >=".$allPost['ltv'].")";
                        array_push($whr, "lenders.semi_comm_bridge!=''");
                        array_push($bdmwhr, "lenders.semi_comm_bridge!=''");
                        break;
                         case 'CB' :
                        //$productLtv=" and (comm_bridge >=".$allPost['ltv'].")";
                        array_push($whr, "lenders.comm_bridge!=''");
                        array_push($bdmwhr, "lenders.comm_bridge!=''");
                        break;
                         case 'LB' :
                        //$productLtv=" and (land_bridge >=".$allPost['ltv'].")";
                        array_push($whr, "lenders.land_bridge!=''");
                        array_push($bdmwhr, "lenders.land_bridge!=''");
                        break;
                         case 'SC' :
                        //$productLtv=" and (sec_bridge >=".$allPost['ltv'].")";
                        array_push($whr, "lenders.sec_bridge!=''");
                        array_push($bdmwhr, "lenders.sec_bridge!=''");
                        break;
                         case 'RFB' :
                        //$productLtv=" and (refurb_bridge >=".$allPost['ltv'].")";
                        array_push($whr, "lenders.refurb_bridge!=''");
                        array_push($bdmwhr, "lenders.refurb_bridge!=''");
                        break;
                        case 'D' :
                        //$productLtv=" and (deve >=".$allPost['ltv'].")";
                        array_push($whr, "lenders.deve!=''");
                        array_push($bdmwhr, "lenders.deve!=''");
                        break;
                         case 'M' :
                        //$productLtv=" and (mezz >=".$allPost['ltv'].")";
                        array_push($whr, "lenders.mezz!=''");
                        array_push($bdmwhr, "lenders.mezz!=''");
                        break;
                         case 'RI' :
                        //$productLtv=" and (resi_investiment >=".$allPost['ltv'].")";
                        array_push($whr, "lenders.resi_investiment!=''");
                        array_push($bdmwhr, "lenders.resi_investiment!=''");
                        break;
                         case 'SCI' :
                        //$productLtv=" and (semi_comm_investment >=".$allPost['ltv'].")";
                        array_push($whr, "lenders.semi_comm_investment!=''");
                        array_push($bdmwhr, "lenders.semi_comm_investment!=''");
                        break;
                        case 'CI' :
                        //$productLtv=" and (comm_investiment >=".$allPost['ltv'].")";
                        array_push($whr, "lenders.comm_investiment!=''");
                        array_push($bdmwhr, "lenders.comm_investiment!=''");
                        break;
                        default:
                        break;
                    }
                if(!empty($whr)){
                    $where=" where ".implode(" and ", $whr);
                }
                if(!empty($bdmwhr)){
                    $bdmwhere=" where ".implode(" and ", $bdmwhr);
                }*/
                //echo "select lenders.* from lenders left join users on lenders.lender_id=users.id".$where." order by users.first_name asc"; exit();
                $lenderList=PreferLender::find(array('conditions' => "email_id!='' and product='".$allPost['charge_id']."'", 'order' => 'lender_name asc'));

                //$lenderBdmsList=Lenders::findAll("select lenders.* from lenders".$bdmwhere." order by lenders.contact asc");

                if(count($lenderList)>0){
                    $todata='<select name="to_user[]" id="to_user" multiple class="msg_usercls">';
                    foreach($lenderList as $lenderResult){
                      //$lenderDetail=Users::findFirst(array("conditions" => "id=".$lenderResult->lender_id));
                      $todata.='<option value="'.$lenderResult->id.'">'.trim(stripslashes($lenderResult->lender_name)).'</option>';
                    }
                    $todata.='</select>
                    <div id="choose_lender_list">
                                 
                            </div>';
                }else{
                     $todata='<select name="to_user[]" id="to_user" multiple class="msg_usercls"></select><div id="choose_lender_list">
                                 
                            </div>';
                }
                /*if(count($lenderBdmsList)>0){
                    $toBdmsData='<select name="to_user_bdms[]" id="to_user_bdms" multiple class="msg_usercls_bdms">';
                    foreach($lenderBdmsList as $lenderResult){
                      $lenderDetail=Users::findFirst(array("conditions" => "id=".$lenderResult->lender_id));
                      $toBdmsData.='<option value="'.$lenderResult->lender_id.'">'.trim(stripslashes($lenderResult->contact)).'</option>';
                    }
                    $toBdmsData.='</select><div id="bdms_lender_list">
                            </div>';
                }else{
                     $toBdmsData='<select name="to_user_bdms[]" id="to_user_bdms" multiple class="msg_usercls_bdms"></select><div id="bdms_lender_list">
                            </div>';
                }, 'tobdmsdata' => $toBdmsData*/
                $responseArr=array('response' => 1, 'todata' => $todata);
            }
        }
        echo json_encode($responseArr);
        exit();
    }

    /**
    * loadlenderbypanel Action To load lender by panel
    * Action Name: loadlenderbypanelAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 23-04-2021
    **/
    public function loadlenderbypanelAction(){
        $responseArr=array('response' => 0, 'todata' => '', 'tobdmsdata' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
                /*$lenderList=Lenders::find(array(
                    'conditions' => "find_in_set('".$allPost['charge_id']."', Lenders.charge) and is_active=1",
                    'order' => "lender_id desc",
                    ));*/
                    if($allPost['lender_ltv']!=''){
                        $ltvVal=$allPost['lender_ltv'];
                    }else{
                       //$ltvVal=1;
                        $ltvVal=0;
                    }
                    $whr=array("lenders.is_active=1 and users.first_name!=''");
                    $bdmwhr=array("lenders.is_active=1 and lenders.contact!='' and lenders.bdms_email!=''");
                    $where="";
                    $bdmwhere="";

                if(!empty($whr)){
                    $where=" where ".implode(" and ", $whr);
                }
                if(!empty($bdmwhr)){
                    $bdmwhere=" where ".implode(" and ", $bdmwhr);
                }
                if($allPost['panelid']==1){
                    $lenderList=PreferLender::find(array('conditions' => "email_id!=''", 'order' => 'lender_name asc'));
                }else{

                    $lenderList=Lenders::findAll("select lenders.* from lenders left join users on lenders.lender_id=users.id".$where." order by users.first_name asc");
                }

                //$lenderBdmsList=Lenders::findAll("select lenders.* from lenders".$bdmwhere." order by lenders.contact asc");

                if(count($lenderList)>0){
                    $todata='<select name="to_user[]" id="to_user" multiple class="msg_usercls">';
                    foreach($lenderList as $lenderResult){
                        if($allPost['panelid']==1){
                            $todata.='<option value="'.$lenderResult->id.'">'.trim(stripslashes($lenderResult->lender_name)).'</option>';
                        }else{
                             $lenderDetail=Users::findFirst(array("conditions" => "id=".$lenderResult->lender_id));
                            $todata.='<option value="'.$lenderResult->lender_id.'">'.trim(stripslashes($lenderDetail->first_name." ".$lenderDetail->last_name)).'</option>';
                        }
                    }
                    $todata.='</select>
                    <div id="choose_lender_list">
                                 
                            </div>';
                }else{
                     $todata='<select name="to_user[]" id="to_user" multiple class="msg_usercls"></select><div id="choose_lender_list">
                                 
                            </div>';
                }
                /*if(count($lenderBdmsList)>0){
                    $toBdmsData='<select name="to_user_bdms[]" id="to_user_bdms" multiple class="msg_usercls_bdms">';
                    foreach($lenderBdmsList as $lenderResult){
                      $lenderDetail=Users::findFirst(array("conditions" => "id=".$lenderResult->lender_id));
                      $toBdmsData.='<option value="'.$lenderResult->lender_id.'">'.trim(stripslashes($lenderResult->contact)).'</option>';
                    }
                    $toBdmsData.='</select><div id="bdms_lender_list">
                            </div>';
                }else{
                     $toBdmsData='<select name="to_user_bdms[]" id="to_user_bdms" multiple class="msg_usercls_bdms"></select><div id="bdms_lender_list">
                            </div>';
                }, 'tobdmsdata' => $toBdmsData*/
                $responseArr=array('response' => 1, 'todata' => $todata);
        }
        echo json_encode($responseArr);
        exit();
    }
    /**
    * comparable Action To search API data
    * Action Name: comparableAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 15-01-2019
    **/
    public function comparableAction(){
        $response = new \Phalcon\Http\Response();
        if(UIElements::bapCustUniNewAdvChk()==1){
            return $response->redirect('dashboard');
        }
        @$this->session->remove('data_from');
        @$this->session->remove('prices');
        @$this->session->remove('priceSqfs');
        @$this->session->remove('priceSolds');
        @$this->session->remove('priceSoldPerSqfs');
        @$this->session->remove('priceFloorAreas');
        @$this->session->remove('stampDuities');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

            //echo $allPost['data_from']; exit();
            $prices=array();
            $this->session->set('data_from', $allPost['data_from']);
            if(count($allPost['data_from'])>0){
                foreach($allPost['data_from'] as $dataIndex => $dataFrom){

                        if($dataFrom=='prices'){

                            if($allPost['post_code']!=''){
                              $url = 'https://api.propertydata.co.uk/prices';
                              //if($allPost['property_description']!='' || $allPost['bedrooms']!='')
                              $data = array (
                              'key'=> "E2BXNLA1M1",
                              'postcode' => $allPost['post_code'],
                              'type' => $allPost['property_description'],
                              'bedrooms' => $allPost['bedrooms'],
                              'points' => $allPost['points'],
                              );
                              $prices=UIElements::bapcustUnipriceCrawl($url, $data);
                              $this->session->set('prices', $prices);
                             //echo "<pre>"; print_r($prices); exit();

                            }
                        }
                        $priceSqfs=array();
                        if($dataFrom=='prices-per-sqf'){

                            if($allPost['post_code']!=''){
                                if(count($allPost['data_from'])>0 && $dataIndex>0){
                                    sleep(3);
                                }

                              $url = 'https://api.propertydata.co.uk/prices-per-sqf';
                              $data = array (
                              'key'=> "E2BXNLA1M1",
                              'postcode' => $allPost['post_code'],
                              'min_sqf' => $allPost['min_sqf'],
                              'max_sqf' => $allPost['max_sqf'],
                              'points' => $allPost['points'],
                              );
                              $priceSqfs=UIElements::bapcustUnipriceCrawl($url, $data);
                              $this->session->set('priceSqfs', $priceSqfs);
                              //echo "<pre>"; print_r($priceSqfs); exit();
                            }
                        }
                        $priceSolds=array();
                        if($dataFrom=='prices-sold'){

                            $priceSolds=array();
                            if($allPost['post_code']!=''){
                                if(count($allPost['data_from'])>0 && $dataIndex>0){
                                    sleep(3);
                                }
                              $url = 'https://api.propertydata.co.uk/sold-prices';
                              $data = array (
                              'key'=> "E2BXNLA1M1",
                              'postcode' => $allPost['post_code'],
                              'bedrooms' => $allPost['bedrooms'],
                              'type' => $allPost['property_description'],
                              'class' => $allPost['class'],
                              'tenure' => $allPost['tenure'],
                              'max_age' => $allPost['max_age'],
                              'points' => $allPost['points'],
                              );
                              $priceSolds=UIElements::bapcustUnipriceCrawl($url, $data);
                              //echo "<pre>"; print_r($priceSolds); exit();
                              $this->session->set('priceSolds', $priceSolds);
                            }
                        }
                        $priceSoldPerSqfs=array();
                        if($dataFrom=='prices-sold-per-sqf'){

                            $priceSoldPerSqfs=array();
                            if($allPost['post_code']!=''){
                                if(count($allPost['data_from'])>0 && $dataIndex>0){
                                    sleep(3);
                                }
                              $url = 'https://api.propertydata.co.uk/sold-prices-per-sqf';
                              $data = array (
                              'key'=> "E2BXNLA1M1",
                              'postcode' => $allPost['post_code'],
                              'min_sqf' => $allPost['min_sqf'],
                              'max_sqf' => $allPost['max_sqf'],
                              'bedrooms' => $allPost['bedrooms'],
                              'type' => $allPost['property_description'],
                              'class' => $allPost['class'],
                              'tenure' => $allPost['tenure'],
                              'max_age' => $allPost['max_age'],
                              'points' => $allPost['points'],
                              );
                              $priceSoldPerSqfs=UIElements::bapcustUnipriceCrawl($url, $data);
                              //echo "<pre>";print_r($priceSoldPerSqfs); exit();
                              $this->session->set('priceSoldPerSqfs', $priceSoldPerSqfs);
                            }
                        }
                        $priceFloorAreas=array();
                        if($dataFrom=='floor-areas'){

                            if($allPost['post_code']!=''){
                                if(count($allPost['data_from'])>0 && $dataIndex>0){
                                    sleep(3);
                                }
                              $url = 'https://api.propertydata.co.uk/floor-areas';
                              $data = array (
                              'key'=> "E2BXNLA1M1",
                              'postcode' => $allPost['post_code'],
                              );
                              $priceFloorAreas=UIElements::bapcustUnipriceCrawl($url, $data);
                              //echo "<pre>";print_r($priceFloorAreas); exit();
                              $this->session->set('priceFloorAreas', $priceFloorAreas);
                            }
                        }
                        //$priceFloorAreas=$this->session->get('priceFloorAreas');
                        //echo "<pre>"; print_r($this->session->get('priceFloorAreas'));


                        $stampDuities=array();
                        if($dataFrom=='stamp-duty'){
                            if(intval($allPost['transaction_value'])>0 && $allPost['region']!=''){
                                if(count($allPost['data_from'])>0 && $dataIndex>0){
                                    sleep(3);
                                }
                              $url = 'https://api.propertydata.co.uk/stamp-duty';
                              $data = array (
                              'key'=> "E2BXNLA1M1",
                              'value' => $allPost['transaction_value'],
                              'region' => $allPost['region'],
                              'additional' => $allPost['aditional'],
                              'first_time' => $allPost['first_time'],

                              );
                              $stampDuities=UIElements::bapcustUnipriceCrawl($url, $data);
                              //echo "<pre>";print_r($stampDuities); exit();
                              $this->session->set('stampDuities', $stampDuities);
                            }
                        }
                }
            }



        }
    }
    public function comparableprintAction(){

    }
    /*
* Author By: chittaranjan sahoo
* Purpose: Make autocomplete function for lead To user
* Date: 09-02-2019
*/
    public function autocompleteAction(){

        if($this->request->isPost())
        {
            $appendTag='';
            $appendFunc='';
            $xyz = 0;
            echo "<div class='items'><ul>";
            $allpost=$this->request->getPost();
            $tagname=$allpost['tag'];//print_r($allpost);
            $srhtxt=$tagname;
            $dataid=$allpost['dataid'];


            $res=Enquiry::find(array("order" => "first_name asc", 'conditions' => "(first_name like '%".$srhtxt."%' or last_name like '%".$srhtxt."%' or CONCAT(first_name, ' ', last_name) like '%".$srhtxt."%' or borrower_email = '".$srhtxt."' or borrower_mob = '".$srhtxt."' or postcode = '".$srhtxt."' or name_of_comany like '%".$srhtxt."%' or borrower_address like '%".$srhtxt."%') and borrower_email != '' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (not_send_mail=0 or not_send_mail='' or not_send_mail IS NULL) and id!=".$dataid))->toArray();

            $resApp=LeadApplication::find(array("order" => "pd_fullname asc", 'conditions' => "pd_fullname like '%".$srhtxt."%' or pd_email = '".$srhtxt."'"))->toArray();


            if(!empty($res)){
                foreach($res as $result){
                        $xyz++;
                        if($result['first_name']!=''){
                            $leadName=stripslashes($result['first_name']." ".$result['last_name']);
                        }else if($result['borrower_email']!=''){
                            $leadName=$result['borrower_email'];
                        }
                        $add_tag = str_replace(strtolower($allpost['tag']), '<b>'.$allpost['tag'].'</b>', strtolower($leadName));

                        if ($xyz == 1)
                        {?>
                            <li class="selected" onclick="return sendText<?=$appendFunc?>('<?=$leadName?>', <?=stripslashes($result['id'])?>);"><?=ucfirst($add_tag)?></li><?php
                        }
                        else
                        {?>
                            <li onclick="return sendText<?=$appendFunc?>('<?=$leadName?>', <?=stripslashes($result['id'])?>);"><?=ucfirst($add_tag)?></li><?php
                        }
                }
            }
            if(!empty($resApp)){
                foreach($resApp as $resAppult){
                        $pd_fullnameArr=explode(":::",$resAppult['pd_fullname']);
                        $pd_emailArr=explode(":::",$resAppult['pd_email']);

                        if(count($pd_emailArr)){
                            foreach($pd_emailArr as $index => $singlePdEmail){
                                if( strpos( $singlePdEmail, $srhtxt ) !== false) {
                                    $applicantname=$pd_fullnameArr[$index];
                                    $xyz++;
                                    if ($xyz == 1)
                                    {?>
                                        <li class="selected" onclick="return sendAppText('<?=$applicantname?>', <?=stripslashes($resAppult['id'])?>, '<?=$index?>', 'email');"><?=$applicantname?></li><?php
                                    }
                                    else
                                    {?>
                                        <li onclick="return sendAppText('<?=$applicantname?>', <?=stripslashes($resAppult['id'])?>, '<?=$index?>', 'email');"><?=$applicantname?></li><?php
                                    }

                                }else if( strpos( $pd_fullnameArr[$index], $srhtxt ) !== false) {
                                    $applicantname=$pd_fullnameArr[$index];
                                    $xyz++;
                                    if ($xyz == 1)
                                    {?>
                                        <li class="selected" onclick="return sendAppText('<?=$applicantname?>', <?=stripslashes($resAppult['id'])?>, '<?=$index?>', 'name');"><?=$applicantname?></li><?php
                                    }
                                    else
                                    {?>
                                        <li onclick="return sendAppText('<?=$applicantname?>', <?=stripslashes($resAppult['id'])?>, '<?=$index?>', 'name');"><?=$applicantname?></li><?php
                                    }

                                }
                            }
                        }




                }
            }
            if(empty($res) && empty($resApp)){
            ?>
                <li>No Lead Found :(</li><?php
            }
            ?></ul><div>
            <script>
            function sendText(text, val_id)
            {
                if ($(".keywrd_pop_top").is(":visible")) {
                    if (text!='') {
                        $("#choose_leader_list").append('<div class="groupItemContainer touseridcls'+val_id+'"><span class="singleItem">'+text+'<a class="remove glyphicon glyphicon-remove-circle" alt="12" href="javascript:{}" title="'+text+'" data-id="'+val_id+'" onclick="removetouserFunc('+val_id+')"></a></span><input type="hidden" name="to_user[]" id="toUserID_'+val_id+'" value="'+val_id+'"></div>');
                        $("#choose_leader").val('');
                        $("#choose_leader").focus();
                        $(".keywrd_pop_top").hide();
                    }
                }
                else
                {
                    if (text!='') {
                        $("#choose_leader_list").append('');
                        $("#choose_leader").val('');
                        $("#choose_leader").focus();
                        $(".keywrd_pop").hide();
                    }
                }
            }
            function sendAppText(text, val_id, indexval, datafrom)
            {
                jsdatafrom="'"+datafrom+"'";
                if ($(".keywrd_pop_top").is(":visible")) {
                    if (text!='') {
                        $("#choose_leader_list").append('<div class="groupItemContainer toappuseridcls'+val_id+'_'+indexval+'_'+datafrom+'"><span class="singleItem">'+text+'<a class="remove glyphicon glyphicon-remove-circle" alt="12" href="javascript:{}" title="'+text+'" data-id="'+val_id+'" onclick="removeapptouserFunc('+val_id+', '+indexval+', '+jsdatafrom+')"></a></span><input type="hidden" name="to_appuser['+val_id+'_'+indexval+'_'+datafrom+']" id="toAppUserID_'+val_id+'_'+indexval+'_'+datafrom+'" value="'+val_id+'"></div>');
                        $("#choose_leader").val('');
                        $("#choose_leader").focus();
                        $(".keywrd_pop_top").hide();
                    }
                }
                else
                {
                    if (text!='') {
                        $("#choose_leader_list").append('');
                        $("#choose_leader").val('');
                        $("#choose_leader").focus();
                        $(".keywrd_pop").hide();
                    }
                }
            }
            </script>
            <?php
        }
        exit();
    }
    /*
* Author By: chittaranjan sahoo
* Purpose: Make cc autocomplete function for lead
* Date: 09-02-2019
*/
    public function ccautocompleteAction(){

        if($this->request->isPost())
        {
            $appendTag='';
            $appendFunc='';
            $xyz = 0;
            echo "<div class='items'><ul>";
            $allpost=$this->request->getPost();
            $tagname=$allpost['tag'];//print_r($allpost);
            $srhtxt=$tagname;
            $dataid=$allpost['dataid'];
            $res=Enquiry::find(array("order" => "first_name asc", 'conditions' => "(first_name like '%".$srhtxt."%' or last_name like '%".$srhtxt."%' or CONCAT(first_name, ' ', last_name) like '%".$srhtxt."%' or borrower_name like '%".$srhtxt."%' or borrower_email = '".$srhtxt."' or borrower_mob = '".$srhtxt."' or postcode = '".$srhtxt."' or name_of_comany like '%".$srhtxt."%' or borrower_address like '%".$srhtxt."%') and borrower_email != '' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (not_send_mail=0 or not_send_mail='' or not_send_mail IS NULL) and id!=".$dataid))->toArray();
            if(!empty($res)){
                foreach($res as $result){
                        $xyz++;
                         if($result['first_name']!=''){
                            $leadName=stripslashes($result['first_name']." ".$result['last_name']);
                        }else if($result['borrower_name']!=''){
                            $leadName=$result['borrower_name'];
                        }else if($result['borrower_email']!=''){
                            $leadName=$result['borrower_email'];
                        }
                        $add_tag = str_replace(strtolower($allpost['tag']), '<b>'.$allpost['tag'].'</b>', strtolower($leadName));
                        if ($xyz == 1)
                        {?>
                            <li class="selected" onclick="return sendTextCC<?=$appendFunc?>('<?=$leadName?>', <?=stripslashes($result['id'])?>);"><?=ucfirst($add_tag)?></li><?php
                        }
                        else
                        {?>
                            <li onclick="return sendTextCC<?=$appendFunc?>('<?=$leadName?>', <?=stripslashes($result['id'])?>);"><?=ucfirst($add_tag)?></li><?php
                        }
                }
            }else{
            ?>
                <li>No Lead Found :(</li><?php
            }
            ?></ul><div>
            <script>
            function sendTextCC(text, val_id)
            {
                if ($(".keywrd_pop_top_cc").is(":visible")) {
                    if (text!='') {
                        $("#cc_user_choose_list").append('<div class="groupItemContainer ccuseridcls'+val_id+'"><span class="singleItem">'+text+'<a class="remove glyphicon glyphicon-remove-circle" alt="12" href="javascript:{}" title="'+text+'" data-id="'+val_id+'" onclick="removeCcUserFunc('+val_id+')"></a></span><input type="hidden" name="cc_user[]" id="ccUserID_'+val_id+'" value="'+val_id+'"></div>');
                        $("#choose_cc_user").val('');
                        $("#choose_cc_user").focus();
                        $(".keywrd_pop_top_cc").hide();
                    }
                }
                else
                {
                    if (text!='') {
                        $("#cc_user_choose_list").append('');
                        $("#choose_cc_user").val('');
                        $("#choose_cc_user").focus();
                    }
                }
            }
            </script>
            <?php
        }
        exit();
    }
    /*
* Author By: chittaranjan sahoo
* Purpose: Make bcc autocomplete function for lead
* Date: 09-02-2019
*/
    public function bccautocompleteAction(){

        if($this->request->isPost())
        {
            $appendTag='';
            $appendFunc='';
            $xyz = 0;
            echo "<div class='items'><ul>";
            $allpost=$this->request->getPost();
            $tagname=$allpost['tag'];//print_r($allpost);
            $srhtxt=$tagname;
            $dataid=$allpost['dataid'];
             $res=Enquiry::find(array("order" => "first_name asc", 'conditions' => "(first_name like '%".$srhtxt."%' or last_name like '%".$srhtxt."%' or CONCAT(first_name, ' ', last_name) like '%".$srhtxt."%' or borrower_name like '%".$srhtxt."%' or borrower_email = '".$srhtxt."' or borrower_mob = '".$srhtxt."' or postcode = '".$srhtxt."' or name_of_comany like '%".$srhtxt."%' or borrower_address like '%".$srhtxt."%') and borrower_email != '' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (not_send_mail=0 or not_send_mail='' or not_send_mail IS NULL) and id!=".$dataid))->toArray();
            if(!empty($res)){
                foreach($res as $result){
                        $xyz++;
                        if($result['first_name']!=''){
                            $leadName=stripslashes($result['first_name']." ".$result['last_name']);
                        }else if($result['borrower_name']!=''){
                            $leadName=$result['borrower_name'];
                        }else if($result['borrower_email']!=''){
                            $leadName=$result['borrower_email'];
                        }
                        $add_tag = str_replace(strtolower($allpost['tag']), '<b>'.$allpost['tag'].'</b>', strtolower($leadName));
                        if ($xyz == 1)
                        {?>
                            <li class="selected" onclick="return sendTextBCC<?=$appendFunc?>('<?=$leadName?>', <?=stripslashes($result['id'])?>);"><?=ucfirst($add_tag)?></li><?php
                        }
                        else
                        {?>
                            <li onclick="return sendTextBCC<?=$appendFunc?>('<?=$leadName?>', <?=stripslashes($result['id'])?>);"><?=ucfirst($add_tag)?></li><?php
                        }
                }
            }else{
            ?>
                <li>No Lead Found :(</li><?php
            }
            ?></ul><div>
            <script>
            function sendTextBCC(text, val_id)
            {
                if ($(".keywrd_pop_top_bcc").is(":visible")) {
                    if (text!='') {
                        $("#bcc_user_choose_list").append('<div class="groupItemContainer bccuseridcls'+val_id+'"><span class="singleItem">'+text+'<a class="remove glyphicon glyphicon-remove-circle" alt="12" href="javascript:{}" title="'+text+'" data-id="'+val_id+'" onclick="removeBCCUserFunc('+val_id+')"></a></span><input type="hidden" name="bcc_user[]" id="bccUserID_'+val_id+'" value="'+val_id+'"></div>');
                        $("#choose_bcc_user").val('');
                        $("#choose_bcc_user").focus();
                        $(".keywrd_pop_top_bcc").hide();
                    }
                }
                else
                {
                    if (text!='') {
                        $("#bcc_user_choose_list").append('');
                        $("#choose_bcc_user").val('');
                        $("#choose_bcc_user").focus();
                    }
                }
            }
            </script>
            <?php
        }
        exit();
    }
        /*
* Author By: chittaranjan sahoo
* Purpose: Make autocomplete function for Lender send mail section
* Date: 12-02-2019
*/
    public function lendertoautoAction(){

        if($this->request->isPost())
        {
            $appendTag='';
            $appendFunc='';
            $xyz = 0;
            echo "<div class='items'><ul>";
            $allpost=$this->request->getPost();
            $tagname=$allpost['tag'];//print_r($allpost);
            $srhtxt=$tagname;
            $dataid=$allpost['dataid'];


            //$res=Enquiry::find(array("order" => "first_name asc", 'conditions' => "(enquiry.first_name like '%".$srhtxt."%' or enquiry.last_name like '%".$srhtxt."%' or CONCAT(enquiry.first_name, ' ', enquiry.last_name) like '%".$srhtxt."%' or enquiry.borrower_email = '".$srhtxt."' or enquiry.borrower_mob = '".$srhtxt."' or enquiry.postcode = '".$srhtxt."' or enquiry.name_of_comany like '%".$srhtxt."%' or enquiry.borrower_address like '%".$srhtxt."%') and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (not_send_mail=0 or not_send_mail='' or not_send_mail IS NULL) and id!=".$dataid))->toArray();
             $res=Lenders::findAll("select users.* from lenders left join users on lenders.lender_id=users.id where (users.first_name like '%".$srhtxt."%' or users.email_id = '".$srhtxt."') and users.is_active=1 and find_in_set('".$allpost['chargeid']."', lenders.charge)  and lenders.is_active=1")->toArray();

            if(!empty($res)){
                foreach($res as $result){
                        $xyz++;
                        if($result['first_name']!=''){
                            $lenderName=htmlentities(stripslashes($result['first_name']));
                        }else if($result['email_id']!=''){
                            $lenderName=$result['email_id'];
                        }
                        $add_tag = str_replace(strtolower($allpost['tag']), '<b>'.$allpost['tag'].'</b>', strtolower($lenderName));

                        if ($xyz == 1)
                        {?>
                            <li class="selected" onclick="return sendText<?=$appendFunc?>('<?=$lenderName?>', <?=stripslashes($result['id'])?>);"><?=ucfirst($add_tag)?></li><?php
                        }
                        else
                        {?>
                            <li onclick="return sendText<?=$appendFunc?>('<?=$lenderName?>', <?=stripslashes($result['id'])?>);"><?=ucfirst($add_tag)?></li><?php
                        }
                }
            }else{
            ?>
                <li>No Lender Found :(</li><?php
            }
            ?></ul><div>
            <script>
            function sendText(text, val_id)
            {
                if ($(".keywrd_pop_top").is(":visible")) {
                    if (text!='') {
                        $("#choose_lender_list").append('<div class="groupItemContainer touseridcls'+val_id+'"><span class="singleItem lendertodiv">'+text+'<a class="remove glyphicon glyphicon-remove-circle" alt="'+val_id+'" href="javascript:{}" title="'+text+'" data-id="'+val_id+'" onclick="removetouserFunc('+val_id+')"></a><br><input type="checkbox" name="is_pdf['+val_id+']" id="is_Pdf_ID_'+val_id+'" value="1"> Attach PDF</span><input type="hidden" name="to_user[]" id="toUserID_'+val_id+'" value="'+val_id+'"></div>');
                        $("#choose_leader").val('');
                        $("#choose_leader").focus();
                        $(".keywrd_pop_top").hide();
                    }
                }
                else
                {

                    if (text!='') {
                        $("#choose_lender_list").append('');
                        $("#choose_leader").val('');
                        $("#choose_leader").focus();
                        $(".keywrd_pop").hide();
                    }
                }
            }
            </script>
            <?php
        }
        exit();
    }
     /*
* Author By: chittaranjan sahoo
* Purpose: Make autocomplete function for data to field
* Date: 12-02-2019
*/
    public function datatoautoAction(){

        if($this->request->isPost())
        {
            $appendTag='';
            $appendFunc='';
            $xyz = 0;
            echo "<div class='items'><ul>";
            $allpost=$this->request->getPost();
            $tagname=$allpost['tag'];//print_r($allpost);
            $srhtxt=$tagname;
            $dataid=$allpost['dataid'];


            //$res=Enquiry::find(array("order" => "first_name asc", 'conditions' => "(enquiry.first_name like '%".$srhtxt."%' or enquiry.last_name like '%".$srhtxt."%' or CONCAT(enquiry.first_name, ' ', enquiry.last_name) like '%".$srhtxt."%' or enquiry.borrower_email = '".$srhtxt."' or enquiry.borrower_mob = '".$srhtxt."' or enquiry.postcode = '".$srhtxt."' or enquiry.name_of_comany like '%".$srhtxt."%' or enquiry.borrower_address like '%".$srhtxt."%') and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (not_send_mail=0 or not_send_mail='' or not_send_mail IS NULL) and id!=".$dataid))->toArray();
             $res=Datatab::find(array("conditions"=>"id !='".$dataid."' and (not_send_mail=0 or not_send_mail='' or not_send_mail IS NULL) and (first_name like '%".$srhtxt."%' or last_name like '%".$srhtxt."%' or CONCAT(first_name, ' ', last_name) like '%".$srhtxt."%' or data_email = '".$srhtxt."')","order" => "first_name asc"))->toArray();

            if(!empty($res)){
                foreach($res as $result){
                        $xyz++;
                        if($result['first_name']!=''){
                            $datauserName=stripslashes($result['first_name']." ".$result['last_name']);
                        }else if($result['data_email']!=''){
                            $datauserName=$result['data_email'];
                        }
                        $add_tag = str_replace(strtolower($allpost['tag']), '<b>'.$allpost['tag'].'</b>', strtolower($datauserName));

                        if ($xyz == 1)
                        {?>
                            <li class="selected" onclick="return sendText<?=$appendFunc?>('<?=$datauserName?>', <?=stripslashes($result['id'])?>);"><?=ucfirst($add_tag)?></li><?php
                        }
                        else
                        {?>
                            <li onclick="return sendText<?=$appendFunc?>('<?=$datauserName?>', <?=stripslashes($result['id'])?>);"><?=ucfirst($add_tag)?></li><?php
                        }
                }
            }else{
            ?>
                <li>No Data User Found :(</li><?php
            }
            ?></ul><div>
            <script>
            function sendText(text, val_id)
            {
                if ($(".keywrd_pop_top").is(":visible")) {
                    if (text!='') {
                        $("#choose_todata_list").append('<div class="groupItemContainer touseridcls'+val_id+'"><span class="singleItem">'+text+'<a class="remove glyphicon glyphicon-remove-circle" alt="12" href="javascript:{}" title="'+text+'" data-id="'+val_id+'" onclick="removetouserFunc('+val_id+')"></a></span><input type="hidden" name="to_user[]" id="toUserID_'+val_id+'" value="'+val_id+'"></div>');
                        $("#choose_leader").val('');
                        $("#choose_leader").focus();
                        $(".keywrd_pop_top").hide();
                    }
                }
                else
                {
                    if (text!='') {
                        $("#choose_todata_list").append('');
                        $("#choose_leader").val('');
                        $("#choose_leader").focus();
                        $(".keywrd_pop").hide();
                    }
                }
            }
            </script>
            <?php
        }
        exit();
    }

        /*
* Author By: chittaranjan sahoo
* Purpose: Make cc autocomplete function for barber abi to box
* Date: 08-02-2019
*/
    public function dataccautoAction(){

        if($this->request->isPost())
        {
            $appendTag='';
            $appendFunc='';
            $xyz = 0;
            echo "<div class='items'><ul>";
            $allpost=$this->request->getPost();
            $tagname=$allpost['tag'];//print_r($allpost);
            $srhtxt=$tagname;
            $dataid=$allpost['dataid'];
            $res=Datatab::find(array("conditions"=>"id !='".$dataid."' and (not_send_mail=0 or not_send_mail='' or not_send_mail IS NULL) and (first_name like '%".$srhtxt."%' or last_name like '%".$srhtxt."%' or CONCAT(first_name, ' ', last_name) like '%".$srhtxt."%' or data_email = '".$srhtxt."')","order" => "first_name asc"))->toArray();
            if(!empty($res)){
                foreach($res as $result){
                        $xyz++;
                         if($result['first_name']!=''){
                            $dataName=stripslashes($result['first_name']." ".$result['last_name']);
                        }else if($result['data_email']!=''){
                            $dataName=$result['data_email'];
                          }
                        $add_tag = str_replace(strtolower($allpost['tag']), '<b>'.$allpost['tag'].'</b>', strtolower($dataName));
                        if ($xyz == 1)
                        {?>
                            <li class="selected" onclick="return sendTextCC<?=$appendFunc?>('<?=$dataName?>', <?=stripslashes($result['id'])?>);"><?=ucfirst($add_tag)?></li><?php
                        }
                        else
                        {?>
                            <li onclick="return sendTextCC<?=$appendFunc?>('<?=$dataName?>', <?=stripslashes($result['id'])?>);"><?=ucfirst($add_tag)?></li><?php
                        }
                }
            }else{
            ?>
                <li>No Data User Found :(</li><?php
            }
            ?></ul><div>
            <script>
            function sendTextCC(text, val_id)
            {
                if ($(".keywrd_pop_top_cc").is(":visible")) {
                    if (text!='') {
                        $("#cc_user_choose_list").append('<div class="groupItemContainer ccuseridcls'+val_id+'"><span class="singleItem">'+text+'<a class="remove glyphicon glyphicon-remove-circle" alt="12" href="javascript:{}" title="'+text+'" data-id="'+val_id+'" onclick="removeCcUserFunc('+val_id+')"></a></span><input type="hidden" name="cc_user[]" id="ccUserID_'+val_id+'" value="'+val_id+'"></div>');
                        $("#choose_cc_user").val('');
                        $("#choose_cc_user").focus();
                        $(".keywrd_pop_top_cc").hide();
                    }
                }
                else
                {
                    if (text!='') {
                        $("#cc_user_choose_list").append('');
                        $("#choose_cc_user").val('');
                        $("#choose_cc_user").focus();
                    }
                }
            }
            </script>
            <?php
        }
        exit();
    }
    /*
* Author By: chittaranjan sahoo
* Purpose: Make bcc autocomplete function for barber abi to box
* Date: 08-02-2019
*/
    public function databccautoAction(){

        if($this->request->isPost())
        {
            $appendTag='';
            $appendFunc='';
            $xyz = 0;
            echo "<div class='items'><ul>";
            $allpost=$this->request->getPost();
            $tagname=$allpost['tag'];//print_r($allpost);
            $srhtxt=$tagname;
            $dataid=$allpost['dataid'];
            $res=Datatab::find(array("conditions"=>"id !='".$dataid."' and (not_send_mail=0 or not_send_mail='' or not_send_mail IS NULL) and (first_name like '%".$srhtxt."%' or last_name like '%".$srhtxt."%' or CONCAT(first_name, ' ', last_name) like '%".$srhtxt."%' or data_email = '".$srhtxt."')","order" => "first_name asc"))->toArray();
            if(!empty($res)){
                foreach($res as $result){
                        $xyz++;
                        if($result['first_name']!=''){
                            $dataName=stripslashes($result['first_name']." ".$result['last_name']);
                        }else if($result['data_email']!=''){
                            $dataName=$result['data_email'];
                          }
                        $add_tag = str_replace(strtolower($allpost['tag']), '<b>'.$allpost['tag'].'</b>', strtolower($dataName));
                        if ($xyz == 1)
                        {?>
                            <li class="selected" onclick="return sendTextBCC<?=$appendFunc?>('<?=$dataName?>', <?=stripslashes($result['id'])?>);"><?=ucfirst($add_tag)?></li><?php
                        }
                        else
                        {?>
                            <li onclick="return sendTextBCC<?=$appendFunc?>('<?=$dataName?>', <?=stripslashes($result['id'])?>);"><?=ucfirst($add_tag)?></li><?php
                        }
                }
            }else{
            ?>
                <li>No Data user Found :(</li><?php
            }
            ?></ul><div>
            <script>
            function sendTextBCC(text, val_id)
            {
                if ($(".keywrd_pop_top_bcc").is(":visible")) {
                    if (text!='') {
                        $("#bcc_user_choose_list").append('<div class="groupItemContainer bccuseridcls'+val_id+'"><span class="singleItem">'+text+'<a class="remove glyphicon glyphicon-remove-circle" alt="12" href="javascript:{}" title="'+text+'" data-id="'+val_id+'" onclick="removeBCCUserFunc('+val_id+')"></a></span><input type="hidden" name="bcc_user[]" id="bccUserID_'+val_id+'" value="'+val_id+'"></div>');
                        $("#choose_bcc_user").val('');
                        $("#choose_bcc_user").focus();
                        $(".keywrd_pop_top_bcc").hide();
                    }
                }
                else
                {
                    if (text!='') {
                        $("#bcc_user_choose_list").append('');
                        $("#choose_bcc_user").val('');
                        $("#choose_bcc_user").focus();
                    }
                }
            }
            </script>
            <?php
        }
        exit();
    }
    /*
* Author By: chittaranjan sahoo
* Purpose: Make autocomplete function for all site search
* Date: 13-02-2019
*/
    public function sitesearchAction(){

        if($this->request->isPost())
        {
            $appendTag = '';
            $appendFunc = '';
            $xyz = 1;
            echo "<div class='items'><ul>";
            $allpost = $this->request->getPost();
            $tagname = $allpost['tag'];
            $srhtxt = $tagname;
            $dataid = $allpost['dataid'];


            $res = Enquiry::find(array("order" => "first_name asc", 'conditions' => "(first_name like '%" . $srhtxt . "%' or last_name like '%" . $srhtxt . "%' or CONCAT(first_name, ' ', last_name) like '%" . $srhtxt . "%' or borrower_email = '" . $srhtxt . "' or borrower_mob = '" . $srhtxt . "' or postcode = '" . $srhtxt . "' or name_of_comany like '%" . $srhtxt . "%' or borrower_address like '%" . $srhtxt . "%') and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)"))->toArray();
            $notproceedingRes = Enquiry::find(array("order" => "first_name asc", 'conditions' => "(first_name like '%" . $srhtxt . "%' or last_name like '%" . $srhtxt . "%' or CONCAT(first_name, ' ', last_name) like '%" . $srhtxt . "%' or borrower_email = '" . $srhtxt . "' or borrower_mob = '" . $srhtxt . "' or postcode = '" . $srhtxt . "' or name_of_comany like '%" . $srhtxt . "%' or borrower_address like '%" . $srhtxt . "%') and not_proceeding=1"))->toArray();
            $customerRes = Users::find(array("order" => "first_name asc", 'conditions' => "(first_name like '%" . $srhtxt . "%' or last_name like '%" . $srhtxt . "%' or CONCAT(first_name, ' ', last_name) like '%" . $srhtxt . "%' or email_id like '%" . $srhtxt . "%' or email_id like '%" . $srhtxt . "%' or customer_no = '" . $srhtxt . "') and u_type=2 and is_active=1"))->toArray();
            $abiRes = BarberAbi::find(array("order" => "first_name asc", 'conditions' => "is_active=1 and (first_name like '%" . $srhtxt . "%' or last_name like '%" . $srhtxt . "%' or CONCAT(first_name, ' ', last_name) like '%" . $srhtxt . "%' or company_name like '%" . $srhtxt . "%' or postcode = '" . $srhtxt . "' or company_phone = '" . $srhtxt . "' or company_email like '%" . $srhtxt . "%' or person_name like '%" . $srhtxt . "%' or person_title like '%" . $srhtxt . "%' or person_title like '%" . $srhtxt . "%' or role_name like '%" . $srhtxt . "%' or project_no like '%" . $srhtxt . "%' or project_title like '%" . $srhtxt . "%' or company_address_one like '%" . $srhtxt . "%' or company_address_two like '%" . $srhtxt . "%' or company_address_three like '%" . $srhtxt . "%' or company_address_four like '%" . $srhtxt . "%' or postcode like '%" . $srhtxt . "%' or company_fax like '%" . $srhtxt . "%' or title like '%" . $srhtxt . "%' or short_site_address like '%" . $srhtxt . "%' or site_address_one like '%" . $srhtxt . "%' or site_number like '%" . $srhtxt . "%' or your_ending like '%" . $srhtxt . "%' or email_address like '%" . $srhtxt . "%' or project_value like '%" . $srhtxt . "%' or planning_ref like '%" . $srhtxt . "%' or development_type like '%" . $srhtxt . "%' or stage like '%" . $srhtxt . "%' or scheme_details like '%" . $srhtxt . "%' or programme_timing like '%" . $srhtxt . "%' or contract_type like '%" . $srhtxt . "%' or mobile_no like '%" . $srhtxt . "%')"))->toArray();
            $dataRes = Datatab::find(array("order" => "first_name asc", 'conditions' => "is_active=1 and (first_name like '%" . $srhtxt . "%' or last_name like '%" . $srhtxt . "%' or CONCAT(first_name, ' ', last_name) like '%" . $srhtxt . "%' or company_name like '%" . $srhtxt . "%' or telephone = '" . $srhtxt . "' or mobile = '" . $srhtxt . "' or data_email like '%" . $srhtxt . "%' or notes  like '%" . $srhtxt . "%')"))->toArray();

            $whr = array("Lenders.is_active=1");
            array_push($whr, "(Users.first_name like '%" . $srhtxt . "%' or Users.last_name like '%" . $srhtxt . "%' or CONCAT(Users.first_name, ' ', Users.last_name) like '%" . $srhtxt . "%' or Users.email_id like '%" . $srhtxt . "%' or Users.email_id like '%" . $srhtxt . "%' or Users.customer_no = '" . $srhtxt . "')");
            $joinArr = array();
            array_push($joinArr, "left join Users on Lenders.lender_id=Users.id");
            $where = "";
            $joinString = '';
            if (!empty($whr)) {
                $where = " where " . implode(" and ", $whr);
            }
            if (!empty($joinArr)) {
                $joinString = " " . implode(" ", $joinArr);
            }
            $lenderRes = $this->modelsManager->executeQuery("select Lenders.* from Lenders" . $joinString . $where . " order by Users.first_name asc")->toArray();

            $sessionID = $this->session->get('sessUserID');
            $taskRes = Task::find(array("order" => "task_name asc", 'conditions' => "(posted_by=" . $sessionID . " or find_in_set('" . $sessionID . "', advisor_ids)) and (completed_status=0 or completed_status is null) and (task_name like '%" . $srhtxt . "%' or task_description like '%" . $srhtxt . "%')"))->toArray();
            $completedtaskRes = Task::find(array("order" => "task_name asc", 'conditions' => "(posted_by=" . $sessionID . " or find_in_set('" . $sessionID . "', advisor_ids)) and (completed_status=1) and (task_name like '%" . $srhtxt . "%' or task_description like '%" . $srhtxt . "%')"))->toArray();


            if(!empty($res)){
                $selected=($xyz==1)? ' class="selected"' : '';
                $xyz++;
            ?>
                <li<?=$selected?> onclick="return sendText<?=$appendFunc?>('<?=$srhtxt?>','lead');" data-url="<?=BASEURL?>dashboard/leads/?searchtxt=<?=$srhtxt?>"><?=count($res)?> Leads matching on your search criteria </li><?php
            }
            if(!empty($notproceedingRes)){
                $selected=($xyz==1)? ' class="selected"' : '';
                $xyz++;
            ?>
                <li<?=$selected?> onclick="return sendText<?=$appendFunc?>('<?=$srhtxt?>','notproceeding');" data-url="<?=BASEURL?>dashboard/notproceedinglist/?searchtxt=<?=$srhtxt?>"><?=count($notproceedingRes)?> Not proceeding lead matching on your search criteria </li><?php
            }
            if(!empty($customerRes)){
                $selected=($xyz==1)? ' class="selected"' : '';
                $xyz++;
            ?>
                <li<?=$selected?> onclick="return sendText<?=$appendFunc?>('<?=$srhtxt?>','customer');" data-url="<?=BASEURL?>dashboard/customers/?searchtxt=<?=$srhtxt?>"><?=count($customerRes)?> customers matching on your search criteria </li><?php
            }
            if(!empty($abiRes)){
                $selected=($xyz==1)? ' class="selected"' : '';
                $xyz++;
            ?>
                <li<?=$selected?> onclick="return sendText<?=$appendFunc?>('<?=$srhtxt?>','abi');" data-url="<?=BASEURL?>barberabi/?searchtxt=<?=$srhtxt?>"><?=count($abiRes)?> ABI matching on your search criteria </li><?php
            }
            if(!empty($dataRes)){
                $selected=($xyz==1)? ' class="selected"' : '';
                $xyz++;
            ?>
                <li<?=$selected?> onclick="return sendText<?=$appendFunc?>('<?=$srhtxt?>','data');" data-url="<?=BASEURL?>dashboard/datatab/?searchtxt=<?=$srhtxt?>"><?=count($dataRes)?> data user matching on your search criteria </li><?php
            }
            if(!empty($lenderRes)){
                $selected=($xyz==1)? ' class="selected"' : '';
                $xyz++;
            ?>
                <li<?=$selected?> onclick="return sendText<?=$appendFunc?>('<?=$srhtxt?>','lender');" data-url="<?=BASEURL?>dashboard/lendermanagement/?product=&searchTxt=<?=$srhtxt?>"><?=count($lenderRes)?> lenders matching on your search criteria </li><?php
            }

            if(!empty($taskRes)){
                $selected=($xyz==1)? ' class="selected"' : '';
                $xyz++;
            ?>
                <li<?=$selected?> onclick="return sendText<?=$appendFunc?>('<?=$srhtxt?>','task');" data-url="<?=BASEURL?>task?searchtxt=<?=$srhtxt?>"><?=count($taskRes)?> Tasks matching on your search criteria </li><?php
            }

            if(!empty($completedtaskRes)){
                $selected=($xyz==1)? ' class="selected"' : '';
                $xyz++;
            ?>
                <li<?=$selected?> onclick="return sendText<?=$appendFunc?>('<?=$srhtxt?>','completedtask');" data-url="<?=BASEURL?>task/completed?searchtxt=<?=$srhtxt?>"><?=count($completedtaskRes)?> completed tasks matching on your search criteria </li><?php
            }



            if(empty($res) && empty($notproceedingRes) && empty($customerRes) && empty($abiRes) && empty($dataRes) && empty($lenderRes) && empty($taskRes) && empty($completedtaskRes)){
            ?>
                <li>No section match with your searched keywords: "<?=$srhtxt?>"</li><?php
            }
            ?></ul><div>
            <script>
            function sendText(text, msgof)
            {
                if ($(".keywrd_pop_top").is(":visible")) {
                    if (text!='') {

                        $("#site_search_txt").val('');
                        $("#site_search_txt").focus();
                        $(".keywrd_pop_top").hide();
                        if(msgof=='lead'){
                            window.location="<?=BASEURL?>dashboard/leads/?searchtxt="+text;
                        }else if(msgof=='notproceeding'){
                            window.location="<?=BASEURL?>dashboard/notproceedinglist/?searchtxt="+text;
                        }else if(msgof=='customer'){
                            window.location="<?=BASEURL?>dashboard/customers/?searchtxt="+text;
                        }else if(msgof=='abi'){
                            window.location="<?=BASEURL?>barberabi/?searchtxt="+text;
                        }else if(msgof=='data'){
                            window.location="<?=BASEURL?>dashboard/datatab/?searchtxt="+text;
                        }else if(msgof=='lender'){
                            window.location="<?=BASEURL?>dashboard/lendermanagement/?product=&searchTxt="+text;
                        }else if(msgof=='task'){
                            window.location="<?=BASEURL?>task?searchtxt="+text;
                        }else if(msgof=='completedtask'){
                            window.location="<?=BASEURL?>task/completed?searchtxt="+text;
                        }


                    }
                }
                else
                {
                    if (text!='') {
                        $("#site_search_txt").val('');
                        $("#site_search_txt").focus();
                        $(".keywrd_pop").hide();
                    }
                }
            }
            </script>
            <?php
        }
        exit();
    }
    /**
    * creditsafe Action To search credit safe API data
    * Action Name: creditsafeAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 18-01-2019
    **/
    public function creditsafeAction(){
        @$this->session->remove('creditdata');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $prices=array();
            //$this->session->set('data_from', $allPost['data_from']);
            if ($this->cookies->has('credit_safetoken')) {
                //Get the cookie
                $credit_safetoken = $this->cookies->get('credit_safetoken');
            }else{
                $tokenresult=UIElements::bapCustUnicreditsafelogin();
                if(!empty($tokenresult) && $tokenresult->token){
                    $this->cookies->set('credit_safetoken', $tokenresult->token, time()+3500);
                    $credit_safetoken=$tokenresult->token;
                }else{
                   $credit_safetoken='';
                }
            }
            //echo $credit_safetoken; exit();
            if($credit_safetoken!=''){
                $paramArr=array();
                if($allPost['countries']!=''){
                    array_push($paramArr, 'countries='.$allPost['countries']);
                }
                if($allPost['id']!=''){
                    array_push($paramArr, 'id='.$allPost['id']);
                }
                if($allPost['safeNo']!=''){
                    array_push($paramArr, 'safeNo='.$allPost['safeNo']);
                }
                if($allPost['regNo']!=''){
                    array_push($paramArr, 'regNo='.$allPost['regNo']);
                }
                if($allPost['name']!=''){
                    array_push($paramArr, 'name='.urlencode($allPost['name']));
                }
                if($allPost['status']!=''){
                    array_push($paramArr, 'status='.$allPost['status']);
                }
                if($allPost['address']!=''){
                    array_push($paramArr, 'address='.urlencode($allPost['address']));
                }
                if($allPost['street']!=''){
                    array_push($paramArr, 'street='.urlencode($allPost['street']));
                }
                if($allPost['city']!=''){
                    array_push($paramArr, 'city='.urlencode($allPost['city']));
                }
                if($allPost['postCode']!=''){
                    array_push($paramArr, 'postCode='.$allPost['postCode']);
                }
                if($allPost['phoneNo']!=''){
                    array_push($paramArr, 'phoneNo='.$allPost['phoneNo']);
                }
                if($allPost['language']!=''){
                    array_push($paramArr, 'language='.$allPost['language']);
                }
                $paramsString="";
                if(!empty($paramArr)){
                   $paramsString=implode("&", $paramArr);
                }
                if($paramsString!=''){
                    $searchUrl="https://connect.creditsafe.com/v1/companies?".$paramsString."&page=1&pageSize=200";
                    //echo $credit_safetoken;exit();
                    $searchresult=UIElements::bapCustUnicreditsafeSearch($searchUrl, $credit_safetoken);
                    $this->session->set('creditdata', $searchresult);
                }
            }





        }
    }
    /**
    * creditsafe company print Action To print creditsafe company data
    * Action Name: companyprintAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 19-01-2019
    **/
    public function companyprintAction(){

    }
    /**
    * creditsafe companydetail Action To creditsafe company detail
    * Action Name: companydetailAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 19-01-2019
    **/
    public function companydetailAction(){
        $response = new \Phalcon\Http\Response();
        if(!$this->request->get('company_id')){
            return $response->redirect('dashboard/creditsafe');
        }
        if ($this->cookies->has('credit_safetoken')) {
            //Get the cookie
            $credit_safetoken = $this->cookies->get('credit_safetoken');
        }else{
            $tokenresult=UIElements::bapCustUnicreditsafelogin();
            if(!empty($tokenresult) && $tokenresult->token){
                $this->cookies->set('credit_safetoken', $tokenresult->token, time()+3500);
                $credit_safetoken=$tokenresult->token;
            }else{
               $credit_safetoken='';
            }
        }
        if($credit_safetoken!=''){
            $companyID=$this->request->get('company_id');
            $language="";
            if($this->request->get('language')!=''){
                $language="?language=".$this->request->get('language');
            }
            $companyURL="https://connect.creditsafe.com/v1/companies/".$companyID.$language;
            //echo $credit_safetoken;exit();
            $companyDetail=UIElements::bapCustUnicreditsafeCompDetail($companyURL, $credit_safetoken);
            if(empty($companyDetail)){
                return $response->redirect('dashboard/creditsafe');
            }
            $this->view->setVar('companyDetail', $companyDetail);
        }else{
            return $response->redirect('dashboard/creditsafe');
        }
    }
     /**
    * Duplicate Lead Action To clone the lead
    * Action Name: duplicateleadAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 02-04-2019
    **/
     public function addQuickLinkDrive($allPost){
        // $allPost["pd_time_at_this_address"]=implode(":::", $timeAtThisAddressArr);
        $leadAppDetail=LeadApplication::find(array('conditions' => "lead_id=".$allPost['leadid'], 'limit' => 1));
        $leadAppDetail=$leadAppDetail->toArray();
        $leadAppDetail=$leadAppDetail[0];
        $leadAppDetail["one_drive_link"]=$allPost['one_drive_link'];
        $leadAppDb= new LeadApplication();
        $saveData=$leadAppDb->save($leadAppDetail);
        echo 1;
         exit();
     }
    public function duplicateleadAction(){
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if (isset($allPost['action'])&&$allPost['action']=='addQuickLinkDrive'){
                $this->addQuickLinkDrive ($allPost);
            }
            if (!isset($allPost['action'])){
                if($allPost['leadid']!=''){
                    $enquiryDetail=Enquiry::findFirst(array('conditions' => "id=".$allPost['leadid']));


                    $leadAppDetail=LeadApplication::find(array('conditions' => "lead_id=".$allPost['leadid'], 'limit' => 1));
                    if($enquiryDetail->borrower_name!=''){
                        $clientname=$enquiryDetail->borrower_name;
                    }else{
                        if(count($leadAppDetail)>0){
                            $nameArr=explode(":::", $leadAppDetail[0]->pd_fullname);
                            $clientname=stripslashes($nameArr[0]);
                        }else{
                            if($enquiryDetail->borrower_name!=''){
                                $clientname=$enquiryDetail->borrower_name;
                            }else if($enquiryDetail->first_name!=''){
                                $clientname=stripslashes($leadDetail->first_name." ".$enquiryDetail->last_name);
                            }else{
                                $clientname="";
                            }
                        }
                    }
                    if($enquiryDetail->borrower_mob!=''){
                        $phoneno=$enquiryDetail->borrower_mob;
                    }else{
                        if(count($leadAppDetail)>0){
                            $phoneArr=explode(":::", $leadAppDetail[0]->pd_phone_no);
                            $phoneno=stripslashes($phoneArr[0]);
                        }else{
                            $phoneno="";
                        }
                    }
                    if($enquiryDetail->borrower_email!=''){
                        $emailID=$enquiryDetail->borrower_email;
                    }else{
                        if(count($leadAppDetail)>0){
                            $emailArr=explode(":::", $leadAppDetail[0]->pd_email);
                            $emailID=stripslashes($emailArr[0]);
                        }else{
                            $emailID="";
                        }
                    }



                    $postVal['advisor_id']          = $enquiryDetail->advisor_id;
                    $lead_unique_id                 = rand(10, 1000000);
                    $postVal['lead_unique_id']      = $lead_unique_id;
                    $leadlast                       = Enquiry::find(array('conditions' => "lead_id like 'LEAD%'", 'order' => "id desc", 'limit' => 1));
                    if(count($leads_lastyearinterval)>0){
                        $lastID                     = $leadlast[0]->lead_id;
                        $idArr                      = explode("D", $lastID);
                        $increaseID                 = $idArr[1]+1;
                        $finalID                    = "LEAD".$increaseID;
                        $postVal['lead_id']         = $finalID;
                    }else{
                        $postVal['lead_id']         = "LEAD10001";
                    }
                    $postVal['loan_type']           = $enquiryDetail->loan_type;
                    $postVal['purpose']             = $enquiryDetail->purpose;
                    $postVal['product']             = $enquiryDetail->product;
                    $postVal['property_type']       = $enquiryDetail->property_type;
                    $postVal['property_description']= $enquiryDetail->property_description;
                    $postVal['purchase_price']      = $enquiryDetail->purchase_price;

                    $postVal['balance_of_any_exist_charge'] = $enquiryDetail->balance_of_any_exist_charge;
                    $postVal['current_lender']              = $enquiryDetail->current_lender;
                    $postVal['date_of_purchase']            = $enquiryDetail->date_of_purchase;
                    $postVal['original_purchase_price']     = $enquiryDetail->original_purchase_price;

                    $postVal['amount_required']     = $enquiryDetail->amount_required;
                    $postVal['deposit']             = $enquiryDetail->deposit;
                    $postVal['ltv_required']        = $enquiryDetail->ltv_required;
                    $postVal['term_required']       = $enquiryDetail->term_required;

                    $postVal['servicing']            = $enquiryDetail->servicing;
                    $postVal['fin_amount_required']  = $enquiryDetail->fin_amount_required;
                    $postVal['application_type']     = $enquiryDetail->application_type;
                    $postVal['enquiry_source']       = $enquiryDetail->enquiry_source;
                    $postVal['fin_ltv_required']     = $enquiryDetail->fin_ltv_required;
                    $postVal['fin_term_required']    = $enquiryDetail->fin_term_required;

                    $postVal['fin_servicing']               = $enquiryDetail->fin_servicing;
                    $postVal['dev_purchase_own_d_property'] = $enquiryDetail->dev_purchase_own_d_property;
                    $postVal['dev_pur_purchase_price']      = $enquiryDetail->dev_pur_purchase_price;
                    $postVal['dev_tot_build_cost']          = $enquiryDetail->dev_tot_build_cost;

                    $postVal['dev_purchase_gdv']          = $enquiryDetail->dev_purchase_gdv;
                    $postVal['dev_pur_development_type']  = $enquiryDetail->dev_pur_development_type;
                    $postVal['dev_pur_what_the_exit']     = $enquiryDetail->dev_pur_what_the_exit;
                    $postVal['dev_pur_is_planning']       = $enquiryDetail->dev_pur_is_planning;

                    $postVal['dev_pur_planning_reff_no']      = $enquiryDetail->dev_pur_planning_reff_no;
                    $postVal['dev_pur_proposed_start_date']   = $enquiryDetail->dev_pur_proposed_start_date;
                    $postVal['dev_pur_build_term']            = $enquiryDetail->dev_pur_build_term;
                    $postVal['dev_pur_sales_period']          = $enquiryDetail->dev_pur_sales_period;

                    $postVal['dev_pur_deposit']            = $enquiryDetail->dev_pur_deposit;
                    $postVal['dev_pur_loan_amt_required']  = $enquiryDetail->dev_pur_loan_amt_required;
                    $postVal['dev_pur_scheme_detail']      = $enquiryDetail->dev_pur_scheme_detail;
                    $postVal['dev_pur_appraisal']          = $enquiryDetail->dev_pur_appraisal;

                    $postVal['dev_pur_square_feet']              = $enquiryDetail->dev_pur_square_feet;
                    $postVal['mobilisation']                     = $enquiryDetail->mobilisation;
                    $postVal['dev_pur_loan_term']                = $enquiryDetail->dev_pur_loan_term;
                    $postVal['dev_finance_own_d_property']       = $enquiryDetail->dev_finance_own_d_property;
                    $postVal['dev_fin_ori_purchase_price']       = $enquiryDetail->dev_fin_ori_purchase_price;
                    $postVal['dev_fin_current_lender']           = $enquiryDetail->dev_fin_current_lender;
                    $postVal['dev_fin_amt_outstanding']          = $enquiryDetail->dev_fin_amt_outstanding;
                    $postVal['dev_fin_amt_spent_dt_on_build']    = $enquiryDetail->dev_fin_amt_spent_dt_on_build;

                    $postVal['dev_fin_buy_without_planning']     = $enquiryDetail->dev_fin_buy_without_planning;
                    $postVal['dev_fin_cur_market_val']           = $enquiryDetail->dev_fin_cur_market_val;
                    $postVal['dev_fin_tot_build_cost']           = $enquiryDetail->dev_fin_tot_build_cost;
                    $postVal['dev_fin_gdv']                      = $enquiryDetail->dev_fin_gdv;
                    $postVal['dev_fin_development_type']         = $enquiryDetail->dev_fin_development_type;
                    $postVal['dev_fin_what_is_the_exit']         = $enquiryDetail->dev_fin_what_is_the_exit;
                    $postVal['dev_fin_is_planning']              = $enquiryDetail->dev_fin_is_planning;
                    $postVal['dev_finplanning_ref_no']           = $enquiryDetail->dev_finplanning_ref_no;

                    $postVal['dev_fin_proposed_srt_dt']          = $enquiryDetail->dev_fin_proposed_srt_dt;
                    $postVal['dev_fin_build_term']               = $enquiryDetail->dev_fin_build_term;
                    $postVal['dev_fin_sales_period']             = $enquiryDetail->dev_fin_sales_period;
                    $postVal['finace_exit']                      = $enquiryDetail->finace_exit;

                    $postVal['total_term']                       = $enquiryDetail->total_term;
                    $postVal['cost_of_work']                     = $enquiryDetail->cost_of_work;
                    $postVal['refurbishment']                    = $enquiryDetail->refurbishment;
                    $postVal['build_period']                     = $enquiryDetail->build_period;

                    $postVal['scheme_detail']                    = $enquiryDetail->scheme_detail;
                    $postVal['gdv']                              = $enquiryDetail->gdv;
                    $postVal['similar_project_complete']         = $enquiryDetail->similar_project_complete;
                    $postVal['ground_up_project']                = $enquiryDetail->ground_up_project;


                    // $getData["purchase_price"]               = str_replace(",", "", $allPost["purchase_price"]);
                    $postVal['refurbishment_project']            = $enquiryDetail->refurbishment_project;
                    $postVal['last_project_complete']            = $enquiryDetail->last_project_complete;
                    $postVal['value_of_project']                 = $enquiryDetail->value_of_project;
                    $postVal['properties_own']                   = $enquiryDetail->properties_own;

                    $postVal['how_many_are_residential']         = $enquiryDetail->how_many_are_residential;
                    $postVal['how_many_are_commercial']          = $enquiryDetail->how_many_are_commercial;
                    $postVal['portfolio_value']                  = $enquiryDetail->portfolio_value;
                    $postVal['current_debit_portfolio']          = $enquiryDetail->current_debit_portfolio;

                    $postVal['borrower_type']                    = $enquiryDetail->borrower_type;
                    $postVal['name_of_comany']                   = $enquiryDetail->name_of_comany;
                    $postVal['no_of_director']                   = $enquiryDetail->no_of_director;
                    $postVal['no_of_shareholder']                = $enquiryDetail->no_of_shareholder;

                    $postVal['registration_number']              = $enquiryDetail->registration_number;
                    $postVal['no_of_borrower']                   = $enquiryDetail->no_of_borrower;
                    $postVal['first_name']                       = $enquiryDetail->first_name;
                    $postVal['last_name']                        = $enquiryDetail->last_name;

                    $postVal['borrower_address']                 = $enquiryDetail->borrower_address;
                    $postVal['time_at_address']                  = $enquiryDetail->time_at_address;
                    $postVal['with_what_info_come_up']           = $enquiryDetail->with_what_info_come_up;
                    $postVal['borrower_dob']                     = $enquiryDetail->borrower_dob;
                    $postVal['borrower_name']                    = $clientname;

                    $postVal['borrower_tel']          = $enquiryDetail->borrower_tel;
                    $postVal['borrower_mob']          = $phoneno;
                    $postVal['borrower_email']        = $emailID;
                    $postVal['seconary_email']        = $enquiryDetail->seconary_email;

                    $postVal['postcode']       = $enquiryDetail->postcode;
                    $postVal['first_name1']    = $enquiryDetail->first_name1;
                    $postVal['borrower_tel1']  = $enquiryDetail->borrower_tel1;
                    $postVal['last_name1']     = $enquiryDetail->last_name1;

                    $postVal['borrower_mob1']       = $enquiryDetail->borrower_mob1;
                    $postVal['borrower_dob1']       = $enquiryDetail->borrower_dob1;
                    $postVal['borrower_email1']     = $enquiryDetail->borrower_email1;
                    $postVal['borrower_address1']   = $enquiryDetail->borrower_address1;

                    $postVal['postcode1']      = $enquiryDetail->postcode1;
                    $postVal['first_name2']    = $enquiryDetail->first_name2;
                    $postVal['borrower_tel2']  = $enquiryDetail->borrower_tel2;
                    $postVal['last_name2']     = $enquiryDetail->last_name2;

                    $postVal['borrower_mob2']     = $enquiryDetail->borrower_mob2;
                    $postVal['borrower_dob2']     = $enquiryDetail->borrower_dob2;
                    $postVal['borrower_email2']   = $enquiryDetail->borrower_email2;
                    $postVal['borrower_address2'] = $enquiryDetail->borrower_address2;

                    $postVal['postcode2']          = $enquiryDetail->postcode2;
                    $postVal['first_name3']        = $enquiryDetail->first_name3;
                    $postVal['borrower_tel3']      = $enquiryDetail->borrower_tel3;
                    $postVal['last_name3']         = $enquiryDetail->last_name3;

                    $postVal['borrower_mob3']     = $enquiryDetail->borrower_mob3;
                    $postVal['borrower_dob3']     = $enquiryDetail->borrower_dob3;
                    $postVal['borrower_email3']   = $enquiryDetail->borrower_email3;
                    $postVal['borrower_address3'] = $enquiryDetail->borrower_address3;

                    $postVal['postcode3']     = $enquiryDetail->postcode3;
                    $postVal['first_name4']   = $enquiryDetail->first_name4;
                    $postVal['borrower_tel4'] = $enquiryDetail->borrower_tel4;
                    $postVal['last_name4']    = $enquiryDetail->last_name4;

                    $postVal['borrower_mob4']    = $enquiryDetail->borrower_mob4;
                    $postVal['borrower_dob4']    = $enquiryDetail->borrower_dob4;
                    $postVal['borrower_email4']  = $enquiryDetail->borrower_email4;
                    $postVal['borrower_address4']= $enquiryDetail->borrower_address4;

                    $postVal['postcode4']          = $enquiryDetail->postcode4;
                    $postVal['borrower_status']    = $enquiryDetail->borrower_status;
                    $postVal['security_address']   = $enquiryDetail->security_address;
                    $postVal['security_postcode']  = $enquiryDetail->security_postcode;

                    $postVal['security_is_additional']   = $enquiryDetail->security_is_additional;
                    $postVal['auction_purchase']         = $enquiryDetail->auction_purchase;

                    $postVal['security_tenure']                 = $enquiryDetail->security_tenure;
                    $postVal['security_leasehold_remain_year']  = $enquiryDetail->security_leasehold_remain_year;
                    $postVal['security_ex_local']               = $enquiryDetail->security_ex_local;
                    $postVal['credit_profile']                  = $enquiryDetail->credit_profile;

                    $postVal['income']              = $enquiryDetail->income;
                    $postVal['is_active']           = $enquiryDetail->is_active;
                    $postVal['approve_lead']        = 0;
                    $postVal['approve_by_lender']   = 0;

                    $postVal['approve_lender_date'] = '';
                    $postVal['approved_loan']       = 0;
                    $postVal['approved_postoffer']  = 0;
                    $postVal['exit_submit']         = $enquiryDetail->exit_submit;

                    $postVal['note_text']           = $enquiryDetail->note_text;
                    $postVal['lead_source']         = $enquiryDetail->lead_source;
                    $postVal['user_id']             = $enquiryDetail->user_id;
                    $postVal['not_proceeding']      = $enquiryDetail->not_proceeding;

                    $postVal['do_you_have_any_experince']   = $enquiryDetail->do_you_have_any_experince;
                    $postVal['do_you_own_properties']       = $enquiryDetail->do_you_own_properties;
                    $postVal['not_send_mail']               = $enquiryDetail->not_send_mail;
                    $postVal['no_of_rooms']                 = $enquiryDetail->no_of_rooms;

                    $postVal['size_in_sqft']                 = $enquiryDetail->size_in_sqft;
                    $postVal['created']                      = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $postVal['modified']                     = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $postVal['dev_pur_amt_spent_to_date']    = $enquiryDetail->dev_pur_amt_spent_to_date;

                    $postVal['dev_pur_outstanding_balance']  = $enquiryDetail->dev_pur_outstanding_balance;
                    $postVal['dev_purchase_current_lender']  = $enquiryDetail->dev_purchase_current_lender;
                    $postVal['root_exit']                    = $enquiryDetail->root_exit;
                    $postVal['dev_finace_exit']              = $enquiryDetail->dev_finace_exit;
                    $postVal['dev_pur_finace_exit']          = $enquiryDetail->dev_pur_finace_exit;

                    $postVal['fin_scheme_detail']=$enquiryDetail->fin_scheme_detail;
                    $postVal['dev_fin_scheme_detail']=$enquiryDetail->dev_fin_scheme_detail;
                    $postVal['ni_number']=$enquiryDetail->ni_number;
                    $postVal['country_of_birth']=$enquiryDetail->country_of_birth;
                    $postVal['how_long_live_uk']=$enquiryDetail->how_long_live_uk;

                    $postVal['when_you_moved_current_home']=$enquiryDetail->when_you_moved_current_home;
                    $postVal['year_left_previous_address']=$enquiryDetail->year_left_previous_address;
                    $postVal['rental_income']=$enquiryDetail->rental_income;
                    $postVal['ast']=$enquiryDetail->ast;
                    $postVal['hmo']=$enquiryDetail->hmo;

                    $postVal['hmo_license']=$enquiryDetail->hmo_license;
                    $postVal['room_for_hmo']=$enquiryDetail->room_for_hmo;
                    $postVal['assign_advisor']=$enquiryDetail->assign_advisor;
                    $postVal['interestservicing']=$enquiryDetail->interestservicing;
                    $postVal['brokerfee']=$enquiryDetail->brokerfee;

                    $postVal['name_ist_charge_lender']=$enquiryDetail->name_ist_charge_lender;
                    $postVal['amt_outstanding_ist_charg']=$enquiryDetail->amt_outstanding_ist_charg;
                    $postVal['monthly_mortgage_pmt']=$enquiryDetail->monthly_mortgage_pmt;
                    $postVal['rental_income_tennted']=$enquiryDetail->rental_income_tennted;
                    $postVal['any_arrer_mortgage']=$enquiryDetail->any_arrer_mortgage;

                    $postVal['tot_build_cost']=$enquiryDetail->tot_build_cost;
                    $postVal['loan_to_gdv_required']=$enquiryDetail->loan_to_gdv_required;
                    $postVal['loan_to_cost_req']=$enquiryDetail->loan_to_cost_req;
                    $postVal['loan_to_purchase_req']=$enquiryDetail->loan_to_purchase_req;
                    $postVal['amt_of_fund_borrower']=$enquiryDetail->amt_of_fund_borrower;

                    $postVal['source_of_those_fund']=$enquiryDetail->source_of_those_fund;
                    $postVal['outstanding_mortgage']=$enquiryDetail->outstanding_mortgage;
                    $postVal['desc_of_proposed_scheme']=$enquiryDetail->desc_of_proposed_scheme;
                    $postVal['status_of_planning_permission']=$enquiryDetail->status_of_planning_permission;
                    $postVal['proposed_start_date']=$enquiryDetail->proposed_start_date;

                    $postVal['expected_duration_of_build']=$enquiryDetail->expected_duration_of_build;
                    $postVal['sqft_comp_project']=$enquiryDetail->sqft_comp_project;
                    $postVal['currently_construction']=$enquiryDetail->currently_construction;
                    $postVal['currently_construction_detail']=$enquiryDetail->currently_construction_detail;
                    $postVal['once_the_site_is_built']=$enquiryDetail->once_the_site_is_built;

                    $postVal['who_will_build_the_project']=$enquiryDetail->who_will_build_the_project;
                    $postVal['property_address']=$enquiryDetail->property_address;
                    $postVal['ground_rent']=$enquiryDetail->ground_rent;
                    $postVal['service_charge']=$enquiryDetail->service_charge;
                    $postVal['own_freehold_orshare_by_comp']=$enquiryDetail->own_freehold_orshare_by_comp;

                    $postVal['type_of_purchase']=$enquiryDetail->type_of_purchase;
                    $postVal['wht_is_the_purchase_price']=$enquiryDetail->wht_is_the_purchase_price;
                    $postVal['estimated_rental_income']=$enquiryDetail->estimated_rental_income;
                    $postVal['anticipated_completion_date']=$enquiryDetail->anticipated_completion_date;
                    $postVal['deposit_amt']=$enquiryDetail->deposit_amt;

                    $postVal['deposit_detail']=$enquiryDetail->deposit_detail;
                    $postVal['connected_to_vendor']=$enquiryDetail->connected_to_vendor;
                    $postVal['receiving_discount']=$enquiryDetail->receiving_discount;
                    $postVal['receiving_discount_note']=$enquiryDetail->receiving_discount_note;
                    $postVal['repayment_val']=$enquiryDetail->repayment_val;

                    $postVal['work_any_properties']=$enquiryDetail->work_any_properties;
                    $postVal['manage_property_directly']=$enquiryDetail->manage_property_directly;
                    $postVal['letting_property_yr']=$enquiryDetail->letting_property_yr;
                    $postVal['letting_property_month']=$enquiryDetail->letting_property_month;
                    $postVal['currently_own']=$enquiryDetail->currently_own;

                    $postVal['you_are']=$enquiryDetail->you_are;
                    $postVal['addiotional_monthly_income']=$enquiryDetail->addiotional_monthly_income;
                    $postVal['nature_of_your_trade']=$enquiryDetail->nature_of_your_trade;
                    $postVal['how_many_flat']=$enquiryDetail->how_many_flat;
                    $postVal['security_flat_on']=$enquiryDetail->security_flat_on;

                    $postVal['property_have_a_lift']=$enquiryDetail->property_have_a_lift;
                    $postVal['how_many_bathroom']=$enquiryDetail->how_many_bathroom;
                    $postVal['is_hmo_licence']=$enquiryDetail->is_hmo_licence;
                    $postVal['planning_permission']=$enquiryDetail->planning_permission;
                    $postVal['part_investiment']=$enquiryDetail->part_investiment;

                    $postVal['fully_rented_out']=$enquiryDetail->fully_rented_out;
                    $postVal['owner_occupied_detail']=$enquiryDetail->owner_occupied_detail;
                    $postVal['housing_association']=$enquiryDetail->housing_association;
                    $postVal['being_offered_as_security']=$enquiryDetail->being_offered_as_security;
                    $postVal['current_mortgage_lender']=$enquiryDetail->current_mortgage_lender;

                    $postVal['other_changes_aginst_the_property']=$enquiryDetail->other_changes_aginst_the_property;
                    $postVal['last_twelve_month']=$enquiryDetail->last_twelve_month;
                    $postVal['refinance_lender_one']=$enquiryDetail->refinance_lender_one;
                    $postVal['refinance_limit_one']=$enquiryDetail->refinance_limit_one;
                    $postVal['refinance_current_balance_one']=$enquiryDetail->refinance_current_balance_one;

                    $postVal['monthly_payment_one']=$enquiryDetail->monthly_payment_one;
                    $postVal['personal_business_debt_one']=$enquiryDetail->personal_business_debt_one;
                    $postVal['refinance_lender_two']=$enquiryDetail->refinance_lender_two;
                    $postVal['refinance_limit_two']=$enquiryDetail->refinance_limit_two;
                    $postVal['refinance_current_balance_two']=$enquiryDetail->refinance_current_balance_two;


                    $postVal['monthly_payment_two']            = $enquiryDetail->monthly_payment_two;
                    $postVal['personal_business_debt_two']      = $enquiryDetail->personal_business_debt_two;
                    $postVal['refinance_lender_three']          = $enquiryDetail->refinance_lender_three;
                    $postVal['refinance_limit_three']           = $enquiryDetail->refinance_limit_three;
                    $postVal['refinance_current_balance_three'] = $enquiryDetail->refinance_current_balance_three;

                    $postVal['monthly_payment_three']       = $enquiryDetail->monthly_payment_three;
                    $postVal['personal_business_debt_three']= $enquiryDetail->personal_business_debt_three;
                    $postVal['adv_consolidation']           = $enquiryDetail->adv_consolidation;
                    $postVal['property_imnprovements']      = $enquiryDetail->property_imnprovements;
                    $postVal['purchase_another_property']   = $enquiryDetail->purchase_another_property;

                    $postVal['address_the_property']    = $enquiryDetail->address_the_property;
                    $postVal['deposit_money_from_us']   = $enquiryDetail->deposit_money_from_us;
                    $postVal['work_on_other_property']  = $enquiryDetail->work_on_other_property;
                    $postVal['finance_raised_property'] = $enquiryDetail->finance_raised_property;
                    $postVal['finance_other_detail']    = $enquiryDetail->finance_other_detail;

                    $postVal['debt_consolidation']    = $enquiryDetail->debt_consolidation;
                    $postVal['bankrupt_guarntor_one'] = $enquiryDetail->bankrupt_guarntor_one;
                    $postVal['bankrupt_guarntor_two'] = $enquiryDetail->bankrupt_guarntor_two;
                    $postVal['repayment_one']         = $enquiryDetail->repayment_one;
                    $postVal['repayment_two']         = $enquiryDetail->repayment_two;



                    $postVal['register_against_one'] = $enquiryDetail->register_against_one;
                    $postVal['register_against_two']  = $enquiryDetail->register_against_two;
                    $postVal['iva_cva_one']           = $enquiryDetail->iva_cva_one;
                    $postVal['iva_cva_two']           = $enquiryDetail->iva_cva_two;
                    $postVal['credit_refuse_one']     = $enquiryDetail->credit_refuse_one;

                    $postVal['credit_refuse_two']        = $enquiryDetail->credit_refuse_two;
                    $postVal['repay_reduce_amt_one']     = $enquiryDetail->repay_reduce_amt_one;
                    $postVal['repay_reduce_amt_two']     = $enquiryDetail->repay_reduce_amt_two;
                    $postVal['home_residence_val_one']   = $enquiryDetail->home_residence_val_one;
                    $postVal['home_residence_val_two']   = $enquiryDetail->home_residence_val_two;

                    $postVal['other_properties_val_one'] = $enquiryDetail->other_properties_val_one;
                    $postVal['other_properties_val_two'] = $enquiryDetail->other_properties_val_two;
                    $postVal['cash_resources_one']       = $enquiryDetail->cash_resources_one;
                    $postVal['cash_resources_two']       = $enquiryDetail->cash_resources_two;
                    $postVal['stock_share_val_one']      = $enquiryDetail->stock_share_val_one;

                    $postVal['stock_share_val_two']   = $enquiryDetail->stock_share_val_two;
                    $postVal['endowment_one']         = $enquiryDetail->endowment_one;
                    $postVal['endowment_two']         = $enquiryDetail->endowment_two;
                    $postVal['other_inv_val_one']     = $enquiryDetail->other_inv_val_one;
                    $postVal['other_inv_val_two']     = $enquiryDetail->other_inv_val_two;


                    $postVal['other_assets_val_one']        = $enquiryDetail->other_assets_val_one;
                    $postVal['other_assets_val_two']        = $enquiryDetail->other_assets_val_two;
                    $postVal['total_asset_one']             = $enquiryDetail->total_asset_one;
                    $postVal['total_asset_two']             = $enquiryDetail->total_asset_two;
                    $postVal['home_mortgage_balance_one']   = $enquiryDetail->home_mortgage_balance_one;

                    $postVal['home_mortgage_balance_two']         = $enquiryDetail->home_mortgage_balance_two;
                    $postVal['other_properties_mortgage_bal_one'] = $enquiryDetail->other_properties_mortgage_bal_one;
                    $postVal['other_properties_mortgage_bal_two'] = $enquiryDetail->other_properties_mortgage_bal_two;
                    $postVal['bank_loan_overdrafts_out_one']      = $enquiryDetail->bank_loan_overdrafts_out_one;
                    $postVal['bank_loan_overdrafts_out_two']      = $enquiryDetail->bank_loan_overdrafts_out_two;

                    $postVal['other_loans_hp_bal_one']       = $enquiryDetail->other_loans_hp_bal_one;
                    $postVal['other_loans_hp_bal_two']       = $enquiryDetail->other_loans_hp_bal_two;
                    $postVal['store_card_bal_one']           = $enquiryDetail->store_card_bal_one;
                    $postVal['store_card_bal_two']           = $enquiryDetail->store_card_bal_two;
                    $postVal['val_guarantees_in_place_one']  = $enquiryDetail->val_guarantees_in_place_one;

                    $postVal['val_guarantees_in_place_two']= $enquiryDetail->val_guarantees_in_place_two;
                    $postVal['other_liabilities_one']      = $enquiryDetail->other_liabilities_one;
                    $postVal['other_liabilities_two']      = $enquiryDetail->other_liabilities_two;
                    $postVal['total_liabilities_one']      = $enquiryDetail->total_liabilities_one;
                    $postVal['total_liabilities_two']      = $enquiryDetail->total_liabilities_two;


                    $postVal['total_net_worth_one']      = $enquiryDetail->total_net_worth_one;
                    $postVal['total_net_worth_two']      = $enquiryDetail->total_net_worth_two;
                    $postVal['gross_loan_amount']        = $enquiryDetail->gross_loan_amount;
                    $postVal['requested_mortgage_term']  = $enquiryDetail->requested_mortgage_term;
                    $postVal['monthly_rate']             = $enquiryDetail->monthly_rate;

                    $postVal['anual_all_rate']            = $enquiryDetail->anual_all_rate;
                    $postVal['lender_arrangement_fee']    = $enquiryDetail->lender_arrangement_fee;
                    $postVal['lender_arrangement_val']    = $enquiryDetail->lender_arrangement_val;
                    $postVal['lender_legal_fee']          = $enquiryDetail->lender_legal_fee;
                    $postVal['telegraphic_transfer_fee']  = $enquiryDetail->telegraphic_transfer_fee;

                    $postVal['estimated_net_advance']     = $enquiryDetail->estimated_net_advance;

                    //===========Background===========
                    $postVal['how_many_properties_do_you_own']  = $enquiryDetail->how_many_properties_do_you_own;
                    $postVal['how_many_residential']             = $enquiryDetail->how_many_residential;
                    $postVal['how_many_commercial']              = $enquiryDetail->how_many_commercial;
                    $postVal['total_value']                      = $enquiryDetail->total_value;
                    $postVal['balance_outstanding']              = $enquiryDetail->balance_outstanding;
                    $postVal['net_income']                        = $enquiryDetail->net_income;

                    //===========security===========
                    $postVal['add_security_address']    = $enquiryDetail->add_security_address;
                    $postVal['add_security_postcode']   = $enquiryDetail->add_security_postcode;
                    $postVal['security_current_value']  = $enquiryDetail->security_current_value;
                    $postVal['outstanding_balance']     = $enquiryDetail->outstanding_balance;
                    $postVal['rental_income']           = $enquiryDetail->rental_income;
                    $postVal['history_info']            = $enquiryDetail->history_info;
                    $postVal['summary_info']            = $enquiryDetail->summary_info;
                    $postVal['personal_saving']         = $enquiryDetail->personal_saving;
                    $postVal['amount']                  = $enquiryDetail->amount;
                    $postVal['gift']                    = $enquiryDetail->gift;
                    $postVal['gift_amount']             = $enquiryDetail->gift_amount;
                    $postVal['explain_know_donor']      = $enquiryDetail->explain_know_donor;
                    $postVal['loan']                    = $enquiryDetail->loan;
                    $postVal['source_loan_amount']      = $enquiryDetail->source_loan_amount;
                    $postVal['providing_loan']          = $enquiryDetail->providing_loan;
                    $postVal['monthly_payment']         = $enquiryDetail->monthly_payment;
                    $postVal['source_term_loan']        = $enquiryDetail->source_term_loan;



                    $enquiryDB=new Enquiry();
                    $save=$enquiryDB->save($postVal);
                    if($save){
                        $leadApp=LeadApplication::find(array('conditions'=>"lead_id='".$allPost['leadid']."'", 'limit' => 1));
                        if(count($leadApp)>0){
                            $sessionID=$this->session->get('sessUserID');
                            $allPost["posted_by"]           = $sessionID;
                            $allPost["lead_id"]             = $enquiryDB->id;
                            $allPost["pd_title"]            = $leadApp[0]->pd_title;
                            $allPost["pd_fullname"]         = $leadApp[0]->pd_fullname;
                            $allPost["pd_dob"]              = $leadApp[0]->pd_dob;
                            $allPost["pd_nationality"]      = $leadApp[0]->pd_nationality;
                            $allPost["pd_current_address"]  = $leadApp[0]->pd_current_address;
                            $allPost["pd_mobile_number"]    = $leadApp[0]->pd_mobile_number;
                            $allPost["pd_email"]            = $leadApp[0]->pd_email;
                            $allPost["pd_phone_no"]         = $leadApp[0]->pd_phone_no;
                            $allPost["pd_residentialstatus"]= $leadApp[0]->pd_residentialstatus;
                            $allPost["loan_amt_required"]   = $leadApp[0]->loan_amt_required;
                            $allPost["ltv_required"]        = $leadApp[0]->ltv_required;
                            $allPost["term_required"]       = $leadApp[0]->term_required;
                            $allPost['pd_residentialstatus']= $leadApp[0]->pd_residentialstatus;
                            $allPost['pd_applicanttype']    = $leadApp[0]->pd_applicanttype;

                            $allPost['pd_value']            = $leadApp[0]->pd_value;
                            $allPost['pd_balance']          = $leadApp[0]->pd_balance;
                            $allPost['pd_lender']           = $leadApp[0]->pd_lender;

                            $allPost['created']             = date("Y-m-d H:i:s", strtotime("+60 minutes"));

                            //echo "<pre>";print_r($allPost);exit;
                            $leadAppDb= new LeadApplication();
                            $saveData=$leadAppDb->save($allPost);
                            if($saveData){
                                /*foreach ($leadAppDb->getMessages() as $message) {
                                    echo $message->getMessage(), "<br/>";
                                }*/
                            }
                        }

                        $quickQuoteDetail=QuickQuote::find(array('conditions' => "lead_id='".$allPost['leadid']."'", 'limit' => 1));
                        if(count($quickQuoteDetail)>0){
                            $quoteData['lead_id']            = $enquiryDB->id;
                            $quoteData['product']            = $quickQuoteDetail[0]->product;
                            $quoteData['application_type']   = $quickQuoteDetail[0]->application_type;
                            $quoteData['purchase_price']     = $quickQuoteDetail[0]->purchase_price;
                            $quoteData['amount_required']    = $quickQuoteDetail[0]->amount_required;
                            $quoteData['ltv']                = $quickQuoteDetail[0]->ltv;
                            $quoteData['quoteid']            = $quickQuoteDetail[0]->quoteid;
                            $quoteData['borrowername']       = $quickQuoteDetail[0]->borrowername;
                            $quoteData['term']               = $quickQuoteDetail[0]->term;
                            $quoteData['created']            = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $quickQuoteDB= new QuickQuote();
                            $saveData=$quickQuoteDB->save($quoteData);
                        }
                        $securityAdditionalDetail=SecurityAdditionalAddress::find(array('conditions' => "lead_id='".$allPost['leadid']."'", 'limit' => 1));
                        if(count($securityAdditionalDetail)>0){
                            foreach($securityAdditionalDetail as $securityAdditionalDt){
                                $securityAdditionalData['lead_id']                        = $enquiryDB->id;
                                $securityAdditionalData['add_security_address']           = $securityAdditionalDt->add_security_address;
                                $securityAdditionalData['add_security_postcode']          = $securityAdditionalDt->add_security_postcode;
                                $securityAdditionalData['security_current_value']         = $securityAdditionalDt->security_current_value;
                                $securityAdditionalData['outstanding_balance']            = $securityAdditionalDt->outstanding_balance;
                                $securityAdditionalData['rental_income']                  = $securityAdditionalDt->rental_income;
                                $securityAdditionalData['security_tenure']                = $securityAdditionalDt->security_tenure;
                                $securityAdditionalData['security_leasehold_remain_year'] = $securityAdditionalDt->security_leasehold_remain_year;
                                $securityAdditionalData['term']                           = $securityAdditionalDt->term;
                                $securityAdditionalData['created']                        = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                $securityAdditionalDB                                     = new SecurityAdditionalAddress();
                                $saveData                                                 = $securityAdditionalDB->save($securityAdditionalData);
                            }
                        }
                        echo 1;
                    }else{
                        echo 2;
                    }
                }
            }

        }
        exit();
    }
    public function changestatusAction($id='', $status=0){
        //echo $status;exit;
        $response = new \Phalcon\Http\Response();
        if($this->request->isPost())
        {
            $allPost=$this->request->getPost();
            $psql="update Users set is_active='".$allPost['status']."' where id='".$allPost['userid']."'";

            $updateStatus=$this->modelsManager->executeQuery($psql);
            if($updateStatus)
            {
                //======Loan Book Add functionality start===========
                if($allPost['status']==3){

                    $termTypeArr=array('1'=>'1 month','2'=>'2 months','3'=>'3 months','4'=>'4 months','5'=>'5 months','6'=>'6 months','7'=>'7 months','8'=>'8 months','9'=>'9 months','10'=>'10 months','11'=>'11 months','12'=>'12 months','13'=>'13 months','14'=>'14 months','15'=>'15 months','16'=>'16 months','17'=>'17 months','18'=>'18 months','19'=>'19 months','20'=>'20 months','21'=>'21 months','22'=>'22 months','23'=>'23 months','24'=>'24 months', 33 => '25 Months', 34 => '26 Months', 35 => '27 Months', 36 => '28 Months', 37 => '29 Months', 38 => '30 Months', 39 => '31 Months', 40 => '32 Months', 41 => '33 Months', 42 => '34 Months', 43 => '35 Months', 44 => '36 Months', 45 => '37 Months', 46 => '38 Months', 47 => '39 Months', 48 => '40 Months', '25' => '3 Years', '26' => '4 Years', '27' => '5 Years', '28' => '6 Years', '29' => '7 Years', '30' => '8 Years', '31' => '9 Years', '32' => '10 Years');

                   $userDetail=Users::findFirst(array('conditions' => "id=".$allPost['userid']));
                    if($userDetail->lead_id){
                        $enquiryDetail=Enquiry::findFirst(array('conditions' => "id=".$userDetail->lead_id));
                        $loanbookChkDetail=Loanbook::find(array('conditions' => "lead_id='".$enquiryDetail->first_name."'"));
                        if(count($loanbookChkDetail)<=0){
                            $enquiryDetail=Enquiry::findFirst(array('conditions' => "id=".$userDetail->lead_id));
                            if($enquiryDetail->id){
                                $loanBookData['property_address']=$enquiryDetail->security_address;
                                $loanBookData['advisor_id']=$this->session->get('sessUserID');
                                $loanBookData['advisor_of']=$enquiryDetail->advisor_id;
                                $loanBookData['lender_id']=$enquiryDetail->approve_by_lender;
                                $loanBookData['lead_id']=stripslashes($enquiryDetail->first_name);
                                $chargeID=$enquiryDetail->product;
                                $chargeDetail=Charges::findFirst(array('conditions' => "id='".$chargeID."'"));
                                $chargeName= stripslashes($chargeDetail->charge_name);
                                $loanBookData['product']=$chargeName;

                                //------------gross price and proc price-------
                                if($enquiryDetail->purpose=="Purchase" && $enquiryDetail->product!=3){
                                    $loanBookData['gross_loan']="£ ".number_format($enquiryDetail->purchase_price, 2);
                                    $loanBookData['proc']="£ ".number_format($enquiryDetail->amount_required, 2);
                                    $loanBookData['broker']="£ 0";
                                    $loanBookData['term']=$termTypeArr[$enquiryDetail->term_required];


                                }else if($enquiryDetail->purpose=="Refinance" && $enquiryDetail->product!=3){
                                    $loanBookData['gross_loan']="£ ".number_format($enquiryDetail->original_purchase_price, 2);
                                    $loanBookData['proc']="£ ".number_format($enquiryDetail->fin_amount_required, 2);
                                    $loanBookData['broker']="£ 0";
                                    $loanBookData['term']=$termTypeArr[$enquiryDetail->fin_term_required];
                                }else if($enquiryDetail->purpose=="Purchase" && $enquiryDetail->product==3){
                                    $loanBookData['gross_loan']="£ ".number_format($enquiryDetail->dev_pur_purchase_price, 2);
                                    $loanBookData['proc']="£ ".number_format($enquiryDetail->dev_pur_loan_amt_required, 2);
                                    $loanBookData['broker']="£ 0";
                                    $loanBookData['term']=$enquiryDetail->total_term;

                                }else if($enquiryDetail->purpose=="Refinance" && $enquiryDetail->product==3){
                                    $loanBookData['gross_loan']="£ ".number_format($enquiryDetail->dev_fin_ori_purchase_price, 2);
                                    $loanBookData['proc']="£ ".number_format($enquiryDetail->dev_pur_loan_amt_required, 2);
                                    $loanBookData['broker']="£ 0";
                                    $loanBookData['term']=$termTypeArr[$enquiryDetail->dev_fin_build_term];
                                }
                                //------------End gross price and proc price---
                                $loanBookData['is_active']=1;
                                $loanBookData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                //print_r($loanBookData); exit();

                                //--------Save and mail functionality-------------
                                $loanbookDb= new Loanbook();
                                $saveloanbook=$loanbookDb->save($loanBookData);
                                if($saveloanbook){

                                    //=======Save track report========
                                    $trackData['track_for']='loanbookadd';
                                    $trackData['userid']=$this->session->get('sessUserID');
                                    $trackData['track_save_id']=$loanbookDb->id;
                                    $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                                    $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                                    $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                    $trackClickSave = new TrackClickSave();
                                    $saveTrack=$trackClickSave->save($trackData);

                                    //=======Save track report End========

                                    //==========Mail Confirmation==========
                                    $lenderdetail=Users::findFirst(array('conditions' => "id=".$loanBookData['lender_id']));
                                    //$leadDetail=Enquiry::findFirst(array('conditions' => "id=".$loanBookData['lead_id']));
                                    $advisordetail=Users::findFirst(array('conditions' => "id=".$loanBookData['advisor_id']));
                                    $detail=" <table>
                                            <tr>
                                            <td><strong>Lender:</strong>".stripslashes($lenderdetail->first_name)."</td>
                                            </tr>
                                            <tr>
                                            <td><strong>Borrower:</strong>".trim(stripslashes($loanBookData['lead_id']))."</td>
                                            </tr>
                                            <tr>
                                            <td><strong>Product:</strong>".stripslashes($loanBookData['product'])."</td>
                                            </tr>
                                            <tr>
                                            <td><strong>Gross Loan:</strong>".stripslashes($loanBookData['gross_loan'])."</td>
                                            </tr>
                                            <tr>
                                            <td><strong>Proc:</strong>".stripslashes($loanBookData['proc'])."</td>
                                            </tr>
                                            <tr>
                                            <td><strong>Broker:</strong>".stripslashes($loanBookData['broker'])."</td>
                                            </tr>
                                            <tr>
                                            <td><strong>Completion:</strong></td>
                                            </tr>
                                            <tr>
                                            <td><strong>Redemption:</strong></td>
                                            </tr>
                                            <tr>
                                            <td><strong>Term:</strong>".stripslashes($loanBookData['term'])."</td>
                                            </tr>
                                            </table>";

                                    $mailContent=UIElements::bapCustUniGetMailText(18);
                                    $siteAdmin = Sitesetting::findFirst(array("id=1"));
                                    $amsg=$mailContent['body'];
                                    $subject=$mailContent['subject'];
                                    $amsg=str_replace("{LoanBookDetail}", $detail, $amsg);
                                    $amsg=str_replace("{AdvisorName}", stripslashes($advisordetail->first_name), $amsg);

                                    $sentAmail =UIElements::sendEmail($siteAdmin->admin_mail_id, $subject, $amsg, $advisordetail->email_id);
                                    //==========Mail Confirmation to Super Admin====
                                }
                                //--------Save and mail functionality end---------

                            }
                        }
                    }
                }
                //===========Loan Book add end here=======

                echo 1;
            }
            else
            {
                echo 2;
            }
        }
        exit();
    }
    public function calculationAction($leadid=''){
        $response = new \Phalcon\Http\Response();
        if($leadid==''){
            return $response->redirect('dashboard/leads');
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            //print_r($allPost); exit();
            if($this->request->getPost('clearval')==0 ){
                $developmentCalculationDb= new DevelopmentCalculation();
                $save=$developmentCalculationDb->save($allPost);
                if($save){
                    $this->flashSession->success("Calculation Saved successfully.");
                }else{
                    $this->flashSession->error("Calculation Saving Failed.");
                }
            }
        }
        $developmentCal=DevelopmentCalculation::find(array('conditions'=>"lead_id=".$leadid, 'limit' => 1))->toArray();
        if(count($developmentCal)>0){


            if($this->request->isPost() && $this->request->getPost('clearval')==1 ){
                unset($_POST);
            }else if($this->request->isPost() && $this->request->getPost('clearval')==0 ){
                $_POST=$developmentCal[0];
            }else{
                $_POST=$developmentCal[0];
            }
        }
        $this->view->setVar('lead_id', $leadid);
    }
    public function calculationprintAction($leadid=''){
        $response = new \Phalcon\Http\Response();
        if($leadid==''){
            return $response->redirect('dashboard/leads');
        }
         $developmentCal=DevelopmentCalculation::find(array('conditions'=>"lead_id=".$leadid, 'limit' => 1))->toArray();
        if(count($developmentCal)>0){
            $_POST=$developmentCal[0];
        }
        $this->view->setVar('lead_id', $leadid);
    }
     /**
    * valuation list and add function
    * Action Name: customervaluationAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 30-05-2019
    **/
    public function customervaluationAction($customerid=''){
        $response = new \Phalcon\Http\Response();
        if($customerid==''){
            if($this->request->get('pagefrom') && $this->request->get('pagefrom')=='complete'){
                return $response->redirect("dashboard/completedclient");
            }else{
                return $response->redirect("dashboard/customers");
            }
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

            if($this->request->hasFiles()== true)
            {
                $baselocation="uploads/userprofile/";

                $arrfile=$this->request->getUploadedFiles();
                if(!empty($arrfile) && $arrfile[0]->getError()!=4){
                    $file=$arrfile[0];
                   // print_r($file);exit();
                    $filename=time().$file->getName();
                    $file->moveTo($baselocation.$filename);

                }else{
                    $filename='';
                }
            }
            else
            {
                $filename='';
            }
            $allPost['attachments']=$filename;
            $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            $allPost['customer_id']=$customerid;
            $customerDetailsDB=new CustomerDetails();
            $save=$customerDetailsDB->save($allPost);
            if($save){
                $this->flashSession->success("Saved Successfully.");
            }else{
                $this->flashSession->success("Saving Failed.");
            }
        }
        /* List Start from here*/
        $whr=array("submit_type='valuation' and customer_id=".$customerid);
        $order="id desc";
        $where="";
        if(!empty($whr)){
            $where=" where ".implode(" and ", $whr);
        }
        //===========pagination===========
        $paged=$this->dispatcher->getParam("paged");
        $page = (int) (!isset($paged) ? 1 : $paged);
        $page = ($page == 0 ? 1 : $page);
        $perpage =20;
        $startpoint = ($page * $perpage) - $perpage;

        $totrecord=CustomerDetails::findAll("select * from customer_details".$where." order by ".$order);
        $valuationRes=CustomerDetails::findAll("select * from customer_details".$where." order by ".$order." limit ".$startpoint.", ".$perpage);

        //================================

        //$adminRes=AdminUsers::findByAll()->toArray();
        $this->view->setVar('customerid', $customerid);
        $this->view->setVar('valuationRes', $valuationRes);
        $this->view->setVar('totrecord', count($totrecord));
        $this->view->setVar('perpage', $perpage);
        $this->view->setVar('paged', $paged);
        $this->view->setVar('startpoint', $startpoint);
    }
     /**
    * valuation delete function
    * Action Name: customervaldelAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 30-05-2019
    **/
    public function customervaldelAction($customerid="", $id=''){
        $response = new \Phalcon\Http\Response();
        if($id==''){
            if($customerid!=''){
                return $response->redirect("dashboard/customervaluation/".$customerid);
            }else{
                return $response->redirect("dashboard/customers");
            }

        }
        $customerDetail=CustomerDetails::findFirst(array('conditions' => "id=".$id));
        @unlink("uploads/userprofile/".$customerDetail->attachments);
        $delete=$this->modelsManager->executeQuery("delete from CustomerDetails where id=".$id);
        if($delete){
            return $response->redirect("dashboard/customervaluation/".$customerid);
        }
    }
     /**
    * Underwrite list and add function
    * Action Name: customerunderwriteAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 31-05-2019
    **/
    public function customerunderwriteAction($customerid=''){
        $response = new \Phalcon\Http\Response();
        if($customerid==''){
            if($this->request->get('pagefrom') && $this->request->get('pagefrom')=='complete'){
                return $response->redirect("dashboard/completedclient");
            }else{
                return $response->redirect("dashboard/customers");
            }

        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

            if($this->request->hasFiles()== true)
            {
                $baselocation="uploads/userprofile/";

                $arrfile=$this->request->getUploadedFiles();
                if(!empty($arrfile) && $arrfile[0]->getError()!=4){
                    $file=$arrfile[0];
                   // print_r($file);exit();
                    $filename=time().$file->getName();
                    $file->moveTo($baselocation.$filename);

                }else{
                    $filename='';
                }
            }
            else
            {
                $filename='';
            }
            $allPost['attachments']=$filename;
            $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            $allPost['customer_id']=$customerid;
            $customerDetailsDB=new CustomerDetails();
            $save=$customerDetailsDB->save($allPost);
            if($save){
                $this->flashSession->success("Saved Successfully.");
            }else{
                $this->flashSession->success("Saving Failed.");
            }
        }
        /* List Start from here*/
        $whr=array("submit_type='underwrite' and customer_id=".$customerid);
        $order="id desc";
        $where="";
        if(!empty($whr)){
            $where=" where ".implode(" and ", $whr);
        }
        //===========pagination===========
        $paged=$this->dispatcher->getParam("paged");
        $page = (int) (!isset($paged) ? 1 : $paged);
        $page = ($page == 0 ? 1 : $page);
        $perpage =20;
        $startpoint = ($page * $perpage) - $perpage;

        $totrecord=CustomerDetails::findAll("select * from customer_details".$where." order by ".$order);
        $valuationRes=CustomerDetails::findAll("select * from customer_details".$where." order by ".$order." limit ".$startpoint.", ".$perpage);

        //================================

        //$adminRes=AdminUsers::findByAll()->toArray();
        $this->view->setVar('customerid', $customerid);
        $this->view->setVar('valuationRes', $valuationRes);
        $this->view->setVar('totrecord', count($totrecord));
        $this->view->setVar('perpage', $perpage);
        $this->view->setVar('paged', $paged);
        $this->view->setVar('startpoint', $startpoint);
    }
     /**
    * Underwrite delete function
    * Action Name: customerunderwritedelAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 31-05-2019
    **/
    public function customerunderwritedelAction($customerid="", $id=''){
        $response = new \Phalcon\Http\Response();
        if($id==''){
            if($customerid!=''){
                return $response->redirect("dashboard/customerunderwrite/".$customerid);
            }else{
                return $response->redirect("dashboard/customers");
            }

        }
        $customerDetail=CustomerDetails::findFirst(array('conditions' => "id=".$id));
        @unlink("uploads/userprofile/".$customerDetail->attachments);
        $delete=$this->modelsManager->executeQuery("delete from CustomerDetails where id=".$id);
        if($delete){
            return $response->redirect("dashboard/customerunderwrite/".$customerid);
        }
    }
      /**
    * Offered list and add function
    * Action Name: customerofferedAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 31-05-2019
    **/
    public function customerofferedAction($customerid=''){
        $response = new \Phalcon\Http\Response();
        if($customerid==''){
            if($this->request->get('pagefrom') && $this->request->get('pagefrom')=='complete'){
                return $response->redirect("dashboard/completedclient");
            }else{
                return $response->redirect("dashboard/customers");
            }

        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

            if($this->request->hasFiles()== true)
            {
                $baselocation="uploads/userprofile/";

                $arrfile=$this->request->getUploadedFiles();
                if(!empty($arrfile) && $arrfile[0]->getError()!=4){
                    $file=$arrfile[0];
                   // print_r($file);exit();
                    $filename=time().$file->getName();
                    $file->moveTo($baselocation.$filename);

                }else{
                    $filename='';
                }
            }
            else
            {
                $filename='';
            }
            $allPost['attachments']=$filename;
            $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            $allPost['customer_id']=$customerid;
            $customerDetailsDB=new CustomerDetails();
            $save=$customerDetailsDB->save($allPost);
            if($save){
                $this->flashSession->success("Saved Successfully.");
            }else{
                $this->flashSession->success("Saving Failed.");
            }
        }
        /* List Start from here*/
        $whr=array("submit_type='offered' and customer_id=".$customerid);
        $order="id desc";
        $where="";
        if(!empty($whr)){
            $where=" where ".implode(" and ", $whr);
        }
        //===========pagination===========
        $paged=$this->dispatcher->getParam("paged");
        $page = (int) (!isset($paged) ? 1 : $paged);
        $page = ($page == 0 ? 1 : $page);
        $perpage =20;
        $startpoint = ($page * $perpage) - $perpage;

        $totrecord=CustomerDetails::findAll("select * from customer_details".$where." order by ".$order);
        $valuationRes=CustomerDetails::findAll("select * from customer_details".$where." order by ".$order." limit ".$startpoint.", ".$perpage);

        //================================

        //$adminRes=AdminUsers::findByAll()->toArray();
        $this->view->setVar('customerid', $customerid);
        $this->view->setVar('valuationRes', $valuationRes);
        $this->view->setVar('totrecord', count($totrecord));
        $this->view->setVar('perpage', $perpage);
        $this->view->setVar('paged', $paged);
        $this->view->setVar('startpoint', $startpoint);
    }
     /**
    * Offered delete function
    * Action Name: customeroffereddelAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 31-05-2019
    **/
    public function customeroffereddelAction($customerid="", $id=''){
        $response = new \Phalcon\Http\Response();
        if($id==''){
            if($customerid!=''){
                return $response->redirect("dashboard/customeroffered/".$customerid);
            }else{
                return $response->redirect("dashboard/customers");
            }

        }
        $customerDetail=CustomerDetails::findFirst(array('conditions' => "id=".$id));
        @unlink("uploads/userprofile/".$customerDetail->attachments);
        $delete=$this->modelsManager->executeQuery("delete from CustomerDetails where id=".$id);
        if($delete){
            return $response->redirect("dashboard/customeroffered/".$customerid);
        }
    }
      /**
    * Legal list and add function
    * Action Name: customerlegalAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 31-05-2019
    **/
    public function customerlegalAction($customerid=''){
        $response = new \Phalcon\Http\Response();
        if($customerid==''){
            if($this->request->get('pagefrom') && $this->request->get('pagefrom')=='complete'){
                return $response->redirect("dashboard/completedclient");
            }else{
                return $response->redirect("dashboard/customers");
            }

        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

            if($this->request->hasFiles()== true)
            {
                $baselocation="uploads/userprofile/";

                $arrfile=$this->request->getUploadedFiles();
                if(!empty($arrfile) && $arrfile[0]->getError()!=4){
                    $file=$arrfile[0];
                   // print_r($file);exit();
                    $filename=time().$file->getName();
                    $file->moveTo($baselocation.$filename);

                }else{
                    $filename='';
                }
            }
            else
            {
                $filename='';
            }
            $allPost['attachments']=$filename;
            $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            $allPost['customer_id']=$customerid;
            $customerDetailsDB=new CustomerDetails();
            $save=$customerDetailsDB->save($allPost);
            if($save){
                $this->flashSession->success("Saved Successfully.");
            }else{
                $this->flashSession->success("Saving Failed.");
            }
        }
        /* List Start from here*/
        $whr=array("submit_type='legal' and customer_id=".$customerid);
        $order="id desc";
        $where="";
        if(!empty($whr)){
            $where=" where ".implode(" and ", $whr);
        }
        //===========pagination===========
        $paged=$this->dispatcher->getParam("paged");
        $page = (int) (!isset($paged) ? 1 : $paged);
        $page = ($page == 0 ? 1 : $page);
        $perpage =20;
        $startpoint = ($page * $perpage) - $perpage;

        $totrecord=CustomerDetails::findAll("select * from customer_details".$where." order by ".$order);
        $valuationRes=CustomerDetails::findAll("select * from customer_details".$where." order by ".$order." limit ".$startpoint.", ".$perpage);

        //================================

        //$adminRes=AdminUsers::findByAll()->toArray();
        $this->view->setVar('customerid', $customerid);
        $this->view->setVar('valuationRes', $valuationRes);
        $this->view->setVar('totrecord', count($totrecord));
        $this->view->setVar('perpage', $perpage);
        $this->view->setVar('paged', $paged);
        $this->view->setVar('startpoint', $startpoint);
    }
     /**
    * Legal delete function
    * Action Name: customerlegaldelAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 31-05-2019
    **/
    public function customerlegaldelAction($customerid="", $id=''){
        $response = new \Phalcon\Http\Response();
        if($id==''){
            if($customerid!=''){
                return $response->redirect("dashboard/customerlegal/".$customerid);
            }else{
                return $response->redirect("dashboard/customers");
            }

        }
        $customerDetail=CustomerDetails::findFirst(array('conditions' => "id=".$id));
        @unlink("uploads/userprofile/".$customerDetail->attachments);
        $delete=$this->modelsManager->executeQuery("delete from CustomerDetails where id=".$id);
        if($delete){
            return $response->redirect("dashboard/customerlegal/".$customerid);
        }
    }

      /**
    * Complete list and add function
    * Action Name: customercompleteAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 31-05-2019
    **/
    public function customercompleteAction($leadid=''){
        $response = new \Phalcon\Http\Response();
        if($customerid==''){
            if($this->request->get('pagefrom') && $this->request->get('pagefrom')=='complete'){
                return $response->redirect("dashboard/completedclient");
            }else{
                return $response->redirect("dashboard/customers");
            }

        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

            if($this->request->hasFiles()== true)
            {
                $baselocation="uploads/userprofile/";

                $arrfile=$this->request->getUploadedFiles();
                if(!empty($arrfile) && $arrfile[0]->getError()!=4){
                    $file=$arrfile[0];
                   // print_r($file);exit();
                    $filename=time().$file->getName();
                    $file->moveTo($baselocation.$filename);

                }else{
                    $filename='';
                }
            }
            else
            {
                $filename='';
            }
            $allPost['attachments']=$filename;
            $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            $allPost['customer_id']=$customerid;
            $customerDetailsDB=new CustomerDetails();
            $save=$customerDetailsDB->save($allPost);
            if($save){
                //======Loan Book Add functionality start==========
                $termTypeArr=array('1'=>'1 month','2'=>'2 months','3'=>'3 months','4'=>'4 months','5'=>'5 months','6'=>'6 months','7'=>'7 months','8'=>'8 months','9'=>'9 months','10'=>'10 months','11'=>'11 months','12'=>'12 months','13'=>'13 months','14'=>'14 months','15'=>'15 months','16'=>'16 months','17'=>'17 months','18'=>'18 months','19'=>'19 months','20'=>'20 months','21'=>'21 months','22'=>'22 months','23'=>'23 months','24'=>'24 months', 33 => '25 Months', 34 => '26 Months', 35 => '27 Months', 36 => '28 Months', 37 => '29 Months', 38 => '30 Months', 39 => '31 Months', 40 => '32 Months', 41 => '33 Months', 42 => '34 Months', 43 => '35 Months', 44 => '36 Months', 45 => '37 Months', 46 => '38 Months', 47 => '39 Months', 48 => '40 Months', '25' => '3 Years', '26' => '4 Years', '27' => '5 Years', '28' => '6 Years', '29' => '7 Years', '30' => '8 Years', '31' => '9 Years', '32' => '10 Years');

               $userDetail=Users::findFirst(array('conditions' => "id=".$customerid));
                if($userDetail->lead_id){
                    $loanbookChkDetail=Loanbook::find(array('conditions' => "lead_id='".$userDetail->lead_id."'"));
                    if(count($loanbookChkDetail)<=0){
                        $enquiryDetail=Enquiry::findFirst(array('conditions' => "id=".$userDetail->lead_id));
                        if($enquiryDetail->id){
                            $loanBookData['property_address']=$enquiryDetail->security_address;
                            $loanBookData['advisor_id']=$this->session->get('sessUserID');
                            $loanBookData['advisor_of']=$enquiryDetail->advisor_id;
                            $loanBookData['lender_id']=$enquiryDetail->approve_by_lender;
                            $loanBookData['lead_id']=$enquiryDetail->first_name;
                            $chargeID=$enquiryDetail->product;
                            $chargeDetail=Charges::findFirst(array('conditions' => "id='".$chargeID."'"));
                            $chargeName= stripslashes($chargeDetail->charge_name);
                            $loanBookData['product']=$chargeName;

                            //------------gross price and proc price-------
                            if($enquiryDetail->purpose=="Purchase" && $enquiryDetail->product!=3){
                                $loanBookData['gross_loan']="£ ".number_format($enquiryDetail->purchase_price, 2);
                                $loanBookData['proc']="£ ".number_format($enquiryDetail->amount_required, 2);
                                $loanBookData['broker']="£ 0";
                                $loanBookData['term']=$termTypeArr[$enquiryDetail->term_required];


                            }else if($enquiryDetail->purpose=="Refinance" && $enquiryDetail->product!=3){
                                $loanBookData['gross_loan']="£ ".number_format($enquiryDetail->original_purchase_price, 2);
                                $loanBookData['proc']="£ ".number_format($enquiryDetail->fin_amount_required, 2);
                                $loanBookData['broker']="£ 0";
                                $loanBookData['term']=$termTypeArr[$enquiryDetail->fin_term_required];
                            }else if($enquiryDetail->purpose=="Purchase" && $enquiryDetail->product==3){
                                $loanBookData['gross_loan']="£ ".number_format($enquiryDetail->dev_pur_purchase_price, 2);
                                $loanBookData['proc']="£ ".number_format($enquiryDetail->dev_pur_loan_amt_required, 2);
                                $loanBookData['broker']="£ 0";
                                $loanBookData['term']=$enquiryDetail->total_term;

                            }else if($enquiryDetail->purpose=="Refinance" && $enquiryDetail->product==3){
                                $loanBookData['gross_loan']="£ ".number_format($enquiryDetail->dev_fin_ori_purchase_price, 2);
                                $loanBookData['proc']="£ ".number_format($enquiryDetail->dev_pur_loan_amt_required, 2);
                                $loanBookData['broker']="£ 0";
                                $loanBookData['term']=$termTypeArr[$enquiryDetail->dev_fin_build_term];
                            }
                            //------------End gross price and proc price---
                            $loanBookData['is_active']=1;
                            $loanBookData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            //print_r($loanBookData); exit();

                            //--------Save and mail functionality-------------
                            $loanbookDb= new Loanbook();
                            $saveloanbook=$loanbookDb->save($loanBookData);
                            if($saveloanbook){

                                //=======Save track report========
                                $trackData['track_for']='loanbookadd';
                                $trackData['userid']=$this->session->get('sessUserID');
                                $trackData['track_save_id']=$loanbookDb->id;
                                $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                                $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                                $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                $trackClickSave = new TrackClickSave();
                                $saveTrack=$trackClickSave->save($trackData);

                                //=======Save track report End========

                                //==========Mail Confirmation==========
                                $lenderdetail=Users::findFirst(array('conditions' => "id=".$loanBookData['lender_id']));
                                //$leadDetail=Enquiry::findFirst(array('conditions' => "id=".$loanBookData['lead_id']));
                                $advisordetail=Users::findFirst(array('conditions' => "id=".$loanBookData['advisor_id']));
                                $detail=" <table>
                                        <tr>
                                        <td><strong>Lender:</strong>".stripslashes($lenderdetail->first_name)."</td>
                                        </tr>
                                        <tr>
                                        <td><strong>Borrower:</strong>".trim(stripslashes($loanBookData['lead_id']))."</td>
                                        </tr>
                                        <tr>
                                        <td><strong>Product:</strong>".stripslashes($loanBookData['product'])."</td>
                                        </tr>
                                        <tr>
                                        <td><strong>Gross Loan:</strong>".stripslashes($loanBookData['gross_loan'])."</td>
                                        </tr>
                                        <tr>
                                        <td><strong>Proc:</strong>".stripslashes($loanBookData['proc'])."</td>
                                        </tr>
                                        <tr>
                                        <td><strong>Broker:</strong>".stripslashes($loanBookData['broker'])."</td>
                                        </tr>
                                        <tr>
                                        <td><strong>Completion:</strong></td>
                                        </tr>
                                        <tr>
                                        <td><strong>Redemption:</strong></td>
                                        </tr>
                                        <tr>
                                        <td><strong>Term:</strong>".stripslashes($loanBookData['term'])."</td>
                                        </tr>
                                        </table>";

                                $mailContent=UIElements::bapCustUniGetMailText(18);
                                $siteAdmin = Sitesetting::findFirst(array("id=1"));
                                $amsg=$mailContent['body'];
                                $subject=$mailContent['subject'];
                                $amsg=str_replace("{LoanBookDetail}", $detail, $amsg);
                                $amsg=str_replace("{AdvisorName}", stripslashes($advisordetail->first_name), $amsg);

                                $sentAmail =UIElements::sendEmail($siteAdmin->admin_mail_id, $subject, $amsg, $advisordetail->email_id);
                                //==========Mail Confirmation to Super Admin====
                            }
                            //--------Save and mail functionality end---------

                        }
                    }
                }
                //===========Loan Book add end here=======
                $this->flashSession->success("Saved Successfully.");
            }else{
                $this->flashSession->success("Saving Failed.");
            }
        }
        /* List Start from here*/
        $whr=array("submit_type='complete' and customer_id=".$customerid);
        $order="id desc";
        $where="";
        if(!empty($whr)){
            $where=" where ".implode(" and ", $whr);
        }
        //===========pagination===========
        $paged=$this->dispatcher->getParam("paged");
        $page = (int) (!isset($paged) ? 1 : $paged);
        $page = ($page == 0 ? 1 : $page);
        $perpage =20;
        $startpoint = ($page * $perpage) - $perpage;

        $totrecord=CustomerDetails::findAll("select * from customer_details".$where." order by ".$order);
        $valuationRes=CustomerDetails::findAll("select * from customer_details".$where." order by ".$order." limit ".$startpoint.", ".$perpage);

        //================================

        //$adminRes=AdminUsers::findByAll()->toArray();
        $this->view->setVar('customerid', $customerid);
        $this->view->setVar('valuationRes', $valuationRes);
        $this->view->setVar('totrecord', count($totrecord));
        $this->view->setVar('perpage', $perpage);
        $this->view->setVar('paged', $paged);
        $this->view->setVar('startpoint', $startpoint);
    }
       /**
    * Complete add function
    * Action Name: customercompleteAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 05-12-2019
    **/
    public function leadcompleteAction($leadid=''){
        $response = new \Phalcon\Http\Response();
        if($leadid==''){
            return $response->redirect("dashboard/enquiry");

        }
        $date=date("Y-m-d");
        $update=$this->modelsManager->executeQuery("update Enquiry set is_active=2, complete_date='".$date."' where id=".$leadid);
        if($update){
            $this->flashSession->success("lead completed successfully");
        }else{
            $this->flashSession->error("Lead completing failed");
        }
        return $response->redirect("dashboard/enquirydetail/".$leadid);
        exit();
    }
     /**
    * Complete delete function
    * Action Name: customercompletedelAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 31-05-2019
    **/
    public function customercompletedelAction($customerid="", $id=''){
        $response = new \Phalcon\Http\Response();
        if($id==''){
            if($customerid!=''){
                return $response->redirect("dashboard/customercomplete/".$customerid);
            }else{
                return $response->redirect("dashboard/customers");
            }

        }
        $customerDetail=CustomerDetails::findFirst(array('conditions' => "id=".$id));
        @unlink("uploads/userprofile/".$customerDetail->attachments);
        $delete=$this->modelsManager->executeQuery("delete from CustomerDetails where id=".$id);
        if($delete){
            return $response->redirect("dashboard/customercomplete/".$customerid);
        }
    }
    /**
* Customer detail delete function
* Action Name: customerdatadeleteAction
* Author By: Chittaranjan Sahoo
* Created Date: 30-05-2019
**/
    public function customerdatadeleteAction(){
        $sucMsg=0;
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

            if(isset($allPost['enqChk']) && !empty($allPost['enqChk'])){
                foreach($allPost['enqChk'] as $singLeadid){
                    $customerDetail=CustomerDetails::findFirst(array('conditions' => "id=".$singLeadid));
                    @unlink("uploads/userprofile/".$customerDetail->attachments);
                    $delete=$this->modelsManager->executeQuery("delete from CustomerDetails where id='".$singLeadid."'");
                    if($delete){
                        $sucMsg=1;
                    }
                }
            }
        }
        if($sucMsg==1){
            echo 1;
        }else{
            echo 2;
        }
        exit();
    }

    /**
    * Look Up Action To search API data
    * Action Name: lookupAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 11-07-2019
    **/
    public function lookupAction(){
        $response = new \Phalcon\Http\Response();
        if(UIElements::bapCustUniNewAdvChk()==1){
            return $response->redirect('dashboard');
        }

        if($this->request->isPost()){
            $allPost=$this->request->getPost();


            //echo $allPost['data_from']; exit();
            $landTitles=array();
            $this->session->set('data_from', $allPost['data_from']);
            if($allPost['data_from']=='land_title'){

                  $url = 'https://api.propertydata.co.uk/land-titles';
                  /*$data = array (
                  'key'=> "E2BXNLA1M1",
                  'postcode' => $allPost['post_code'],
                  );*/
                  $data = array (
                  'key'=> "CVBISWBHBD",
                  'postcode' => $allPost['post_code'],
                  );
                  $landTitles=UIElements::bapcustUnipriceCrawl($url, $data);
                  //echo "<pre>";print_r($landTitles);exit;
                  $this->view->setVar('landTitles', $landTitles);

            }
            $titleInfos=array();
            if($allPost['data_from']=='title_info'){
                $url = 'https://api.propertydata.co.uk/title-info';
                /*$data = array (
                'key'=> "E2BXNLA1M1",
                'title' => $allPost['land_title_number'],
                );*/
                $data = array (
                  'key'=> "CVBISWBHBD",
                  'title' => $allPost['land_title_number'],
                  );
                $titleInfos=UIElements::bapcustUnipriceCrawl($url, $data);
                // echo "<pre>";print_r($titleInfos);exit;
                $this->view->setVar('titleInfos', $titleInfos);
            }
            //echo "<pre>";print_r($landTitles);exit();

        }
    }
/**
* Enquiry Action To Manage HZA leads
* Action Name: enquiryAction
* Author By: Subhra Sahoo
* Created Date: 14-10-2019
**/
public function enquiryAction(){
    //echo date("Y-m-d H:i:s", strtotime("+60 minutes")); exit();
    $response = new \Phalcon\Http\Response();
    $allParam=$this->dispatcher->getParams();
    $sessionID=$this->session->get('sessUserID');
    $joinArr=array();
    if($this->session->get('sessUserType')<=0){
        $whr=array("(enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL)");
    }else{
        $sessionID=$this->session->get('sessUserID');
        $userDetail=Users::findFirst(array('conditions' => "id='".$sessionID."'"));
        $whr=array("enquiry.user_id='".$sessionID."' and enquiry.approve_lead=1 and enquiry.approve_by_lender>0 and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL)");
    }
    // and (enquiry.is_completed=0 or enquiry.is_completed='' or enquiry.is_completed IS NULL)
    //$whr=array("(enquiry.is_completed=0 or enquiry.is_completed='' or enquiry.is_completed IS NULL)");
    array_push($whr, "(enquiry.is_active=1 or enquiry.is_active is NULL)");
    if($this->request->isGet()){
        $allGet=$this->request->get();
        if(isset($allGet['searchtxt']) && $allGet['searchtxt']!=''){
            $srhtxt=$allGet['searchtxt'];
            array_push($whr, "(enquiry.borrower_name like '%".$srhtxt."%' or enquiry.first_name like '%".$srhtxt."%' or enquiry.last_name like '%".$srhtxt."%' or CONCAT(enquiry.first_name, ' ', enquiry.last_name) like '%".$srhtxt."%' or enquiry.borrower_email = '".$srhtxt."' or enquiry.borrower_mob = '".$srhtxt."' or enquiry.postcode = '".$srhtxt."' or enquiry.name_of_comany like '%".$srhtxt."%' or enquiry.borrower_address like '%".$srhtxt."%' or lead_application.pd_fullname like '%".$srhtxt."%' or lead_application.pd_email like '%".$srhtxt."%' or lead_application.pd_phone_no like '%".$srhtxt."%')");
            array_push($joinArr, "left join lead_application on enquiry.id=lead_application.lead_id");
        }
        if(isset($allGet['product']) && $allGet['product']!=''){
            $product=$allGet['product'];
            array_push($whr, "(enquiry.product='".$product."' or enquiry.application_type='".$product."')");
        }
        if(isset($allGet['purpose']) && $allGet['purpose']!=''){
            $purpose=$allGet['purpose'];
            array_push($whr, "enquiry.purpose='".$purpose."'");
        }
        if(isset($allGet['property_type']) && $allGet['property_type']!=''){
            $property_type=$allGet['property_type'];
            array_push($whr, "enquiry.property_type='".$property_type."'");
        }
        if(isset($allGet['refurbishment']) && $allGet['refurbishment']!=''){
            $refurbishment=$allGet['refurbishment'];
            array_push($whr, "enquiry.refurbishment='".$refurbishment."'");
        }
        if(isset($allGet['lead_source']) && $allGet['lead_source']!=''){
            $lead_source=$allGet['lead_source'];
            array_push($whr, "enquiry.lead_source='".$lead_source."' or enquiry.enquiry_source='".$lead_source."'");
        }
        if(isset($allGet['lead_owner']) && $allGet['lead_owner']!=''){
            $lead_owner=$allGet['lead_owner'];
            array_push($whr, "enquiry.assign_advisor='".$lead_owner."'");
        }
        if(isset($allGet['created_by']) && $allGet['created_by']!=''){
            $created_by=$allGet['created_by'];
            array_push($whr, "(enquiry.advisor_id='".$created_by."')");
        }
        if(isset($allGet['modified']) && $allGet['modified']!=''){
            $modified=str_replace("/", "-", $allGet['modified']);
            $modified=date("Y-m-d", strtotime($modified));
            //echo $modified;exit;
            array_push($whr, "date(modified)= '".$modified."'");
        }
        if(isset($allGet['lead_given']) && $allGet['lead_given']!=''){
           // $modified=str_replace("/", "-", $allGet['modified']);
            $lead_given=$allGet['lead_given'];
            array_push($whr, "enquiry.lead_given_by='".$allGet['lead_given']."'");
        }
        if(isset($allGet['address']) && $allGet['address']!=''){
           // $modified=str_replace("/", "-", $allGet['modified']);
            $address=$allGet['address'];
            array_push($whr, "enquiry.security_address like '%".$allGet['address']."%'");
        }
        if(isset($allGet['postcode']) && $allGet['postcode']!=''){
           // $modified=str_replace("/", "-", $allGet['modified']);
            $postcode=$allGet['postcode'];
            array_push($whr, "enquiry.security_postcode='".$allGet['postcode']."'");
        }
        if(isset($allGet['case_category']) && $allGet['case_category']!=''){
            array_push($joinArr, "left join workflow_task on enquiry.id=workflow_task.lead_id");
            array_push($whr, "workflow_task.case_category='".$allGet['case_category']."'");
        }
        if(isset($allGet['work_experience']) && $allGet['work_experience']!=''){
            array_push($joinArr, "left join workflow_task as wt on enquiry.id=wt.lead_id");
            array_push($whr, "wt.work_experience='".$allGet['work_experience']."'");
        }
    }
    $order="id desc";
    // if(isset($allGet['sorting']) && $allGet['sorting']!=''){
    //     if(isset($allGet['atype']) && $allGet['atype']=='product'){
    //         array_push($joinArr, "left join charges on charges.id=enquiry.product");
    //         $order="charges.".urldecode($allGet['sorting']);
    //     }else if(isset($allGet['atype']) && $allGet['atype']=='user'){
    //         array_push($joinArr, "left join users on users.id=enquiry.advisor_id");
    //         $order="users.".urldecode($allGet['sorting']);
    //     }else if(isset($allGet['atype']) && $allGet['atype']=='lenduser'){
    //         array_push($joinArr, "left join users on users.id=enquiry.approve_by_lender");
    //         $order="users.".urldecode($allGet['sorting']);
    //     }else{
    //         $order="enquiry.".urldecode($allGet['sorting']);
    //     }
    // }
    $where="";
    if(!empty($whr)){
        $where=" where ".implode(" and ", $whr);
    }
    $joinString="";
    if(!empty($joinArr)){
        $joinString=" ".implode(" ", $joinArr);
    }
    //===========pagination===========
    $paged=$this->dispatcher->getParam("paged");
    $page = (int) (!isset($paged) ? 1 : $paged);
    $page = ($page == 0 ? 1 : $page);
    $perpage =20;
    $startpoint = ($page * $perpage) - $perpage;

    //print_r($grandsum->toArray());exit;
    if(isset($allGet['case_category']) && $allGet['case_category']!=''){
    $totrecord=Enquiry::findAll("select enquiry.id,enquiry.assign_advisor,enquiry.lead_given_by,enquiry.amount_required,enquiry.product,enquiry.application_type,enquiry.note_text,enquiry.name_of_comany,enquiry.borrower_name,enquiry.security_address,enquiry.created,enquiry.modified,workflow_task.case_category from enquiry".$joinString.$where."");
    $leadRes=Enquiry::findAll("select enquiry.id,enquiry.assign_advisor,enquiry.lead_given_by,enquiry.amount_required,enquiry.product,enquiry.application_type,enquiry.note_text,enquiry.name_of_comany,enquiry.borrower_name,enquiry.security_address,enquiry.created,enquiry.modified,workflow_task.case_category from enquiry".$joinString.$where."");
    $grandsum=Enquiry::findAll("select sum(enquiry.amount_required) as grandtot from enquiry".$joinString.$where);
}else if(isset($allGet['work_experience']) && $allGet['work_experience']!=''){
    $totrecord=Enquiry::findAll("select enquiry.id,enquiry.assign_advisor,enquiry.lead_given_by,enquiry.amount_required,enquiry.product,enquiry.application_type,enquiry.note_text,enquiry.name_of_comany,enquiry.borrower_name,enquiry.security_address,enquiry.created,enquiry.modified,wt.work_experience from enquiry".$joinString.$where."");
    $leadRes=Enquiry::findAll("select enquiry.id,enquiry.assign_advisor,enquiry.lead_given_by,enquiry.amount_required,enquiry.product,enquiry.application_type,enquiry.note_text,enquiry.name_of_comany,enquiry.borrower_name,enquiry.security_address,enquiry.created,enquiry.modified,wt.work_experience from enquiry".$joinString.$where."");
    $grandsum=Enquiry::findAll("select sum(enquiry.amount_required) as grandtot from enquiry".$joinString.$where);
}else{
    $totrecord=Enquiry::findAll("select enquiry.id,enquiry.assign_advisor,enquiry.lead_given_by,enquiry.amount_required,enquiry.product,enquiry.application_type,enquiry.note_text,enquiry.name_of_comany,enquiry.borrower_name,enquiry.security_address,enquiry.created,enquiry.modified from enquiry".$joinString.$where."");
    $leadRes=Enquiry::findAll("select enquiry.id,enquiry.assign_advisor,enquiry.lead_given_by,enquiry.amount_required,enquiry.product,enquiry.application_type,enquiry.note_text,enquiry.name_of_comany,enquiry.borrower_name,enquiry.security_address,enquiry.created,enquiry.modified from enquiry".$joinString.$where."");
    $grandsum=Enquiry::findAll("select sum(enquiry.amount_required) as grandtot from enquiry".$joinString.$where);
}

    $this->view->setVar('leadRes', $leadRes);
    $this->view->setVar('totrecord', count($totrecord));
    $this->view->setVar('grandsum', $grandsum);
    $this->view->setVar('perpage', $perpage);
    $this->view->setVar('paged', $paged);
    $this->view->setVar('startpoint', $startpoint);
}

/**
* Enquiry Action To Manage HZA leads
* Action Name: enquiryAction
* Author By: Subhra Sahoo
* Created Date: 14-10-2019
**/
public function enquirytrashAction(){
    //echo date("Y-m-d H:i:s", strtotime("+60 minutes")); exit();
    $response = new \Phalcon\Http\Response();
    $allParam=$this->dispatcher->getParams();
    $sessionID=$this->session->get('sessUserID');
    $joinArr=array();
    $whr=array();
    // and (enquiry.is_completed=0 or enquiry.is_completed='' or enquiry.is_completed IS NULL)
    //$whr=array("(enquiry.is_completed=0 or enquiry.is_completed='' or enquiry.is_completed IS NULL)");
    array_push($whr, "enquiry.is_active=3");
    if($this->request->isGet()){
        $allGet=$this->request->get();
        if(isset($allGet['searchtxt']) && $allGet['searchtxt']!=''){
            $srhtxt=$allGet['searchtxt'];
            array_push($whr, "(enquiry.borrower_name like '%".$srhtxt."%' or enquiry.first_name like '%".$srhtxt."%' or enquiry.last_name like '%".$srhtxt."%' or CONCAT(enquiry.first_name, ' ', enquiry.last_name) like '%".$srhtxt."%' or enquiry.borrower_email = '".$srhtxt."' or enquiry.borrower_mob = '".$srhtxt."' or enquiry.postcode = '".$srhtxt."' or enquiry.name_of_comany like '%".$srhtxt."%' or enquiry.borrower_address like '%".$srhtxt."%' or lead_application.pd_fullname like '%".$srhtxt."%' or lead_application.pd_email like '%".$srhtxt."%' or lead_application.pd_phone_no like '%".$srhtxt."%')");
            array_push($joinArr, "left join lead_application on enquiry.id=lead_application.lead_id");
        }
        if(isset($allGet['product']) && $allGet['product']!=''){
            $product=$allGet['product'];
            array_push($whr, "(enquiry.product='".$product."' or enquiry.application_type='".$product."')");
        }
        if(isset($allGet['purpose']) && $allGet['purpose']!=''){
            $purpose=$allGet['purpose'];
            array_push($whr, "enquiry.purpose='".$purpose."'");
        }
        if(isset($allGet['property_type']) && $allGet['property_type']!=''){
            $property_type=$allGet['property_type'];
            array_push($whr, "enquiry.property_type='".$property_type."'");
        }
        if(isset($allGet['refurbishment']) && $allGet['refurbishment']!=''){
            $refurbishment=$allGet['refurbishment'];
            array_push($whr, "enquiry.refurbishment='".$refurbishment."'");
        }
        if(isset($allGet['lead_source']) && $allGet['lead_source']!=''){
            $lead_source=$allGet['lead_source'];
            array_push($whr, "enquiry.lead_source='".$lead_source."' or enquiry.enquiry_source='".$lead_source."'");
        }
        if(isset($allGet['lead_owner']) && $allGet['lead_owner']!=''){
            $lead_owner=$allGet['lead_owner'];
            array_push($whr, "enquiry.assign_advisor='".$lead_owner."'");
        }
        if(isset($allGet['created_by']) && $allGet['created_by']!=''){
            $created_by=$allGet['created_by'];
            array_push($whr, "(enquiry.advisor_id='".$created_by."')");
        }
    }
    $order="id desc";
    if(isset($allGet['sorting']) && $allGet['sorting']!=''){
        if(isset($allGet['atype']) && $allGet['atype']=='product'){
            array_push($joinArr, "left join charges on charges.id=enquiry.product");
            $order="charges.".urldecode($allGet['sorting']);
        }else if(isset($allGet['atype']) && $allGet['atype']=='user'){
            array_push($joinArr, "left join users on users.id=enquiry.advisor_id");
            $order="users.".urldecode($allGet['sorting']);
        }else if(isset($allGet['atype']) && $allGet['atype']=='lenduser'){
            array_push($joinArr, "left join users on users.id=enquiry.approve_by_lender");
            $order="users.".urldecode($allGet['sorting']);
        }else{
            $order="enquiry.".urldecode($allGet['sorting']);
        }
    }
    $where="";
    if(!empty($whr)){
        $where=" where ".implode(" and ", $whr);
    }
    $joinString="";
    if(!empty($joinArr)){
        $joinString=" ".implode(" ", $joinArr);
    }
    //===========pagination===========
    $paged=$this->dispatcher->getParam("paged");
    $page = (int) (!isset($paged) ? 1 : $paged);
    $page = ($page == 0 ? 1 : $page);
    $perpage =20;
    $startpoint = ($page * $perpage) - $perpage;
    $totrecord=Enquiry::findAll("select enquiry.* from enquiry".$joinString.$where." order by ".$order);
    $leadRes=Enquiry::findAll("select enquiry.* from enquiry".$joinString.$where." order by ".$order." limit ".$startpoint.", ".$perpage);
    $this->view->setVar('leadRes', $leadRes);
    $this->view->setVar('totrecord', count($totrecord));
    $this->view->setVar('perpage', $perpage);
    $this->view->setVar('paged', $paged);
    $this->view->setVar('startpoint', $startpoint);
}
/**
* Enquiry clean Add Action To clean enquiry
* Action Name: enquiryaddcleanAction
* Author By: Subhra Sahoo
* Created Date: 12-10-2019
**/
public function enquiryaddcleanAction(){
    $response = new \Phalcon\Http\Response();
    if($this->session->has('enquirySessID')){
        $this->session->remove('enquirySessID');
    }
    if($this->session->has('all_cla_data')){
        $this->session->remove('all_cla_data');
    }
    return $response->redirect('dashboard/enquiryadd/');
}
/**
* Enquiry Add Action To Add new enquiry by Advisor
* Action Name: enquiryaddAction
* Author By: Subhra Sahoo
* Created Date: 12-10-2019
**/

public function advisorChooseCaseManagerAction(){
    $response = new \Phalcon\Http\Response();
    if($this->session->get('sessUserType')>0){
        return $response->redirect('/dashboard');
    }

    if($this->request->isPost()){
        $allPost   = $this->request->getPost();
        if($allPost['case_manager']!=''){
          $advisorDelData = Users::find(array('conditions' => "is_active=1 and u_type=0 and email_id!='shiraz@hankzarihs.com' and id ='".$allPost['assign_advisor']."'"));

          $leadDelData = Users::find(array('conditions' => "is_active=1 and u_type=0 and email_id!='shiraz@hankzarihs.com' and id ='".$allPost['lead_given_by']."'"));


            foreach($advisorDelData as $advisor){

              $mailContentDetailsSentToTheAdvisor = MailTemplate::find(array('conditions' => "id=30", 'limit' => 1));

              if(!empty($mailContentDetailsSentToTheAdvisor) && count($mailContentDetailsSentToTheAdvisor)>0){
              $mailContentDetailsSentToTheAdvisor = $mailContentDetailsSentToTheAdvisor[0];
              $mailSubject       = $mailContentDetailsSentToTheAdvisor->subject;
              $mailContent       = $mailContentDetailsSentToTheAdvisor->mail_content;

              $mailSubject       = str_replace("{Advisor}", stripslashes($advisor->first_name), $mailSubject);
              $mailSubject       = str_replace("{Lead name}", stripslashes($leadDelData[0]->first_name." ".$leadDelData[0]->last_name), $mailSubject);
              $mailSubject       = str_replace("{Case Manager}", stripslashes($allPost['case_manager']), $mailSubject);

              $mailContent       = str_replace("{Advisor}", stripslashes($advisor->first_name), $mailContent);
              $mailContent       = str_replace("{Lead name}", stripslashes($leadDelData[0]->first_name." ".$leadDelData[0]->last_name), $mailContent);
              $mailContent       = str_replace("{Case Manager}", stripslashes($allPost['case_manager']), $mailContent);


              // echo BASEURL;die; https://hza.org.uk/beta/
              $LeadLink   =  '<a href="'.BASEURL.'dashboard/enquiry">Lead Link</a>';
              $mailContent       = str_replace("{Lead Link}", stripslashes($LeadLink), $mailContent);
              //https://hza.org.uk/beta/dashboard/enquirydetail/

                  if($advisor->email_id){
                      $advEmailID    = "";
                      if(strpos($advisor->email_id,"gov.")!==false){

                      }else if(strpos($advisor->email_id,"police.")!==false){

                      }else if(strpos($advisor->email_id,"nhs.")!==false){

                      }else if(strpos($advisor->email_id,"sch.")!==false){

                      }else if(strpos($advisor->email_id,"ac.")!==false){
                      }else{
                          $advEmailID = $advisor->email_id;
                      }

                      if($advEmailID != ''){
                          $sendmail   = UIElements::sendEmail($advEmailID,$mailSubject,$mailContent);
                      }
                    }
                }

            }


          // $advisorDelData = Users::find(array('conditions' => "is_active=1 and u_type=0 and email_id!='shiraz@hankzarihs.com' and id ='".$allPost['assign_advisor']."'"));

          // $leadDelData = Users::find(array('conditions' => "is_active=1 and u_type=0 and email_id!='shiraz@hankzarihs.com' and id ='".$allPost['lead_given_by']."'"));


            foreach($advisorDelData as $advisor){
              $mailContentDetailsSentToTheAdvisor = MailTemplate::find(array('conditions' => "id=31", 'limit' => 1));
              if(!empty($mailContentDetailsSentToTheAdvisor) && count($mailContentDetailsSentToTheAdvisor)>0){
              $mailContentDetailsSentToTheAdvisor = $mailContentDetailsSentToTheAdvisor[0];
              $mailSubject       = $mailContentDetailsSentToTheAdvisor->subject;
              $mailContent       = $mailContentDetailsSentToTheAdvisor->mail_content;

              $mailSubject       = str_replace("{Advisor}", stripslashes($advisor->first_name), $mailSubject);
              $mailSubject       = str_replace("{Lead name}", stripslashes($leadDelData[0]->first_name." ".$leadDelData[0]->last_name), $mailSubject);
              $mailSubject       = str_replace("{case manager name}", stripslashes($allPost['case_manager']), $mailSubject);

              $mailContent       = str_replace("{Advisor}", stripslashes($advisor->first_name), $mailContent);
              $mailContent       = str_replace("{Lead name}", stripslashes($leadDelData[0]->first_name." ".$leadDelData[0]->last_name), $mailContent);
              $mailContent       = str_replace("{case manager name}", stripslashes($allPost['case_manager']), $mailContent);

              // $mailContent       = str_replace("{Lead Link}", stripslashes("https://hza.org.uk/beta/dashboard/enquirydetail/".$leadDelData[0]->lead_id), $mailContent);
              // echo BASEURL;die; https://hza.org.uk/beta/
              $LeadLink   =  '<a href="'.BASEURL.'dashboard/enquiry">Lead Link</a>';
              $mailContent       = str_replace("{Lead Link}", stripslashes($LeadLink), $mailContent);
              //https://hza.org.uk/beta/dashboard/enquirydetail/
              // $mailContent       = str_replace("{EnquiryDetail}", $enquirydetail, $mailContent);

                  if($advisor->email_id){
                      $advEmailID    = "";
                      if(strpos($advisor->email_id,"gov.")!==false){

                      }else if(strpos($advisor->email_id,"police.")!==false){

                      }else if(strpos($advisor->email_id,"nhs.")!==false){

                      }else if(strpos($advisor->email_id,"sch.")!==false){

                      }else if(strpos($advisor->email_id,"ac.")!==false){
                      }else{
                          // $advEmailID = "kumarsushilrout009@gmail.com";
                          $advEmailID = "daniel@hankzarihs.com";
                          // $advEmailID = $advisor->email_id;
                      }

                      if($advEmailID != ''){
                          $sendmail   = UIElements::sendEmail($advEmailID,$mailSubject,$mailContent);
                      }
                    }
                }
            }
        }
    }
}



public function enquiryaddAction(){
    $response = new \Phalcon\Http\Response();
    if($this->session->get('sessUserType')>0){
        return $response->redirect('/dashboard');
    }
        if($this->request->isPost()){
            $allPost   = $this->request->getPost();
            // echo "<pre>";print_r($allPost);die;
            // echo "<pre>"; print_r($allPost);die;
            $chkEmail  = array();
            $chkPhone  = array();
            if(count($chkEmail)>0){
                $this->flashSession->error("Email ID Already Exist");
            }else if(count($chkPhone)>0){
                $this->flashSession->error("Phone No Already Exist");
            }else{
                $allPost['advisor_id']         = $this->session->get('sessUserID');
                $allPost['amount_required']    = str_replace(",", "", $allPost['amount_required']);
                $allPost['modified']           = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $allPost['no_of_borrower']     = ($allPost['no_of_borrower']!='')?$allPost['no_of_borrower']:0;
                $allPost['created']            = date("Y-m-d H:i:s", strtotime("+60 minutes"));

                $lead_unique_id                = rand(10, 1000000);
                $allPost['lead_unique_id']     = $lead_unique_id;
                $leadlast            = Enquiry::find(array('conditions' => "lead_id like 'LEAD%'", 'order' => "id desc", 'limit'   => 1));
                if(count($leadlast)>0){
                    $lastID              = $leadlast[0]->lead_id;
                    $idArr               = explode("D", $lastID);
                    $increaseID          = $idArr[1]+1;
                    $finalID             = "LEAD".$increaseID;
                    $allPost['lead_id']  = $finalID;
                }else{
                    $allPost['lead_id']  = "LEAD10001";
                }

                $allPost['is_active']        = 1;
                $allPost['date_of_purchase'] = date("Y-m-d", strtotime($allPost['date_of_purchase']));

                $enquiryDB          = new Enquiry();
                $save               = $enquiryDB->save($allPost);
                if($save){
                    $enquiryID      = $enquiryDB->id;


                    if($allPost['assign_advisor']!=''){
                        $advID      = $allPost['assign_advisor'];
                        $advisorDel = Users::findFirst(array('conditions' => "is_active=1 and u_type=0 and id=".$advID, 'order' => 'first_name asc'));
                        //==========Mail Functionality start here=======
                        $enquirySourceArr=array('1'=>'Inbound Telephone','2'=>'Email marketing','3'=>'Auction lead','4'=>'Web search','5'=>'Other');
                        $productRes=Charges::findFirst(array('conditions' => "id=".$allPost['application_type'], 'order' => "charge_name asc"));
                        $enquirydetail='<table border="1" cellspacing="0">
                         <tr>
                        <td>Product</td>
                        <td>'.stripcslashes($productRes->charge_name).'</td>
                        </tr>
                        <tr>
                        <td>Name</td>
                        <td>'.stripcslashes($allPost['borrower_name']).'</td>
                        </tr>
                         <tr>
                        <td>Telephone</td>
                        <td>'.stripcslashes($allPost['borrower_mob']).'</td>
                        </tr>
                        <tr>
                        <td>Email</td>
                        <td>'.stripcslashes($allPost['borrower_email']).'</td>
                        </tr>
                        <tr>
                        <td>Loan Amount</td>
                        <td>'.stripcslashes($allPost['amount_required']).'</td>
                        </tr>
                         <tr>
                        <td>Notes</td>
                        <td>'.stripcslashes($allPost['note_text']).'</td>
                        </tr>
                        <tr>
                        <td>Source</td>
                        <td>'.$enquirySourceArr[$allPost['enquiry_source']].'</td>
                        </tr>
                        </table>';
                        $mailContentDetails    = MailTemplate::find(array('conditions' => "id=22", 'limit' => 1));
                        if(!empty($mailContentDetails) && count($mailContentDetails)>0){
                            $mailContentDetail = $mailContentDetails[0];
                            $mailSubject       = $mailContentDetail->subject;
                            $mailContent       = $mailContentDetail->mail_content;

                            $mailContent       = str_replace("{AdvisorName}", stripslashes($advisorDel->first_name), $mailContent);
                            $mailContent       = str_replace("{EnquiryDetail}", $enquirydetail, $mailContent);

                            if($advisorDel->email_id){
                                $advEmailID    = "";
                                if(strpos($advisorDel->email_id,"gov.")!==false){

                                }else if(strpos($advisorDel->email_id,"police.")!==false){

                                }else if(strpos($advisorDel->email_id,"nhs.")!==false){

                                }else if(strpos($advisorDel->email_id,"sch.")!==false){

                                }else if(strpos($advisorDel->email_id,"ac.")!==false){
                                }else{
                                    $advEmailID = $advisorDel->email_id;
                                }

                                if($advEmailID != ''){
                                    $sendmail   = UIElements::sendEmail($advEmailID,$mailSubject,$mailContent);
                                }
                            }


                            $sendPost['task_id']      = $taskID;
                            $sendPost['created']      = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $sendPost['to_user']      = $userid;
                            $sendPost['mail_subject'] = $mailSubject;
                            $sendPost['mail_content'] = $mailContent;
                            $sendPost['mail_from']    = 1;
                            $sendMailDb               = new TaskSendMail();
                            $saveSendMail             = $sendMailDb->save($sendPost);
                        }
                    }







                    $this->flashSession->success("New Enquiry Saved Successfully.");
                    return $response->redirect("dashboard/enquiry");
                }else{
                }
            }

        }
        /*if($this->session->has('enquirySessID')){
            $enquiryID=$this->session->get('enquirySessID');
            $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
            /*echo "<pre>";
            print_r($enquiryDetails);exit();*/
           /* $_POST=$enquiryDetails;
        }*/
    //============End here========================
}










    /**
    * Illustration Add Action To generate illustration
    * Action Name: illustrationdocAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 31-10-2019
    **/
    public function illustrationdocAction(){

        $response = new \Phalcon\Http\Response();
        /*if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }*/
        if(!$this->session->has('enquirySessID')){
           return $response->redirect('/dashboard/enquiry');
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $this->session->set('quotelenderDetail',$allPost);
        }
        //echo "<pre>";print_r($this->session->get('quotelenderDetail'));exit;



        $leadID=$this->session->get('enquirySessID');
        $chkOffer=IllustrationOffer::find(array('conditions' => "lead_id='".$leadID."'", 'limit' => 1));

        if(count($chkOffer)>0){
            $_POST=$chkOffer[0]->toArray();
            $_POST['pre_offer_type']=explode(",", $_POST['pre_offer_type']);
        }
        $this->view->setVar('chkOffer', $chkOffer);

        $this->view->setVar('leadid', $leadID);
    }
    public function illustrationsubmitAction(){
        $response = new \Phalcon\Http\Response();

        if(!$this->session->has('enquirySessID')){
           return $response->redirect('/dashboard/enquiry');
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $sessionID=$this->session->get('sessUserID');
            $allPost['advisor_id']=$sessionID;
            $preofferTypeArr=$allPost['pre_offer_type'];
            $allPost['pre_offer_type']=implode(",", $allPost['pre_offer_type']);
            $chkofferAdded=0;
            if(!isset($allPost['id'])){
               $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            }else{
                $chkofferAdded=UIElements::checkillustrationofferadd($allPost['id'], $preofferTypeArr);
                $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            }

            //print_r($allPost);exit();
            $preofferDb = new IllustrationOffer();
            $save=$preofferDb->save($allPost);
            if($save){
                /*if($chkofferAdded[0]==1){
                    $this->modelsManager->executeQuery("update Enquiry set approved_loan=0 where id='".$allPost['lead_id']."'");

                }*/
                if($chkofferAdded[1]==1){
                    $this->modelsManager->executeQuery("delete from IllustrationofferComplete where lead_id='".$allPost['lead_id']."' and offer_id NOT IN(".$allPost['pre_offer_type'].")");
                }
                //=======Save track report========
                if(isset($allPost['id'])){
                    $trackData['track_for']='editPreoffer';
                }else{
                    $trackData['track_for']='addPreoffer';
                }
                $trackData['userid']=$this->session->get('sessUserID');
                $trackData['track_save_id']=$preofferDb->id;
                $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $trackClickSave = new TrackClickSave();
                $saveTrack=$trackClickSave->save($trackData);

                //=======Save track report End========
                $this->flashSession->success("Illustration offer Allocated to lead successfully. please complete the offer to proceed for next");
            }else{
                $this->flashSession->success("Illustration offer  Allocating Failed");
            }
        }
        return $response->redirect('/dashboard/illustrationdoc');
    }

    /**
    * Illustration final Action To generate illustration
    * Action Name: illustrationfinalAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 02-11-2019
    **/
    public function illustrationfinalAction(){

        $response = new \Phalcon\Http\Response();
        /*if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }*/
        if(!$this->session->has('enquirySessID')){
           return $response->redirect('/dashboard/enquiry');
        }

        if(!$this->session->has('quotelenderDetail')){
           return $response->redirect('/dashboard/quoteform');
        }


        //echo "<pre>";print_r($this->session->get('quotelenderDetail'));exit;
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            //echo "<pre>"; print_r($allPost);exit();
            $allPost['amount_required']=str_replace(",", "", $allPost['amount_required']);
            $allPost['gross_loan_amount']=str_replace(",", "", $allPost['gross_loan_amount']);
            $allPost['requested_mortgage_term']=str_replace(",", "", $allPost['requested_mortgage_term']);
            $allPost['monthly_rate']=str_replace(",", "", $allPost['monthly_rate']);
            $allPost['anual_all_rate']=str_replace(",", "", $allPost['anual_all_rate']);

             $allPost['lender_arrangement_fee']=str_replace(",", "", $allPost['lender_arrangement_fee']);
            $allPost['lender_arrangement_val']=str_replace(",", "", $allPost['lender_arrangement_val']);
            $allPost['valuationfee']=str_replace(",", "", $allPost['valuationfee']);
            $allPost['brokerfee']=str_replace(",", "", $allPost['brokerfee']);

             $allPost['lender_legal_fee']=str_replace(",", "", $allPost['lender_legal_fee']);
            $allPost['telegraphic_transfer_fee']=str_replace(",", "", $allPost['telegraphic_transfer_fee']);
            $allPost['estimated_net_advance']=str_replace(",", "", $allPost['estimated_net_advance']);

            $enquiryID=$this->session->get('enquirySessID');
             $enquiryData=Enquiry::find(array('conditions' => "id='".$enquiryID."'", 'limit' => 1));
             if(count($enquiryData)>0){
                $allPost=array_merge($enquiryData[0]->toArray(),$allPost);
             }else{
                $allPost['id']=$enquiryID;
             }
             $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
           // echo "<pre>"; print_r($allPost);exit();

                $enquiryDB = new Enquiry();
                $save=$enquiryDB->save($allPost);
                if($save){
                    $this->session->set('illustrationcomplete', 1);
                    return $response->redirect('dashboard/illustrationpdf');
                }
        }


        $leadID=$this->session->get('enquirySessID');
        /*$illustrationDetail=IllustrationDetail::find(array('conditions' => "lead_id='".$leadID."'", 'limit' => 1));


        $this->view->setVar('illustrationDetail', $illustrationDetail);*/
        $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$leadID."'"))->toArray();

        $this->view->setVar('enquiryDetails', $enquiryDetails);
        $this->view->setVar('leadid', $leadID);
    }
    public function illustrationpdfAction(){
        $response = new \Phalcon\Http\Response();
        if(!$this->session->has('enquirySessID')){
           return $response->redirect('/dashboard/enquiry');
        }
        if(!$this->session->has('quotelenderDetail')){
           return $response->redirect('/dashboard/quoteform');
        }
        if(!$this->session->has('illustrationcomplete')){
           return $response->redirect('/dashboard/illustrationfinal');
        }
        $leadID=$this->session->get('enquirySessID');
         $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$leadID."'"))->toArray();
         $this->view->setVar('enquiryDetails', $enquiryDetails);

    }
    public function illustrationbdocAction($leadid=''){
        $response = new \Phalcon\Http\Response();
        if($leadid==''){
            return $response->redirect('/dashboard/enquiry');
        }
        $this->session->set('enquirySessID', $leadid);
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $this->session->set('quotelenderDetail',$allPost);
        }
        $this->session->set('comefrom', 'detail');
        return $response->redirect('/dashboard/illustrationdoc');
    }

     /**
    * Edit Quote form for edit the lead quote form calculation
    * Action Name: editquoteformAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 19-11-2019
    **/
    public function editquoteformAction($leadid=''){
        $response = new \Phalcon\Http\Response();
        if($leadid==''){
            return $response->redirect('/dashboard/enquiry');
        }
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }

        $this->session->set('enquirySessID', $leadid);
        if(!$this->session->has('enquirySessID')){
            return $response->redirect("dashboard/enquiry");
        }
        //print_r($this->session->get('enquirySessID')); exit();
        if($this->session->get('enquirySessID')=='images'){
            $this->session->remove('enquirySessID');
        }
        if($leadid!=''){
          $this->session->set('enquirySessID', $leadid);
          $this->view->setVar('lead_id', $leadid);
        }

       if($this->request->isPost()){
            $allPost=$this->request->getPost();
              $allPost['amount_required']=str_replace(",", "", $allPost['amount_required']);
                $allPost['purchase_price']=str_replace(",", "", $allPost['purchase_price']);
                $allPost['ltv']=str_replace(",", "", $allPost['ltv']);
                if($allPost['quote_panel']==1){
                    if((isset($allPost['product']) && $allPost['product']!='') && (isset($allPost['ltv']) && $allPost['ltv']!='')){
                        $product=$allPost['product'];
                        switch($product){
                            case 'RB' :
                            $productLtv=" and (regi_bridge >=".$allPost['ltv'].")";
                            break;
                             case 'SCB' :
                            $productLtv=" and (semi_comm_bridge >=".$allPost['ltv'].")";
                            break;
                             case 'CB' :
                            $productLtv=" and (comm_bridge >=".$allPost['ltv'].")";
                            break;
                             case 'LB' :
                            $productLtv=" and (land_bridge >=".$allPost['ltv'].")";
                            break;
                             case 'SC' :
                            $productLtv=" and (sec_bridge >=".$allPost['ltv'].")";
                            break;
                             case 'RFB' :
                            $productLtv=" and (refurb_bridge >=".$allPost['ltv'].")";
                            break;
                            case 'D' :
                            $productLtv=" and (deve >=".$allPost['ltv'].")";
                            break;
                             case 'M' :
                            $productLtv=" and (mezz >=".$allPost['ltv'].")";
                            break;
                             case 'RI' :
                            $productLtv=" and (resi_investiment >=".$allPost['ltv'].")";
                            break;
                             case 'SCI' :
                            $productLtv=" and (semi_comm_investment >=".$allPost['ltv'].")";
                            break;
                            case 'CI' :
                            $productLtv=" and (comm_investiment >=".$allPost['ltv'].")";
                            break;
                            default:
                            break;
                        }
                    }

                   if($allPost['amount_required']>0){

                        $sql1="select * from Lenders where (max_loan>='".$allPost['amount_required']."' and min_loan<='".$allPost['amount_required']."')".$productLtv." limit 25";
                        //echo $sql1; exit();
                        $lenderList=$this->modelsManager->executeQuery($sql1);
                    }else{
                       $lenderList=array();
                    }
                }else if($allPost['quote_panel']==2){


                    if($allPost['amount_required']>0){

                        $lenderList=PreferLender::find(array('conditions' => "email_id!='' and product='".$allPost['product']."' and (max_loan>='".$allPost['amount_required']."' and min_loan<='".$allPost['amount_required']."')", 'order' => 'lender_name asc'));
                    }else{
                      $lenderList=array();
                    }
                }
                //echo count($lenderList); exit();
                $allPost['quoteid']=$id;
                //print_r($allPost); exit();
                $this->view->setVar('lenderList', $lenderList);
                $this->session->set('all_cla_data', $allPost);
                $_POST=$allPost;

        }else{
            if($this->session->has('enquirySessID')){
                 $enquiryID=$this->session->get('enquirySessID');

                     $quickQuoteDetail=QuickQuote::find(array('conditions' => "lead_id='".$enquiryID."'", 'limit' => 1));
                    //$quickQuoteDetail=QuickQuote::find(array('conditions' => "id=".$id, 'limit' => 1));
                if(count($quickQuoteDetail)>0){
                    $_POST=$quickQuoteDetail[0]->toArray();
                    $_POST['quoteid']=$_POST['id'];
                    $allPost=$_POST;
                     if($allPost['quote_panel']==1){
                        if((isset($allPost['product']) && $allPost['product']!='') && (isset($allPost['ltv']) && $allPost['ltv']!='')){
                            $product=$allPost['product'];

                            switch($product){
                                case 'RB' :
                                $productLtv=" and (regi_bridge >=".$allPost['ltv'].")";
                                break;
                                 case 'SCB' :
                                $productLtv=" and (semi_comm_bridge >=".$allPost['ltv'].")";
                                break;
                                 case 'CB' :
                                $productLtv=" and (comm_bridge >=".$allPost['ltv'].")";
                                break;
                                 case 'LB' :
                                $productLtv=" and (land_bridge >=".$allPost['ltv'].")";
                                break;
                                 case 'SC' :
                                $productLtv=" and (sec_bridge >=".$allPost['ltv'].")";
                                break;
                                 case 'RFB' :
                                $productLtv=" and (refurb_bridge >=".$allPost['ltv'].")";
                                break;
                                case 'D' :
                                $productLtv=" and (deve >=".$allPost['ltv'].")";
                                break;
                                 case 'M' :
                                $productLtv=" and (mezz >=".$allPost['ltv'].")";
                                break;
                                 case 'RI' :
                                $productLtv=" and (resi_investiment >=".$allPost['ltv'].")";
                                break;
                                 case 'SCI' :
                                $productLtv=" and (semi_comm_investment >=".$allPost['ltv'].")";
                                break;
                                case 'CI' :
                                $productLtv=" and (comm_investiment >=".$allPost['ltv'].")";
                                break;
                                default:
                                break;
                            }
                        }
                        if($allPost['amount_required']>0){
                             $sql1="select * from Lenders where (max_loan>='".$allPost['amount_required']."' and min_loan<='".$allPost['amount_required']."') ".$productLtv." limit 25";
                            //echo $sql1; exit();
                            $lenderList=$this->modelsManager->executeQuery($sql1);
                        }else{
                            $lenderList=array();
                        }
                    }else if($allPost['quote_panel']==2){


                        if($allPost['amount_required']>0){

                              $lenderList=PreferLender::find(array('conditions' => "email_id!='' and product='".$allPost['product']."' and (max_loan>='".$allPost['amount_required']."' and min_loan<='".$allPost['amount_required']."')", 'order' => 'lender_name asc'));
                              //echo "email_id!='' and product='".$allPost['product']."' and (max_loan>='".$allPost['amount_required']."' and min_loan<='".$allPost['amount_required']."')";

                            }else{
                              $lenderList=array();
                            }
                    }
                    $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
                    //echo count($lenderList); exit();
                    $this->view->setVar('lenderList', $lenderList);
                    $this->session->set('all_cla_data', $allPost);
                }else{
                        $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
                        $allPost['lead_id']=$enquiryDetails['id'];
                        $allPost['term']=$allPost['term_required'];
                        $_POST=$allPost;
                    }
            }
        }
    }
    public function editquickquotesubmitAction(){
        $responseArr  = array('response' => 0, 'id' => '');
        if($this->request->isPost()){
            $allPost  = $this->request->getPost();
            //echo "<pre>";print_r($allPost); exit();
            if($allPost['submitclickfrom']==1){


                $allPost['lead_id']   = $this->session->get('enquirySessID');
                $allPost['modified']  = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $chkQuote             = QuickQuote::find(array('conditions' => "lead_id='".$allPost['lead_id']."'", 'limit' => 1));
                if(count($chkQuote)>0){
                    //echo 1111;
                    $allPost['id']=$chkQuote[0]->id;
                    $allPost['created']=$chkQuote[0]->created;
                }else{
                    $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                }
                 $allPost['amount_required'] = str_replace(",", "", $allPost['amount_required']);
                $allPost['purchase_price']   = str_replace(",", "", $allPost['purchase_price']);
                //print_r($allPost);exit();
                $quickQuoteDB = new QuickQuote();
                $saveData     = $quickQuoteDB->save($allPost);
                if($saveData){
                    //=======Save track report========
                    if(isset($allPost['id'])){
                        $trackData['track_for']='quoteEdit';
                    }else{
                        $trackData['track_for']='quoteAdd';
                    }
                    $trackData['userid']          = $this->session->get('sessUserID');
                    $trackData['track_save_id']   = $quickQuoteDB->id;
                    $trackData['server_detail']   = $_SERVER['HTTP_USER_AGENT'];
                    $trackData['server_ip']       = $_SERVER['REMOTE_ADDR'];
                    $trackData['created']         = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $trackClickSave               = new TrackClickSave();
                    $saveTrack   = $trackClickSave->save($trackData);
                    //=======Save track report End========

                    $quickquoteid=$quickQuoteDB->id;
                    $this->modelsManager->executeQuery("delete from QuickquoteDetails where quickquoteid='".$quickquoteid."'");
                    $quoteData['quickquoteid']=$quickquoteid;
                   if(isset($allPost['lendergetid']) && !empty($allPost['lendergetid'])){
                        foreach($allPost['lendergetid'] as $index => $lendersingid){
                            $chkDetail=QuickquoteDetails::find(array(
                            'conditions' => "quickquoteid='".$quickquoteid."' and lender_id='".$lendersingid."'",
                            'limit' => 1
                            ));
                            if(count($chkDetail)>0){
                                $quoteData['id']=$chkDetail[0]->id;
                                $quoteData['created']=$chkDetail[0]->created;
                                $quoteData['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            }else{
                                $quoteData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            }
                            $fieldIndex=$index+1;
                            $quoteData['lender_id']=$lendersingid;
                             $quoteData['gross_loan']=str_replace(",", "", $allPost['grossLoan'.$fieldIndex]);
                            $quoteData['gross_ltv']=str_replace(",", "", $allPost['grossLtv'.$fieldIndex]);
                            /*$quoteData['lender_fee']=$allPost['lenderFee'.$fieldIndex];
                            $quoteData['brokerfee']=$allPost['brokerfee'.$fieldIndex];*/
                            $quoteData['product']=$allPost['product'.$fieldIndex];
                            $quoteData['purchase']=str_replace(",", "", $allPost['purchase'.$fieldIndex]);
                            $quoteData['ratepermonth']=str_replace(",", "", $allPost['ratepermonth'.$fieldIndex]);

                            $quoteData['ratepermonth']=str_replace(",", "", $allPost['ratepermonth'.$fieldIndex]);
                            $quoteData['rateperanum']=str_replace(",", "", $allPost['rateperanum'.$fieldIndex]);
                            $quoteData['term_required']=str_replace(",", "", $allPost['term_required'.$fieldIndex]);
                            $quoteData['termval']=str_replace(",", "", $allPost['termval'.$fieldIndex]);
                            $quoteData['costpermonth']=str_replace(",", "", $allPost['costpermonth'.$fieldIndex]);
                            $quoteData['costpertheterm']=str_replace(",", "", $allPost['costpertheterm'.$fieldIndex]);
                            $quoteData['in_per']=str_replace(",", "", $allPost['in_per'.$fieldIndex]);
                            $quoteData['in_val']=str_replace(",", "", $allPost['in_val'.$fieldIndex]);
                            $quoteData['broker_per']=str_replace(",", "", $allPost['broker_per'.$fieldIndex]);
                            $quoteData['broker_val']=str_replace(",", "", $allPost['broker_val'.$fieldIndex]);

                            $quoteData['net_loan_if_serviced']=str_replace(",", "", $allPost['net_loan_if_serviced'.$fieldIndex]);
                            $quoteData['net_ltv_serviced']=str_replace(",", "", $allPost['net_ltv_serviced'.$fieldIndex]);
                            $quoteData['net_loan_if_deducted']=str_replace(",", "", $allPost['net_loan_if_deducted'.$fieldIndex]);
                            $quoteData['net_ltv_deducted']=str_replace(",", "", $allPost['net_ltv_deducted'.$fieldIndex]);
                             $quoteData['legals']=$allPost['legals'.$fieldIndex];
                            $quoteData['valuation']=$allPost['quote_valuation'.$fieldIndex];
                            $quoteData['adminval']=$allPost['adminval'.$fieldIndex];
                            $quoteData['exit_fee']=$allPost['exit_fee'.$fieldIndex];

                            $quoteData['interestedCalculated']=$allPost['interestedCalculated'.$fieldIndex];


                            $QuickquoteDetails= new QuickquoteDetails();
                            $save=$QuickquoteDetails->save($quoteData);
                        }

                    }

                }
               //$this->session->set('all_cla_data', $allPost);

                if($this->session->has('newenquiry')){
                    //echo 3;
                    $responseArr=array('response' => 3, 'id' => $allPost['lead_id']);
                }else{
                    //echo 1;
                    $responseArr=array('response' => 1, 'id' => $allPost['lead_id']);
                    $this->flashSession->success("Quote Updated Successfully");
                }

            }

        }
        $responseArr=array('response' => 1, 'id' => $this->session->get('enquirySessID'));
        echo json_encode($responseArr);
        exit();
    }
    public function workflowtasksubmitAction(){
        // echo "<pre>"; print_r($this->request->isPost());die;
        $responseArr                    = array('response' => 0, 'redirectpage' => 0);
        if($this->request->isPost()){
            $allPost                    = $this->request->getPost();
            // echo "<pre>"; print_r($allPost);die;
            $allPost['posted_adv_id']   = $this->session->get('sessUserID');
            $allPost['created']         = date("Y-m-d H:i:s", strtotime("+60 minutes"));
            $leadid                     = $allPost['lead_id'];
            $this->modelsManager->executeQuery("update WorkflowTask set show_in_task=0 where lead_id=".$leadid);
            $allPost['show_in_task']    = 1;
            $allPost['product']         = $allPost['product'];
            $allPost['ltv']             = $allPost['ltv'];
            $allPost["case_gross_loan"] = str_replace(",", "", $allPost["case_gross_loan"]);
            $allPost["case_ltv"]        = str_replace(",", "", $allPost["case_ltv"]);
            $allPost["case_proc_fee"]   = str_replace(",", "", $allPost["case_proc_fee"]);
            $allPost["case_brokerfee"]  = str_replace(",", "", $allPost["case_brokerfee"]);
            /*$allPost["case_category"] = $allPost["case_category"];
            $allPost["work_experience"] = $allPost["work_experience"];*/
            $workflowTaskDB             = new WorkflowTask();
            $save  = $workflowTaskDB->save($allPost);
            if($save){
                if($allPost['task_status'] == 8){
                    $date     = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $update   = $this->modelsManager->executeQuery("update Enquiry set complete_date='".$date."', is_completed=1, not_proceeding=0, in_progress=0, modified='".$date."' where id=".$leadid);

                    //============Completed deal=======================
                    $enquirySourceArr = array('8' => 'Auction Viewing','3'=>'Auction Catalogue', '9' => 'Abi Email', '10' => 'Existing Client','2'=>'Email data', '7' => 'Lead Forensics', '11' => 'Referral', '1'=>'Inbound Call', '12' => 'Outbound Call','5'=>'Other', '13' => 'Google', '14' => 'Bing', '15' => 'Social Media', '16' => 'LinkedIn', '17' => 'Facebook', '18' => 'Twitter', '19' => 'Instagram', '20' => 'Letter', '21' => 'Google Ads', '22' => 'Facebook Ads', '23' => 'Whatsapp Marketing', '24' => 'Telegraph Marketing', '25' => 'GMB (Google My Business)', '26' => 'Bing Ads', '27' => 'Auction Finance (Website)', '28' => 'Development Finance (Website)', '29' => 'Bridging Loans (Website)', '30' => 'Mortgage Bug (Website)', '31' => 'Sharia Finance (Website)', '32' => 'Bridging Loan Calculator (Website)', '33' => 'Foreign National Mortgages (Website)', '34' => 'Development Finance Calculator (Website)', '35' => 'Buy to Let Mortgagaes (Website)');

                    $enquiryDetails       = Enquiry::find(array('conditions' => "id='".$leadid."'", 'limit' => 1));
                    if(count($enquiryDetails)>0){
                        $enquiryDetail    = $enquiryDetails[0]->toArray();
                        $userDetail       = Users::findFirst(array("conditions" => "id=".$enquiryDetail['advisor_id']));

                        $leadAppDetail    = LeadApplication::find(array('conditions' => "lead_id=".$enquiryDetail['id'], 'limit' => 1));
                        if($enquiryDetail['borrower_name']!=''){
                          $clientname     = $enquiryDetail['borrower_name'];
                        }else{
                          if(count($leadAppDetail)>0){
                            $nameArr      = explode(":::", $leadAppDetail[0]->pd_fullname);
                            $clientname   = stripslashes($nameArr[0]);
                          }else{
                            if($enquiryDetail['borrower_name']!=''){
                              $clientname = $enquiryDetail['borrower_name'];
                            }else if($leadDetail->first_name!=''){
                              $clientname = stripslashes($enquiryDetail['first_name']." ".$enquiryDetail['last_name']);
                            }else{
                              $clientname = "";
                            }
                          }
                        }
                        $phonenumber      = "";
                        if(count($leadAppDetail)>0){
                            $phonrNumberArr = explode(":::", $leadAppDetail[0]->pd_phone_no);
                            $phonenumber    = stripslashes($phonrNumberArr[0]);
                        }else{
                            $phonenumber    = "";
                        }

                    $chkCompleted          = CompletedDeals::find(array('conditions' => "lead_id=".$enquiryDetail['id'], 'limit' => 1));
                    $completePost['lead_id']                = $enquiryDetail['id'];
                    $completePost['phone_no']               = $phonenumber;
                    $completePost['advisor_id']             = $this->session->get('sessUserID');
                    $completePost['advisor']                = trim($userDetail->first_name." ".$userDetail->last_name);
                    $completePost['borrower_entity']        = $clientname;
                    $completePost['date_of_enquiry']        = date("Y-m-d", strtotime($enquiryDetail['created']));
                    $completePost['source_of_lead']         = $enquirySourceArr[$enquiryDetail['enquiry_source']];

                        $dateComplete = ($allPost["case_date_of_completion"]!='')?date("Y-m-d", strtotime(str_replace('/', '-', $allPost["case_date_of_completion"]))):$enquiryDetail['complete_date'];
                        $completePost['date_of_completion'] = $dateComplete;
                        //$completePost['lender_id']=$allPost["task_lender"];

                        if($allPost["task_lender"]!=''){
                            $lenderDetail              = Users::findFirst(array("conditions" => "id=".$allPost["task_lender"]));
                            $completePost['lender_id'] = stripslashes($lenderDetail->first_name);
                        }

                        /*if($enquiryDetail['approve_by_lender']!=''){

                            $lenderDetail=Users::findFirst(array("conditions" => "id=".$enquiryDetail['approve_by_lender']));
                            $completePost['lender_id']=stripslashes($lenderDetail->first_name);
                        }*/
                        $productRes = Charges::find(array('conditions' => "is_active=1 and id='".$enquiryDetail['application_type']."'", 'order' => "orderingno asc", 'limit' => 1));
                        if(count($productRes)>0){
                            $completePost['product']   = $productRes[0]->charge_name;
                        }
                        $chargeArr=array(5 => '1st', 2 => '2nd');
                        $completePost['charge']        = $chargeArr[$enquiryDetail['quote_charge']];

                        $grossLoan                     = ($allPost["case_gross_loan"]!='')?$allPost["case_gross_loan"]:$enquiryDetail['amount_required'];
                        $ltv                           = ($allPost["case_ltv"]!='')?$allPost["case_ltv"]:$enquiryDetail['ltv_required'];

                        $completePost['gross_loan']    = $grossLoan;
                        $completePost['gross_ltv']     = $ltv;
                        $termTypeArr                   = array('1'=>'1 month','2'=>'2 months','3'=>'3 months','4'=>'4 months','5'=>'5 months','6'=>'6 months','7'=>'7 months','8'=>'8 months','9'=>'9 months','10'=>'10 months','11'=>'11 months','12'=>'12 months','13'=>'13 months','14'=>'14 months','15'=>'15 months','16'=>'16 months','17'=>'17 months','18'=>'18 months','19'=>'19 months','20'=>'20 months','21'=>'21 months','22'=>'22 months','23'=>'23 months','24'=>'24 months', 33 => '25 Months', 34 => '26 Months', 35 => '27 Months', 36 => '28 Months', 37 => '29 Months', 38 => '30 Months', 39 => '31 Months', 40 => '32 Months', 41 => '33 Months', 42 => '34 Months', 43 => '35 Months', 44 => '36 Months', 45 => '37 Months', 46 => '38 Months', 47 => '39 Months', 48 => '40 Months', '25' => '3 Years', '26' => '4 Years', '27' => '5 Years', '28' => '6 Years', '29' => '7 Years', '30' => '8 Years', '31' => '9 Years', '32' => '10 Years', 49 => '11 Years', 50 => '12 Years', 51 => '13 Years', 52 => '14 Years', 53 => '15 Years', 54 => '16 Years', 55 => '17 Years', 56 => '18 Years', 57 => '19 Years', 58 => '20 Years', 59 => '21 Years', 60 => '22 Years', 61 => '23 Years', 62 => '24 Years', 63 => '25 Years', 64 => '26 Years', 65 => '27 Years', 66 => '28 Years', 67 => '29 Years', 68 => '30 Years', 69 => '31 Years', 70 => '32 Years', 71 => '33 Years', 72 => '34 Years', 73 => '35 Years');
                        $completePost['term']       = $termTypeArr[$enquiryDetail['term_required']];
                        $completePost['rate']       = $enquiryDetail['monthly_rate'];
                        $propertyTypeArr            = array('1'=>'Residential','2'=>'Semi Commercial','3'=>'Commercial','4'=>'Land no planning', '5' => 'Land With Planning','6'=>'Mixed Use');
                        $completePost['security']   = $propertyTypeArr[$enquiryDetail['property_type']];
                        $completePost['location']   = $enquiryDetail['security_address'];

                        $brokerFee                  = ($allPost["case_brokerfee"]!='')?$allPost["case_brokerfee"]:$enquiryDetail['brokerfee'];
                        $completePost['broker_fee'] = $brokerFee;
                        $completePost['proc_fee']   = $allPost["case_proc_fee"];
                        $completePost['location']   = $allPost["case_location"];

                        $completePost['exit_fee']   = $enquiryDetail['exit_val'];
                        if($enquiryDetail['borrower_email']!=''){
                          $emailID                  = $enquiryDetail['borrower_email'];
                        }else{
                          if(count($leadAppDetail)>0){
                            $emailArr               = explode(":::", $leadAppDetail[0]->pd_email);
                            $emailID                = stripslashes($emailArr[0]);
                          }else{
                            $emailID                = "";
                          }
                        }
                        $completePost['email_id']   = $emailID;
                        if(count($chkCompleted)>0){
                           $completePost            = array_merge($chkCompleted[0]->toArray(),$completePost);
                        }else{
                            $completePost['is_active'] = 1;
                            $completePost['created']   = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        }
                        $completePost['modified']      = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $completePost['note_text']     = $enquiryDetail['note_text'];
                        $completedDeals                = new CompletedDeals();
                        $save                          = $completedDeals->save($completePost);
                        $fileattachedarr               = array("uploads/completeddeals/Case_study_form_for_brokers.docx");
                        $siteAdmin                     = Sitesetting::findFirst(array("id=1"));
                        $umsg =
                        "<table width='100%'  style='line-height:20px; font-size:12px'>
                            <thead>
                                <th style='height:80px; font-size:24px; background:#'>
                                    <center>Deal Completed</center>
                                </th>
                            </thead>
                        </table>
                        <table width='100%'  style='line-height:20px; font-size:12px'>
                            <tr>
                                <td><h4 style='font-weight:bold;'>Hi ".$userDetail->first_name." ".$userDetail->last_name.",</h4></td>
                            </tr>
                             <tr>
                            <td>Congratulations on completing another deal!
                            </td>
                            </tr>
                            <tr>
                                <td> Below I've attached a word document that contains a template that needs to be filled in. 
                                       
                            <tr>
                                <td>The purpose of this exercise is so that we can publish our case studies on our website and show potential clients what we are capable of!</td>
                            </tr>
                            <tr>
                                <td>I look forward to receiving the write up from you.</td>
                            </tr>
                             <tr>
                                <td>&nbsp;</td>
                            </tr>
                            
                            <tr>
                                <td ><strong>Kind Regards,</strong></td>
                            </tr>
                            <tr>
                                <td style='color:#78b454;'>Hasan</td>
                            </tr>
                        </table>";
                        //echo $userDetail->email_id;exit;

                    $subject =  'Case Study - Please complete case study template';
                    $sentUmail =UIElements::sendAttachmentEmail($userDetail->email_id, $subject, $umsg,$fileattachedarr);
                        //============Completed deal End=======================
                    }
                    $responseArr=array('response' => 1, 'redirectpage' => 1);
                }
                else if($allPost['task_status']==9){

                    $date   = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $update = $this->modelsManager->executeQuery("update Enquiry set not_proceeding=1,is_completed=0, in_progress=0, modified='".$date."' where id='".$leadid."'");
                    $responseArr=array('response' => 1, 'redirectpage' => 1);
                }else if($allPost['task_status']==10){

                    $date   = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $update = $this->modelsManager->executeQuery("update Enquiry set in_progress=1,not_proceeding=0,is_completed=0, modified='".$date."' where id='".$leadid."'");
                    // echo "<pre>"; print_r($update);die;
                    $responseArr=array('response' => 1, 'redirectpage' => 1);
                }else{
                    $responseArr=array('response' => 1, 'redirectpage' => 0);
                }
            }else{
                $responseArr=array('response' => 2, 'redirectpage' => 0);
            }
        }
        echo json_encode($responseArr);
        exit();
    }
    public function caserequirementpreofferAction(){
        $responseArr=array('response' => 0, 'totalcaseoffer' => '', 'totalcount' => 1);
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if(isset($allPost['requirement_description']) && count($allPost['requirement_description'])>0){
               // print_r($allPost); exit();
                $count=1;
                foreach($allPost['requirement_description'] as $index => $requirementDesc){
                    $postval['offerid']=$requirementDesc;
                    $postval['description_other']=$allPost['description_other'][$index];
                   /* $postval['date_requested']=$allPost['date_requested'][$index];
                    if(isset($allPost['submitted'][$index])){
                        $postval['submitted']=$allPost['submitted'][$index];
                    }else{
                        $postval['submitted']='';
                    }
                    $postval['date_submitted']=$allPost['date_submitted'][$index];
                    if(isset($allPost['received'][$index])){
                        $postval['received']=$allPost['received'][$index];
                    }else{
                        $postval['received']='';
                    }
                    $postval['date_received']=$allPost['date_received'][$index];
                    if(isset($allPost['reviewed'][$index])){
                        $postval['reviewed']=$allPost['reviewed'][$index];
                    }else{
                        $postval['reviewed']='';
                    }
                    $postval['date_reviewed']=$allPost['date_reviewed'][$index];*/

                    if(isset($allPost['caseofferid'][$index])){
                        $postval['id']=$allPost['caseofferid'][$index];
                    }else{

                        unset($postval['id']);
                    }

                    $postval['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $postval['lead_id']=$allPost['lead_id'];
                    $postval['posted_by']=$this->session->get('sessUserID');
                    $caserequirementPreofferDb= new CaserequirementPreoffer();
                    $save=$caserequirementPreofferDb->save($postval);
                    if($save){
                        $uploaddata['caserequirement_id']=$caserequirementPreofferDb->id;
                        if(isset($_FILES['upload_document']['name'][$index]) && count($_FILES['upload_document']['name'][$index])>0){
                            foreach($_FILES['upload_document']['name'][$index] as $uploadIndex => $uploadFile){
                                $fileName=time().$uploadFile;
                                $uploaddata['upload_document']=$fileName;
                                move_uploaded_file($_FILES['upload_document']['tmp_name'][$index][$uploadIndex], "uploads/preofferdocument/".$fileName);
                                $uploaddata['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                $CaseofferDocument= new CaseofferDocument();
                                $saveDocument=$CaseofferDocument->save($uploaddata);
                            }

                        }
                    }
                    $count++;
                }
                //============send Caseoffer data============

                 $preoffers=Managepreoffer::find(array('conditions' => "is_active=1", 'order' => "offer_name asc"));
                    $caserequirementPreofferRes=CaserequirementPreoffer::find(array('conditions' => "lead_id=".$postval['lead_id'], 'order' => "id asc"));
                    if(count($caserequirementPreofferRes)>0){
                      $updcount=1;
                      $totalcaseoffer='';

                      foreach($caserequirementPreofferRes as $caserequirementPreofferResult){

                        $caseDocumentID=$caserequirementPreofferResult->id;
                        $CaseofferDocuments=CaseofferDocument::find(array('caserequirement_id='.$caseDocumentID));

                         if($caserequirementPreofferResult->submitted==1){$checkedSubmit="checked"; }else{$checkedSubmit="";}
                         if($caserequirementPreofferResult->received==1){$checkedReceived="checked"; }else{$checkedReceived="";}
                         if($caserequirementPreofferResult->reviewed==1){$checkedReviewed="checked";}else{$checkedReviewed="";}

                        if($caserequirementPreofferResult->offerid!=24){ $style=' style="display: none;"';}else{$style='';}

                         $totalcaseoffer.='<tr id="preofferrow'.$updcount.'">
                          <td style="width:50px;">'.$updcount.'</td>
                          <td>
                            <div class="details">
                              <select name="requirement_description['.$updcount.']" id="requirement_description'.$updcount.'" style="width:200px;">
                                <option value="">-Select-</option>';
                                if(count($preoffers)>0){
                                  foreach($preoffers as $preoffer){
                                    if($caserequirementPreofferResult->offerid==$preoffer->id){$offerSelected=" selected";}else{$offerSelected="";}
                                   $totalcaseoffer.=' <option value="'.$preoffer->id.'"'.$offerSelected.'>'.stripslashes($preoffer->offer_name).'</option>';
                                  }
                                }

                            $totalcaseoffer.=' </select>
                            </div>
                            <div class="form-group preofferdivcls descriptionOtherDiv'.$updcount.'"'.$style.'>
                              <input type="text" name="description_other['.$updcount.']" class="form-control" id="description_other" value="'.$caserequirementPreofferResult->description_other.'">
                            </div>
                          </td>
                          
                           <td style="width: 150px;">
                              <input type="file" class="fileuploadcls" name="upload_document['.$updcount.'][]" id="upload_document'.$updcount.'" value="" multiple="multiple">
                                  <div class="input-group col-xs-12">
                                      <input type="text" class="form-control input-lg uploadform" disabled="" placeholder="No file Choosen" style="display:none;">
                                      <span class="input-group-btn"><button class="browse btn btn-primary input-lg" type="button">
                                      <i class="fa fa-upload"></i>&nbsp;</button></span>
                                  </div>
                           </td>
                          <td style="width: 200px;">
                            <a href="'.BASEURL.'dashboard/preofferdownload/'.$caserequirementPreofferResult->lead_id.'/'.$caserequirementPreofferResult->id.'" class="btn btn-primary"><i class="fa fa-download"></i></a>
                          </td>
                          <td style="width: 150px; text-align: center;"><span class="countdocument">'.count($CaseofferDocuments).'</span><input type="hidden" name="caseofferid['.$updcount.']" value="'.$caserequirementPreofferResult->id.'"></td>
                          <td style="width: 100px; text-align: center;"><a href="javascript: void(0)" onclick="removePreofferFunc('.$postval['lead_id'].', '.$updcount.', '.$caserequirementPreofferResult->id.');" class="btn btn-danger"><i class="fa fa-remove fa-times"></i></a></td>
                        </tr>';
                        $updcount++;
                      }

                    }
                //============End send caseoffer data==========

                $responseArr=array('response' => 1, 'totalcaseoffer' => $totalcaseoffer, 'totalcount' => $updcount);
            }
           // print_r($_FILES);

        }
        echo json_encode($responseArr);
        exit();
    }
    public function preofferdownloadAction($leadid="", $documentid=""){

        if (!file_exists("uploads/preofferdocument/lead_".$leadid."document_".$documentid)) {
            mkdir("uploads/preofferdocument/lead_".$leadid."document_".$documentid, 0777, true);
        }
        $documentsList=CaseofferDocument::find(array('conditions' => "caserequirement_id=".$documentid));
        if(count($documentsList)>0){
             $zip = new ZipArchive;
             if ($zip->open('uploads/preofferdocument/lead_'.$leadid.'document_'.$documentid.'/case_requirement_preoffer_document.zip',  ZipArchive::CREATE)) {
                foreach($documentsList as $documentsResult){
                    //=========Zip code start from here===============
                    $fileName=$documentsResult->upload_document;
                    $zip->addFile('uploads/preofferdocument/'.$fileName, $fileName);
                    //=========Zip code end here======================
                }
                $zip->close();
                   // echo 'Archive created!';
                header('Content-Type: application/zip');
                header("Content-Disposition: attachment; filename=lead_".$leadid."document_".$documentid."_document_files.zip");
                header('Content-Length: ' . filesize('uploads/preofferdocument/lead_'.$leadid.'document_'.$documentid.'/case_requirement_preoffer_document.zip'));
                header("Location: ".BASEURL."uploads/preofferdocument/lead_".$leadid."document_".$documentid."/case_requirement_preoffer_document.zip");
            }
        }
    }

    public function caserequirementprecompletionAction(){
        $responseArr=array('response' => 0, 'totalcontentdata' => $totalPrecompletiondata, 'totalCount' => $updcount);
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if(isset($allPost['requirement_description_completion']) && count($allPost['requirement_description_completion'])>0){
               // print_r($allPost); exit();
                $count=1;
                foreach($allPost['requirement_description_completion'] as $index => $requirementDesc){
                    $postval['offerid']=$requirementDesc;
                    /*$postval['date_requested_completion']=$allPost['date_requested_completion'][$index];
                    if(isset($allPost['submitted_completion'][$index])){
                        $postval['submitted_completion']=$allPost['submitted_completion'][$index];
                    }else{
                        $postval['submitted_completion']='';
                    }
                    $postval['date_submitted_completion']=$allPost['date_submitted_completion'][$index];
                    if(isset($allPost['received_completion'][$index])){
                        $postval['received_completion']=$allPost['received_completion'][$index];
                    }else{
                        $postval['received_completion']='';
                    }
                    $postval['date_received_completion']=$allPost['date_received_completion'][$index];
                    if(isset($allPost['reviewed_completion'][$index])){
                        $postval['reviewed_completion']=$allPost['reviewed_completion'][$index];
                    }else{
                        $postval['reviewed_completion']='';
                    }
                    $postval['date_reviewed_completion']=$allPost['date_reviewed_completion'][$index];*/

                    if(isset($allPost['casecompletionid'][$index])){
                        $postval['id']=$allPost['casecompletionid'][$index];
                    }else{

                        unset($postval['id']);
                    }

                    $postval['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $postval['lead_id']=$allPost['lead_id'];
                    $postval['posted_by']=$this->session->get('sessUserID');
                    $caserequirementPrecompletionDb= new CaserequirementPrecompletion();
                    $save=$caserequirementPrecompletionDb->save($postval);
                    if($save){
                        $uploaddata['caserequirement_id']=$caserequirementPrecompletionDb->id;
                        if(isset($_FILES['upload_document_completion']['name'][$index]) && count($_FILES['upload_document_completion']['name'][$index])>0){
                            foreach($_FILES['upload_document_completion']['name'][$index] as $uploadIndex => $uploadFile){
                                $fileName=time().$uploadFile;
                                $uploaddata['upload_document']=$fileName;
                                move_uploaded_file($_FILES['upload_document_completion']['tmp_name'][$index][$uploadIndex], "uploads/precompletiondocument/".$fileName);
                                $uploaddata['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                $CasecompletionDocument= new CasecompletionDocument();
                                $saveDocument=$CasecompletionDocument->save($uploaddata);
                            }

                        }
                    }
                    $count++;
                }


                //======pre completion requirement added list==================
                $precompletions=Manageprecompletion::find(array('conditions' => "is_active=1", 'order' => "offer_name asc"));
                $caserequirementPrecompletionRes=CaserequirementPrecompletion::find(array('conditions' => "lead_id=".$postval['lead_id'], 'order' => "id asc"));
                $totalPrecompletiondata="";
                if(count($caserequirementPrecompletionRes)>0){
                  $updcount=1;


                  foreach($caserequirementPrecompletionRes as $caserequirementPrecompletionResult){

                    $caseDocumentID=$caserequirementPrecompletionResult->id;
                    $CasecompletionDocuments=CasecompletionDocument::find(array('caserequirement_id='.$caseDocumentID));
                    if($caserequirementPrecompletionResult->submitted_completion==1){$checkSubmit=" checked";}else{$checkSubmit="";}
                    if($caserequirementPrecompletionResult->received_completion==1){$checkreceived="checked";}else{$checkreceived="";}
                    if($caserequirementPrecompletionResult->reviewed_completion==1){$checkreviewed="checked"; }else{$checkreviewed="";}

                     $totalPrecompletiondata.='<tr id="precompletionrow'.$updcount.'">
                        <td style="width:50px;"><?=$updcount?></td>
                        <td>
                          <div class="details">
                            <select name="requirement_description_completion['.$updcount.']" id="requirement_description_completion'.$updcount.'" style="width:200px;">
                              <option value="">-Select-</option>';
                              if(count($precompletions)>0){
                                foreach($precompletions as $precompletion){
                                    if($caserequirementPrecompletionResult->offerid==$precompletion->id){$preCompletionOffer=" selected"; }else{$preCompletionOffer="";}

                                  $totalPrecompletiondata.='<option value="'.$precompletion->id.'"'.$preCompletionOffer.'>'.stripslashes($precompletion->offer_name).'</option>';
                                }
                              }
                            $totalPrecompletiondata.='</select>
                          </div>
                        </td>
                        
                         <td style="width: 150px;">
                            <input type="file" class="fileuploadcls" name="upload_document_completion['.$updcount.'][]" id="upload_document_completion'.$updcount.'" value="" multiple="multiple">
                                <div class="input-group col-xs-12">
                                    <input type="text" class="form-control input-lg uploadform" disabled="" placeholder="No file Choosen" style="display:none;">
                                    <span class="input-group-btn"><button class="browse btn btn-primary input-lg" type="button">
                                    <i class="fa fa-upload"></i>&nbsp;</button></span>
                                </div>
                         </td>
                        <td style="width: 200px;">
                          <a href="'.BASEURL.'dashboard/precompletiondownload/'.$caserequirementPrecompletionResult->lead_id.'/'.$caserequirementPrecompletionResult->id.'" class="btn btn-primary"><i class="fa fa-download"></i></a>
                         
                        </td>
                        <td style="width: 150px; text-align: center;"><span class="countdocument">'.count($CasecompletionDocuments).'</span><input type="hidden" name="casecompletionid['.$updcount.']" value="'.$caserequirementPrecompletionResult->id.'"></td>
                        <td style="width: 100px; text-align: center;"><a href="javascript: void(0)" onclick="removePrecompletionFunc('.$postval['lead_id'].', '.$updcount.', '.$caserequirementPrecompletionResult->id.');" class="btn btn-danger"><i class="fa fa-remove fa-times"></i></a></td>
                    </tr>';
                    $updcount++;
                  }

                }
                //======pre completion requirement added list=================

                $responseArr=array('response' => 1, 'totalcontentdata' => $totalPrecompletiondata, 'totalCount' => $updcount);
            }
           // print_r($_FILES);

        }
        echo json_encode($responseArr);
        exit();
    }
    public function precompletiondownloadAction($leadid="", $documentid=""){
        $response = new \Phalcon\Http\Response();

        if (!file_exists("uploads/precompletiondocument/lead_".$leadid."document_".$documentid)) {
            mkdir("uploads/precompletiondocument/lead_".$leadid."document_".$documentid, 0777, true);
        }
        $documentsList=CasecompletionDocument::find(array('conditions' => "caserequirement_id=".$documentid));
        if(count($documentsList)>0){
             $zip = new ZipArchive;
             if ($zip->open('uploads/precompletiondocument/lead_'.$leadid.'document_'.$documentid.'/case_requirement_precompletion_document.zip',  ZipArchive::CREATE)) {
                foreach($documentsList as $documentsResult){
                    //=========Zip code start from here===============
                    $fileName=$documentsResult->upload_document;
                    $zip->addFile('uploads/precompletiondocument/'.$fileName, $fileName);
                    //=========Zip code end here======================
                }
                $zip->close();
                   // echo 'Archive created!';
                header('Content-Type: application/zip');
                header("Content-Disposition: attachment; filename=lead_".$leadid."document_".$documentid."_document_files.zip");
                header('Content-Length: ' . filesize('uploads/precompletiondocument/lead_'.$leadid.'document_'.$documentid.'/case_requirement_precompletion_document.zip'));
                header("Location: ".BASEURL."uploads/precompletiondocument/lead_".$leadid."document_".$documentid."/case_requirement_precompletion_document.zip");
            }
        }else{
            return $response->redirect('dashboard/enquirydetail/'.$leadid);
        }

    }

    public function valuationdocumentsubmitAction(){
        $responseArr=array('response' => 0, 'valuationDocumentList' => '', 'totalCount' => 0);
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if(isset($allPost['valuer']) && count($allPost['valuer'])>0){
               // print_r($allPost); exit();
                $count=1;
                foreach($allPost['valuer'] as $index => $valuer){
                    $postval['valuer']=$valuer;
                   /* $postval['instructed_date']=$allPost['instructed_date'][$index];
                    $postval['date_paid']=$allPost['date_paid'][$index];
                    $postval['booked_date']=$allPost['booked_date'][$index];
                    $postval['valuation_status']=$allPost['valuation_status'][$index];
                    $postval['date_reviewed_valuation']=$allPost['date_reviewed_valuation'][$index];*/

                    if(isset($allPost['valuationid'][$index])){
                        $postval['id']=$allPost['valuationid'][$index];
                    }else{
                        unset($postval['id']);
                    }

                    $postval['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $postval['lead_id']=$allPost['lead_id'];
                    $postval['posted_by']=$this->session->get('sessUserID');
                    $valuationDocumentsDB= new ValuationDocuments();
                    $save=$valuationDocumentsDB->save($postval);
                    if($save){
                        $uploaddata['valuation_id']=$valuationDocumentsDB->id;
                        if(isset($_FILES['upload_document_valuation']['name'][$index]) && count($_FILES['upload_document_valuation']['name'][$index])>0){
                            foreach($_FILES['upload_document_valuation']['name'][$index] as $uploadIndex => $uploadFile){
                                $fileName=time().$uploadFile;
                                $uploaddata['upload_document']=$fileName;
                                move_uploaded_file($_FILES['upload_document_valuation']['tmp_name'][$index][$uploadIndex], "uploads/valuationdocument/".$fileName);
                                $uploaddata['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                $ValuationUploaddocument= new ValuationUploaddocument();
                                $saveDocument=$ValuationUploaddocument->save($uploaddata);
                            }

                        }
                    }
                    $count++;
                }
                //==========Valuation list=================
                 $valuationdocumentRes=ValuationDocuments::find(array('conditions' => "lead_id=".$postval['lead_id'], 'order' => "id asc"));
                 $valuationDocumentList="";
                if(count($valuationdocumentRes)>0){
                  $updcount=1;

                  foreach($valuationdocumentRes as $valuationdocumentResult){

                    $caseDocumentID=$valuationdocumentResult->id;
                    $valuationUploadDocuments=ValuationUploaddocument::find(array('valuation_id='.$caseDocumentID));
                     $valuationDocumentList.='<tr id="valuationrow'.$updcount.'">
                      <td style="width:50px;">'.$updcount.'</td>
                     
                      <td>
                         <div class="number">
                            <input type="text" name="valuer['.$updcount.']" id="valuer'.$updcount.'" style="width:150px;" value="'.$valuationdocumentResult->valuer.'" />
                              
                        </div>
                      </td>
                       
                    
                       <td style="width: 150px;">
                          <input type="file" class="fileuploadcls" name="upload_document_valuation['.$updcount.'][]" id="upload_document_valuation'.$updcount.'" value="" multiple="multiple">
                              <div class="input-group col-xs-12">
                                  <input type="text" class="form-control input-lg uploadform" disabled="" placeholder="No file Choosen" style="display:none;">
                                  <span class="input-group-btn"><button class="browse btn btn-primary input-lg" type="button">
                                  <i class="fa fa-upload"></i>&nbsp;</button></span>
                              </div>
                       </td>
                      <td style="width: 200px;">
                        <a href="'.BASEURL.'dashboard/valuationdocumentdownload/'.$valuationdocumentResult->lead_id.'/'.$valuationdocumentResult->id.'" class="btn btn-primary"><i class="fa fa-download"></i></a>
                       
                      </td>
                      <td style="width: 150px; text-align: center;"><span class="countdocument">'.count($valuationUploadDocuments).'</span><input type="hidden" name="valuationid['.$updcount.']" value="'.$valuationdocumentResult->id.'"></td>
                        <td style="width: 100px; text-align: center;"><a href="javascript: void(0)" onclick="removeValuationFunc('.$postval['lead_id'].', '.$updcount.', '.$valuationdocumentResult->id.');" class="btn btn-danger"><i class="fa fa-remove fa-times"></i></a></td>
                    </tr>';
                    $updcount++;
                  }

                }
                //==========End valuation List=============
                $responseArr=array('response' => 1, 'valuationDocumentList' => $valuationDocumentList, 'totalCount' => $updcount);
            }
           // print_r($_FILES);

        }
        echo json_encode($responseArr);
        exit();
    }

    public function valuationdocumentdownloadAction($leadid="", $documentid=""){
        $response = new \Phalcon\Http\Response();

        if (!file_exists("uploads/valuationdocument/lead_".$leadid."document_".$documentid)) {
            mkdir("uploads/valuationdocument/lead_".$leadid."document_".$documentid, 0777, true);
        }
        $documentsList=ValuationUploaddocument::find(array('conditions' => "valuation_id=".$documentid));
        if(count($documentsList)>0){
             $zip = new ZipArchive;
             if ($zip->open('uploads/valuationdocument/lead_'.$leadid.'document_'.$documentid.'/case_requirement_valuation_document.zip',  ZipArchive::CREATE)) {
                foreach($documentsList as $documentsResult){
                    //=========Zip code start from here===============
                    $fileName=$documentsResult->upload_document;
                    $zip->addFile('uploads/valuationdocument/'.$fileName, $fileName);
                    //=========Zip code end here======================
                }
                $zip->close();
                   // echo 'Archive created!';
                header('Content-Type: application/zip');
                header("Content-Disposition: attachment; filename=lead_".$leadid."document_".$documentid."case_requirement_valuation_document.zip");
                header('Content-Length: ' . filesize('uploads/valuationdocument/lead_'.$leadid.'document_'.$documentid.'/case_requirement_valuation_document.zip'));
                header("Location: ".BASEURL."uploads/valuationdocument/lead_".$leadid."document_".$documentid."/case_requirement_valuation_document.zip");
            }
        }else{
            return $response->redirect('dashboard/enquirydetail/'.$leadid);
        }

    }
    public function editbridgingloanAction(){
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

             //echo "<pre>";
             //print_r($allPost);exit();
             $enquiryID=$allPost['leadid'];
             $chkQuote=Enquiry::find(array('conditions' => "id='".$enquiryID."'", 'limit' => 1));
             if(count($chkQuote)>0){
                $allPost=array_merge($chkQuote[0]->toArray(),$allPost);
             }else{
                $allPost['id']=$enquiryID;
             }
             $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            //echo "<pre>"; print_r($allPost);exit();

                $enquiryDB = new Enquiry();
                $save=$enquiryDB->save($allPost);
                if($save){
                    $enquiryID=$enquiryDB->id;

                    //=======Save track report========
                    if(isset($allPost['id'])){
                        $trackData['track_for']='leadEdit';
                    }else{
                        $trackData['track_for']='leadAdd';
                    }
                    $trackData['userid']=$this->session->get('sessUserID');
                    $trackData['track_save_id']=$enquiryID;
                    $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                    $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                    $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $trackClickSave = new TrackClickSave();
                    $saveTrack=$trackClickSave->save($trackData);
                    //=======Save track report End========
                   echo 1;
                }else{
                    echo 2;
                }

        }
        exit();
    }
    public function editenquirydetailsAction(){
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

             //echo "<pre>";
             //print_r($allPost);exit();
             $enquiryID=$allPost['leadid'];
             $chkQuote=Enquiry::find(array('conditions' => "id='".$enquiryID."'", 'limit' => 1));
             if(count($chkQuote)>0){
                $allPost=array_merge($chkQuote[0]->toArray(),$allPost);
             }else{
                $allPost['id']                 = $enquiryID;
             }
             $allPost['modified']              = date("Y-m-d H:i:s", strtotime("+60 minutes"));
            //echo "<pre>"; print_r($allPost);exit();
                $allPost['amount_required']    = str_replace(",", "", $allPost['amount_required']);
                if($allPost["enquiry_source"]=="2" || $allPost["enquiry_source"]=="9" || $allPost["enquiry_source"]=="13" || $allPost["enquiry_source"]=="14")
                {
                    $allPost['lead_given_by']=463;
                }

                $enquiryDB = new Enquiry();
                $save=$enquiryDB->save($allPost);
                if($save){
                    $enquiryID=$enquiryDB->id;

                    //=======Save track report========
                    if(isset($allPost['id'])){
                        $trackData['track_for']='leadEdit';
                    }else{
                        $trackData['track_for']='leadAdd';
                    }

                    $trackData['userid']            = $this->session->get('sessUserID');
                    $trackData['track_save_id']     = $enquiryID;
                    $trackData['server_detail']     = $_SERVER['HTTP_USER_AGENT'];
                    $trackData['server_ip']         = $_SERVER['REMOTE_ADDR'];
                    $trackData['created']           = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $trackClickSave                 = new TrackClickSave();
                    $saveTrack=$trackClickSave->save($trackData);
                    //=======Save track report End========
                   echo 1;
                }else{
                    echo 2;
                }

        }
        exit();
    }
    /**
    * Loan Detail Action To add the loan detail
    * Action Name: editloandetailAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 29-11-2019
    **/
    public function editloandetailAction(){
        // echo "<pre>"; print_r($this->request->getPost());die;
        $response = new \Phalcon\Http\Response();
        if($this->request->isPost()){
            $allPost = $this->request->getPost();
            if($allPost['leadid']!=''){
                $allPost['id']=$allPost['leadid'];

               $getData     = array();
                $chkQuote   = Enquiry::find(array('conditions' => "id='".$allPost['id']."'", 'limit' => 1));
                if(count($chkQuote)>0){
                    $getData=array_merge($chkQuote[0]->toArray(),$allPost);
                    $getData['modified']                 = date("Y-m-d H:i:s", strtotime("+60 minutes"));

                    $strData                             = $allPost["CompAuctionData"];
                    $dateStr                             = str_replace('/', '-', $strData);
                    $getData['CompAuctionData']          = date("Y-m-d",strtotime($dateStr));

                    $strDataPurchase                     = $allPost["dateofpurchase"];
                    $dateStrpr                           = str_replace('/', '-', $strDataPurchase);
                    $getData['dateofpurchase']           = date("Y-m-d",strtotime($dateStrpr));

                    $getData["income"]                   = str_replace(",", "", $allPost["income"]);
                    $getData["purchase_price"]           = str_replace(",", "", $allPost["purchase_price"]);
                    $getData["legalfee_value"]           = str_replace(",", "", $allPost["legalfee_value"]);
                    $getData["legalfee_percent"]         = str_replace(",", "", $allPost["legalfee_percent"]);
                    $getData["fin_net_ltc_value"]        = str_replace(",", "", $allPost["fin_net_ltc_value"]);
                    $getData["sil"]                      = str_replace(",", "", $allPost["sil"]);
                    $getData["development_s"]            = str_replace(",", "", $allPost["development_s"]);
                    $getData["contingency_value"]        = str_replace(",", "", $allPost["contingency_value"]);
                    $getData["funded_to_date"]           = str_replace(",", "", $allPost["funded_to_date"]);
                    $getData["current_market_value"]     = str_replace(",", "", $allPost["current_market_value"]);

                     $getData["market_value"]            = str_replace(",", "", $allPost["market_value"]);
                    $getData["rental_income"]            = str_replace(",", "", $allPost["rental_income"]);

                    $getData["current_debt"]             = str_replace(",", "", $allPost["current_debt"]);
                    // $getData["amount_required"]          = str_replace(",", "", $allPost["amount_required"]);
                    $getData["amt_outstanding_ist_charg"]= str_replace(",", "", $allPost["amt_outstanding_ist_charg"]);
                    $getData["original_purchase_price"]  = str_replace(",", "", $allPost["original_purchase_price"]);
                    $getData["omv"]                      = str_replace(",", "", $allPost["omv"]);
                    $getData["cost_of_work"]             = str_replace(",", "", $allPost["cost_of_work"]);
                    $getData["tot_build_cost"]           = str_replace(",", "", $allPost["tot_build_cost"]);

                    $getData["required_toward_build"]    = str_replace(",", "", $allPost["required_toward_build"]);
                    $getData["require_day_one_purchase"] = str_replace(",", "", $allPost["require_day_one_purchase"]);
                    $getData["gdv"]                      = str_replace(",", "", $allPost["gdv"]);
                    $getData["deposit"]                  = str_replace(",", "", $allPost["deposit"]);

                    $getData["refurb_cost"]              = str_replace(",", "", $allPost["refurb_cost"]);
                    $getData["ltgdv_exe_interest"]       = str_replace(",", "", $allPost["ltgdv_exe_interest"]);
                    // $getData["capital_raise"]            = str_replace(",", "", $allPost["capital_raise"]);
                    $getData["capital_raise_value"]      = str_replace(",", "", $allPost["capital_raise_value"]);
                    $getData["monthly_mortgage_pmt"]     = str_replace(",", "", $allPost["monthly_mortgage_pmt"]);
                    $getData["rental_per_anum"]          = str_replace(",", "", $allPost["rental_per_anum"]);
                    $getData["ltp"]                      = str_replace(",", "", $allPost["ltp"]);
                    $getData["net_loan"]                 = str_replace(",", "", $allPost["net_loan"]);
                    $getData["ltp_value"]                = str_replace(",", "", $allPost["ltp_value"]);
                    $getData["net_ltv"]                  = str_replace(",", "", $allPost["net_ltv"]);
                    $getData["net_ltp"]                  = str_replace(",", "", $allPost["net_ltp"]);
                    $getData["net_ltgdv"]                = str_replace(",", "", $allPost["net_ltgdv"]);
                    $getData["loan_to_gdv_value"]        = str_replace(",", "", $allPost["loan_to_gdv_value"]);
                    $getData["profit"]                   = str_replace(",", "", $allPost["profit"]);

                    $getData["ltc_exe_fin"]              = str_replace(",", "", $allPost["ltc_exe_fin"]);
                    $getData["erv"]                      = str_replace(",", "", $allPost["erv"]);
                    $getData["net_ltv_on_exit"]          = str_replace(",", "", $allPost["net_ltv_on_exit"]);
                    $getData["net_ltc"]                  = str_replace(",", "", $allPost["net_ltc"]);
                    $getData["cmv"]                      = str_replace(",", "", $allPost["cmv"]);
                    $getData["invetiment_income"]        = str_replace(",", "", $allPost["invetiment_income"]);

                    $getData["gross_yield"]              = str_replace(",", "", $allPost["gross_yield"]);
                    $getData["day_one_loan"]             = str_replace(",", "", $allPost["day_one_loan"]);
                    $getData["gross_loan_amount"]        = str_replace(",", "", $allPost["gross_loan_amount"]);

                    $getData['total_sqft']               = str_replace(",", "", $allPost['total_sqft']);
                    $getData['avg_unit_price']           = str_replace(",", "", $allPost['avg_unit_price']);
                    $getData['build_cost_per_unit']      = str_replace(",", "", $allPost['build_cost_per_unit']);
                    $getData['build_cost_per_sqft']      = str_replace(",", "", $allPost['build_cost_per_sqft']);

                    if($allPost["date_ofy__purchase"]   !="")
                    {
                        $getData["date_of_purchase"]     = $allPost["date_ofy__purchase"];
                    }
                    else if($allPost["date_of_purchase"]!="")
                    {
                        $getData["date_of_purchase"]     =$allPost["date_of_purchase"];
                    }
                    if($allPost["construction_cost"]    !="")
                    {
                        $getData["construction_cost"]    = str_replace(",", "", $allPost["construction_cost"]);
                    }
                    if($allPost["contingency"]          !="")
                    {
                        $getData["contingency"]          = str_replace(",", "", $allPost["contingency"]);
                    }
                    if($allPost["professional_fees"]    !="")
                    {
                        $getData["professional_fees"]    =str_replace(",", "", $allPost["professional_fees"]);
                    }

                    $getData["yield_data"]                      = str_replace(",", "", $allPost["yield_data"]);
                    $getData["short_lease_no"]                  = str_replace(",", "", $allPost["short_lease_no"]);
                    $getData["country_of_birth"]                = str_replace(",", "", $allPost["country_of_birth"]);
                    $getData["foreign_income"]                  = str_replace(",", "", $allPost["foreign_income"]);
                    $getData["single_no"]                       = str_replace(",", "", $allPost["single_no"]);
                    $getData["single_sqm"]                      = str_replace(",", "", $allPost["single_sqm"]);
                    $getData["double_no"]                       = str_replace(",", "", $allPost["double_no"]);
                    $getData["double_sqm"]                      = str_replace(",", "", $allPost["double_sqm"]);
                    $getData["single_bath_no"]                  = str_replace(",", "", $allPost["single_bath_no"]);
                    $getData["single_bath_sqm"]                 = str_replace(",", "", $allPost["single_bath_sqm"]);
                    $getData["double_bath_no"]                  = str_replace(",", "", $allPost["double_bath_no"]);
                    $getData["double_bath_sqm"]                 = str_replace(",", "", $allPost["double_bath_sqm"]);
                    $getData["no_of_kitchen_hmo_have"]          = str_replace(",", "", $allPost["no_of_kitchen_hmo_have"]);
                    $getData["communal_area_sqm"]               = str_replace(",", "", $allPost["communal_area_sqm"]);
                    $getData["outside_space_sqm"]               = str_replace(",", "", $allPost["outside_space_sqm"]);
                    $getData["deposit_percent"]                 = str_replace(",", "", $allPost["deposit_percent"]);




                    $getData["cmv"]                            = str_replace(",", "", $allPost["cmv"]);
                    $getData["invetiment_income"]              = str_replace(",", "", $allPost["invetiment_income"]);
                    $getData["day_one_loan"]                   = str_replace(",", "", $allPost["day_one_loan"]);

                    $getData["first_charge_current_debt"]      = str_replace(",", "", $allPost["first_charge_current_debt"]);
                    $getData["second_charge_current_debt"]     = $allPost["second_charge_current_debt"];

                    // ================
                    $getData["second_charge_current_debt"]     = $allPost["second_charge_current_debt"];

                    // ================


                   //echo "<pre>";print_r($getData);exit;
                    /*$getData["interestservicing"]=$allPost["interestservicing"];
                    $getData["brokerfee"]=$allPost["brokerfee"];*/
                    $enquiryDB     = new Enquiry();
                    $saveData      = $enquiryDB->save($getData);
                    if($saveData){
                        $allPost['lead_id']      = $enquiryDB->id;
                        $enquiryDetail           = EnquiryDetail::find(array('conditions' => "lead_id='".$allPost['lead_id']."'", 'limit' => 1))->toArray();
                          if(count($enquiryDetail)>0){
                            $allPost['id']       = $enquiryDetail[0]['id'];
                            $allPost['modified'] = date("Y-m-d H:i:s", strtotime("+60 minutes"));

                            $enqData             = array_merge($enquiryDetail[0],$allPost);
                          }else{
                            $allPost['created']  = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $enqData             = $allPost;
                          }
                        $enqData["total_sqft"]          = str_replace(",", "", $allPost["total_sqft"]);
                        $enqData["avg_unit_price"]      = str_replace(",", "", $allPost["avg_unit_price"]);
                        $enqData["build_cost_per_unit"] = str_replace(",", "", $allPost["build_cost_per_unit"]);
                        $enqData["build_cost_per_sqft"] = str_replace(",", "", $allPost["build_cost_per_sqft"]);


                         $enquiryDb = new EnquiryDetail();
                        $saveData   = $enquiryDb->save($enqData);

                        //=======Save track report========
                        if(isset($allPost['id'])){
                            $trackData['track_for'] = 'quoteEdit';
                        }else{
                            $trackData['track_for'] = 'quoteAdd';
                        }
                        $trackData['userid']          = $this->session->get('sessUserID');
                        $trackData['track_save_id']   = $quickQuoteDB->id;
                        $trackData['server_detail']   = $_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']       = $_SERVER['REMOTE_ADDR'];
                        $trackData['created']         = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave               = new TrackClickSave();
                        $saveTrack                    = $trackClickSave->save($trackData);
                    //=======Save track report End========
                        echo 1;
                    }else{
                        echo 2;
                    }

                }
                //echo "<pre>";print_r($getData);exit;

            //}
            }

        }
    }
    public function editapplicantAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            echo 3;
        }
        $sessionID=$this->session->get('sessUserID');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            //echo "<pre>";print_r($allPost);exit();

            $getData=array();
                $chkApplicant=Enquiry::find(array('conditions' => "id='".$allPost['lead_id']."'", 'limit' => 1));
                //echo "<pre>";print_r($chkQuote->toArray());exit;
                if(count($chkApplicant)>0){

                    $companyData['name_of_comany']       = $allPost['name_of_comany'];
                    $companyData['no_of_director']       = $allPost['no_of_director'];
                    $companyData['no_of_shareholder']    = $allPost['no_of_shareholder'];
                    $companyData['registration_number']  = $allPost['registration_number'];
                    //$getData=$chkQuote[0]->toArray();
                    $getData               = array_merge($chkApplicant[0]->toArray(),$companyData);
                    $getData['modified']   = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                   //print_r($getData);exit();
                    $enquiryDB= new Enquiry();
                    $saveData=$enquiryDB->save($getData);
                }
                $allPost['lead_id']    = $allPost['lead_id'];
                $allPost['posted_by']  = $sessionID;
                $allPost['modified']   = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                /*$chkQuote=QuickQuote::find(array('conditions' => "lead_id='".$allPost['lead_id']."'", 'limit' => 1));
                if(count($chkQuote)>0){
                    $allPost['id']=$chkQuote[0]->id;
                    $allPost['created']=$chkQuote[0]->created;
                }else{
                    $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                }*/
                $allPost['created']    = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $appNum                = $allPost['applicantnumber'];
                $titleArr              = array();
                $fullnameArr           = array();
                $dobArr                = array();
                $nationalityArr        = array();
                $currentAddressArr     = array();
                $contactnoArr          = array();
                $residentialArr        = array();
                $pdvalueArr            = array();
                $pdBalanceArr          = array();
                $pdlenderArr           = array();
                $previousAddressArr    = array();
                $previousAddressArr2   = array();
                $diffArr               = array();
                $timeAtThisAddressArr=array();
                $newAddressArray=array();
                $newPostcode=array();


            foreach($allPost['pd_time_at_this_address'] as $key=>$tAtThis){
                $timeAtThisAddressArr[]=$tAtThis;
                $newPostcode[]=$allPost["pd_pin"][$key];
                $newAddressArray[]=$allPost["pd_current_address"][$key];
            }

               //print_r($allPost['pd_residentialstatus']);exit;
//            foreach($allPost['pd_time_at_this_address'] as $key=>$tAtThis){
//                $timeAtThisAddressArr[]=$tAtThis;
//            }

                foreach($allPost['pd_title'] as $key=>$title)
                {
                    //echo 123;exit;
                    array_push($titleArr, $title);

                    $fullname            = $allPost['firstname'][$key]." ".$allPost['middlename'][$key]." ".$allPost['lastname'][$key];
                    array_push($fullnameArr, $fullname);
                    array_push($dobArr, $allPost['pd_dob'][$key]);
                    array_push($nationalityArr, $allPost['pd_nationality'][$key]);
//                    $address             = $allPost['pd_current_address'][$key].":K:".$allPost['pd_pin'][$key];
//                    array_push($timeAtThisAddressArr, $allPost['pd_time_at_this_address'][$key]);
                    $var=$allPost['pd_time_at_this_address'][$key];
                    foreach($var as $key=>$datevalue)
                {
                    array_push($diffArr, $datevalue);
                     $date1      = date("d/m/Y");
                     $diff       = abs(strtotime($date2) - strtotime($date1));
                     $years      = floor($diff / (365*60*60*24));
                   //echo "<pre>" print_r($datevalue);exit;
                    }
                   //   $date1 = date("d/m/Y");
                   //     $date2 = $allPost['pd_time_at_this_address'][$key];

                   //     for($i=0;$i<=(count($date2))-1;$i++)
                   //      {
                   //   $diff = abs(strtotime($date2) - strtotime($date1));
                   //    $years = floor($diff / (365*60*60*24));
                   // //echo $years;exit;
                   //   if(($years<3) ||($years==3))
                   //  {
                   //      $previousaddress2=$allPost['pd_previous_address2'][$key].":K:".$allPost['pd_previous_pin2'][$key];
                   //      array_push($previousAddressArr2, $previousaddress2);
                   //       $previousaddress=$allPost['pd_previous_address'][$key].":K:".$allPost['pd_previous_pin'][$key];
                   //      array_push($previousAddressArr, $previousaddress);

                   //    }
                   //  }

//                    if(($allPost['pd_time_at_this_address'][$key]<3) ||($allPost['pd_time_at_this_address'][$key]==3))
//                    {
//                        $previousaddress2=$allPost['pd_previous_address2'][$key].":K:".$allPost['pd_previous_pin2'][$key];
//                        array_push($previousAddressArr2, $previousaddress2);
//                         $previousaddress=$allPost['pd_previous_address'][$key].":K:".$allPost['pd_previous_pin'][$key];
//                        array_push($previousAddressArr, $previousaddress);
//
//
//                    }
                    $address=$allPost['pd_current_address'][$key].":K:".$allPost['pd_pin'][$key].":K:".$allPost['pd_time_at_this_address_current'][$key];
                    array_push($currentAddressArr, $address);
                    if (isset($allPost['pd_previous_address'.($key+1).''])):
                        $previousaddress=json_encode($allPost['pd_previous_address'.($key+1).'']).":K:".json_encode($allPost['pd_previous_pin'.($key+1).'']).":K:".json_encode($allPost['pd_time_at_this_address_previous'.($key+1).'']);
                        array_push($previousAddressArr, $previousaddress);
                    endif;
                    array_push($contactnoArr, $allPost['pd_mobile_number'][$key]);
                    array_push($residentialArr, $allPost['pd_residentialstatus'][$key]);

                     array_push($pdvalueArr, $allPost['pd_value'][$key]);
                    array_push($pdBalanceArr, $allPost['pd_balance'][$key]);
                    array_push($pdlenderArr, $allPost['pd_lender'][$key]);

                }
                $allPost["pd_title"]=implode(":::", $titleArr);
                $allPost["pd_fullname"]=implode(":::", $fullnameArr);
                $allPost["pd_dob"]=implode(":::", $dobArr);

                $allPost["pd_email"]=implode(":::", $allPost['pd_email']);
                $allPost["pd_phone_no"]=implode(":::", $allPost['pd_phone_no']);

                $allPost["pd_nationality"]=implode(":::", $nationalityArr);
                $allPost["pd_current_address"]=implode(":::", $currentAddressArr);
                $allPost["pd_previous_address"]=implode(":::", $previousAddressArr);
                $allPost["pd_previous_address2"]=implode(":::", $previousAddressArr2);

                $leadAppDetailTmp=LeadApplication::find(array('conditions' => "lead_id=".$allPost['lead_id'], 'limit' => 1));
                $leadAppDetailTmp=$leadAppDetailTmp->toArray();
                $leadAppDetailTmp=$leadAppDetailTmp[0];

                $allPost["one_drive_link"]=$leadAppDetailTmp['one_drive_link'];
               
        
               
                $allPost["pd_mobile_number"]=implode(":::", $contactnoArr);
                $allPost["pd_residentialstatus"]=implode(":::", $residentialArr);
                $allPost["loan_amt_required"]=$allPost["amount_required"];
                $allPost["ltv_required"]=$allPost["ltv"];
                $allPost["term_required"]=$allPost["term_required"];

                 $allPost["pd_value"]=implode(":::", $pdvalueArr);
                $allPost["pd_balance"]=implode(":::", $pdBalanceArr);
                $allPost['pd_lender']=implode(":::", $pdlenderArr);
                //$allPost['pd_residentialstatus']=implode(":::", $residentialArr);

                //echo "<pre>";print_r($allPost);exit;
                $leadAppDb= new LeadApplication();
                $saveData=$leadAppDb->save($allPost);
                if($saveData){
                    //=======Save track report========
                    if(isset($allPost['id'])){
                        $trackData['track_for']='editApplicant';
                    }else{
                        $trackData['track_for']='addApplicant';
                    }
                    $trackData['userid']=$this->session->get('sessUserID');
                    $trackData['track_save_id']=$leadAppDb->id;
                    $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                    $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                    $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $trackClickSave = new TrackClickSave();
                    $saveTrack=$trackClickSave->save($trackData);
                    //=======Save track report End========
                   echo 1;
                }else{
                    echo 2;
                }



        }
        exit();
    }

     /**
    * Edit security detail Action To edit the security info
    * Action Name: quickquoteAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 15-06-2018
    * v2 Created Date: 18-10-2019
    **/
    public function editsecurityAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            echo 3;
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            //print_r($allPost);exit();
               // echo 123;exit;
                $allPost['id']          = $allPost['lead_id'];
                $allPost['modified']    = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $chkQuote=Enquiry::findFirst(array('conditions' => "id='".$allPost['id']."'", 'limit' => 1));
                $chkQuote=$chkQuote->toArray();
                if($chkQuote['application_type']==3){
                    if(!isset($allPost['fully_rented_out'])){
                        $allPost['fully_rented_out']=0;
                    }
                    if(!isset($allPost['part_investiment'])){
                        $allPost['part_investiment']=0;
                    }
                    if(!isset($allPost['debt_consolidation'])){
                        $allPost['debt_consolidation']=0;
                    }
                    if(!isset($allPost['personal_business_debt_one'])){
                        $allPost['personal_business_debt_one']='';

                    }else{

                        $allPost['personal_business_debt_one']=implode(",", $allPost['personal_business_debt_one']);
                    }
                    if(!isset($allPost['personal_business_debt_two'])){
                        $allPost['personal_business_debt_two']='';
                    }else{
                        $allPost['personal_business_debt_two']=implode(",", $allPost['personal_business_debt_two']);
                    }
                    if(!isset($allPost['personal_business_debt_three'])){
                        $allPost['personal_business_debt_three']='';
                    }else{
                        $allPost['personal_business_debt_three']=implode(",", $allPost['personal_business_debt_three']);
                    }

                    if(!isset($allPost['property_imnprovements'])){
                        $allPost['property_imnprovements']=0;
                    }
                    if(!isset($allPost['purchase_another_property'])){
                        $allPost['purchase_another_property']=0;
                    }

                }

                $chkQuote=array_merge($chkQuote,$allPost);
                $chkQuote['monthly_payment_three']               = str_replace(",", "", $chkQuote['monthly_payment_three']);
                $chkQuote['refinance_current_balance_three']     = str_replace(",", "", $chkQuote['refinance_current_balance_three']);
                $chkQuote['refinance_limit_three']               = str_replace(",", "", $chkQuote['refinance_limit_three']);
                $chkQuote['monthly_payment_two']                 = str_replace(",", "", $chkQuote['monthly_payment_two']);
                $chkQuote['refinance_current_balance_two']       = str_replace(",", "", $chkQuote['refinance_current_balance_two']);
                $chkQuote['refinance_limit_two']                 = str_replace(",", "", $chkQuote['refinance_limit_two']);
                $chkQuote['monthly_payment_one']                 = str_replace(",", "", $chkQuote['monthly_payment_one']);
                $chkQuote['refinance_current_balance_one']       = str_replace(",", "", $chkQuote['refinance_current_balance_one']);
                $chkQuote['refinance_limit_one']                 = str_replace(",", "", $chkQuote['refinance_limit_one']);

                $chkQuote['addiotional_monthly_income']          = str_replace(",", "", $chkQuote['addiotional_monthly_income']);
                $chkQuote['deposit_amt']                         = str_replace(",", "", $chkQuote['deposit_amt']);
                $chkQuote['estimated_rental_income']             = str_replace(",", "", $chkQuote['estimated_rental_income']);
                $chkQuote['wht_is_the_purchase_price']           = str_replace(",", "", $chkQuote['wht_is_the_purchase_price']);
                $chkQuote['service_charge']                      = str_replace(",", "", $chkQuote['service_charge']);
                $chkQuote['ground_rent']                         = str_replace(",", "", $chkQuote['ground_rent']);
                $chkQuote['security_after_value']                = str_replace(",", "", $chkQuote['security_after_value']);
                  $chkQuote['rental_income']                     = str_replace(",", "", $chkQuote['rental_income']);
                  $chkQuote['outstanding_balance']               = str_replace(",", "", $chkQuote['outstanding_balance']);
                  $chkQuote['security_current_value']            = str_replace(",", "", $chkQuote['security_current_value']);

                 $chkQuote['purchase_price']                     = str_replace(",", "", $chkQuote['purchase_price']);
                 $chkQuote['security_intend_spendon']            = str_replace(",", "", $chkQuote['security_intend_spendon']);




                //echo "<pre>";print_r($allPost);exit;
                $enquiryDb= new Enquiry();
                $saveData=$enquiryDb->save($chkQuote);
                if($saveData){

                    //=========Additional Address=========
                    if($chkQuote['security_is_additional']=='Yes'){
                        if(count($chkQuote['mul_add_security_address'])>0){
                            $this->modelsManager->executeQuery("delete from SecurityAdditionalAddress where lead_id='".$enquiryDb->id."'");
                            foreach($chkQuote['mul_add_security_address'] as $index => $securityAddress){

                                $additionalData['lead_id']=$enquiryDb->id;
                                $additionalData['add_security_address']=$securityAddress;
                                $additionalData['add_security_postcode']=$chkQuote['mul_add_security_postcode'][$index];
                                //$additionalData['add_security_postcode']=str_replace(",", "", $chkQuote['add_security_postcode']);


                                $additionalData['security_current_value']=$chkQuote['mul_security_current_value'][$index];
                                $additionalData['security_current_value']=str_replace(",", "", $additionalData['security_current_value']);

                                $additionalData['outstanding_balance']=$chkQuote['mul_outstanding_balance'][$index];
                                $additionalData['outstanding_balance']=str_replace(",", "", $additionalData['outstanding_balance']);

                                $additionalData['rental_income']=$chkQuote['mul_rental_income'][$index];
                                $additionalData['rental_income']=str_replace(",", "", $additionalData['rental_income']);

                                $additionalData['security_tenure']=$chkQuote['security_tenure'][$index];
                                $additionalData['security_leasehold_remain_year']=$chkQuote['security_leasehold_remain_year'][$index];

                                $additionalDb = new SecurityAdditionalAddress();

                                $saveAdditionalData = $additionalDb->save($additionalData);

                                unset($additionalData);

                            }
                        }
                    }
                    //=========Additional Address end====
                    //=======Save track report========
                    if(isset($allPost['id'])){
                        $trackData['track_for']='SecurityEdit';
                    }else{
                        $trackData['track_for']='SecurityAdd';
                    }
                    $trackData['userid']=$this->session->get('sessUserID');
                    $trackData['track_save_id']=$quickQuoteDB->id;
                    $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                    $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                    $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $trackClickSave = new TrackClickSave();
                    $saveTrack=$trackClickSave->save($trackData);
                    //=======Save track report End========
                    echo 1;
                }else{
                    echo 2;
                }




        }
        exit();
    }

     /**
    * Edit Quick quote form calculation data
    * Action Name: editenquiryquoteformAction
    * Author By: Chittaranjan Sahoo
    * v2 Created Date: 03-12-2019
    **/

    public function editenquiryquoteformAction(){
        // echo "123";die;
        // var_dump($this->request->isPost());die;
        if($this->request->isPost()){
            $allPost = $this->request->getPost();
            // echo "<pre>"; print_r($allPost);die;
            //print_r($allPost); exit();
            if($allPost['submitclickfrom']==1){
                $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $chkQuote=QuickQuote::find(array('conditions' => "lead_id='".$allPost['lead_id']."'", 'limit' => 1));
                if(count($chkQuote)>0){
                    //echo 1111;
                    $allPost['id']=$chkQuote[0]->id;
                    $allPost['created']=$chkQuote[0]->created;
                }else{
                    $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                }
                $allPost['purchase_price']=str_replace(",", "", $allPost['purchase_price']);
                $allPost['amount_required']=str_replace(",", "", $allPost['amount_required']);
                //print_r($allPost);exit();
                $quickQuoteDB= new QuickQuote();
                $saveData=$quickQuoteDB->save($allPost);
                if($saveData){
                    //=======Save track report========
                    if(isset($allPost['id'])){
                        $trackData['track_for']='quoteformEdit';
                    }else{
                        $trackData['track_for']='quoteformAdd';
                    }
                    $trackData['userid']=$this->session->get('sessUserID');
                    $trackData['track_save_id']=$quickQuoteDB->id;
                    $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                    $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                    $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $trackClickSave = new TrackClickSave();
                    $saveTrack=$trackClickSave->save($trackData);
                    //=======Save track report End========

                    $quickquoteid=$quickQuoteDB->id;
                    $this->modelsManager->executeQuery("delete from QuickquoteDetails where quickquoteid='".$quickquoteid."'");
                    $quoteData['quickquoteid']=$quickquoteid;
                    if(isset($allPost['lendergetid']) && !empty($allPost['lendergetid'])){
                        foreach($allPost['lendergetid'] as $index => $lendersingid){
                            $chkDetail=QuickquoteDetails::find(array(
                            'conditions' => "quickquoteid='".$quickquoteid."' and lender_id='".$lendersingid."'",
                            'limit' => 1
                            ));
                            if(count($chkDetail)>0){
                                $quoteData['id']=$chkDetail[0]->id;
                                $quoteData['created']=$chkDetail[0]->created;
                                $quoteData['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            }else{
                                $quoteData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            }
                            $fieldIndex=$index+1;
                            $quoteData['lender_id']=$lendersingid;
                             $quoteData['gross_loan']=str_replace(",", "", $allPost['grossLoan'.$fieldIndex]);
                            $quoteData['gross_ltv']=str_replace(",", "", $allPost['grossLtv'.$fieldIndex]);
                            /*$quoteData['lender_fee']=$allPost['lenderFee'.$fieldIndex];
                            $quoteData['brokerfee']=$allPost['brokerfee'.$fieldIndex];*/
                            $quoteData['product']=$allPost['product'.$fieldIndex];
                            $quoteData['purchase']=str_replace(",", "", $allPost['purchase'.$fieldIndex]);
                            $quoteData['ratepermonth']=str_replace(",", "", $allPost['ratepermonth'.$fieldIndex]);

                            $quoteData['ratepermonth']=str_replace(",", "", $allPost['ratepermonth'.$fieldIndex]);
                            $quoteData['rateperanum']=str_replace(",", "", $allPost['rateperanum'.$fieldIndex]);
                            $quoteData['term_required']=str_replace(",", "", $allPost['term_required'.$fieldIndex]);
                            $quoteData['termval']=str_replace(",", "", $allPost['termval'.$fieldIndex]);
                            $quoteData['costpermonth']=str_replace(",", "", $allPost['costpermonth'.$fieldIndex]);
                            $quoteData['costpertheterm']=str_replace(",", "", $allPost['costpertheterm'.$fieldIndex]);
                            $quoteData['in_per']=str_replace(",", "", $allPost['in_per'.$fieldIndex]);
                            $quoteData['in_val']=str_replace(",", "", $allPost['in_val'.$fieldIndex]);
                            $quoteData['broker_per']=str_replace(",", "", $allPost['broker_per'.$fieldIndex]);
                            $quoteData['broker_val']=str_replace(",", "", $allPost['broker_val'.$fieldIndex]);

                            $quoteData['net_loan_if_serviced']=str_replace(",", "", $allPost['net_loan_if_serviced'.$fieldIndex]);
                            $quoteData['net_ltv_serviced']=str_replace(",", "", $allPost['net_ltv_serviced'.$fieldIndex]);
                            $quoteData['net_loan_if_deducted']=str_replace(",", "", $allPost['net_loan_if_deducted'.$fieldIndex]);
                            $quoteData['net_ltv_deducted']=str_replace(",", "", $allPost['net_ltv_deducted'.$fieldIndex]);
                             $quoteData['legals']=$allPost['legals'.$fieldIndex];
                            $quoteData['valuation']=$allPost['quote_valuation'.$fieldIndex];
                            $quoteData['adminval']=$allPost['adminval'.$fieldIndex];
                            $quoteData['exit_fee']=$allPost['exit_fee'.$fieldIndex];

                            $quoteData['interestedCalculated']=$allPost['interestedCalculated'.$fieldIndex];


                            $QuickquoteDetails= new QuickquoteDetails();
                            $save=$QuickquoteDetails->save($quoteData);
                        }

                    }
                   echo 1;

                }else{
                    echo 2;
                }


                exit();
            }

        }
    }
    public function completedleadAction(){
        $response = new \Phalcon\Http\Response();
        $allParam=$this->dispatcher->getParams();

        $sessionID=$this->session->get('sessUserID');
        //===========pagination===========
        $paged=$this->dispatcher->getParam("paged");
        $page = (int) (!isset($paged) ? 1 : $paged);
        $page = ($page == 0 ? 1 : $page);
        $perpage =20;
        $startpoint = ($page * $perpage) - $perpage;


        $totrecord=WorkflowTask::findAll("select t.* from (SELECT workflow_task.* FROM workflow_task INNER JOIN enquiry ON workflow_task.lead_id=enquiry.id WHERE workflow_task.case_status=5 and workflow_task.lead_id!='' ORDER BY workflow_task.id desc) as t left join task_status on t.task_status=task_status.id left join case_status on t.case_status=case_status.id left join charges on t.product=charges.id group by t.lead_id order by t.id desc");
        $workflowTaskRes=WorkflowTask::findAll("select t.* from (SELECT workflow_task.* FROM workflow_task INNER JOIN enquiry ON workflow_task.lead_id=enquiry.id WHERE workflow_task.case_status=5 and workflow_task.lead_id!='' ORDER BY workflow_task.id desc) as t left join task_status on t.task_status=task_status.id left join case_status on t.case_status=case_status.id left join charges on t.product=charges.id group by t.lead_id order by t.id desc limit ".$startpoint.", ".$perpage);


        //================================
        $this->view->setVar('workflowTaskRes', $workflowTaskRes);
        $this->view->setVar('totrecord', count($totrecord));
        $this->view->setVar('perpage', $perpage);
        $this->view->setVar('paged', $paged);
        $this->view->setVar('startpoint', $startpoint);
        //echo 'This page is comming Soon';exit;
    }
    public function workfloweditAction($id=''){
        $response = new \Phalcon\Http\Response();
        if($id==""){
            return $response->redirect("dashboard/");
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $workFlowdetail=WorkflowTask::findFirst(array('conditions' => "id=".$id));
            $allPost['id']=$id;
            $allPost['posted_adv_id']=$workFlowdetail->posted_adv_id;
            $allPost['created']=$workFlowdetail->created;
            $allPost['lead_id']=$workFlowdetail->lead_id;
            $leadid=$allPost['lead_id'];
            $allPost['show_in_task']=$workFlowdetail->show_in_task;
            //print_r($allPost);exit();
            $workflowTaskDB= new WorkflowTask();
            $save=$workflowTaskDB->save($allPost);
            if($save){
                $this->flashSession->success("Updated Successfully");
                return $response->redirect("dashboard/completedlead");
            }else{
                $this->flashSession->success("Updating Failed");
                return $response->redirect("dashboard/completedlead");
            }
        }
         $workflowTaskDetails=WorkflowTask::find(array('conditions' => "id=".$id, 'order' => "id desc", 'limit' => 1));
        if(count($workflowTaskDetails)>0){
          $_POST=$workflowTaskDetails[0]->toArray();
        }
    }
    /**
    * Edit Credit History Action To edit the credit history detail
    * Action Name: editcredithistoryActuion
    * Author By: Chittaranjan Sahoo
    * v2 Created Date: 09-12-2019
    **/
    public function editcredithistoryAction(){

        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            echo 3;
        }

        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            //print_r($allPost);exit();
               // echo 123;exit;
                $allPost['id']              = $allPost['lead_id'];
                $allPost['modified']        = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $enqData                    = Enquiry::findFirst(array('conditions' => "id='".$allPost['id']."'", 'limit' => 1));
                $enqData                    = $enqData->toArray();


                $enqData=array_merge($enqData,$allPost);

                //echo "<pre>";print_r($allPost);exit;
                $enquiryDb= new Enquiry();
                $saveData=$enquiryDb->save($enqData);
                if($saveData){
                    //=======Save track report========
                    if(isset($allPost['id'])){
                        $trackData['track_for']='credithistoryEdit';
                    }else{
                        $trackData['track_for']='credithistoryAdd';
                    }
                    $trackData['userid']           = $this->session->get('sessUserID');
                    $trackData['track_save_id']    = $quickQuoteDB->id;
                    $trackData['server_detail']    = $_SERVER['HTTP_USER_AGENT'];
                    $trackData['server_ip']        = $_SERVER['REMOTE_ADDR'];
                    $trackData['created']          = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $trackClickSave                = new TrackClickSave();
                    $saveTrack=$trackClickSave->save($trackData);
                    //=======Save track report End========
                    echo 1;
                }else{
                    echo 2;
                }





        }
        exit();
    }
    public function editexperinceAction(){

        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            echo 3;
        }

        if($this->request->isPost()){
            $allPost=$this->request->getPost();

                $allPost['id']=$allPost['lead_id'];

               $getData=array();
                $chkExperince=Enquiry::find(array('conditions' => "id='".$allPost['id']."'", 'limit' => 1));
                //echo "<pre>";print_r($chkQuote->toArray());exit;
                if(count($chkExperince)>0){
                    //$getData=$chkQuote[0]->toArray();
                    $getData=array_merge($chkExperince[0]->toArray(),$allPost);
                    $getData['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                     //$getData['last_project_complete'] = str_replace(",", "", $allPost['last_project_complete']);
                    $getData['value_of_project']      = str_replace(",", "", $allPost['value_of_project']);

                    $enquiryDB= new Enquiry();
                    $saveData=$enquiryDB->save($getData);
                    //echo $saveData;exit;
                    if($saveData){
                        //echo 123;exit;


                       // $newquoteData["modified"]=date("Y-m-d H:i:s", strtotime("+60 minutes"));

                        //=======Save track report========
                        if(isset($getData['id'])){
                            $trackData['track_for']='experinceEdit';
                        }else{
                            $trackData['track_for']='experinceAdd';
                        }
                        $trackData['userid']=$this->session->get('sessUserID');
                        $trackData['track_save_id']=$enquiryDB->id;
                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);
                    //=======Save track report End========
                        echo 1;
                    }else{
                        echo 2;
                    }

                }
                //echo "<pre>";print_r($getData);exit;

            //}

        }
        exit();
    }
    public function editprojectdetailAction(){

        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            echo 3;
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

                $allPost['id']=$allPost['lead_id'];

               $getData=array();
                $chkQuote=Enquiry::find(array('conditions' => "id='".$allPost['id']."'", 'limit' => 1));
                //echo "<pre>";print_r($chkQuote->toArray());exit;
                if(count($chkQuote)>0){
                    //$getData=$chkQuote[0]->toArray();
                    $getData=array_merge($chkQuote[0]->toArray(),$allPost);
                    $getData['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));

                    $enquiryDB= new Enquiry();
                    $saveData=$enquiryDB->save($getData);
                    //echo $saveData;exit;
                    if($saveData){
                        //echo 123;exit;


                       // $newquoteData["modified"]=date("Y-m-d H:i:s", strtotime("+60 minutes"));

                        //=======Save track report========
                        if(isset($getData['id'])){
                            $trackData['track_for']='projectdetailEdit';
                        }else{
                            $trackData['track_for']='projectdetailAdd';
                        }
                        $trackData['userid']=$this->session->get('sessUserID');
                        $trackData['track_save_id']=$enquiryDB->id;
                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);
                    //=======Save track report End========
                        echo 1;
                    }else{
                        echo 2;
                    }
                }
                //echo "<pre>";print_r($getData);exit;

            //}

        }
        exit();
    }
    public function statbystatusAction(){
        $responseArr=array('response' => 2, 'content' => '', 'todayStatus' => '', 'weeklyStatus' => '', 'monthlyStatus' => '', 'quarterStatus' => '', 'yearlyStatus' => '', 'statusMinVal' => '', 'statusMaxVal' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();




            if((isset($allPost['fromdate']) && $allPost['fromdate']!='') && (isset($allPost['todate']) && $allPost['todate']!='') ){

                $fromDate=str_replace('/', "-", $allPost['fromdate']);
                $curdate=date("Y-m-d", strtotime($fromDate));
                $currentdate=$curdate;

                $toDate=str_replace('/', "-", $allPost['todate']);
                $toDate=date("Y-m-d", strtotime($toDate));


                $currentYear=date("Y", strtotime($curdate));
                $currentMonth=date("m", strtotime($curdate));

                $monthStartDate=$curdate;
                $monthEndRawDate=date("Y-m-t", strtotime($curdate));
                if($toDate>$monthEndRawDate){
                    $monthEndDate=$monthEndRawDate;
                }else{
                    $monthEndDate=$toDate;
                }

                $yearstartdate=$curdate;
                $yearRawenddate=date("Y-12-31", strtotime($curdate));
                if($toDate>$yearRawenddate){
                    $yearenddate=$yearRawenddate;
                }else{
                    $yearenddate=$toDate;
                }
            }else if((isset($allPost['fromdate']) && $allPost['fromdate']!='') && (isset($allPost['todate']) && $allPost['todate']=='') ){

                $fromDate=str_replace('/', "-", $allPost['fromdate']);
                $curdate=date("Y-m-d", strtotime($fromDate));
                $currentdate=$curdate;



                $currentYear=date("Y", strtotime($curdate));
                $currentMonth=date("m", strtotime($curdate));

                $monthStartDate=date("Y-m-01", strtotime($curdate));
                $monthEndRawDate=date("Y-m-t", strtotime($curdate));
                $monthEndDate=$monthEndRawDate;

                $yearstartdate=date("Y-01-01", strtotime($curdate));
                $yearRawenddate=date("Y-12-31", strtotime($curdate));
                $yearenddate=$yearRawenddate;
            }else if((isset($allPost['fromdate']) && $allPost['fromdate']=='') && (isset($allPost['todate']) && $allPost['todate']!='') ){

                $toDate=str_replace('/', "-", $allPost['todate']);
                $curdate=date("Y-m-d", strtotime($toDate));
                $currentdate=$curdate;




                $currentYear=date("Y", strtotime($curdate));
                $currentMonth=date("m", strtotime($curdate));

                $monthStartDate=date("Y-m-01", strtotime($curdate));
                $monthEndRawDate=date("Y-m-t", strtotime($curdate));
                $monthEndDate=$monthEndRawDate;

                $yearstartdate=date("Y-01-01", strtotime($curdate));
                $yearRawenddate=date("Y-12-31", strtotime($curdate));
                $yearenddate=$yearRawenddate;
            }else{
                $curdate=date("Y-m-d");
                $monthStartDate=date("Y-m-01");
                $monthEndDate=date("Y-m-t");
                $currentdate=date("Y-m-d");
                $yearstartdate=date("Y-01-01");
                $yearenddate=date("Y-12-31");
            }
            if(isset($allPost['advisor_id']) && $allPost['advisor_id']!=''){
                $advIDCond=" and advisor_id='".$allPost['advisor_id']."'";
                $advIDJoinCond=" and enquiry.advisor_id='".$allPost['advisor_id']."'";
            }else{
                $advIDCond="";
                $advIDJoinCond="";
            }

            if($allPost['statusid']!=''){
                //=============Status Statistics================
                $weeklyDates=UIElements::BapCustUniweekStaratEnd();
                // echo "<pre>";print_r($weeklyDates);exit;
                $sessionID=$this->session->get('sessUserID');
                //Today no of lead Add=========
                $todayWorkflowStatus=WorkflowTask::findAll("select COUNT( * ) totaltask FROM  workflow_task
INNER JOIN enquiry ON workflow_task.lead_id = enquiry.id WHERE workflow_task.show_in_task=1 and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and date(workflow_task.created)='".$curdate."'".$advIDJoinCond." and workflow_task.task_status =".$allPost['statusid']." ORDER BY workflow_task.id DESC")->toArray();
                $this->view->setVar('todayWorkflowStatus', $todayWorkflowStatus);
                //Today no of lead Add End=========

                //Weekly no of lead Add=========

                $weeklyLeadAdd=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."') and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();

                $weeklyWorkflowStatus=WorkflowTask::findAll("select COUNT( * ) totaltask FROM  workflow_task
INNER JOIN enquiry ON workflow_task.lead_id = enquiry.id WHERE workflow_task.show_in_task=1 and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and (date(workflow_task.created)>='".$weeklyDates[0]."' and date(workflow_task.created)<='".$weeklyDates[1]."')".$advIDJoinCond." and workflow_task.task_status =".$allPost['statusid']." ORDER BY workflow_task.id DESC")->toArray();

                $this->view->setVar('weeklyWorkflowStatus', $weeklyWorkflowStatus);
                //Weekly no of lead Add End=========

                 //Monthly no of lead Add=========
                $monthlyWorkflowStatus=WorkflowTask::findAll("select COUNT( * ) totaltask FROM  workflow_task
INNER JOIN enquiry ON workflow_task.lead_id = enquiry.id WHERE workflow_task.show_in_task=1 and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and (date(workflow_task.created)>='".$monthStartDate."' and date(workflow_task.created)<='".$monthEndDate."')".$advIDJoinCond." and workflow_task.task_status =".$allPost['statusid']." ORDER BY workflow_task.id DESC")->toArray();
                $this->view->setVar('monthlyWorkflowStatus', $monthlyWorkflowStatus);
                //Monthly no of lead Add End=========

                //Quarterly no of lead add==========
               //echo $date=ceil(date('n', time()) / 3);exit();
                $quarterdateArr=array();
                for($count=1; $count<4; $count++){
                    $incAmt=122*$count;
                    $newdate=date('Y-m-d', strtotime("+".$incAmt." day", strtotime($yearstartdate)));
                    array_push($quarterdateArr, $newdate);
                    if(count($quarterdateArr)>0){
                        $decVal=$count-2;
                        //echo $quarterdateArr[$decVal];
                        if($currentdate>$quarterdateArr[$decVal] && $currentdate<$newdate){
                            if($decVal==-1){
                                $qtStartDate=$yearstartdate;
                            }else{
                                $qtStartDate=$quarterdateArr[$decVal];
                            }
                            $qtEnddate=$newdate;
                        }else if($currentdate>$yearstartdate && $currentdate<$newdate){
                            $qtStartDate=$yearstartdate;
                            $qtEnddate=$newdate;
                        }
                    }else{
                        if($currentdate>$yearstartdate && $currentdate<$newdate){
                            $qtStartDate=$yearstartdate;
                            $qtEnddate=$newdate;
                        }
                    }

                }

                $quarterWorkflowStatus=WorkflowTask::findAll("select COUNT( * ) totaltask FROM  workflow_task
INNER JOIN enquiry ON workflow_task.lead_id = enquiry.id WHERE workflow_task.show_in_task=1 and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and (date(workflow_task.created)>='".$qtStartDate."' and date(workflow_task.created)<='".$qtEnddate."')".$advIDJoinCond." and workflow_task.task_status =".$allPost['statusid']." ORDER BY workflow_task.id DESC")->toArray();
                $this->view->setVar('quarterWorkflowStatus', $quarterWorkflowStatus);
                //Quarterly no of lead add=============

                //yearly no of lead add================
                $yearlyWorkflowStatus=WorkflowTask::findAll("select COUNT( * ) totaltask FROM  workflow_task
INNER JOIN enquiry ON workflow_task.lead_id = enquiry.id WHERE workflow_task.show_in_task=1 and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and (date(workflow_task.created)>='".$yearstartdate."' and date(workflow_task.created)<='".$yearenddate."')".$advIDJoinCond." and workflow_task.task_status =".$allPost['statusid']." ORDER BY workflow_task.id DESC")->toArray();
                $this->view->setVar('yearlyWorkflowStatus', $yearlyWorkflowStatus);
                //yearly no of lead add End================
                //=============Status Statistics================

                $content='<ul class="add_enquary">
                  <li><span>'.$todayWorkflowStatus[0]['totaltask'].'</span> Daily<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                  <li><span>'.$weeklyWorkflowStatus[0]['totaltask'].'</span> Weekly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                  <li><span>'.$monthlyWorkflowStatus[0]['totaltask'].'</span> Monthly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                  <li><span>'.$quarterWorkflowStatus[0]['totaltask'].'</span> Quarterly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                  <li><span>'.$yearlyWorkflowStatus[0]['totaltask'].'</span> Yearly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                    
                </ul>';


                //==========status Graph============
                $statusvalDataArr=array();
                array_push($statusvalDataArr, $todayWorkflowStatus[0]['totaltask']);
                array_push($statusvalDataArr, $weeklyWorkflowStatus[0]['totaltask']);
                array_push($statusvalDataArr, $monthlyWorkflowStatus[0]['totaltask']);
                array_push($statusvalDataArr, $quarterWorkflowStatus[0]['totaltask']);
                array_push($statusvalDataArr, $yearlyWorkflowStatus[0]['totaltask']);

                $statusmaxVal=max($statusvalDataArr);

                $statusMaxround=round(($statusmaxVal+5/2)/5)*5;
                $statusmaxLength=strlen($statusMaxround)-1;
                $statusMinVal='1'.sprintf('%0'.$statusmaxLength.'d', 0);
                $statusMaxVal=$statusMaxround+$statusMinVal;
                //==========status Graph============

                $responseArr=array('response' => 2, 'content' => $content, 'todayStatus' => $todayWorkflowStatus[0]['totaltask'], 'weeklyStatus' => $weeklyWorkflowStatus[0]['totaltask'], 'monthlyStatus' => $monthlyWorkflowStatus[0]['totaltask'], 'quarterStatus' => $quarterWorkflowStatus[0]['totaltask'], 'yearlyStatus' => $yearlyWorkflowStatus[0]['totaltask'], 'statusMinVal' => $statusMinVal, 'statusMaxVal' => $statusMaxVal);
            }
        }
        echo json_encode($responseArr);
        exit();
    }
    public function taskbylenderAction(){
        $responseArr=array('response' => 2, 'content' => '', 'todayStatus' => '', 'weeklyStatus' => '', 'monthlyStatus' => '', 'quarterStatus' => '', 'yearlyStatus' => '', 'statusMinVal' => '', 'statusMaxVal' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();




            if((isset($allPost['fromdate']) && $allPost['fromdate']!='') && (isset($allPost['todate']) && $allPost['todate']!='') ){

                $fromDate=str_replace('/', "-", $allPost['fromdate']);
                $curdate=date("Y-m-d", strtotime($fromDate));
                $currentdate=$curdate;

                $toDate=str_replace('/', "-", $allPost['todate']);
                $toDate=date("Y-m-d", strtotime($toDate));


                $currentYear=date("Y", strtotime($curdate));
                $currentMonth=date("m", strtotime($curdate));

                $monthStartDate=$curdate;
                $monthEndRawDate=date("Y-m-t", strtotime($curdate));
                if($toDate>$monthEndRawDate){
                    $monthEndDate=$monthEndRawDate;
                }else{
                    $monthEndDate=$toDate;
                }

                $yearstartdate=$curdate;
                $yearRawenddate=date("Y-12-31", strtotime($curdate));
                if($toDate>$yearRawenddate){
                    $yearenddate=$yearRawenddate;
                }else{
                    $yearenddate=$toDate;
                }
            }else if((isset($allPost['fromdate']) && $allPost['fromdate']!='') && (isset($allPost['todate']) && $allPost['todate']=='') ){

                $fromDate=str_replace('/', "-", $allPost['fromdate']);
                $curdate=date("Y-m-d", strtotime($fromDate));
                $currentdate=$curdate;



                $currentYear=date("Y", strtotime($curdate));
                $currentMonth=date("m", strtotime($curdate));

                $monthStartDate=date("Y-m-01", strtotime($curdate));
                $monthEndRawDate=date("Y-m-t", strtotime($curdate));
                $monthEndDate=$monthEndRawDate;

                $yearstartdate=date("Y-01-01", strtotime($curdate));
                $yearRawenddate=date("Y-12-31", strtotime($curdate));
                $yearenddate=$yearRawenddate;
            }else if((isset($allPost['fromdate']) && $allPost['fromdate']=='') && (isset($allPost['todate']) && $allPost['todate']!='') ){

                $toDate=str_replace('/', "-", $allPost['todate']);
                $curdate=date("Y-m-d", strtotime($toDate));
                $currentdate=$curdate;




                $currentYear=date("Y", strtotime($curdate));
                $currentMonth=date("m", strtotime($curdate));

                $monthStartDate=date("Y-m-01", strtotime($curdate));
                $monthEndRawDate=date("Y-m-t", strtotime($curdate));
                $monthEndDate=$monthEndRawDate;

                $yearstartdate=date("Y-01-01", strtotime($curdate));
                $yearRawenddate=date("Y-12-31", strtotime($curdate));
                $yearenddate=$yearRawenddate;
            }else{
                $curdate=date("Y-m-d");
                $monthStartDate=date("Y-m-01");
                $monthEndDate=date("Y-m-t");
                $currentdate=date("Y-m-d");
                $yearstartdate=date("Y-01-01");
                $yearenddate=date("Y-12-31");
            }
            if(isset($allPost['advisor_id']) && $allPost['advisor_id']!=''){
                $advIDCond=" and advisor_id='".$allPost['advisor_id']."'";
                $advIDJoinCond=" and enquiry.advisor_id='".$allPost['advisor_id']."'";
            }else{
                $advIDCond="";
                $advIDJoinCond="";
            }

            if($allPost['lenderid']!='' || $allPost['case_status']!=''){

                if($allPost['lenderid']!='' && $allPost['case_status']!=''){
                    if($allPost['lenderid']=='all'){
                        $cond=" and workflow_task.case_status =".$allPost['case_status'];
                    }else{
                        $cond=" and workflow_task.task_lender =".$allPost['lenderid']." and workflow_task.case_status =".$allPost['case_status'];
                    }


                }else if($allPost['lenderid']!='' && $allPost['case_status']==''){


                    if($allPost['lenderid']=='all'){
                        $cond="";
                    }else{
                       $cond=" and workflow_task.task_lender =".$allPost['lenderid'];
                    }

                }else if($allPost['lenderid']=='' && $allPost['case_status']!=''){

                    $cond=" and workflow_task.case_status =".$allPost['case_status'];
                }

                //=============Status Statistics================
                $weeklyDates=UIElements::BapCustUniweekStaratEnd();
                // echo "<pre>";print_r($weeklyDates);exit;
                $sessionID=$this->session->get('sessUserID');
                //Today no of lead Add=========


                $todayWorkflowStatus=WorkflowTask::findAll("select workflow_task.* FROM  workflow_task
INNER JOIN enquiry ON workflow_task.lead_id = enquiry.id WHERE workflow_task.show_in_task=1 and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and date(workflow_task.created)='".$curdate."'".$advIDJoinCond.$cond." ORDER BY workflow_task.id DESC");
                $todayCount=0;
                $todayTotalAmountRequired=0;
                if(count($todayWorkflowStatus)>0){
                    foreach($todayWorkflowStatus as $todayWorkflowResult){
                      $leadId=$todayWorkflowResult->lead_id;
                      $checknotproceeding=WorkflowTask::findAll("select * from workflow_task where lead_id='".$leadId."' and task_status=9");
                      if(count($checknotproceeding)<1){
                        $taskAmount=str_replace(",", "", $todayWorkflowResult->task_loan);
                        $todayTotalAmountRequired+=$taskAmount;
                        $todayCount++;
                      }
                    }
                }
                $this->view->setVar('todayWorkflowStatus', $todayWorkflowStatus);
                //Today no of lead Add End=========

                //Weekly no of lead Add=========



                $weeklyWorkflowStatus=WorkflowTask::findAll("select workflow_task.* FROM  workflow_task
INNER JOIN enquiry ON workflow_task.lead_id = enquiry.id WHERE workflow_task.show_in_task=1 and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and (date(workflow_task.created)>='".$weeklyDates[0]."' and date(workflow_task.created)<='".$weeklyDates[1]."')".$advIDJoinCond.$cond." ORDER BY workflow_task.id DESC");
                $weeklyCount=0;
                $weeklyTotalAmountRequired=0;
                if(count($weeklyWorkflowStatus)>0){
                    foreach($weeklyWorkflowStatus as $weeklyWorkflowResult){
                      $leadId=$weeklyWorkflowResult->lead_id;
                      $checknotproceeding=WorkflowTask::findAll("select * from workflow_task where lead_id='".$leadId."' and task_status=9");
                      if(count($checknotproceeding)<1){
                        $taskAmount=str_replace(",", "", $weeklyWorkflowResult->task_loan);
                        $weeklyTotalAmountRequired+=$taskAmount;
                        $weeklyCount++;
                      }
                    }
                }

                $this->view->setVar('weeklyWorkflowStatus', $weeklyWorkflowStatus);
                //Weekly no of lead Add End=========

                 //Monthly no of lead Add=========
                $monthlyWorkflowStatus=WorkflowTask::findAll("select workflow_task.* FROM  workflow_task
INNER JOIN enquiry ON workflow_task.lead_id = enquiry.id WHERE workflow_task.show_in_task=1 and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and (date(workflow_task.created)>='".$monthStartDate."' and date(workflow_task.created)<='".$monthEndDate."')".$advIDJoinCond.$cond." ORDER BY workflow_task.id DESC");
                $monthlyCount=0;
                $monthlyTotalAmountRequired=0;
                if(count($monthlyWorkflowStatus)>0){
                    foreach($monthlyWorkflowStatus as $monthlyWorkflowResult){
                      $leadId=$monthlyWorkflowResult->lead_id;
                      $checknotproceeding=WorkflowTask::findAll("select * from workflow_task where lead_id='".$leadId."' and task_status=9");
                      if(count($checknotproceeding)<1){
                        $taskAmount=str_replace(",", "", $monthlyWorkflowResult->task_loan);
                        $monthlyTotalAmountRequired+=$taskAmount;
                        $monthlyCount++;
                      }
                    }
                }
                $this->view->setVar('monthlyWorkflowStatus', $monthlyWorkflowStatus);
                //Monthly no of lead Add End=========

                //Quarterly no of lead add==========
               //echo $date=ceil(date('n', time()) / 3);exit();
                $quarterdateArr=array();
                for($count=1; $count<4; $count++){
                    $incAmt=122*$count;
                    $newdate=date('Y-m-d', strtotime("+".$incAmt." day", strtotime($yearstartdate)));
                    array_push($quarterdateArr, $newdate);
                    if(count($quarterdateArr)>0){
                        $decVal=$count-2;
                        //echo $quarterdateArr[$decVal];
                        if($currentdate>$quarterdateArr[$decVal] && $currentdate<$newdate){
                            if($decVal==-1){
                                $qtStartDate=$yearstartdate;
                            }else{
                                $qtStartDate=$quarterdateArr[$decVal];
                            }
                            $qtEnddate=$newdate;
                        }else if($currentdate>$yearstartdate && $currentdate<$newdate){
                            $qtStartDate=$yearstartdate;
                            $qtEnddate=$newdate;
                        }
                    }else{
                        if($currentdate>$yearstartdate && $currentdate<$newdate){
                            $qtStartDate=$yearstartdate;
                            $qtEnddate=$newdate;
                        }
                    }

                }

                $quarterWorkflowStatus=WorkflowTask::findAll("select workflow_task.* FROM  workflow_task
INNER JOIN enquiry ON workflow_task.lead_id = enquiry.id WHERE workflow_task.show_in_task=1 and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and (date(workflow_task.created)>='".$qtStartDate."' and date(workflow_task.created)<='".$qtEnddate."')".$advIDJoinCond.$cond." ORDER BY workflow_task.id DESC");
                $quarterCount=0;
                $quarterTotalAmountRequired=0;
                if(count($quarterWorkflowStatus)>0){
                    foreach($quarterWorkflowStatus as $quarterWorkflowResult){
                      $leadId=$quarterWorkflowResult->lead_id;
                      $checknotproceeding=WorkflowTask::findAll("select * from workflow_task where lead_id='".$leadId."' and task_status=9");
                      if(count($checknotproceeding)<1){
                        $taskAmount=str_replace(",", "", $quarterWorkflowResult->task_loan);
                        $quarterTotalAmountRequired+=$taskAmount;
                        $quarterCount++;
                      }
                    }
                }
                $this->view->setVar('quarterWorkflowStatus', $quarterWorkflowStatus);
                //Quarterly no of lead add=============

                //yearly no of lead add================
                $yearlyWorkflowStatus=WorkflowTask::findAll("select workflow_task.* FROM  workflow_task
INNER JOIN enquiry ON workflow_task.lead_id = enquiry.id WHERE workflow_task.show_in_task=1 and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and (date(workflow_task.created)>='".$yearstartdate."' and date(workflow_task.created)<='".$yearenddate."')".$advIDJoinCond.$cond." ORDER BY workflow_task.id DESC");
                $yearlyCount=0;
                $yearlyTotalAmountRequired=0;
                if(count($yearlyWorkflowStatus)>0){
                    foreach($yearlyWorkflowStatus as $yearlyWorkflowResult){
                      $leadId=$yearlyWorkflowResult->lead_id;
                      $checknotproceeding=WorkflowTask::findAll("select * from workflow_task where lead_id='".$leadId."' and task_status=9");
                      if(count($checknotproceeding)<1){
                        $taskAmount=str_replace(",", "", $yearlyWorkflowResult->task_loan);
                        $yearlyTotalAmountRequired+=$taskAmount;
                        $yearlyCount++;
                      }
                    }
                }
                //yearly no of lead add End================
                //=============Status Statistics================

                $content='<style>ul li{margin-bottom:10px;}</style><ul class="add_enquary">
                  <li><span>'.$todayCount.'(£ '.number_format($todayTotalAmountRequired, 2).')</span> Daily<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                  <li><span>'.$weeklyCount.'(£ '.number_format($weeklyTotalAmountRequired, 2).')</span> Weekly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                  <li><span>'.$monthlyCount.'(£ '.number_format($monthlyTotalAmountRequired, 2).')</span> Monthly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                  <li><span>'.$quarterCount.'(£ '.number_format($quarterTotalAmountRequired, 2).')</span> Quarterly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                  <li><span>'.$yearlyCount.'(£ '.number_format($yearlyTotalAmountRequired, 2).')</span> Yearly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                    
                </ul>';


                //==========status Graph============
                $statusvalDataArr=array();
                array_push($statusvalDataArr, $todayCount);
                array_push($statusvalDataArr, $weeklyCount);
                array_push($statusvalDataArr, $monthlyCount);
                array_push($statusvalDataArr, $quarterCount);
                array_push($statusvalDataArr, $yearlyCount);

                $statusmaxVal=max($statusvalDataArr);

                $statusMaxround=round(($statusmaxVal+5/2)/5)*5;
                $statusmaxLength=strlen($statusMaxround)-1;
                $statusMinVal='1'.sprintf('%0'.$statusmaxLength.'d', 0);
                $statusMaxVal=$statusMaxround+$statusMinVal;
                //==========status Graph============
                $responseArr=array('response' => 2, 'content' => $content, 'todayStatus' => $todayCount, 'weeklyStatus' => $weeklyCount, 'monthlyStatus' => $monthlyCount, 'quarterStatus' => $quarterCount, 'yearlyStatus' => $yearlyCount, 'statusMinVal' => $statusMinVal, 'statusMaxVal' => $statusMaxVal);
            }
        }
        echo json_encode($responseArr);
        exit();
    }
    public function enquirysourcestatAction(){
        $responseArr=array('response' => 2, 'content' => '', 'todayEnquirySource' => '', 'weeklyEnquirySource' => '', 'monthlyEnquirySource' => '', 'quarterEnquirySouce' => '', 'yearlyEnquirySource' => '', 'enquirysourceMinVal' => '', 'enquirysourceMaxVal' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

            if((isset($allPost['fromdate']) && $allPost['fromdate']!='') && (isset($allPost['todate']) && $allPost['todate']!='') ){

                $fromDate=str_replace('/', "-", $allPost['fromdate']);
                $curdate=date("Y-m-d", strtotime($fromDate));
                $currentdate=$curdate;

                $toDate=str_replace('/', "-", $allPost['todate']);
                $toDate=date("Y-m-d", strtotime($toDate));


                $currentYear=date("Y", strtotime($curdate));
                $currentMonth=date("m", strtotime($curdate));

                $monthStartDate=$curdate;
                $monthEndRawDate=date("Y-m-t", strtotime($curdate));
                if($toDate>$monthEndRawDate){
                    $monthEndDate=$monthEndRawDate;
                }else{
                    $monthEndDate=$toDate;
                }

                $yearstartdate=$curdate;
                $yearRawenddate=date("Y-12-31", strtotime($curdate));
                if($toDate>$yearRawenddate){
                    $yearenddate=$yearRawenddate;
                }else{
                    $yearenddate=$toDate;
                }
            }else if((isset($allPost['fromdate']) && $allPost['fromdate']!='') && (isset($allPost['todate']) && $allPost['todate']=='') ){

                $fromDate=str_replace('/', "-", $allPost['fromdate']);
                $curdate=date("Y-m-d", strtotime($fromDate));
                $currentdate=$curdate;



                $currentYear=date("Y", strtotime($curdate));
                $currentMonth=date("m", strtotime($curdate));

                $monthStartDate=date("Y-m-01", strtotime($curdate));
                $monthEndRawDate=date("Y-m-t", strtotime($curdate));
                $monthEndDate=$monthEndRawDate;

                $yearstartdate=date("Y-01-01", strtotime($curdate));
                $yearRawenddate=date("Y-12-31", strtotime($curdate));
                $yearenddate=$yearRawenddate;
            }else if((isset($allPost['fromdate']) && $allPost['fromdate']=='') && (isset($allPost['todate']) && $allPost['todate']!='') ){

                $toDate=str_replace('/', "-", $allPost['todate']);
                $curdate=date("Y-m-d", strtotime($toDate));
                $currentdate=$curdate;




                $currentYear=date("Y", strtotime($curdate));
                $currentMonth=date("m", strtotime($curdate));

                $monthStartDate=date("Y-m-01", strtotime($curdate));
                $monthEndRawDate=date("Y-m-t", strtotime($curdate));
                $monthEndDate=$monthEndRawDate;

                $yearstartdate=date("Y-01-01", strtotime($curdate));
                $yearRawenddate=date("Y-12-31", strtotime($curdate));
                $yearenddate=$yearRawenddate;
            }else{
                $curdate=date("Y-m-d");
                $monthStartDate=date("Y-m-01");
                $monthEndDate=date("Y-m-t");
                $currentdate=date("Y-m-d");
                $yearstartdate=date("Y-01-01");
                $yearenddate=date("Y-12-31");
            }

            if(isset($allPost['advisor_id']) && $allPost['advisor_id']!=''){
                $advIDCond=" and advisor_id='".$allPost['advisor_id']."'";
                $advIDJoinCond=" and enquiry.advisor_id='".$allPost['advisor_id']."'";
            }else{
                $advIDCond="";
                $advIDJoinCond="";
            }



            if($allPost['sourceid']!=''){
                //=============Enquiry Source Statistics================
                $weeklyDates=UIElements::BapCustUniweekStaratEnd();
                // echo "<pre>";print_r($weeklyDates);exit;
                $sessionID=$this->session->get('sessUserID');
                //Today no of lead Add=========

                $todayleadAdd=Enquiry::findList("select count(*) as totlead from enquiry where date(created)='".$curdate."' and enquiry_source=".$allPost['sourceid'].$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
                $this->view->setVar('todayleadAdd', $todayleadAdd);
                //Today no of lead Add End=========

                //Weekly no of lead Add=========

                $weeklyLeadAdd=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."') and enquiry_source=".$allPost['sourceid'].$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
                $this->view->setVar('weeklyLeadAdd', $weeklyLeadAdd);
                //Weekly no of lead Add End=========

                 //Monthly no of lead Add=========
                $monthlyLeadAdd=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$monthStartDate."' and date(created)<='".$monthEndDate."') and enquiry_source=".$allPost['sourceid'].$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
                $this->view->setVar('monthlyLeadAdd', $monthlyLeadAdd);
                //Monthly no of lead Add End=========

                //Quarterly no of lead add==========
               //echo $date=ceil(date('n', time()) / 3);exit();
                $quarterdateArr=array();
                for($count=1; $count<4; $count++){
                    $incAmt=122*$count;
                    $newdate=date('Y-m-d', strtotime("+".$incAmt." day", strtotime($yearstartdate)));
                    array_push($quarterdateArr, $newdate);
                    if(count($quarterdateArr)>0){
                        $decVal=$count-2;
                        //echo $quarterdateArr[$decVal];
                        if($currentdate>$quarterdateArr[$decVal] && $currentdate<$newdate){
                            if($decVal==-1){
                                $qtStartDate=$yearstartdate;
                            }else{
                                $qtStartDate=$quarterdateArr[$decVal];
                            }
                            $qtEnddate=$newdate;
                        }else if($currentdate>$yearstartdate && $currentdate<$newdate){
                            $qtStartDate=$yearstartdate;
                            $qtEnddate=$newdate;
                        }
                    }else{
                        if($currentdate>$yearstartdate && $currentdate<$newdate){
                            $qtStartDate=$yearstartdate;
                            $qtEnddate=$newdate;
                        }
                    }

                }

                $quarterLeadApp=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$qtStartDate."' and date(created)<='".$qtEnddate."') and enquiry_source=".$allPost['sourceid'].$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
                $this->view->setVar('quarterLeadApp', $quarterLeadApp);
                //Quarterly no of lead add=============

                //yearly no of lead add================
                $yearlyLeadApp=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$yearstartdate."' and date(created)<='".$yearenddate."') and enquiry_source=".$allPost['sourceid'].$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
                $this->view->setVar('yearlyLeadApp', $yearlyLeadApp);
                //yearly no of lead add End================
                //=============Enquiry Source Statistics================
                $content='<ul class="add_enquary">
                  <li><span>'.$todayleadAdd[0]['totlead'].'</span> Daily<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                  <li><span>'.$weeklyLeadAdd[0]['totlead'].'</span> Weekly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                  <li><span>'.$monthlyLeadAdd[0]['totlead'].'</span> Monthly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                  <li><span>'.$quarterLeadApp[0]['totlead'].'</span> Quarterly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                  <li><span>'.$yearlyLeadApp[0]['totlead'].'</span> Yearly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>  
                </ul>';

                //==========Enquiry Source Graph============
                $enquirySourceDataArr=array();
                array_push($enquirySourceDataArr, $todayleadAdd[0]['totlead']);
                array_push($enquirySourceDataArr, $weeklyLeadAdd[0]['totlead']);
                array_push($enquirySourceDataArr, $monthlyLeadAdd[0]['totlead']);
                array_push($enquirySourceDataArr, $quarterLeadApp[0]['totlead']);
                array_push($enquirySourceDataArr, $yearlyLeadApp[0]['totlead']);

                $enquirySourceMaxVal=max($enquirySourceDataArr);

                $enquirySourceMaxround=round(($enquirySourceMaxVal+5/2)/5)*5;
                $enquirySourceMaxLength=strlen($enquirySourceMaxround)-1;
                $enquirySourceMinVal='1'.sprintf('%0'.$enquirySourceMaxLength.'d', 0);
                $enquirySourceMaxVal=$enquirySourceMaxround+$enquirySourceMinVal;
                //==========Enquiry Source Graph============

                $responseArr=array('response' => 1, 'content' => $content, 'todayEnquirySource' => $todayleadAdd[0]['totlead'], 'weeklyEnquirySource' => $weeklyLeadAdd[0]['totlead'], 'monthlyEnquirySource' => $monthlyLeadAdd[0]['totlead'], 'quarterEnquirySouce' => $quarterLeadApp[0]['totlead'], 'yearlyEnquirySource' => $yearlyLeadApp[0]['totlead'], 'enquirysourceMinVal' => $enquirySourceMinVal, 'enquirysourceMaxVal' => $enquirySourceMaxVal);

            }
        }
        echo json_encode($responseArr);
        exit();
    }
    public function productleadstatAction(){
        $responseArr=array('response' => 2, 'content' => '', 'todayProduct' => '', 'weeklyProduct' => '', 'monthlyProduct' => '', 'quarterProduct' => '', 'yearlyProduct' => '', 'productMinVal' => '', 'productMaxVal' => '');

        if($this->request->isPost()){
            $allPost=$this->request->getPost();


            if((isset($allPost['fromdate']) && $allPost['fromdate']!='') && (isset($allPost['todate']) && $allPost['todate']!='') ){

                $fromDate=str_replace('/', "-", $allPost['fromdate']);
                $curdate=date("Y-m-d", strtotime($fromDate));
                $currentdate=$curdate;

                $toDate=str_replace('/', "-", $allPost['todate']);
                $toDate=date("Y-m-d", strtotime($toDate));


                $currentYear=date("Y", strtotime($curdate));
                $currentMonth=date("m", strtotime($curdate));

                $monthStartDate=$curdate;
                $monthEndRawDate=date("Y-m-t", strtotime($curdate));
                if($toDate>$monthEndRawDate){
                    $monthEndDate=$monthEndRawDate;
                }else{
                    $monthEndDate=$toDate;
                }

                $yearstartdate=$curdate;
                $yearRawenddate=date("Y-12-31", strtotime($curdate));
                if($toDate>$yearRawenddate){
                    $yearenddate=$yearRawenddate;
                }else{
                    $yearenddate=$toDate;
                }
            }else if((isset($allPost['fromdate']) && $allPost['fromdate']!='') && (isset($allPost['todate']) && $allPost['todate']=='') ){

                $fromDate=str_replace('/', "-", $allPost['fromdate']);
                $curdate=date("Y-m-d", strtotime($fromDate));
                $currentdate=$curdate;



                $currentYear=date("Y", strtotime($curdate));
                $currentMonth=date("m", strtotime($curdate));

                $monthStartDate=date("Y-m-01", strtotime($curdate));
                $monthEndRawDate=date("Y-m-t", strtotime($curdate));
                $monthEndDate=$monthEndRawDate;

                $yearstartdate=date("Y-01-01", strtotime($curdate));
                $yearRawenddate=date("Y-12-31", strtotime($curdate));
                $yearenddate=$yearRawenddate;
            }else if((isset($allPost['fromdate']) && $allPost['fromdate']=='') && (isset($allPost['todate']) && $allPost['todate']!='') ){

                $toDate=str_replace('/', "-", $allPost['todate']);
                $curdate=date("Y-m-d", strtotime($toDate));
                $currentdate=$curdate;




                $currentYear=date("Y", strtotime($curdate));
                $currentMonth=date("m", strtotime($curdate));

                $monthStartDate=date("Y-m-01", strtotime($curdate));
                $monthEndRawDate=date("Y-m-t", strtotime($curdate));
                $monthEndDate=$monthEndRawDate;

                $yearstartdate=date("Y-01-01", strtotime($curdate));
                $yearRawenddate=date("Y-12-31", strtotime($curdate));
                $yearenddate=$yearRawenddate;
            }else{
                $curdate=date("Y-m-d");
                $monthStartDate=date("Y-m-01");
                $monthEndDate=date("Y-m-t");
                $currentdate=date("Y-m-d");
                $yearstartdate=date("Y-01-01");
                $yearenddate=date("Y-12-31");
            }

            if(isset($allPost['advisor_id']) && $allPost['advisor_id']!=''){
                $advIDCond=" and advisor_id='".$allPost['advisor_id']."'";
                $advIDJoinCond=" and enquiry.advisor_id='".$allPost['advisor_id']."'";
            }else{
                $advIDCond="";
                $advIDJoinCond="";
            }




            if($allPost['productid']!=''){
                //=============Enquiry Source Statistics================
                $weeklyDates=UIElements::BapCustUniweekStaratEnd();
                // echo "<pre>";print_r($weeklyDates);exit;
                $sessionID=$this->session->get('sessUserID');
                //Today no of lead Add=========

                $todayleadAdd=Enquiry::findList("select count(*) as totlead from enquiry where date(created)='".$curdate."' and application_type=".$allPost['productid']."".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
                $this->view->setVar('todayleadAdd', $todayleadAdd);
                //Today no of lead Add End=========

                //Weekly no of lead Add=========

                $weeklyLeadAdd=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."') and application_type=".$allPost['productid']."".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
                $this->view->setVar('weeklyLeadAdd', $weeklyLeadAdd);
                //Weekly no of lead Add End=========

                 //Monthly no of lead Add=========
                $monthlyLeadAdd=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$monthStartDate."' and date(created)<='".$monthEndDate."') and application_type=".$allPost['productid']."".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
                $this->view->setVar('monthlyLeadAdd', $monthlyLeadAdd);
                //Monthly no of lead Add End=========

                //Quarterly no of lead add==========
               //echo $date=ceil(date('n', time()) / 3);exit();
                $quarterdateArr=array();
                for($count=1; $count<4; $count++){
                    $incAmt=122*$count;
                    $newdate=date('Y-m-d', strtotime("+".$incAmt." day", strtotime($yearstartdate)));
                    array_push($quarterdateArr, $newdate);
                    if(count($quarterdateArr)>0){
                        $decVal=$count-2;
                        //echo $quarterdateArr[$decVal];
                        if($currentdate>$quarterdateArr[$decVal] && $currentdate<$newdate){
                            if($decVal==-1){
                                $qtStartDate=$yearstartdate;
                            }else{
                                $qtStartDate=$quarterdateArr[$decVal];
                            }
                            $qtEnddate=$newdate;
                        }else if($currentdate>$yearstartdate && $currentdate<$newdate){
                            $qtStartDate=$yearstartdate;
                            $qtEnddate=$newdate;
                        }
                    }else{
                        if($currentdate>$yearstartdate && $currentdate<$newdate){
                            $qtStartDate=$yearstartdate;
                            $qtEnddate=$newdate;
                        }
                    }

                }

                $quarterLeadApp=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$qtStartDate."' and date(created)<='".$qtEnddate."') and application_type=".$allPost['productid']."".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
                $this->view->setVar('quarterLeadApp', $quarterLeadApp);
                //Quarterly no of lead add=============

                //yearly no of lead add================
                $yearlyLeadApp=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$yearstartdate."' and date(created)<='".$yearenddate."') and application_type=".$allPost['productid']."".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
                $this->view->setVar('yearlyLeadApp', $yearlyLeadApp);
                //yearly no of lead add End================
                //=============Enquiry Source Statistics================
                $content='<ul class="add_enquary">
                  <li><span>'.$todayleadAdd[0]['totlead'].'</span> Daily<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                  <li><span>'.$weeklyLeadAdd[0]['totlead'].'</span> Weekly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                  <li><span>'.$monthlyLeadAdd[0]['totlead'].'</span> Monthly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                  <li><span>'.$quarterLeadApp[0]['totlead'].'</span> Quarterly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                  <li><span>'.$yearlyLeadApp[0]['totlead'].'</span> Yearly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>  
                </ul>';
                //==========Product Graph============
                $productDataArr=array();
                array_push($productDataArr, $todayleadAdd[0]['totlead']);
                array_push($productDataArr, $weeklyLeadAdd[0]['totlead']);
                array_push($productDataArr, $monthlyLeadAdd[0]['totlead']);
                array_push($productDataArr, $quarterLeadApp[0]['totlead']);
                array_push($productDataArr, $yearlyLeadApp[0]['totlead']);

                $productMaxVal=max($productDataArr);

                $productMaxround=round(($productMaxVal+5/2)/5)*5;
                $productMaxLength=strlen($productMaxround)-1;
                $productMinVal='1'.sprintf('%0'.$productMaxLength.'d', 0);
                $productMaxVal=$productMaxround+$productMinVal;
                //==========Product Graph============

                $responseArr=array('response' => 1, 'content' => $content, 'todayProduct' => $todayleadAdd[0]['totlead'], 'weeklyProduct' => $weeklyLeadAdd[0]['totlead'], 'monthlyProduct' => $monthlyLeadAdd[0]['totlead'], 'quarterProduct' => $quarterLeadApp[0]['totlead'], 'yearlyProduct' => $yearlyLeadApp[0]['totlead'], 'productMinVal' => $productMinVal, 'productMaxVal' => $productMaxVal);






            }
        }
        echo json_encode($responseArr);
        exit();
    }
    public function bridgingcalculationAction($calculateId=NULL){
        $response = new \Phalcon\Http\Response();
        /*if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            //print_r($allPost); exit();
            if($this->request->getPost('clearval')==0 ){
                $bridgingCalculationDb= new BridgingCalculation();
                $save=$bridgingCalculationDb->save($allPost);
                if($save){
                    $this->flashSession->success("Calculation Saved successfully.");
                }else{
                    $this->flashSession->error("Calculation Saving Failed.");
                }
            }
        }
        $_POST=array();*/
        if($_SERVER['HTTP_REFERER']!=''){

            if($this->session->has('bcalsessionrediect')){
                $sessionredirect=$this->session->get('bcalsessionrediect');
            }else{
                $this->session->set('bcalsessionrediect', $_SERVER['HTTP_REFERER']);
                $sessionredirect=$this->session->get('bcalsessionrediect');
            }

        }
        if(UIElements::bapCustUniNewAdvChk()==1){
            return $response->redirect('dashboard');
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            /*echo "<pre>";
            print_r($allPost);exit();*/
            if($this->request->getPost('clearval')==0 ){
                $developmentCalculationDb= new BridgingCalculation();
                $save=$developmentCalculationDb->save($allPost);
                if($save){
                    $this->flashSession->success("Calculation Saved successfully.");
                    return $response->redirect($sessionredirect);
                    //print_r($this->request->get()); exit();
                    if(isset($_GET['lead_id']) && $_GET['lead_id']!=''){
                        $leadiid=$_GET['lead_id'];
                        return $response->redirect('dashboard/bridgingcalculation/'.$developmentCalculationDb->id.'/?lead_id='.$leadiid);
                    }else{
                        return $response->redirect('dashboard/bridgingcalculation/'.$developmentCalculationDb->id);
                    }
                }else{
                    $this->flashSession->error("Calculation Saving Failed.");
                }
            }
        }
        if($calculateId!=''){
            $developmentCal=BridgingCalculation::find(array('conditions'=>"id=".$calculateId, 'limit' => 1))->toArray();
            if(count($developmentCal)>0){
                if($this->request->isPost() && $this->request->getPost('clearval')==1 ){
                    unset($_POST);
                }else if($this->request->isPost() && $this->request->getPost('clearval')==0 ){
                    $_POST=$developmentCal[0];
                }else{
                    $_POST=$developmentCal[0];
                }
            }
        }
    }
    public function bridgingcalculationlistAction(){
        $response = new \Phalcon\Http\Response();
        if(UIElements::bapCustUniNewAdvChk()==1){
            return $response->redirect('dashboard');
        }
        if($this->session->has('bcalsessionrediect')){
            $this->session->remove('bcalsessionrediect');
        }
        //===========pagination===========
        $paged=$this->dispatcher->getParam("paged");
        $page = (int) (!isset($paged) ? 1 : $paged);
        $page = ($page == 0 ? 1 : $page);
        $perpage =20;
        $startpoint = ($page * $perpage) - $perpage;

        $totrecord=BridgingCalculation::find(array('order' => 'id desc'));
        $calculationRes=BridgingCalculation::find(array('order' => 'id desc', 'limit' => array($perpage, $startpoint)));

        //================================
        $this->view->setVar('calculationRes', $calculationRes);
        $this->view->setVar('totrecord', count($totrecord));
        $this->view->setVar('perpage', $perpage);
        $this->view->setVar('paged', $paged);
        $this->view->setVar('startpoint', $startpoint);

    }
    public function bridgingprintAction(){
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

        }
    }
    public function buytoletAction(){
        $response = new \Phalcon\Http\Response();
        if(UIElements::bapCustUniNewAdvChk()==1){
            return $response->redirect('dashboard');
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            //print_r($allPost); exit();
        }
        $_POST=array();
    }
    public function buytoletprintAction(){
        $response = new \Phalcon\Http\Response();

        if($this->request->isPost()){
            $allPost=$this->request->getPost();

        }
    }
     public function buytoletmaxAction($calculateId=""){
        $response = new \Phalcon\Http\Response();
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
           //print_r($allPost); exit();
            if($this->request->getPost('clearval')==0 ){
                $developmentCalculationDb= new Buytoletmax();
                $save=$developmentCalculationDb->save($allPost);
                if($save){
                    $this->flashSession->success("Calculation Saved successfully.");
                    return $response->redirect('dashboard/buytoletmax/'.$developmentCalculationDb->id);

                }else{
                    $this->flashSession->error("Calculation Saving Failed.");
                }
            }
        }
        if($calculateId!=''){
            $developmentCal=Buytoletmax::find(array('conditions'=>"id=".$calculateId, 'limit' => 1))->toArray();
            if(count($developmentCal)>0){


                if($this->request->isPost() && $this->request->getPost('clearval')==1 ){
                    unset($_POST);
                }else if($this->request->isPost() && $this->request->getPost('clearval')==0 ){
                    $_POST=$developmentCal[0];
                }else{
                    $_POST=$developmentCal[0];
                }
            }
        }
    }
     public function buytoletmaxprintAction(){
        $response = new \Phalcon\Http\Response();

        if($this->request->isPost()){
            $allPost=$this->request->getPost();

        }
    }


    public function buytoletmaxlistAction(){
        $response = new \Phalcon\Http\Response();
        if(UIElements::bapCustUniNewAdvChk()==1){
            return $response->redirect('dashboard');
        }
        //===========pagination===========
        $paged=$this->dispatcher->getParam("paged");
        $page = (int) (!isset($paged) ? 1 : $paged);
        $page = ($page == 0 ? 1 : $page);
        $perpage =20;
        $startpoint = ($page * $perpage) - $perpage;

        $totrecord=Buytoletmax::find(array('order' => 'id desc'));
        $calculationRes=Buytoletmax::find(array('order' => 'id desc', 'limit' => array($perpage, $startpoint)));

        //================================
        $this->view->setVar('calculationRes', $calculationRes);
        $this->view->setVar('totrecord', count($totrecord));
        $this->view->setVar('perpage', $perpage);
        $this->view->setVar('paged', $paged);
        $this->view->setVar('startpoint', $startpoint);

    }

    public function buytoletmaxdeleteAction($id=''){
        $response = new \Phalcon\Http\Response();
        if($id!=''){
           $delete=$this->modelsManager->executeQuery("delete from Buytoletmax where id='".$id."'");
            if($delete){
                $this->flashSession->success("Deleted Successfully");

            }
        }
       return $response->redirect("dashboard/buytoletmaxlist");
    }


    public function buytoletmaxmultideleteAction($id=''){
        $sucMsg=0;
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if(isset($allPost['enqChk']) && !empty($allPost['enqChk'])){
                foreach($allPost['enqChk'] as $singLeadid){
                    $delete=$this->modelsManager->executeQuery("delete from Buytoletmax where id='".$singLeadid."'");
                    if($delete){
                        $sucMsg=1;

                    }
                }
            }
        }
        if($sucMsg==1){
            echo 1;
        }else{
            echo 2;
        }
        exit();
    }

    public function developmentcalculationAction($calculateId=""){
        $response = new \Phalcon\Http\Response();
        if($_SERVER['HTTP_REFERER']!=''){

            if($this->session->has('devcalredirect')){
                $sessionredirect=$this->session->get('devcalredirect');
            }else{
                $this->session->set('devcalredirect', $_SERVER['HTTP_REFERER']);
                $sessionredirect=$this->session->get('devcalredirect');
            }

        }
        if(UIElements::bapCustUniNewAdvChk()==1){
            return $response->redirect('dashboard');
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
           //print_r($allPost); exit();
            if($this->request->getPost('clearval')==0 ){
                $developmentCalculationDb= new DevelopmentCalculation();
                $save=$developmentCalculationDb->save($allPost);
                if($save){
                    $this->flashSession->success("Calculation Saved successfully.");
                    return $response->redirect($sessionredirect);
                    if(isset($_GET['lead_id']) && $_GET['lead_id']!=''){
                        $leadiid=$_GET['lead_id'];
                        return $response->redirect('dashboard/developmentcalculation/'.$developmentCalculationDb->id.'/?lead_id='.$leadiid);
                    }else{
                        return $response->redirect('dashboard/developmentcalculation/'.$developmentCalculationDb->id);
                    }

                }else{
                    $this->flashSession->error("Calculation Saving Failed.");
                }
            }
        }
        if($calculateId!=''){
            $developmentCal=DevelopmentCalculation::find(array('conditions'=>"id=".$calculateId, 'limit' => 1))->toArray();
            if(count($developmentCal)>0){


                if($this->request->isPost() && $this->request->getPost('clearval')==1 ){
                    unset($_POST);
                }else if($this->request->isPost() && $this->request->getPost('clearval')==0 ){
                    $_POST=$developmentCal[0];
                }else{
                    $_POST=$developmentCal[0];
                }
            }
        }
    }
    public function developmentcalculationlistAction(){

        $response = new \Phalcon\Http\Response();
        if(UIElements::bapCustUniNewAdvChk()==1){
            return $response->redirect('dashboard');
        }
        if($this->session->has('devcalredirect')){
            $this->session->remove('devcalredirect');
        }
        //===========pagination===========
        $paged=$this->dispatcher->getParam("paged");
        $page = (int) (!isset($paged) ? 1 : $paged);
        $page = ($page == 0 ? 1 : $page);
        $perpage =20;
        $startpoint = ($page * $perpage) - $perpage;

        $totrecord=DevelopmentCalculation::find(array('order' => 'id desc'));
        $calculationRes=DevelopmentCalculation::find(array('order' => 'id desc', 'limit' => array($perpage, $startpoint)));

        //================================
        $this->view->setVar('calculationRes', $calculationRes);
        $this->view->setVar('totrecord', count($totrecord));
        $this->view->setVar('perpage', $perpage);
        $this->view->setVar('paged', $paged);
        $this->view->setVar('startpoint', $startpoint);
    }
    public function developmentdeleteAction($id){
        $response = new \Phalcon\Http\Response();
        $delete=$this->modelsManager->executeQuery("delete from DevelopmentCalculation where id=".$id);
        if($delete){
            $this->flashSession->success("Calculation Deleted Successfully.");
        }else{
            $this->flashSession->error("Calculation Deleted Successfully.");
        }
        if($this->request->get('lead_id')!=''){
            $leadiid=$this->request->get('lead_id');
            return $response->redirect('dashboard/enquirydetail/'.$leadiid);
        }else{
            return $response->redirect('dashboard/developmentcalculationlist/');
        }
    }
    public function bridgingdeleteAction($id){
        $response = new \Phalcon\Http\Response();
        $delete=$this->modelsManager->executeQuery("delete from BridgingCalculation where id=".$id);
        if($delete){
            $this->flashSession->success("Calculation Deleted Successfully.");
        }else{
            $this->flashSession->error("Calculation Deleted Successfully.");
        }
        if($this->request->get('lead_id')!=''){
            $leadiid=$this->request->get('lead_id');
            return $response->redirect('dashboard/enquirydetail/'.$leadiid);
        }else{
            return $response->redirect('dashboard/bridgingcalculationlist/');
        }
    }

        /**
* calculation delete Action To Manage HZA calculation delete Page
* Action Name: caldeleteAction
* Author By: Chittaranjan Sahoo
* Created Date: 13-01-2020
**/
    public function caldeleteAction($id=''){
        $sucMsg=0;
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

            if(isset($allPost['enqChk']) && !empty($allPost['enqChk'])){
                foreach($allPost['enqChk'] as $singLeadid){
                    $delete=$this->modelsManager->executeQuery("delete from DevelopmentCalculation where id='".$singLeadid."'");
                    if($delete){
                        $sucMsg=1;

                    }
                }
            }
        }
        if($sucMsg==1){
            echo 1;
        }else{
            echo 2;
        }
        exit();
    }
    public function bridgingcaldeleteAction($id=''){
        $sucMsg=0;
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if(isset($allPost['enqChk']) && !empty($allPost['enqChk'])){
                foreach($allPost['enqChk'] as $singLeadid){
                    $delete=$this->modelsManager->executeQuery("delete from BridgingCalculation where id='".$singLeadid."'");
                    if($delete){
                        $sucMsg=1;

                    }
                }
            }
        }
        if($sucMsg==1){
            echo 1;
        }else{
            echo 2;
        }
        exit();
    }
    public function developmentapprisialprintAction($leadid=''){
        $response = new \Phalcon\Http\Response();
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            //print_r($allPost);exit();
        }
    }
    public function taskstatushistoryAction(){
        $responseArr=array('response' => 2, 'historydate' => '', 'statusfrom' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if($allPost['taskfrom']=='stage'){
                $stageChk=WorkflowTask::find(array('conditions' => "lead_id=".$allPost['lead_id']." and task_status=".$allPost['statusid'], 'order' => "id desc", 'limit' =>1));
                if(count($stageChk)>0){
                    $historyDate=date("d-m-Y", strtotime($stageChk[0]->created));
                    $responseArr=array('response' => 1, 'historydate' => $historyDate, 'statusfrom' => 'stage');
                }else{
                     $responseArr=array('response' => 3, 'historydate' => '', 'statusfrom' => 'stage');
                }
            }else if($allPost['taskfrom']=='case_status'){
                $stageChk=WorkflowTask::find(array('conditions' => "lead_id=".$allPost['lead_id']." and case_status=".$allPost['statusid'], 'order' => "id desc", 'limit' =>1));
                if(count($stageChk)>0){
                    $historyDate=date("d-m-Y", strtotime($stageChk[0]->created));
                    $responseArr=array('response' => 1, 'historydate' => $historyDate, 'statusfrom' => 'case_status');
                }else{
                     $responseArr=array('response' => 3, 'historydate' => '', 'statusfrom' => 'case_status');
                }
            }

        }
        echo json_encode($responseArr);
    }


    /**
    * statistics print Action To show statistics print of loan
    * Action Name: statisticsprintAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 03-01-2020
    **/
    public function statisticsprintAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        //Top 3 Most popular courses end======
        if($this->request->isGet()){
            $allGet=$this->request->get();
            //$allGet=array_filter($allGet);
            if((isset($allGet['fromdate']) && $allGet['fromdate']!='') && (isset($allGet['todate']) && $allGet['todate']!='') ){

                $fromDate=str_replace('/', "-", $allGet['fromdate']);
                $curdate=date("Y-m-d", strtotime($fromDate));
                $currentdate=$curdate;

                $toDate=str_replace('/', "-", $allGet['todate']);
                $toDate=date("Y-m-d", strtotime($toDate));


                $currentYear=date("Y", strtotime($curdate));
                $currentMonth=date("m", strtotime($curdate));

                $monthStartDate=$curdate;
                $monthEndRawDate=date("Y-m-t", strtotime($curdate));
                if($toDate>$monthEndRawDate){
                    $monthEndDate=$monthEndRawDate;
                }else{
                    $monthEndDate=$toDate;
                }

                $yearstartdate=$curdate;
                $yearRawenddate=date("Y-12-31", strtotime($curdate));
                if($toDate>$yearRawenddate){
                    $yearenddate=$yearRawenddate;
                }else{
                    $yearenddate=$toDate;
                }
            }else if((isset($allGet['fromdate']) && $allGet['fromdate']!='') && (isset($allGet['todate']) && $allGet['todate']=='') ){

                $fromDate=str_replace('/', "-", $allGet['fromdate']);
                $curdate=date("Y-m-d", strtotime($fromDate));
                $currentdate=$curdate;



                $currentYear=date("Y", strtotime($curdate));
                $currentMonth=date("m", strtotime($curdate));

                $monthStartDate=date("Y-m-01", strtotime($curdate));
                $monthEndRawDate=date("Y-m-t", strtotime($curdate));
                $monthEndDate=$monthEndRawDate;

                $yearstartdate=date("Y-01-01", strtotime($curdate));
                $yearRawenddate=date("Y-12-31", strtotime($curdate));
                $yearenddate=$yearRawenddate;
            }else if((isset($allGet['fromdate']) && $allGet['fromdate']=='') && (isset($allGet['todate']) && $allGet['todate']!='') ){

                $toDate=str_replace('/', "-", $allGet['todate']);
                $curdate=date("Y-m-d", strtotime($toDate));
                $currentdate=$curdate;




                $currentYear=date("Y", strtotime($curdate));
                $currentMonth=date("m", strtotime($curdate));

                $monthStartDate=date("Y-m-01", strtotime($curdate));
                $monthEndRawDate=date("Y-m-t", strtotime($curdate));
                $monthEndDate=$monthEndRawDate;

                $yearstartdate=date("Y-01-01", strtotime($curdate));
                $yearRawenddate=date("Y-12-31", strtotime($curdate));
                $yearenddate=$yearRawenddate;
            }else{
                //echo 1; exit();
                $curdate=date("Y-m-d");
                $monthStartDate=date("Y-m-01");
                $monthEndDate=date("Y-m-t");
                $currentdate=date("Y-m-d");
                $yearstartdate=date("Y-01-01");
                $yearenddate=date("Y-12-31");
            }
        }else{
            $curdate=date("Y-m-d");
            $monthStartDate=date("Y-m-01");
            $monthEndDate=date("Y-m-t");
            $currentdate=date("Y-m-d");
            $yearstartdate=date("Y-01-01");
            $yearenddate=date("Y-12-31");
        }

        $weeklyDates=UIElements::BapCustUniweekStaratEnd();
        // echo "<pre>";print_r($weeklyDates);exit;
        //$sessionID=$this->session->get('sessUserID');
        if($this->request->get('adv_id')!=''){
            $sessionID=$this->request->get('adv_id');
            $advCond=" and advisor_id='".$sessionID."'";
            $joinadvCond=" and enquiry.advisor_id='".$sessionID."'";
        }else{
            $advCond="";
            $joinadvCond="";
        }
        //Today no of lead Add=========

        $todayleadAdd=Enquiry::findList("select count(*) as totlead from enquiry where date(created)='".$curdate."'".$advCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('todayleadAdd', $todayleadAdd);
        //Today no of lead Add End=========

        //Weekly no of lead Add=========

        $weeklyLeadAdd=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."')".$advCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('weeklyLeadAdd', $weeklyLeadAdd);
        //Weekly no of lead Add End=========

         //Monthly no of lead Add=========

        $monthlyLeadAdd=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$monthStartDate."' and date(created)<='".$monthEndDate."')".$advCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('monthlyLeadAdd', $monthlyLeadAdd);
        //Monthly no of lead Add End=========

        //Quarterly no of lead add==========
       //echo $date=ceil(date('n', time()) / 3);exit();
        $quarterdateArr=array();
        for($count=1; $count<4; $count++){
            $incAmt=122*$count;
            $newdate=date('Y-m-d', strtotime("+".$incAmt." day", strtotime($yearstartdate)));
            array_push($quarterdateArr, $newdate);
            if(count($quarterdateArr)>0){

                $decVal=$count-2;
                $quarterdateArr[$decVal];
                if($currentdate>$quarterdateArr[$decVal] && $currentdate<$newdate){
                    if($decVal==-1){
                        $qtStartDate=$yearstartdate;
                    }else{
                        $qtStartDate=$quarterdateArr[$decVal];
                    }

                    $qtEnddate=$newdate;
                }else if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }else{
                if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }

        }
       // echo $qtEnddate;
       // echo $qtStartDate;
        //echo "select count(*) as totlead from enquiry where (date(created)>='".$qtStartDate."' and date(created)<='".$qtEnddate."') and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)";
       //print_r($quarterdateArr); exit();
        $quarterLeadApp=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$qtStartDate."' and date(created)<='".$qtEnddate."')".$advCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('quarterLeadApp', $quarterLeadApp);
        //echo $quarterLeadApp[0]['totlead'];
        // exit();
        //Quarterly no of lead add=============

        //yearly no of lead add================

        $yearlyLeadApp=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$yearstartdate."' and date(created)<='".$yearenddate."')".$advCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('yearlyLeadApp', $yearlyLeadApp);
        //yearly no of lead add End================

        //=========================Approve to lender==============

        $weeklyDates=UIElements::BapCustUniweekStaratEnd();
        // echo "<pre>";print_r($weeklyDates);exit;
        $sessionID=$this->session->get('sessUserID');
        //Today no of lead Add=========

        $todayLenderApprove=Enquiry::findList("select count(*) as totlead from enquiry where date(approve_lender_date)='".$curdate."'".$advCond." and approve_by_lender>0 and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('todayLenderApprove', $todayLenderApprove);
        //Today no of lead Add End=========

        //Weekly no of lead Add=========

        $weeklyLenderApprove=Enquiry::findList("select count(*) as totlead from enquiry where (date(approve_lender_date)>='".$weeklyDates[0]."' and date(approve_lender_date)<='".$weeklyDates[1]."') and approve_by_lender>0".$advCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('weeklyLenderApprove', $weeklyLenderApprove);
        //Weekly no of lead Add End=========

         //Monthly no of lead Add=========
        $monthlyLenderApprove=Enquiry::findList("select count(*) as totlead from enquiry where (date(approve_lender_date)>='".$monthStartDate."' and date(approve_lender_date)<='".$monthEndDate."') and approve_by_lender>0".$advCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('monthlyLenderApprove', $monthlyLenderApprove);
        //Monthly no of lead Add End=========

        //Quarterly no of lead add==========
       //echo $date=ceil(date('n', time()) / 3);exit();
        $quarterdateArr=array();
        for($count=1; $count<4; $count++){
            $incAmt=122*$count;
            $newdate=date('Y-m-d', strtotime("+".$incAmt." day", strtotime($yearstartdate)));
            array_push($quarterdateArr, $newdate);
            if(count($quarterdateArr)>0){
                $decVal=$count-2;
                //echo $quarterdateArr[$decVal];
                if($currentdate>$quarterdateArr[$decVal] && $currentdate<$newdate){
                    if($decVal==-1){
                        $qtStartDate=$yearstartdate;
                    }else{
                        $qtStartDate=$quarterdateArr[$decVal];
                    }
                    $qtEnddate=$newdate;
                }else if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }else{
                if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }

        }

        $quarterLenderApprove=Enquiry::findList("select count(*) as totlead from enquiry where (date(approve_lender_date)>='".$qtStartDate."' and date(approve_lender_date)<='".$qtEnddate."')".$advCond." and approve_by_lender>0 and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('quarterLenderApprove', $quarterLenderApprove);
        //Quarterly no of lead add=============

        //yearly no of lead add================
        $yearlyLenderApprove=Enquiry::findList("select count(*) as totlead from enquiry where (date(approve_lender_date)>='".$yearstartdate."' and date(approve_lender_date)<='".$yearenddate."')".$advCond." and approve_by_lender>0 and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('yearlyLenderApprove', $yearlyLenderApprove);
        //yearly no of lead add End================

        //=========================Approve to lender==============

         //=========================Pre Completion==============

        $weeklyDates=UIElements::BapCustUniweekStaratEnd();
        // echo "<pre>";print_r($weeklyDates);exit;
        $sessionID=$this->session->get('sessUserID');
        //Today no of lead Add=========

        $todayPreCompletion=Enquiry::findList("select count(*) as totlead from enquiry inner join caserequirement_precompletion on enquiry.id=caserequirement_precompletion.lead_id where date(caserequirement_precompletion.created)='".$curdate."'".$joinadvCond." and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL)")->toArray();
        $this->view->setVar('todayPreCompletion', $todayPreCompletion);
        //Today no of lead Add End=========

        //Weekly no of lead Add=========

        $weeklyPreCompletion=Enquiry::findList("select count(*) as totlead from enquiry inner join caserequirement_precompletion on enquiry.id=caserequirement_precompletion.lead_id where (date(caserequirement_precompletion.created)>='".$weeklyDates[0]."' and date(caserequirement_precompletion.created)<='".$weeklyDates[1]."')".$joinadvCond." and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL)")->toArray();
        $this->view->setVar('weeklyPreCompletion', $weeklyPreCompletion);
        //Weekly no of lead Add End=========

         //Monthly no of lead Add=========
        $monthlyPreCompletion=Enquiry::findList("select count(*) as totlead from enquiry inner join caserequirement_precompletion on enquiry.id=caserequirement_precompletion.lead_id where (date(caserequirement_precompletion.created)>='".$monthStartDate."' and date(caserequirement_precompletion.created)<='".$monthEndDate."')".$joinadvCond." and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL)")->toArray();
        $this->view->setVar('monthlyPreCompletion', $monthlyPreCompletion);
        //Monthly no of lead Add End=========

        //Quarterly no of lead add==========
       //echo $date=ceil(date('n', time()) / 3);exit();
        $quarterdateArr=array();
        for($count=1; $count<4; $count++){
            $incAmt=122*$count;
            $newdate=date('Y-m-d', strtotime("+".$incAmt." day", strtotime($yearstartdate)));
            array_push($quarterdateArr, $newdate);
            if(count($quarterdateArr)>0){
                $decVal=$count-2;
                //echo $quarterdateArr[$decVal];
                if($currentdate>$quarterdateArr[$decVal] && $currentdate<$newdate){
                    if($decVal==-1){
                        $qtStartDate=$yearstartdate;
                    }else{
                        $qtStartDate=$quarterdateArr[$decVal];
                    }
                    $qtEnddate=$newdate;
                }else if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }else{
                if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }

        }

        $quarterPreCompletion=Enquiry::findList("select count(*) as totlead from enquiry inner join caserequirement_precompletion on enquiry.id=caserequirement_precompletion.lead_id where (date(caserequirement_precompletion.created)>='".$qtStartDate."' and date(caserequirement_precompletion.created)<='".$qtEnddate."')".$joinadvCond." and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL)")->toArray();
        $this->view->setVar('quarterPreCompletion', $quarterPreCompletion);
        //Quarterly no of lead add=============

        //yearly no of lead add================
        $yearlyPreCompletion=Enquiry::findList("select count(*) as totlead from enquiry inner join caserequirement_precompletion on enquiry.id=caserequirement_precompletion.lead_id where (date(caserequirement_precompletion.created)>='".$yearstartdate."' and date(caserequirement_precompletion.created)<='".$yearenddate."')".$joinadvCond." and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL)")->toArray();
        $this->view->setVar('yearlyPreCompletion', $yearlyPreCompletion);
        //yearly no of lead add End================

        //=========================pre completion==============


        //========================Completed lead=================
        $weeklyDates=UIElements::BapCustUniweekStaratEnd();
        // echo "<pre>";print_r($weeklyDates);exit;
        $sessionID=$this->session->get('sessUserID');
        //Today no of lead Add=========

        $todayCompleted=Enquiry::findList("select count(*) as totlead from enquiry where date(complete_date)='".$curdate."'".$advCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('todayCompleted', $todayCompleted);
        //Today no of lead Add End=========

        //Weekly no of lead Add=========

        $weeklyCompleted=Enquiry::findList("select count(*) as totlead from enquiry where (date(complete_date)>='".$weeklyDates[0]."' and date(complete_date)<='".$weeklyDates[1]."')".$advCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('weeklyCompleted', $weeklyCompleted);
        //Weekly no of lead Add End=========

         //Monthly no of lead Add=========
        $monthlyCompleted=Enquiry::findList("select count(*) as totlead from enquiry where (date(complete_date)>='".$monthStartDate."' and date(complete_date)<='".$monthEndDate."')".$advCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('monthlyCompleted', $monthlyCompleted);
        //Monthly no of lead Add End=========

        //Quarterly no of lead add==========
       //echo $date=ceil(date('n', time()) / 3);exit();
        $quarterdateArr=array();
        for($count=1; $count<4; $count++){
            $incAmt=122*$count;
            $newdate=date('Y-m-d', strtotime("+".$incAmt." day", strtotime($yearstartdate)));
            array_push($quarterdateArr, $newdate);
            if(count($quarterdateArr)>0){
                $decVal=$count-2;
                //echo $quarterdateArr[$decVal];
                if($currentdate>$quarterdateArr[$decVal] && $currentdate<$newdate){
                    if($decVal==-1){
                        $qtStartDate=$yearstartdate;
                    }else{
                        $qtStartDate=$quarterdateArr[$decVal];
                    }
                    $qtEnddate=$newdate;
                }else if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }else{
                if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }

        }

        $quarterCompleted=Enquiry::findList("select count(*) as totlead from enquiry where (date(complete_date)>='".$qtStartDate."' and date(complete_date)<='".$qtEnddate."')".$advCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('quarterCompleted', $quarterCompleted);
        //Quarterly no of lead add=============

        //yearly no of lead add================
        $yearlyCompleted=Enquiry::findList("select count(*) as totlead from enquiry where (date(complete_date)>='".$yearstartdate."' and date(complete_date)<='".$yearenddate."')".$advCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('yearlyCompleted', $yearlyCompleted);
        //yearly no of lead add End================
        //========================End completed lead==============


        //==============Total new lead===================
        $weeklyDates=UIElements::BapCustUniweekStaratEnd();
        // echo "<pre>";print_r($weeklyDates);exit;
        $sessionID=$this->session->get('sessUserID');
        //Today no of lead Add=========

        $todayTotalleadAdd=Enquiry::findList("select count(*) as totlead from enquiry where date(created)='".$curdate."'".$advCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('todayTotalleadAdd', $todayTotalleadAdd);
        //Today no of lead Add End=========

        //Weekly no of lead Add=========

        $weeklyTotalLeadAdd=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."')".$advCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('weeklyTotalLeadAdd', $weeklyTotalLeadAdd);
        //Weekly no of lead Add End=========

         //Monthly no of lead Add=========
        $monthlyTotalLeadAdd=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$monthStartDate."' and date(created)<='".$monthEndDate."')".$advCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('monthlyTotalLeadAdd', $monthlyTotalLeadAdd);
        //Monthly no of lead Add End=========

        //Quarterly no of lead add==========
       //echo $date=ceil(date('n', time()) / 3);exit();
        $quarterdateArr=array();
        for($count=1; $count<4; $count++){
            $incAmt=122*$count;
            $newdate=date('Y-m-d', strtotime("+".$incAmt." day", strtotime($yearstartdate)));
            array_push($quarterdateArr, $newdate);
            if(count($quarterdateArr)>0){
                $decVal=$count-2;
                //echo $quarterdateArr[$decVal];
                if($currentdate>$quarterdateArr[$decVal] && $currentdate<$newdate){
                    if($decVal==-1){
                        $qtStartDate=$yearstartdate;
                    }else{
                        $qtStartDate=$quarterdateArr[$decVal];
                    }
                    $qtEnddate=$newdate;
                }else if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }else{
                if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }

        }

        $quarterTotalLeadApp=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$qtStartDate."' and date(created)<='".$qtEnddate."')".$advCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('quarterTotalLeadApp', $quarterTotalLeadApp);
        //Quarterly no of lead add=============

        //yearly no of lead add================
        $yearlyTotalLeadApp=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$yearstartdate."' and date(created)<='".$yearenddate."')".$advCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('yearlyTotalLeadApp', $yearlyTotalLeadApp);
        //yearly no of lead add End================
        //==============Total New lead End===============



        //==============Total Gross Loan lead===================
        $weeklyDates=UIElements::BapCustUniweekStaratEnd();
        // echo "<pre>";print_r($weeklyDates);exit;
        $sessionID=$this->session->get('sessUserID');
        //Today no of lead Add=========

        $todayleadGross=Enquiry::findList("select SUM( amount_required ) AS totloangross, SUM( purchase_price ) totpurchase from enquiry where date(created)='".$curdate."'".$advCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('todayleadGross', $todayleadGross);
        //Today no of lead Add End=========

        //Weekly no of lead Add=========

        $weeklyleadGross=Enquiry::findList("select SUM( amount_required ) AS totloangross, SUM( purchase_price ) totpurchase from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."')".$advCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('weeklyleadGross', $weeklyleadGross);
        //Weekly no of lead Add End=========

         //Monthly no of lead Add=========
        $monthlyleadGross=Enquiry::findList("select SUM( amount_required ) AS totloangross, SUM( purchase_price ) totpurchase from enquiry where (date(created)>='".$monthStartDate."' and date(created)<='".$monthEndDate."')".$advCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('monthlyleadGross', $monthlyleadGross);
        //Monthly no of lead Add End=========

        //Quarterly no of lead add==========
       //echo $date=ceil(date('n', time()) / 3);exit();
        $quarterdateArr=array();
        for($count=1; $count<4; $count++){
            $incAmt=122*$count;
            $newdate=date('Y-m-d', strtotime("+".$incAmt." day", strtotime($yearstartdate)));
            array_push($quarterdateArr, $newdate);
            if(count($quarterdateArr)>0){
                $decVal=$count-2;
                //echo $quarterdateArr[$decVal];
                if($currentdate>$quarterdateArr[$decVal] && $currentdate<$newdate){
                    if($decVal==-1){
                        $qtStartDate=$yearstartdate;
                    }else{
                        $qtStartDate=$quarterdateArr[$decVal];
                    }
                    $qtEnddate=$newdate;
                }else if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }else{
                if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }

        }

        $quarterleadGross=Enquiry::findList("select SUM( amount_required ) AS totloangross, SUM( purchase_price ) totpurchase from enquiry where (date(created)>='".$qtStartDate."' and date(created)<='".$qtEnddate."')".$advCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('quarterleadGross', $quarterleadGross);
        //Quarterly no of lead add=============

        //yearly no of lead add================
        $yearlyleadGross=Enquiry::findList("select SUM( amount_required ) AS totloangross, SUM( purchase_price ) totpurchase from enquiry where (date(created)>='".$yearstartdate."' and date(created)<='".$yearenddate."')".$advCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('yearlyleadGross', $yearlyleadGross);
        //yearly no of lead add End================
        //==============Total Gross Loan lead End===============


        //==============Total LTV percent of leads===================
        $weeklyDates=UIElements::BapCustUniweekStaratEnd();
        // echo "<pre>";print_r($weeklyDates);exit;
        $sessionID=$this->session->get('sessUserID');
        //Today no of lead Add=========

        $todayLeadBelowSixtyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where date(created)='".$curdate."'".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>0 and ltv_required<60)")->toArray();
        $this->view->setVar('todayLeadBelowSixtyLtv', $todayLeadBelowSixtyLtv);

        $todayLeadSixtyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where date(created)='".$curdate."'".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=60 and ltv_required<70)")->toArray();
        $this->view->setVar('todayLeadSixtyLtv', $todayLeadSixtyLtv);

        $todayLeadSeventyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where date(created)='".$curdate."'".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=70 and ltv_required<80)")->toArray();
        $this->view->setVar('todayLeadSeventyLtv', $todayLeadSeventyLtv);

         $todayLeadEightyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where date(created)='".$curdate."'".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=80 and ltv_required<90)")->toArray();
        $this->view->setVar('todayLeadEightyLtv', $todayLeadEightyLtv);

        $todayLeadNightyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where date(created)='".$curdate."'".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=90 and ltv_required<100)")->toArray();
        $this->view->setVar('todayLeadNightyLtv', $todayLeadNightyLtv);
        //Today no of lead Add End=========

        //Weekly no of lead Add=========

        $weeklyLeadBelowSixtyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>0 and ltv_required<60)")->toArray();
        $this->view->setVar('weeklyLeadBelowSixtyLtv', $weeklyLeadBelowSixtyLtv);

        $weeklyLeadSixtyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=60 and ltv_required<70)")->toArray();
        $this->view->setVar('weeklyLeadSixtyLtv', $weeklyLeadSixtyLtv);

        $weeklyLeadSeventyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=70 and ltv_required<80)")->toArray();
        $this->view->setVar('weeklyLeadSeventyLtv', $weeklyLeadSeventyLtv);

         $weeklyLeadEightyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=80 and ltv_required<90)")->toArray();
        $this->view->setVar('weeklyLeadEightyLtv', $weeklyLeadEightyLtv);

        $weeklyLeadnintyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=90 and ltv_required<100)")->toArray();
        $this->view->setVar('weeklyLeadnintyLtv', $weeklyLeadnintyLtv);
        //Weekly no of lead Add End=========

         //Monthly no of lead Add=========
        $monthlyLeadBelowSixtyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$monthStartDate."' and date(created)<='".$monthEndDate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>0 and ltv_required<60)")->toArray();
        $this->view->setVar('monthlyLeadBelowSixtyLtv', $monthlyLeadBelowSixtyLtv);

        $monthlyLeadSixtyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$monthStartDate."' and date(created)<='".$monthEndDate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=60 and ltv_required<70)")->toArray();
        $this->view->setVar('monthlyLeadSixtyLtv', $monthlyLeadSixtyLtv);

         $monthlyLeadSeventyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$monthStartDate."' and date(created)<='".$monthEndDate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=70 and ltv_required<80)")->toArray();
        $this->view->setVar('monthlyLeadSeventyLtv', $monthlyLeadSeventyLtv);

         $monthlyLeadEightyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$monthStartDate."' and date(created)<='".$monthEndDate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=80 and ltv_required<90)")->toArray();
        $this->view->setVar('monthlyLeadEightyLtv', $monthlyLeadEightyLtv);

         $monthlyLeadnintyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$monthStartDate."' and date(created)<='".$monthEndDate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=90 and ltv_required<100)")->toArray();
        $this->view->setVar('monthlyLeadnintyLtv', $monthlyLeadnintyLtv);
        //Monthly no of lead Add End=========

        //Quarterly no of lead add==========
       //echo $date=ceil(date('n', time()) / 3);exit();
        $quarterdateArr=array();
        for($count=1; $count<4; $count++){
            $incAmt=122*$count;
            $newdate=date('Y-m-d', strtotime("+".$incAmt." day", strtotime($yearstartdate)));
            array_push($quarterdateArr, $newdate);
            if(count($quarterdateArr)>0){
                $decVal=$count-2;
                //echo $quarterdateArr[$decVal];
                if($currentdate>$quarterdateArr[$decVal] && $currentdate<$newdate){
                    if($decVal==-1){
                        $qtStartDate=$yearstartdate;
                    }else{
                        $qtStartDate=$quarterdateArr[$decVal];
                    }
                    $qtEnddate=$newdate;
                }else if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }else{
                if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }

        }

        $quarterLeadBelowSixtyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$qtStartDate."' and date(created)<='".$qtEnddate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>0 and ltv_required<60)")->toArray();
        $this->view->setVar('quarterLeadBelowSixtyLtv', $quarterLeadBelowSixtyLtv);

        $quarterLeadSixtyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$qtStartDate."' and date(created)<='".$qtEnddate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=60 and ltv_required<70)")->toArray();
        $this->view->setVar('quarterLeadSixtyLtv', $quarterLeadSixtyLtv);

        $quarterLeadSeventyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$qtStartDate."' and date(created)<='".$qtEnddate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=70 and ltv_required<80)")->toArray();
        $this->view->setVar('quarterLeadSeventyLtv', $quarterLeadSeventyLtv);

        $quarterLeadEightyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$qtStartDate."' and date(created)<='".$qtEnddate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=80 and ltv_required<90)")->toArray();
        $this->view->setVar('quarterLeadEightyLtv', $quarterLeadEightyLtv);

        $quarterLeadNintyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$qtStartDate."' and date(created)<='".$qtEnddate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=90 and ltv_required<100)")->toArray();
        $this->view->setVar('quarterLeadNintyLtv', $quarterLeadNintyLtv);
        //Quarterly no of lead add=============

        //yearly no of lead add================
        $yearlyLeadBelowSixtyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$yearstartdate."' and date(created)<='".$yearenddate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>0 and ltv_required<60)")->toArray();
        $this->view->setVar('yearlyLeadBelowSixtyLtv', $yearlyLeadBelowSixtyLtv);

         $yearlyLeadSixtyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$yearstartdate."' and date(created)<='".$yearenddate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=60 and ltv_required<70)")->toArray();
        $this->view->setVar('yearlyLeadSixtyLtv', $yearlyLeadSixtyLtv);

         $yearlyLeadSeventyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$yearstartdate."' and date(created)<='".$yearenddate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=70 and ltv_required<80)")->toArray();
        $this->view->setVar('yearlyLeadSeventyLtv', $yearlyLeadSeventyLtv);

         $yearlyLeadeightyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$yearstartdate."' and date(created)<='".$yearenddate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=80 and ltv_required<90)")->toArray();
        $this->view->setVar('yearlyLeadeightyLtv', $yearlyLeadeightyLtv);

         $yearlyLeadNintyLtv=Enquiry::findList("select count(*) as totalLtv from enquiry where (date(created)>='".$yearstartdate."' and date(created)<='".$yearenddate."')".$advIDCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (ltv_required>=90 and ltv_required<100)")->toArray();
        $this->view->setVar('yearlyLeadNintyLtv', $yearlyLeadNintyLtv);
        //yearly no of lead add End================
        //==============Total LTV percent of leads End===============


        if($this->request->get('task_status')!=''){
            $allPost['statusid']=$this->request->get('task_status');
        //=============Status Statistics================
                $weeklyDates=UIElements::BapCustUniweekStaratEnd();
                // echo "<pre>";print_r($weeklyDates);exit;
                $sessionID=$this->session->get('sessUserID');
                //Today no of lead Add=========
                $todayWorkflowStatus=WorkflowTask::findAll("select COUNT( * ) totaltask FROM  workflow_task
INNER JOIN enquiry ON workflow_task.lead_id = enquiry.id WHERE workflow_task.show_in_task=1 and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and date(workflow_task.created)='".$curdate."' and workflow_task.task_status =".$allPost['statusid'].$joinadvCond." ORDER BY workflow_task.id DESC")->toArray();
                $this->view->setVar('todayWorkflowStatus', $todayWorkflowStatus);
                //Today no of lead Add End=========

                //Weekly no of lead Add=========

                $weeklyLeadAdd=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."') and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();

                $weeklyWorkflowStatus=WorkflowTask::findAll("select COUNT( * ) totaltask FROM  workflow_task
INNER JOIN enquiry ON workflow_task.lead_id = enquiry.id WHERE workflow_task.show_in_task=1 and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and (date(workflow_task.created)>='".$weeklyDates[0]."' and date(workflow_task.created)<='".$weeklyDates[1]."')".$joinadvCond." and workflow_task.task_status =".$allPost['statusid']." ORDER BY workflow_task.id DESC")->toArray();

                $this->view->setVar('weeklyWorkflowStatus', $weeklyWorkflowStatus);
                //Weekly no of lead Add End=========

                 //Monthly no of lead Add=========
                $monthlyWorkflowStatus=WorkflowTask::findAll("select COUNT( * ) totaltask FROM  workflow_task
INNER JOIN enquiry ON workflow_task.lead_id = enquiry.id WHERE workflow_task.show_in_task=1 and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and (date(workflow_task.created)>='".$monthStartDate."' and date(workflow_task.created)<='".$monthEndDate."')".$joinadvCond." and workflow_task.task_status =".$allPost['statusid']." ORDER BY workflow_task.id DESC")->toArray();
                $this->view->setVar('monthlyWorkflowStatus', $monthlyWorkflowStatus);
                //Monthly no of lead Add End=========

                //Quarterly no of lead add==========
               //echo $date=ceil(date('n', time()) / 3);exit();
                $quarterdateArr=array();
                for($count=1; $count<4; $count++){
                    $incAmt=122*$count;
                    $newdate=date('Y-m-d', strtotime("+".$incAmt." day", strtotime($yearstartdate)));
                    array_push($quarterdateArr, $newdate);
                    if(count($quarterdateArr)>0){
                        $decVal=$count-2;
                        //echo $quarterdateArr[$decVal];
                        if($currentdate>$quarterdateArr[$decVal] && $currentdate<$newdate){
                            if($decVal==-1){
                                $qtStartDate=$yearstartdate;
                            }else{
                                $qtStartDate=$quarterdateArr[$decVal];
                            }
                            $qtEnddate=$newdate;
                        }else if($currentdate>$yearstartdate && $currentdate<$newdate){
                            $qtStartDate=$yearstartdate;
                            $qtEnddate=$newdate;
                        }
                    }else{
                        if($currentdate>$yearstartdate && $currentdate<$newdate){
                            $qtStartDate=$yearstartdate;
                            $qtEnddate=$newdate;
                        }
                    }

                }

                $quarterWorkflowStatus=WorkflowTask::findAll("select COUNT( * ) totaltask FROM  workflow_task
INNER JOIN enquiry ON workflow_task.lead_id = enquiry.id WHERE workflow_task.show_in_task=1 and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and (date(workflow_task.created)>='".$qtStartDate."' and date(workflow_task.created)<='".$qtEnddate."')".$joinadvCond." and workflow_task.task_status =".$allPost['statusid']." ORDER BY workflow_task.id DESC")->toArray();
                $this->view->setVar('quarterWorkflowStatus', $quarterWorkflowStatus);
                //Quarterly no of lead add=============

                //yearly no of lead add================
                $yearlyWorkflowStatus=WorkflowTask::findAll("select COUNT( * ) totaltask FROM  workflow_task
INNER JOIN enquiry ON workflow_task.lead_id = enquiry.id WHERE workflow_task.show_in_task=1 and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and (date(workflow_task.created)>='".$yearstartdate."' and date(workflow_task.created)<='".$yearenddate."')".$joinadvCond." and workflow_task.task_status =".$allPost['statusid']." ORDER BY workflow_task.id DESC")->toArray();
                $this->view->setVar('yearlyWorkflowStatus', $yearlyWorkflowStatus);
                //yearly no of lead add End================
                //=============Status Statistics================

            }

            if($this->request->get('enquiry_source')!=''){
                $allPost['sourceid']=$this->request->get('enquiry_source');
                //=============Enquiry Source Statistics================
                $weeklyDates=UIElements::BapCustUniweekStaratEnd();
                // echo "<pre>";print_r($weeklyDates);exit;
                $sessionID=$this->session->get('sessUserID');
                //Today no of lead Add=========

                $etodayleadAdd=Enquiry::findList("select count(*) as totlead from enquiry where date(created)='".$curdate."' and enquiry_source=".$allPost['sourceid']."".$advCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
                $this->view->setVar('etodayleadAdd', $etodayleadAdd);
                //Today no of lead Add End=========

                //Weekly no of lead Add=========

                $eweeklyLeadAdd=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."')".$advCond." and enquiry_source=".$allPost['sourceid']." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
                $this->view->setVar('eweeklyLeadAdd', $eweeklyLeadAdd);
                //Weekly no of lead Add End=========

                 //Monthly no of lead Add=========
                $emonthlyLeadAdd=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$monthStartDate."' and date(created)<='".$monthEndDate."')".$advCond." and enquiry_source=".$allPost['sourceid']." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
                $this->view->setVar('emonthlyLeadAdd', $emonthlyLeadAdd);
                //Monthly no of lead Add End=========

                //Quarterly no of lead add==========
               //echo $date=ceil(date('n', time()) / 3);exit();
                $quarterdateArr=array();
                for($count=1; $count<4; $count++){
                    $incAmt=122*$count;
                    $newdate=date('Y-m-d', strtotime("+".$incAmt." day", strtotime($yearstartdate)));
                    array_push($quarterdateArr, $newdate);
                    if(count($quarterdateArr)>0){
                        $decVal=$count-2;
                        //echo $quarterdateArr[$decVal];
                        if($currentdate>$quarterdateArr[$decVal] && $currentdate<$newdate){
                            if($decVal==-1){
                                $qtStartDate=$yearstartdate;
                            }else{
                                $qtStartDate=$quarterdateArr[$decVal];
                            }
                            $qtEnddate=$newdate;
                        }else if($currentdate>$yearstartdate && $currentdate<$newdate){
                            $qtStartDate=$yearstartdate;
                            $qtEnddate=$newdate;
                        }
                    }else{
                        if($currentdate>$yearstartdate && $currentdate<$newdate){
                            $qtStartDate=$yearstartdate;
                            $qtEnddate=$newdate;
                        }
                    }

                }

                $equarterLeadApp=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$qtStartDate."' and date(created)<='".$qtEnddate."')".$advCond." and enquiry_source=".$allPost['sourceid']." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
                $this->view->setVar('equarterLeadApp', $equarterLeadApp);
                //Quarterly no of lead add=============

                //yearly no of lead add================
                $eyearlyLeadApp=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$yearstartdate."' and date(created)<='".$yearenddate."')".$advCond." and enquiry_source=".$allPost['sourceid']." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
                $this->view->setVar('eyearlyLeadApp', $eyearlyLeadApp);
                //yearly no of lead add End================
                //=============Enquiry Source Statistics================
            }


            if($this->request->get('lenderid')!='' || $this->request->get('case_status')!=''){

                $allPost=$this->request->get();


                if($allPost['lenderid']!='' && $allPost['case_status']!=''){
                    if($allPost['lenderid']=='all'){
                        $cond=" and workflow_task.case_status =".$allPost['case_status'];
                    }else{
                        $cond=" and workflow_task.task_lender =".$allPost['lenderid']." and workflow_task.case_status =".$allPost['case_status'];
                    }


                }else if($allPost['lenderid']!='' && $allPost['case_status']==''){


                    if($allPost['lenderid']=='all'){
                        $cond="";
                    }else{
                       $cond=" and workflow_task.task_lender =".$allPost['lenderid'];
                    }

                }else if($allPost['lenderid']=='' && $allPost['case_status']!=''){

                    $cond=" and workflow_task.case_status =".$allPost['case_status'];
                }

                //=============Status Statistics================
                $weeklyDates=UIElements::BapCustUniweekStaratEnd();
                // echo "<pre>";print_r($weeklyDates);exit;
                $sessionID=$this->session->get('sessUserID');
                //Today no of lead Add=========


                $todayLenderWorkflowStatus=WorkflowTask::findAll("select workflow_task.* FROM  workflow_task
INNER JOIN enquiry ON workflow_task.lead_id = enquiry.id WHERE workflow_task.show_in_task=1 and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and date(workflow_task.created)='".$curdate."'".$advIDJoinCond.$cond." ORDER BY workflow_task.id DESC");
                $this->view->setVar('todayLenderWorkflowStatus', $todayLenderWorkflowStatus);
                //Today no of lead Add End=========

                //Weekly no of lead Add=========



                $weeklylenderWorkflowStatus=WorkflowTask::findAll("select workflow_task.* FROM  workflow_task
INNER JOIN enquiry ON workflow_task.lead_id = enquiry.id WHERE workflow_task.show_in_task=1 and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and (date(workflow_task.created)>='".$weeklyDates[0]."' and date(workflow_task.created)<='".$weeklyDates[1]."')".$advIDJoinCond.$cond." ORDER BY workflow_task.id DESC");

                $this->view->setVar('weeklylenderWorkflowStatus', $weeklylenderWorkflowStatus);
                //Weekly no of lead Add End=========

                 //Monthly no of lead Add=========
                $monthlyLenderWorkflowStatus=WorkflowTask::findAll("select workflow_task.* FROM  workflow_task
INNER JOIN enquiry ON workflow_task.lead_id = enquiry.id WHERE workflow_task.show_in_task=1 and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and (date(workflow_task.created)>='".$monthStartDate."' and date(workflow_task.created)<='".$monthEndDate."')".$advIDJoinCond.$cond." ORDER BY workflow_task.id DESC");
                $this->view->setVar('monthlyLenderWorkflowStatus', $monthlyLenderWorkflowStatus);
                //Monthly no of lead Add End=========

                //Quarterly no of lead add==========
               //echo $date=ceil(date('n', time()) / 3);exit();
                $quarterdateArr=array();
                for($count=1; $count<4; $count++){
                    $incAmt=122*$count;
                    $newdate=date('Y-m-d', strtotime("+".$incAmt." day", strtotime($yearstartdate)));
                    array_push($quarterdateArr, $newdate);
                    if(count($quarterdateArr)>0){
                        $decVal=$count-2;
                        //echo $quarterdateArr[$decVal];
                        if($currentdate>$quarterdateArr[$decVal] && $currentdate<$newdate){
                            if($decVal==-1){
                                $qtStartDate=$yearstartdate;
                            }else{
                                $qtStartDate=$quarterdateArr[$decVal];
                            }
                            $qtEnddate=$newdate;
                        }else if($currentdate>$yearstartdate && $currentdate<$newdate){
                            $qtStartDate=$yearstartdate;
                            $qtEnddate=$newdate;
                        }
                    }else{
                        if($currentdate>$yearstartdate && $currentdate<$newdate){
                            $qtStartDate=$yearstartdate;
                            $qtEnddate=$newdate;
                        }
                    }

                }

                $quarterLenderWorkflowStatus=WorkflowTask::findAll("select workflow_task.* FROM  workflow_task
INNER JOIN enquiry ON workflow_task.lead_id = enquiry.id WHERE workflow_task.show_in_task=1 and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and (date(workflow_task.created)>='".$qtStartDate."' and date(workflow_task.created)<='".$qtEnddate."')".$advIDJoinCond.$cond." ORDER BY workflow_task.id DESC");
                $this->view->setVar('quarterLenderWorkflowStatus', $quarterLenderWorkflowStatus);
                //Quarterly no of lead add=============

                //yearly no of lead add================
                $yearlyLenderWorkflowStatus=WorkflowTask::findAll("select workflow_task.* FROM  workflow_task
INNER JOIN enquiry ON workflow_task.lead_id = enquiry.id WHERE workflow_task.show_in_task=1 and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and (date(workflow_task.created)>='".$yearstartdate."' and date(workflow_task.created)<='".$yearenddate."')".$advIDJoinCond.$cond." ORDER BY workflow_task.id DESC");
                $this->view->setVar('yearlyLenderWorkflowStatus', $yearlyLenderWorkflowStatus);
                //yearly no of lead add End================
                //=============Status Statistics================




            }























             if($this->request->get('application_type')!=''){
                $allPost['productid']=$this->request->get('application_type');
                //=============Enquiry Source Statistics================
                $weeklyDates=UIElements::BapCustUniweekStaratEnd();
                // echo "<pre>";print_r($weeklyDates);exit;
                $sessionID=$this->session->get('sessUserID');
                //Today no of lead Add=========

                $ptodayleadAdd=Enquiry::findList("select count(*) as totlead from enquiry where date(created)='".$curdate."' and application_type=".$allPost['productid']."".$advCond." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
                $this->view->setVar('ptodayleadAdd', $ptodayleadAdd);
                //Today no of lead Add End=========

                //Weekly no of lead Add=========

                $pweeklyLeadAdd=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."')".$advCond." and application_type=".$allPost['productid']." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
                $this->view->setVar('pweeklyLeadAdd', $pweeklyLeadAdd);
                //Weekly no of lead Add End=========

                 //Monthly no of lead Add=========
                $pmonthlyLeadAdd=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$monthStartDate."' and date(created)<='".$monthEndDate."')".$advCond." and application_type=".$allPost['productid']." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
                $this->view->setVar('pmonthlyLeadAdd', $pmonthlyLeadAdd);
                //Monthly no of lead Add End=========

                //Quarterly no of lead add==========
               //echo $date=ceil(date('n', time()) / 3);exit();
                $quarterdateArr=array();
                for($count=1; $count<4; $count++){
                    $incAmt=122*$count;
                    $newdate=date('Y-m-d', strtotime("+".$incAmt." day", strtotime($yearstartdate)));
                    array_push($quarterdateArr, $newdate);
                    if(count($quarterdateArr)>0){
                        $decVal=$count-2;
                        //echo $quarterdateArr[$decVal];
                        if($currentdate>$quarterdateArr[$decVal] && $currentdate<$newdate){
                            if($decVal==-1){
                                $qtStartDate=$yearstartdate;
                            }else{
                                $qtStartDate=$quarterdateArr[$decVal];
                            }
                            $qtEnddate=$newdate;
                        }else if($currentdate>$yearstartdate && $currentdate<$newdate){
                            $qtStartDate=$yearstartdate;
                            $qtEnddate=$newdate;
                        }
                    }else{
                        if($currentdate>$yearstartdate && $currentdate<$newdate){
                            $qtStartDate=$yearstartdate;
                            $qtEnddate=$newdate;
                        }
                    }

                }

                $pquarterLeadApp=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$qtStartDate."' and date(created)<='".$qtEnddate."')".$advCond." and application_type=".$allPost['productid']." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
                $this->view->setVar('pquarterLeadApp', $pquarterLeadApp);
                //Quarterly no of lead add=============

                //yearly no of lead add================
                $pyearlyLeadApp=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$yearstartdate."' and date(created)<='".$yearenddate."')".$advCond." and application_type=".$allPost['productid']." and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
                $this->view->setVar('pyearlyLeadApp', $pyearlyLeadApp);
                //yearly no of lead add End================
                //=============Enquiry Source Statistics================
            }























        //----------------------End Statis tics------------------------
    }

    public function advisorstatAction(){
        $responseArr=array('response' => 2, 'content' => '', 'todayAdvisor' => '', 'weeklyAdvisor' => '', 'monthlyAdvisor' => '', 'quarterAdvisor' => '', 'yearlyAdvisor' => '', 'advisorMinVal' => '', 'advisorMaxVal' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();




            if((isset($allPost['fromdate']) && $allPost['fromdate']!='') && (isset($allPost['todate']) && $allPost['todate']!='') ){

                $fromDate=str_replace('/', "-", $allPost['fromdate']);
                $curdate=date("Y-m-d", strtotime($fromDate));
                $currentdate=$curdate;

                $toDate=str_replace('/', "-", $allPost['todate']);
                $toDate=date("Y-m-d", strtotime($toDate));


                $currentYear=date("Y", strtotime($curdate));
                $currentMonth=date("m", strtotime($curdate));

                $monthStartDate=$curdate;
                $monthEndRawDate=date("Y-m-t", strtotime($curdate));
                if($toDate>$monthEndRawDate){
                    $monthEndDate=$monthEndRawDate;
                }else{
                    $monthEndDate=$toDate;
                }

                $yearstartdate=$curdate;
                $yearRawenddate=date("Y-12-31", strtotime($curdate));
                if($toDate>$yearRawenddate){
                    $yearenddate=$yearRawenddate;
                }else{
                    $yearenddate=$toDate;
                }
            }else if((isset($allPost['fromdate']) && $allPost['fromdate']!='') && (isset($allPost['todate']) && $allPost['todate']=='') ){

                $fromDate=str_replace('/', "-", $allPost['fromdate']);
                $curdate=date("Y-m-d", strtotime($fromDate));
                $currentdate=$curdate;



                $currentYear=date("Y", strtotime($curdate));
                $currentMonth=date("m", strtotime($curdate));

                $monthStartDate=date("Y-m-01", strtotime($curdate));
                $monthEndRawDate=date("Y-m-t", strtotime($curdate));
                $monthEndDate=$monthEndRawDate;

                $yearstartdate=date("Y-01-01", strtotime($curdate));
                $yearRawenddate=date("Y-12-31", strtotime($curdate));
                $yearenddate=$yearRawenddate;
            }else if((isset($allPost['fromdate']) && $allPost['fromdate']=='') && (isset($allPost['todate']) && $allPost['todate']!='') ){

                $toDate=str_replace('/', "-", $allPost['todate']);
                $curdate=date("Y-m-d", strtotime($toDate));
                $currentdate=$curdate;




                $currentYear=date("Y", strtotime($curdate));
                $currentMonth=date("m", strtotime($curdate));

                $monthStartDate=date("Y-m-01", strtotime($curdate));
                $monthEndRawDate=date("Y-m-t", strtotime($curdate));
                $monthEndDate=$monthEndRawDate;

                $yearstartdate=date("Y-01-01", strtotime($curdate));
                $yearRawenddate=date("Y-12-31", strtotime($curdate));
                $yearenddate=$yearRawenddate;
            }else{
                $curdate=date("Y-m-d");
                $monthStartDate=date("Y-m-01");
                $monthEndDate=date("Y-m-t");
                $currentdate=date("Y-m-d");
                $yearstartdate=date("Y-01-01");
                $yearenddate=date("Y-12-31");
            }

            if($allPost['adv_id']!=''){
                //=============Status Statistics================
                $weeklyDates=UIElements::BapCustUniweekStaratEnd();
                // echo "<pre>";print_r($weeklyDates);exit;
                $sessionID=$this->session->get('sessUserID');
                //Today no of lead Add=========

        $todayleadAdd=Enquiry::findList("select count(*) as totlead from enquiry where date(created)='".$curdate."' and advisor_id='".$allPost['adv_id']."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('todayleadAdd', $todayleadAdd);
        //Today no of lead Add End=========

        //Weekly no of lead Add=========

        $weeklyLeadAdd=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."') and advisor_id='".$allPost['adv_id']."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('weeklyLeadAdd', $weeklyLeadAdd);
        //Weekly no of lead Add End=========

         //Monthly no of lead Add=========

        $monthlyLeadAdd=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$monthStartDate."' and date(created)<='".$monthEndDate."') and advisor_id='".$allPost['adv_id']."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('monthlyLeadAdd', $monthlyLeadAdd);
        //Monthly no of lead Add End=========

        //Quarterly no of lead add==========
       //echo $date=ceil(date('n', time()) / 3);exit();
        $quarterdateArr=array();
        for($count=1; $count<4; $count++){
            $incAmt=122*$count;
            $newdate=date('Y-m-d', strtotime("+".$incAmt." day", strtotime($yearstartdate)));
            array_push($quarterdateArr, $newdate);
            if(count($quarterdateArr)>0){

                $decVal=$count-2;
                $quarterdateArr[$decVal];
                if($currentdate>$quarterdateArr[$decVal] && $currentdate<$newdate){
                    if($decVal==-1){
                        $qtStartDate=$yearstartdate;
                    }else{
                        $qtStartDate=$quarterdateArr[$decVal];
                    }

                    $qtEnddate=$newdate;
                }else if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }else{
                if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }

        }
       // echo $qtEnddate;
       // echo $qtStartDate;
        //echo "select count(*) as totlead from enquiry where (date(created)>='".$qtStartDate."' and date(created)<='".$qtEnddate."') and advisor_id='".$sessionID."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)";
       //print_r($quarterdateArr); exit();
        $quarterLeadApp=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$qtStartDate."' and date(created)<='".$qtEnddate."') and advisor_id='".$allPost['adv_id']."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('quarterLeadApp', $quarterLeadApp);
        //echo $quarterLeadApp[0]['totlead'];
        // exit();
        //Quarterly no of lead add=============

        //yearly no of lead add================

        $yearlyLeadApp=Enquiry::findList("select count(*) as totlead from enquiry where (date(created)>='".$yearstartdate."' and date(created)<='".$yearenddate."') and advisor_id='".$allPost['adv_id']."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL)")->toArray();
        $this->view->setVar('yearlyLeadApp', $yearlyLeadApp);
        //yearly no of lead add End================

        //=========================Approve to lender==============

        $weeklyDates=UIElements::BapCustUniweekStaratEnd();
        // echo "<pre>";print_r($weeklyDates);exit;
        $sessionID=$this->session->get('sessUserID');
        //Today no of lead Add=========

        $todayLenderApprove=Enquiry::findList("select count(*) as totlead from enquiry where date(approve_lender_date)='".$curdate."' and approve_by_lender>0 and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and advisor_id='".$allPost['adv_id']."'")->toArray();
        $this->view->setVar('todayLenderApprove', $todayLenderApprove);
        //Today no of lead Add End=========

        //Weekly no of lead Add=========

        $weeklyLenderApprove=Enquiry::findList("select count(*) as totlead from enquiry where (date(approve_lender_date)>='".$weeklyDates[0]."' and date(approve_lender_date)<='".$weeklyDates[1]."') and approve_by_lender>0 and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and advisor_id='".$allPost['adv_id']."'")->toArray();
        $this->view->setVar('weeklyLenderApprove', $weeklyLenderApprove);
        //Weekly no of lead Add End=========

         //Monthly no of lead Add=========
        $monthlyLenderApprove=Enquiry::findList("select count(*) as totlead from enquiry where (date(approve_lender_date)>='".$monthStartDate."' and date(approve_lender_date)<='".$monthEndDate."') and approve_by_lender>0 and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and advisor_id='".$allPost['adv_id']."'")->toArray();
        $this->view->setVar('monthlyLenderApprove', $monthlyLenderApprove);
        //Monthly no of lead Add End=========

        //Quarterly no of lead add==========
       //echo $date=ceil(date('n', time()) / 3);exit();
        $quarterdateArr=array();
        for($count=1; $count<4; $count++){
            $incAmt=122*$count;
            $newdate=date('Y-m-d', strtotime("+".$incAmt." day", strtotime($yearstartdate)));
            array_push($quarterdateArr, $newdate);
            if(count($quarterdateArr)>0){
                $decVal=$count-2;
                //echo $quarterdateArr[$decVal];
                if($currentdate>$quarterdateArr[$decVal] && $currentdate<$newdate){
                    if($decVal==-1){
                        $qtStartDate=$yearstartdate;
                    }else{
                        $qtStartDate=$quarterdateArr[$decVal];
                    }
                    $qtEnddate=$newdate;
                }else if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }else{
                if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }

        }

        $quarterLenderApprove=Enquiry::findList("select count(*) as totlead from enquiry where (date(approve_lender_date)>='".$qtStartDate."' and date(approve_lender_date)<='".$qtEnddate."') and approve_by_lender>0 and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and advisor_id='".$allPost['adv_id']."'")->toArray();
        $this->view->setVar('quarterLenderApprove', $quarterLenderApprove);
        //Quarterly no of lead add=============

        //yearly no of lead add================
        $yearlyLenderApprove=Enquiry::findList("select count(*) as totlead from enquiry where (date(approve_lender_date)>='".$yearstartdate."' and date(approve_lender_date)<='".$yearenddate."') and approve_by_lender>0 and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and advisor_id='".$allPost['adv_id']."'")->toArray();
        $this->view->setVar('yearlyLenderApprove', $yearlyLenderApprove);
        //yearly no of lead add End================

        //=========================Approve to lender==============

         //=========================Pre Completion==============

        $weeklyDates=UIElements::BapCustUniweekStaratEnd();
        // echo "<pre>";print_r($weeklyDates);exit;
        $sessionID=$this->session->get('sessUserID');
        //Today no of lead Add=========

        $todayPreCompletion=Enquiry::findList("select count(*) as totlead from enquiry inner join caserequirement_precompletion on enquiry.id=caserequirement_precompletion.lead_id where date(caserequirement_precompletion.created)='".$curdate."' and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and enquiry.advisor_id='".$allPost['adv_id']."'")->toArray();
        $this->view->setVar('todayPreCompletion', $todayPreCompletion);
        //Today no of lead Add End=========

        //Weekly no of lead Add=========

        $weeklyPreCompletion=Enquiry::findList("select count(*) as totlead from enquiry inner join caserequirement_precompletion on enquiry.id=caserequirement_precompletion.lead_id where (date(caserequirement_precompletion.created)>='".$weeklyDates[0]."' and date(caserequirement_precompletion.created)<='".$weeklyDates[1]."') and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and enquiry.advisor_id='".$allPost['adv_id']."'")->toArray();
        $this->view->setVar('weeklyPreCompletion', $weeklyPreCompletion);
        //Weekly no of lead Add End=========

         //Monthly no of lead Add=========
        $monthlyPreCompletion=Enquiry::findList("select count(*) as totlead from enquiry inner join caserequirement_precompletion on enquiry.id=caserequirement_precompletion.lead_id where (date(caserequirement_precompletion.created)>='".$monthStartDate."' and date(caserequirement_precompletion.created)<='".$monthEndDate."') and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and enquiry.advisor_id='".$allPost['adv_id']."'")->toArray();
        $this->view->setVar('monthlyPreCompletion', $monthlyPreCompletion);
        //Monthly no of lead Add End=========

        //Quarterly no of lead add==========
       //echo $date=ceil(date('n', time()) / 3);exit();
        $quarterdateArr=array();
        for($count=1; $count<4; $count++){
            $incAmt=122*$count;
            $newdate=date('Y-m-d', strtotime("+".$incAmt." day", strtotime($yearstartdate)));
            array_push($quarterdateArr, $newdate);
            if(count($quarterdateArr)>0){
                $decVal=$count-2;
                //echo $quarterdateArr[$decVal];
                if($currentdate>$quarterdateArr[$decVal] && $currentdate<$newdate){
                    if($decVal==-1){
                        $qtStartDate=$yearstartdate;
                    }else{
                        $qtStartDate=$quarterdateArr[$decVal];
                    }
                    $qtEnddate=$newdate;
                }else if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }else{
                if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }

        }

        $quarterPreCompletion=Enquiry::findList("select count(*) as totlead from enquiry inner join caserequirement_precompletion on enquiry.id=caserequirement_precompletion.lead_id where (date(caserequirement_precompletion.created)>='".$qtStartDate."' and date(caserequirement_precompletion.created)<='".$qtEnddate."') and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and enquiry.advisor_id='".$allPost['adv_id']."'")->toArray();
        $this->view->setVar('quarterPreCompletion', $quarterPreCompletion);
        //Quarterly no of lead add=============

        //yearly no of lead add================
        $yearlyPreCompletion=Enquiry::findList("select count(*) as totlead from enquiry inner join caserequirement_precompletion on enquiry.id=caserequirement_precompletion.lead_id where (date(caserequirement_precompletion.created)>='".$yearstartdate."' and date(caserequirement_precompletion.created)<='".$yearenddate."') and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and enquiry.advisor_id='".$allPost['adv_id']."'")->toArray();
        $this->view->setVar('yearlyPreCompletion', $yearlyPreCompletion);
        //yearly no of lead add End================

        //=========================pre completion==============


        //========================Completed lead=================
        $weeklyDates=UIElements::BapCustUniweekStaratEnd();
        // echo "<pre>";print_r($weeklyDates);exit;
        $sessionID=$this->session->get('sessUserID');
        //Today no of lead Add=========

        $todayCompleted=Enquiry::findList("select count(*) as totlead from enquiry where date(complete_date)='".$curdate."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and advisor_id='".$allPost['adv_id']."'")->toArray();
        $this->view->setVar('todayCompleted', $todayCompleted);
        //Today no of lead Add End=========

        //Weekly no of lead Add=========

        $weeklyCompleted=Enquiry::findList("select count(*) as totlead from enquiry where (date(complete_date)>='".$weeklyDates[0]."' and date(complete_date)<='".$weeklyDates[1]."') and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and advisor_id='".$allPost['adv_id']."'")->toArray();
        $this->view->setVar('weeklyCompleted', $weeklyCompleted);
        //Weekly no of lead Add End=========

         //Monthly no of lead Add=========
        $monthlyCompleted=Enquiry::findList("select count(*) as totlead from enquiry where (date(complete_date)>='".$monthStartDate."' and date(complete_date)<='".$monthEndDate."') and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and advisor_id='".$allPost['adv_id']."'")->toArray();
        $this->view->setVar('monthlyCompleted', $monthlyCompleted);
        //Monthly no of lead Add End=========

        //Quarterly no of lead add==========
       //echo $date=ceil(date('n', time()) / 3);exit();
        $quarterdateArr=array();
        for($count=1; $count<4; $count++){
            $incAmt=122*$count;
            $newdate=date('Y-m-d', strtotime("+".$incAmt." day", strtotime($yearstartdate)));
            array_push($quarterdateArr, $newdate);
            if(count($quarterdateArr)>0){
                $decVal=$count-2;
                //echo $quarterdateArr[$decVal];
                if($currentdate>$quarterdateArr[$decVal] && $currentdate<$newdate){
                    if($decVal==-1){
                        $qtStartDate=$yearstartdate;
                    }else{
                        $qtStartDate=$quarterdateArr[$decVal];
                    }
                    $qtEnddate=$newdate;
                }else if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }else{
                if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }

        }

        $quarterCompleted=Enquiry::findList("select count(*) as totlead from enquiry where (date(complete_date)>='".$qtStartDate."' and date(complete_date)<='".$qtEnddate."') and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and advisor_id='".$allPost['adv_id']."'")->toArray();
        $this->view->setVar('quarterCompleted', $quarterCompleted);
        //Quarterly no of lead add=============

        //yearly no of lead add================
        $yearlyCompleted=Enquiry::findList("select count(*) as totlead from enquiry where (date(complete_date)>='".$yearstartdate."' and date(complete_date)<='".$yearenddate."') and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and advisor_id='".$allPost['adv_id']."'")->toArray();
        $this->view->setVar('yearlyCompleted', $yearlyCompleted);
        //yearly no of lead add End================
        //========================End completed lead==============


                //=============Status Statistics================

                $content='<h4>New Leads</h4>
                        <ul class="add_enquary">
                          <li><span>'.$todayleadAdd[0]['totlead'].'</span> Daily<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                          <li><span>'.$weeklyLeadAdd[0]['totlead'].'</span> Weekly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                          <li><span>'.$monthlyLeadAdd[0]['totlead'].'</span> Monthly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                          <li><span>'.$quarterLeadApp[0]['totlead'].'</span> Quarterly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                          <li><span>'.$yearlyLeadApp[0]['totlead'].'</span> Yearly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                            
                        </ul>

                        <h4>Approve To Lender</h4>
                        <ul class="add_enquary">
                          <li><span>'.$todayLenderApprove[0]['totlead'].'</span> Daily<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                          <li><span>'.$weeklyLenderApprove[0]['totlead'].'</span> Weekly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                          <li><span>'.$monthlyLenderApprove[0]['totlead'].'</span> Monthly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                          <li><span>'.$quarterLenderApprove[0]['totlead'].'</span> Quarterly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                          <li><span>'.$yearlyLenderApprove[0]['totlead'].'</span> Yearly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                            
                        </ul>

                       <h4>Pre-post Completion</h4>
                        <ul class="add_enquary">
                          <li><span>'.$todayPreCompletion[0]['totlead'].'</span> Daily<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                          <li><span>'.$weeklyPreCompletion[0]['totlead'].'</span> Weekly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                          <li><span>'.$monthlyPreCompletion[0]['totlead'].'</span> Monthly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                          <li><span>'.$quarterPreCompletion[0]['totlead'].'</span> Quarterly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                          <li><span>'.$yearlyPreCompletion[0]['totlead'].'</span> Yearly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                            
                        </ul>

                        <h4>Completed</h4>
                        <ul class="add_enquary">
                          <li><span>'.$todayCompleted[0]['totlead'].'</span> Daily<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                          <li><span>'.$weeklyCompleted[0]['totlead'].'</span> Weekly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                          <li><span>'.$monthlyCompleted[0]['totlead'].'</span> Monthly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                          <li><span>'.$quarterCompleted[0]['totlead'].'</span> Quarterly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                          <li><span>'.$yearlyCompleted[0]['totlead'].'</span> Yearly<img src="'.BASEURL.'frontfile/image/top_arrow.png" /></li>
                            
                        </ul>';


                //==========status Graph============
               $advisorDataArr=array();
                array_push($advisorDataArr, $todayleadAdd[0]['totlead']);
                array_push($advisorDataArr, $weeklyLeadAdd[0]['totlead']);
                array_push($advisorDataArr, $monthlyLeadAdd[0]['totlead']);
                array_push($advisorDataArr, $quarterLeadApp[0]['totlead']);
                array_push($advisorDataArr, $yearlyLeadApp[0]['totlead']);

                array_push($advisorDataArr, $todayLenderApprove[0]['totlead']);
                array_push($advisorDataArr, $weeklyLenderApprove[0]['totlead']);
                array_push($advisorDataArr, $monthlyLenderApprove[0]['totlead']);
                array_push($advisorDataArr, $quarterLenderApprove[0]['totlead']);
                array_push($advisorDataArr, $yearlyLenderApprove[0]['totlead']);

                array_push($advisorDataArr, $todayPreCompletion[0]['totlead']);
                array_push($advisorDataArr, $weeklyPreCompletion[0]['totlead']);
                array_push($advisorDataArr, $monthlyPreCompletion[0]['totlead']);
                array_push($advisorDataArr, $quarterPreCompletion[0]['totlead']);
                array_push($advisorDataArr, $yearlyPreCompletion[0]['totlead']);

                array_push($advisorDataArr, $todayCompleted[0]['totlead']);
                array_push($advisorDataArr, $weeklyCompleted[0]['totlead']);
                array_push($advisorDataArr, $monthlyCompleted[0]['totlead']);
                array_push($advisorDataArr, $quarterCompleted[0]['totlead']);
                array_push($advisorDataArr, $yearlyCompleted[0]['totlead']);
                $advisorMax=max($advisorDataArr);

                $advisorMaxround=round(($advisorMax+5/2)/5)*5;
                $maxvalLength=strlen($advisorMaxround)-1;
                $advMinVal='1'.sprintf('%0'.$maxvalLength.'d', 0);
                $advisorMaxVal=$advisorMaxround+$advMinVal;
                //==========status Graph============

                $responseArr=array('response' => 1, 'content' => $content, 'todayleadAdd' => $todayleadAdd[0]['totlead'], 'weeklyLeadAdd' => $weeklyLeadAdd[0]['totlead'], 'monthlyLeadAdd' => $monthlyLeadAdd[0]['totlead'], 'quarterLeadApp' => $quarterLeadApp[0]['totlead'], 'yearlyLeadApp' => $yearlyLeadApp[0]['totlead'],'todayLenderApprove' => $todayLenderApprove[0]['totlead'],'weeklyLenderApprove' => $weeklyLenderApprove[0]['totlead'],'monthlyLenderApprove' => $monthlyLenderApprove[0]['totlead'],'quarterLenderApprove' => $quarterLenderApprove[0]['totlead'],'yearlyLenderApprove' => $yearlyLenderApprove[0]['totlead'],'todayPreCompletion' => $todayPreCompletion[0]['totlead'],'weeklyPreCompletion' => $weeklyPreCompletion[0]['totlead'],'monthlyPreCompletion' => $monthlyPreCompletion[0]['totlead'],'quarterPreCompletion' => $quarterPreCompletion[0]['totlead'],'yearlyPreCompletion' => $yearlyPreCompletion[0]['totlead'],'todayCompleted' => $todayCompleted[0]['totlead'],'weeklyCompleted' => $weeklyCompleted[0]['totlead'],'monthlyCompleted' => $monthlyCompleted[0]['totlead'],'quarterCompleted' => $quarterCompleted[0]['totlead'],'yearlyCompleted' => $yearlyCompleted[0]['totlead'], 'advMinVal' => $advMinVal, 'advisorMaxVal' => $advisorMaxVal);
            }
        }
        echo json_encode($responseArr);
        exit();
    }
    public function deletepreofferAction(){
        $responseArr=array('response' => 2, 'srlNo' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if($allPost['caseid']>0){
                $delete=$this->modelsManager->executeQuery("delete from CaserequirementPreoffer where id=".$allPost['caseid']);
                if($delete){
                    $documentsList=CaseofferDocument::find(array('conditions' => "caserequirement_id=".$allPost['caseid']));
                    if(count($documentsList)>0){
                        foreach($documentsList as $documentsResult){
                            $fileName=$documentsResult->upload_document;
                            @unlink("uploads/preofferdocument/".$fileName);
                        }
                       $this->modelsManager->executeQuery("delete from CaseofferDocument where caserequirement_id=".$allPost['caseid']);
                       $leadid=$allPost['leadid'];

                       //========Remove directory================
                       //echo $dirPath="uploads/preofferdocument/lead_".$leadid."document_".$allPost['caseid']."/";
                        //UIElements::bapCustUnideleteDir($dirPath);
                       //========End Remove directory=============
                    }
                    $responseArr=array('response' => 1, 'srlNo' => $allPost['srlNo']);
                }
            }

        }
        echo json_encode($responseArr);
        exit();
    }

    public function deleteworkflowtaskAction(){
        $responseArr=array('response' => 2, 'taskid' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if($allPost['taskid']>0){
                $workFlowdetail=WorkflowTask::findFirst(array('conditions' => "id=".$allPost['taskid']));
                $delete=$this->modelsManager->executeQuery("delete from WorkflowTask where id=".$allPost['taskid']);
                if($delete){
                    $leadid=$workFlowdetail->lead_id;
                    $lastidres=WorkflowTask::find(array('conditions' => "lead_id=".$leadid, 'order' => "id desc", 'limit' => 1));
                    if(count($lastidres)>0){
                        $newtaskId=$lastidres[0]->id;
                        $this->modelsManager->executeQuery("update WorkflowTask set show_in_task=1 where id=".$newtaskId);
                    }

                    $responseArr=array('response' => 1, 'taskid' => $allPost['taskid']);
                }
            }

        }
        echo json_encode($responseArr);
        exit();
    }
    public function deleteactiontaskAction(){
        $responseArr=array('response' => 2, 'taskid' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if($allPost['taskid']>0){
                $workFlowdetail=ActionTask::findFirst(array('conditions' => "id=".$allPost['taskid']));
                $delete=$this->modelsManager->executeQuery("delete from ActionTask where id=".$allPost['taskid']);
                if($delete){

                    $responseArr=array('response' => 1, 'taskid' => $allPost['taskid']);
                }
            }

        }
        echo json_encode($responseArr);
        exit();
    }


    public function deleteprecompletionAction(){
        $responseArr=array('response' => 2, 'srlNo' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if($allPost['caseid']>0){
                $delete=$this->modelsManager->executeQuery("delete from CaserequirementPrecompletion where id=".$allPost['caseid']);
                if($delete){
                    $documentsList=CasecompletionDocument::find(array('conditions' => "caserequirement_id=".$allPost['caseid']));
                    if(count($documentsList)>0){
                        foreach($documentsList as $documentsResult){
                            $fileName=$documentsResult->upload_document;
                            @unlink("uploads/precompletiondocument/".$fileName);
                        }
                       $this->modelsManager->executeQuery("delete from CasecompletionDocument where caserequirement_id=".$allPost['caseid']);
                       $leadid=$allPost['leadid'];

                       //========Remove directory================
                       //echo $dirPath="uploads/preofferdocument/lead_".$leadid."document_".$allPost['caseid']."/";
                        //UIElements::bapCustUnideleteDir($dirPath);
                       //========End Remove directory=============
                    }
                    $responseArr=array('response' => 1, 'srlNo' => $allPost['srlNo']);
                }
            }

        }
        echo json_encode($responseArr);
        exit();
    }

    public function deletepreofferfileAction(){
        $responseArr=array('response' => 2, 'caseid' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if($allPost['caseid']>0){
                $delete=$this->modelsManager->executeQuery("delete from CaserequirementPreoffer where id=".$allPost['caseid']);

                    $documentsResult=CaseofferDocument::findFirst(array('conditions' => "id=".$allPost['caseid']));
                    $fileName=$documentsResult->upload_document;
                    @unlink("uploads/preofferdocument/".$fileName);
                   $this->modelsManager->executeQuery("delete from CaseofferDocument where id=".$allPost['caseid']);
                    if($delete){
                        $responseArr=array('response' => 1, 'caseid' => $allPost['caseid']);
                    }
            }

        }
        echo json_encode($responseArr);
        exit();
    }
    public function deletevaluationAction(){
        $responseArr=array('response' => 2, 'srlNo' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if($allPost['caseid']>0){
                $delete=$this->modelsManager->executeQuery("delete from ValuationDocuments where id=".$allPost['caseid']);
                if($delete){
                    $documentsList=ValuationUploaddocument::find(array('conditions' => "valuation_id=".$allPost['caseid']));
                    if(count($documentsList)>0){
                        foreach($documentsList as $documentsResult){
                            $fileName=$documentsResult->upload_document;
                            @unlink("uploads/valuationdocument/".$fileName);
                        }
                       $this->modelsManager->executeQuery("delete from ValuationUploaddocument where valuation_id=".$allPost['caseid']);
                       $leadid=$allPost['leadid'];

                       //========Remove directory================
                       //echo $dirPath="uploads/preofferdocument/lead_".$leadid."document_".$allPost['caseid']."/";
                        //UIElements::bapCustUnideleteDir($dirPath);
                       //========End Remove directory=============
                    }
                    $responseArr=array('response' => 1, 'srlNo' => $allPost['srlNo']);
                }
            }

        }
        echo json_encode($responseArr);
        exit();
    }

    public function istchargefieldAction(){
        $propertyTypeArr=array('1'=>'Residential','2'=>'Semi Commercial','3'=>'Commercial','4'=>'Land no planning','Land With Planning');
        $termTypeArr=array('1'=>'1 month','2'=>'2 months','3'=>'3 months','4'=>'4 months','5'=>'5 months','6'=>'6 months','7'=>'7 months','8'=>'8 months','9'=>'9 months','10'=>'10 months','11'=>'11 months','12'=>'12 months','13'=>'13 months','14'=>'14 months','15'=>'15 months','16'=>'16 months','17'=>'17 months','18'=>'18 months','19'=>'19 months','20'=>'20 months','21'=>'21 months','22'=>'22 months','23'=>'23 months','24'=>'24 months', 33 => '25 Months', 34 => '26 Months', 35 => '27 Months', 36 => '28 Months', 37 => '29 Months', 38 => '30 Months', 39 => '31 Months', 40 => '32 Months', 41 => '33 Months', 42 => '34 Months', 43 => '35 Months', 44 => '36 Months', 45 => '37 Months', 46 => '38 Months', 47 => '39 Months', 48 => '40 Months', '25' => '3 Years', '26' => '4 Years', '27' => '5 Years', '28' => '6 Years', '29' => '7 Years', '30' => '8 Years', '31' => '9 Years', '32' => '10 Years', 49 => '11 Years', 50 => '12 Years', 51 => '13 Years', 52 => '14 Years', 53 => '15 Years', 54 => '16 Years', 55 => '17 Years', 56 => '18 Years', 57 => '19 Years', 58 => '20 Years', 59 => '21 Years', 60 => '22 Years', 61 => '23 Years', 62 => '24 Years', 63 => '25 Years', 64 => '26 Years', 65 => '27 Years', 66 => '28 Years', 67 => '29 Years', 68 => '30 Years', 69 => '31 Years', 70 => '32 Years', 71 => '33 Years', 72 => '34 Years', 73 => '35 Years');
        $propertyDescArr=array('flat'=>'Flat','detached_house'=>'Detached house','terraced_house'=>'Terraced house','semi-detached_house'=>'Semi-detached house', 'end_terrace_house' => 'End terrace house', 'studio' => 'Studio', 'detached_bungalow' => 'Detached Bungalow', 'bungalow' => 'Bungalow', 'maisonette' => 'Maisonette', 'town_house'=>'Town house','cottage'=>'Cottage','semi-detached_bungalow'=>'Semi-detached Bungalow','mobile_or_park_home'=>'Mobile or park home', 'link-detached_house' => 'Link-detached house', 'barn_conversion' => 'Barn conversion', 'mews_house' => 'Mews house', 'micro_apartment'=>'micro_apartment','office'=>'Office','light_industrial'=>'Light industrial','heavy_industrial'=>'Heavy industrial', 'care_home' => 'Care home', 'hotel' => 'Hotel', 'shop_with_uppers' => 'Shop with uppers', 'retail' =>'Retail','hmo' =>'Hmo','shopping_centre' =>'Shopping centre','strategic_land' =>'Strategic land', 'land' => 'Land', 'Public House' => 'Public House');
         $refurbishmentArr=array('1'=>'None','2'=>'Light Refurb','3'=>'Heavy Refurb');
          $exitvalArr=array(1 => 'Sale', 2 => 'Refinance');
          $interestServicingOptionArr=array('1'=>'Deducted for entire term','2'=>'Serviced Monthly','3'=>'Rolled Up', '4' => 'Part & Part');

        if($this->request->isPost()){
            $allPost=$this->request->getPost();

                if($allPost['application_type']==5 || $allPost['application_type']==2){
                    $interestServicingOptionArr=array('2'=>'Serviced', '1'=>'Deducted', '4' => 'Part Serviced');
                }else{
                    $interestServicingOptionArr=array('1'=>'Deducted for entire term','2'=>'Serviced Monthly','3'=>'Rolled Up', '4' => 'Part & Part');
                }
                $interestServicingOptionArr=array('2'=>'Serviced', '1'=>'Deducted', '4' => 'Part Serviced');

            if($allPost['purposeid']==1){
                ?>


                <div class="loandetailborder">
                    <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                          <label>Auction Purchase</label>
                          <div class="input-group"><span class="input-group-addon">
                            <i class="fa fa-home"></i></span>
                            <select id="auction_purchase" name="auction_purchase" class="selectpicker form-control">
                              <option value="">Select</option>
                              <option value="Yes"<?php if($this->request->getPost('auction_purchase') && $this->request->getPost('auction_purchase')=='Yes'){?> selected<?php }?>>Yes</option>
                              <option value="No"<?php if($this->request->getPost('auction_purchase') && $this->request->getPost('auction_purchase')=='No'){?> selected<?php }?>>No</option>
                              <!-- <option value="1">Yes</option>
                              <option value="0">No</option> -->
                            </select>

                          </div>
                        </div>
                    </div>
                    <div class="form-group row auctionfieldcls" style="display: none;">
                        <div class="col-md-12 inputGroupContainer">
                        <label>Date of completion</label>
                        <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-calendar"></i></span>
                           <input type="text" id="date_of_completion" name="date_of_completion" autocomplete="off" placeholder="Date of completion" class="form-control datepicker1" value="">

                        </div>
                      </div>
                  </div>

                  <div class="form-group row auctionfieldcls" style="display: none;">
                    <div class="col-md-12 inputGroupContainer">
                        <label>Link to property auction listing</label>
                        <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-home"></i></span>
                          <input type="text" id="property_auction_lising" name="property_auction_lising" placeholder="Link to property auction listing" class="form-control" value="">

                        </div>
                      </div>
                  </div>
                    <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                            <label>Security</label>
                            <div class="input-group"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                              <select id="property_type" name="property_type" class="selectpicker form-control">
                                <option value="">--Select --</option>
                                <?php
                                foreach ($propertyTypeArr as $key => $propertyType) {
                                ?>
                                <option value="<?php echo $key;?>"<?php if($this->request->getPost('property_type') && $this->request->getPost('property_type')==$key){?> selected<?php }?>><?php echo $propertyType;?></option>
                                <?php }?>
                              </select>
                            </div>
                          </div>

                      </div>
                      <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                          <label>Term</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                          <select id="term_required" name="term_required" class="selectpicker form-control">
                          <option value="">--Select --</option>
                          <?php
                          foreach ($termTypeArr as $key => $termType) {
                          ?>
                          <option value="<?php echo $key;?>"<?php if($this->request->getPost('term_required') && $this->request->getPost('term_required')==$key){?> selected<?php }?>><?php echo $termType;?></option>
                          <?php }?>
                          </select>
                          </div>
                          </div>
                      </div>
                    <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                            <label>Refurbishment</label>
                            <div class="input-group">
                              <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-home"></i></span>
                              <select id="refurbishment" name="refurbishment" class="selectpicker form-control">
                                <option value="">--Select Product--</option>
                                <?php foreach($refurbishmentArr as $key => $refurbishment){?>
                                <option value="<?php echo $key;?>" <?=$key==$this->request->getPost('refurbishment') ? 'selected' : ''?> ><?php echo $refurbishment;?></option>
                                <?php }?>
                              </select>
                            </div>
                            <span id="error_property_description" class="text-danger"></span>
                          </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer" style="display: none;">
                            <label>Works Funded</label>
                            <div class="input-group">
                              <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-home"></i></span>
                              <select id="works_funded" name="works_funded" class="selectpicker form-control">
                                <option value="">--Select--</option>

                                <option value="Self Funded" <?='Self Funded'==$this->request->getPost('works_funded') ? 'selected' : ''?> >Self Funded</option>
                                 <option value="Lender Funded" <?='Lender Funded'==$this->request->getPost('works_funded') ? 'selected' : ''?> >Lender Funded</option>

                              </select>
                            </div>
                            <span id="error_property_description" class="text-danger"></span>
                          </div>
                    </div>
                </div>

                <h5>Numbers</h5>
                <div class="loandetailborder">
                    <div class="form-group row">
                          <div class="col-md-12 inputGroupContainer">
                          <label>OMV</label>
                          <div class="input-group"><span class="input-group-addon">
                          <i class="fas fa-pound-sign"></i></span> <input type="text" id="omv" name="omv" class="form-control hzaNumberFormatCls ist_chrage_ltv_cls" placeholder="OMV" value="<?=number_format($this->request->getPost('omv'), 2)?>" />

                          </div>
                          </div>
                        </div>

                        <div class="form-group row">
                          <div class="col-md-12 inputGroupContainer">
                          <label>Purchase Price</label>
                          <div class="input-group"><span class="input-group-addon">
                          <i class="fas fa-pound-sign"></i></span> <input type="text" id="purchase_price" name="purchase_price" class="form-control ist_chrage_ltv_cls hzaNumberFormatCls" placeholder="Purchase Price" value="<?=number_format($this->request->getPost('purchase_price'), 2)?>" />

                          </div>
                          </div>
                        </div>

                        <div class="form-group row">
                          <div class="col-md-12 inputGroupContainer">
                          <label>Deposit</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                          <input type="text" id="deposit" name="deposit" placeholder="Deposit" class="form-control ist_chrage_ltv_cls hzaNumberFormatCls" value="<?=number_format($this->request->getPost('deposit'), 2)?>">
                          </div>
                          </div>
                        </div>

                        <div class="form-group row">
                          <div class="col-md-12 inputGroupContainer">
                          <label>Gross Loan</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                          <input type="text" id="amount_required" name="amount_required" placeholder="Gross Loan" class="form-control ltgdvcls hzaNumberFormatCls" value="<?=number_format($this->request->getPost('amount_required'), 2)?>">
                          </div>
                          </div>
                        </div>
                        <div class="form-group row">

                          <div class="col-md-12 inputGroupContainer" >
                          <label>Cost of Works</label>
                          <div class="input-group"><span class="input-group-addon">
                          <i class="fas fa-pound-sign"></i></span> <input type="text" id="refurb_cost" name="refurb_cost" class="form-control hzaNumberFormatCls ltgdvcls ist_chrage_ltv_cls" placeholder="Cost of Works" value="<?=number_format($this->request->getPost('refurb_cost'), 2)?>" />
                          </div>
                          </div>
                        </div>
                        <div class="form-group row">

                          <div class="col-md-12 inputGroupContainer" >
                          <label>GDV</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                          <input type="text" id="gdv" name="gdv" placeholder="GDV" class="form-control hzaNumberFormatCls ltgdvcls ist_chrage_ltv_cls" value="<?=number_format($this->request->getPost('gdv'), 2)?>">
                          </div>
                          </div>
                        </div>
                        <div class="form-group row">

                          <div class="col-md-12 inputGroupContainer" style="display: none;">
                          <label>Net Loan</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                          <input type="text" id="net_loan" name="net_loan" placeholder="Net Loan" class="form-control hzaNumberFormatCls" value="<?=number_format($this->request->getPost('net_loan'), 2)?>">
                          </div>
                          </div>
                        </div>
                    </div>


                    <h5>Leverage</h5>
                    <div class="loandetailborder">
                        <div class="form-group row">

                          <div class="col-md-12 inputGroupContainer">
                          <label>LTV</label>
                          <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-percent"></i></span><input type="text" placeholder="LTV Required" class="form-control" id="ltv_required" name="ltv_required" value="<?=@$this->request->getPost('ltv_required')?>" onkeypress="return isNumberKey(event)"></div>
                          <span id="error_ltv_required" class="text-danger"></span>
                          </div>
                        </div>
                        <div class="form-group row">

                          <div class="col-md-12 inputGroupContainer">
                          <label>LTP</label>
                          <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-percent"></i></span><input type="text" placeholder="LTP" class="form-control" id="ltp" name="ltp" value="<?=@$this->request->getPost('ltp')?>" onkeypress="return isNumberKey(event)"></div>
                          <span id="error_ltp" class="text-danger"></span>
                          </div>
                        </div>
                        <div class="form-group row">

                          <div class="col-md-12 inputGroupContainer" style="display: none;">
                          <label>Net LTGDV</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                          <input type="text" id="net_ltgdv" name="net_ltgdv" placeholder="Net LTGDV" class="form-control hzaNumberFormatCls" value="<?=number_format($this->request->getPost('net_ltgdv'), 2)?>">
                          </div>
                          </div>
                        </div>
                        <div class="form-group row">

                          <div class="col-md-12 inputGroupContainer" style="display: none;">
                          <label>LTC exe fin</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                          <input type="text" id="ltc_exe_fin" name="ltc_exe_fin" placeholder="LTC exe fin" class="form-control hzaNumberFormatCls" value="<?=number_format($this->request->getPost('ltc_exe_fin'), 2)?>">
                          </div>
                          </div>
                        </div>
                    </div>

                    <h5>Exit</h5>
                    <div class="loandetailborder">

                            <div class="form-group row">
                                  <div class="col-md-12 inputGroupContainer">
                                    <label>Interest Servicing</label>
                                    <div class="input-group">
                                      <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-credit-card"></i></span>
                                      <select name="interestservicing" class="selectpicker form-control interestserviceCls" id="interestservicing">
                                        <option value="">--select--</option>
                                        <?php foreach ($interestServicingOptionArr as $key => $interestservicing) {
                                        ?>
                                        <option value="<?php echo $key;?>" <?php if($this->request->getPost('interestservicing') && $this->request->getPost('interestservicing')==$key){?> selected<?php }?> ><?php echo $interestservicing;?></option>
                                        <?php }?>
                                      </select>
                                    </div>
                                    <span id="error_interestservicing" class="text-danger"></span>
                                  </div>

                            </div>

                                <div class="form-group row">
                                  <div class="col-md-12 inputGroupContainer">
                                    <label>Exit</label>
                                    <div class="input-group">
                                    <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-home"></i></span>
                                    <select id="exit_val" name="exit_val" class="selectpicker form-control">
                                    <option value="">--Select description--</option>
                                    <?php foreach($exitvalArr as $key => $exitval){?>
                                    <option value="<?php echo $key;?>" <?=$key==$this->request->getPost('exit_val') ? 'selected' : ''?> ><?php echo $exitval;?></option>
                                    <?php }?>
                                    </select>
                                    </div>
                                  </div>
                                </div>
                                <div class="form-group row">

                                  <div class="col-md-12 inputGroupContainer">
                                  <label>Broker Fee</label>
                                  <div class="input-group"><span class="input-group-addon"><i class="fas fa-percent"></i></span>
                                  <input type="text" id="brokerfee" name="brokerfee" placeholder="Broker Fee" class="form-control hzaNumberFormatCls" value="1">
                                  </div>
                                  </div>
                                </div>

                            <div class="form-group row">

                              <div class="col-md-12 inputGroupContainer" style="display: none;">
                              <label>ERV</label>
                              <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                              <input type="text" id="erv" name="erv" placeholder="ERV" class="form-control hzaNumberFormatCls" value="<?=number_format($this->request->getPost('erv'), 2)?>">
                              </div>
                              </div>
                            </div>
                            <div class="form-group row">

                              <div class="col-md-12 inputGroupContainer" style="display: none;">
                              <label>Net LTV on Exit</label>
                              <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                              <input type="text" id="net_ltv_on_exit" name="net_ltv_on_exit" placeholder="" class="form-control hzaNumberFormatCls" value="<?=number_format($this->request->getPost('net_ltv_on_exit'), 2)?>">
                              </div>
                              </div>
                            </div>
                        </div>


                <?php

            }else if($allPost['purposeid']==2){
                if($allPost['application_type']==5){
                ?>
                <div class="loandetailborder">
                    <!-- <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                          <label>Auction Purchase</label>
                          <div class="input-group"><span class="input-group-addon">
                            <i class="fa fa-home"></i></span>
                            <select id="auction_purchase" name="auction_purchase" class="selectpicker form-control">
                              <option value="">Select</option>
                              <option value="Yes"<?php if($this->request->getPost('auction_purchase') && $this->request->getPost('auction_purchase')=='Yes'){?> selected<?php }?>>Yes</option>
                              <option value="No"<?php if($this->request->getPost('auction_purchase') && $this->request->getPost('auction_purchase')=='No'){?> selected<?php }?>>No</option>

                            </select>

                          </div>
                        </div>
                    </div> -->
                    <div class="form-group row auctionfieldcls" style="display: none;">
                        <div class="col-md-12 inputGroupContainer">
                        <label>Date of completion</label>
                        <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-calendar"></i></span>
                           <input type="text" id="date_of_completion" name="date_of_completion" autocomplete="off" placeholder="Date of completion" class="form-control datepicker1" value="">

                        </div>
                      </div>
                  </div>

                  <div class="form-group row auctionfieldcls" style="display: none;">
                    <div class="col-md-12 inputGroupContainer">
                        <label>Link to property auction listing</label>
                        <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-home"></i></span>
                          <input type="text" id="property_auction_lising" name="property_auction_lising" placeholder="Link to property auction listing" class="form-control" value="">

                        </div>
                      </div>
                  </div>
                   <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                            <label>Security</label>
                            <div class="input-group"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                              <select id="property_type" name="property_type" class="selectpicker form-control">
                                <option value="">--Select --</option>
                                <?php
                                foreach ($propertyTypeArr as $key => $propertyType) {
                                ?>
                                <option value="<?php echo $key;?>"<?php if($this->request->getPost('property_type') && $this->request->getPost('property_type')==$key){?> selected<?php }?>><?php echo $propertyType;?></option>
                                <?php }?>
                              </select>
                            </div>
                          </div>

                      </div>
                      <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                          <label>Term</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                          <select id="term_required" name="term_required" class="selectpicker form-control">
                          <option value="">--Select --</option>
                          <?php
                          foreach ($termTypeArr as $key => $termType) {
                          ?>
                          <option value="<?php echo $key;?>"<?php if($this->request->getPost('term_required') && $this->request->getPost('term_required')==$key){?> selected<?php }?>><?php echo $termType;?></option>
                          <?php }?>
                          </select>
                          </div>
                          </div>
                      </div>
                    <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                            <label>Refurbishment</label>
                            <div class="input-group">
                              <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-home"></i></span>
                              <select id="refurbishment" name="refurbishment" class="selectpicker form-control">
                                <option value="">--Select Product--</option>
                                <?php foreach($refurbishmentArr as $key => $refurbishment){?>
                                <option value="<?php echo $key;?>" <?=$key==$this->request->getPost('refurbishment') ? 'selected' : ''?> ><?php echo $refurbishment;?></option>
                                <?php }?>
                              </select>
                            </div>
                            <span id="error_property_description" class="text-danger"></span>
                          </div>
                    </div>
                </div>


                    <h5>Numbers</h5>
                    <div class="loandetailborder">
                        <div class="form-group row">
                              <div class="col-md-12 inputGroupContainer">
                              <label>CMV</label>
                              <div class="input-group"><span class="input-group-addon">
                              <i class="fas fa-pound-sign"></i></span> <input type="text" id="purchase_price" name="purchase_price" class="form-control hzaNumberFormatCls ist_chrage_fin_ltv_cls" placeholder="CMV" value="<?=number_format($this->request->getPost('purchase_price'), 2)?>" />

                              </div>
                              </div>
                            </div>

                            <div class="form-group row">
                              <div class="col-md-12 inputGroupContainer">
                              <label>Current Debt</label>
                              <div class="input-group"><span class="input-group-addon">
                              <i class="fas fa-pound-sign"></i></span> <input type="text" id="current_debt" name="current_debt" class="form-control hzaNumberFormatCls ist_chrage_fin_ltv_cls" placeholder="Current Debt" value="<?=number_format($this->request->getPost('current_debt'), 2)?>" />

                              </div>
                              </div>
                            </div>

                            <div class="form-group row">
                              <div class="col-md-12 inputGroupContainer">
                              <label>Capital Raise</label>
                              <div class="input-group"><span class="input-group-addon">
                              <i class="fas fa-pound-sign"></i></span> <input type="text" id="capital_raise" name="capital_raise" class="form-control hzaNumberFormatCls ist_chrage_fin_ltv_cls" placeholder="Capital Raise" value="<?=number_format($this->request->getPost('capital_raise'), 2)?>" />

                              </div>
                              </div>
                            </div>


                            <div class="form-group row">
                              <div class="col-md-12 inputGroupContainer">
                              <label>Gross Loan</label>
                              <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                              <input type="text" id="amount_required" name="amount_required" placeholder="Gross Loan" class="form-control ltgdvcls hzaNumberFormatCls" value="<?=number_format($this->request->getPost('amount_required'), 2)?>">
                              </div>
                              </div>
                            </div>
                        </div>


                        <h5>Leverage</h5>
                        <div class="loandetailborder">
                            <div class="form-group row">

                              <div class="col-md-12 inputGroupContainer">
                              <label>LTV</label>
                              <div class="input-group"><span class="input-group-addon">
                              <i class="fa fa-percent"></i></span><input type="text" placeholder="LTV Required" class="form-control" id="ltv_required" name="ltv_required" value="<?=@$this->request->getPost('ltv_required')?>" onkeypress="return isNumberKey(event)"></div>
                              <span id="error_ltv_required" class="text-danger"></span>
                              </div>
                            </div>
                        </div>
                    <h5>Exit</h5>
                <div class="loandetailborder">
                    <div class="form-group row">
                          <div class="col-md-12 inputGroupContainer">
                            <label>Interest Servicing</label>
                            <div class="input-group">
                              <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-credit-card"></i></span>
                              <select name="interestservicing" class="selectpicker form-control interestserviceCls" id="interestservicing">
                                <option value="">--select--</option>
                                <?php foreach ($interestServicingOptionArr as $key => $interestservicing) {
                                ?>
                                <option value="<?php echo $key;?>" <?php if($this->request->getPost('interestservicing') && $this->request->getPost('interestservicing')==$key){?> selected<?php }?> ><?php echo $interestservicing;?></option>
                                <?php }?>
                              </select>
                            </div>
                            <span id="error_interestservicing" class="text-danger"></span>
                          </div>

                         </div>

                        <div class="form-group row">
                          <div class="col-md-12 inputGroupContainer">
                            <label>Exit</label>
                            <div class="input-group">
                            <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-home"></i></span>
                            <select id="exit_val" name="exit_val" class="selectpicker form-control">
                            <option value="">--Select description--</option>
                            <?php foreach($exitvalArr as $key => $exitval){?>
                            <option value="<?php echo $key;?>" <?=$key==$this->request->getPost('exit_val') ? 'selected' : ''?> ><?php echo $exitval;?></option>
                            <?php }?>
                            </select>
                            </div>
                          </div>
                        </div>
                        <div class="form-group row">

                          <div class="col-md-12 inputGroupContainer">
                          <label>Broker Fee</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fas fa-percent"></i></span>
                          <input type="text" id="brokerfee" name="brokerfee" placeholder="Broker Fee" class="form-control hzaNumberFormatCls" value="1">
                          </div>
                          </div>
                        </div>
                        <div class="form-group row ervdivrow">

                          <div class="col-md-12 inputGroupContainer">
                          <label>ERV</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                          <input type="text" id="erv" name="erv" placeholder="ERV" class="form-control hzaNumberFormatCls" value="<?=number_format($this->request->getPost('erv'), 2)?>">
                          </div>
                          </div>
                        </div>
                        <div class="form-group row">

                          <div class="col-md-12 inputGroupContainer">
                          <label>Date Of Purchase</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                          <input type="text" id="date_of_purchase" name="date_of_purchase" placeholder="Date Of Purchase" class="form-control datepicker" value="<?=$this->request->getPost('date_of_purchase')?>" autocomplete="off">
                          </div>
                          </div>
                        </div>

                        <div class="form-group row">

                          <div class="col-md-12 inputGroupContainer">
                          <label>Current Lender</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fa fa-user"></i></span>
                          <input type="text" id="current_lender" name="current_lender" placeholder="Current Lender" class="form-control" value="<?=$this->request->getPost('current_lender')?>">
                          </div>
                          </div>
                        </div>
                    </div>
                <?php
            }else if($allPost['application_type']==2){
                $mordgagePurposeArr=array('2' => 'refinance', '6'=>'Capital Raise');
                ?>
                <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                          <label>Auction Purchase</label>
                          <div class="input-group"><span class="input-group-addon">
                            <i class="fa fa-home"></i></span>
                            <select id="auction_purchase" name="auction_purchase" class="selectpicker form-control">
                              <option value="">Select</option>
                              <option value="Yes"<?php if($this->request->getPost('auction_purchase') && $this->request->getPost('auction_purchase')=='Yes'){?> selected<?php }?>>Yes</option>
                              <option value="No"<?php if($this->request->getPost('auction_purchase') && $this->request->getPost('auction_purchase')=='No'){?> selected<?php }?>>No</option>
                              <!-- <option value="1">Yes</option>
                              <option value="0">No</option> -->
                            </select>

                          </div>
                        </div>
                    </div>
                    <div class="form-group row auctionfieldcls" style="display: none;">
                        <div class="col-md-12 inputGroupContainer">
                        <label>Date of completion</label>
                        <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-calendar"></i></span>
                           <input type="text" id="date_of_completion" name="date_of_completion" autocomplete="off" placeholder="Date of completion" class="form-control datepicker1" value="">

                        </div>
                      </div>
                  </div>

                  <div class="form-group row auctionfieldcls" style="display: none;">
                    <div class="col-md-12 inputGroupContainer">
                        <label>Link to property auction listing</label>
                        <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-home"></i></span>
                          <input type="text" id="property_auction_lising" name="property_auction_lising" placeholder="Link to property auction listing" class="form-control" value="">

                        </div>
                      </div>
                  </div>
                <div class="form-group row">
                    <div class="col-md-6 inputGroupContainer">
                      <label>Security</label>
                      <div class="input-group"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                      <select id="property_type" name="property_type" class="selectpicker form-control">
                      <option value="">--Select --</option>
                      <?php
                      foreach ($propertyTypeArr as $key => $propertyType) {
                      ?>
                      <option value="<?php echo $key;?>"<?php if($this->request->getPost('property_type') && $this->request->getPost('property_type')==$key){?> selected<?php }?>><?php echo $propertyType;?></option>
                      <?php }?>
                      </select>
                      </div>
                    </div>
                    <div class="col-md-6 inputGroupContainer">
                      <label>Refurbishment</label>
                      <div class="input-group">
                      <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-home"></i></span>
                      <select id="refurbishment" name="refurbishment" class="selectpicker form-control">
                      <option value="">--Select Product--</option>
                      <?php foreach($refurbishmentArr as $key => $refurbishment){?>
                      <option value="<?php echo $key;?>" <?=$key==$this->request->getPost('refurbishment') ? 'selected' : ''?> ><?php echo $refurbishment;?></option>
                      <?php }?>
                      </select>
                      </div>
                      <span id="error_property_description" class="text-danger"></span>
                    </div>
                  </div>
                  <h5>Numbers</h5>
                  <div class="form-group row">
                    <div class="col-md-6 inputGroupContainer">
                      <label>Value</label>
                      <div class="input-group"><span class="input-group-addon">
                      <i class="fas fa-pound-sign"></i></span> <input type="text" id="purchase_price" name="purchase_price" class="form-control hzaNumberFormatCls" placeholder="Value" value="<?=number_format($this->request->getPost('purchase_price'),  2)?>" />
                      </div>
                    </div>
                    <div class="col-md-6 inputGroupContainer">
                      <label>Net LTV</label>
                      <div class="input-group"><span class="input-group-addon">
                      <i class="fa fa-percent"></i></span><input type="text" placeholder="LTV Required" class="form-control" id="ltv_required" name="ltv_required" value="<?=@$this->request->getPost('ltv_required')?>" onkeypress="return isNumberKey(event)"></div>
                      <span id="error_ltv_required" class="text-danger"></span>
                    </div>
                  </div>
                  <div class="form-group row">
                        <div class="col-md-6 inputGroupContainer">
                          <label>Current Debt</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                            <input type="text" id="current_debt" name="current_debt" placeholder="Current Debt" class="form-control ist_chrage_fin_ltv_cls hzaNumberFormatCls" value="<?=number_format($this->request->getPost('current_debt'), 2)?>">
                          </div>
                        </div>
                        <div class="col-md-6 inputGroupContainer hideonclickrefurbishment"<?php if($this->request->getPost('refurbishment')<2){?> style="display: none;"<?php }?>>
                          <label>Cost of Works</label>
                          <div class="input-group"><span class="input-group-addon">
                          <i class="fas fa-pound-sign"></i></span> <input type="text" id="refurb_cost" name="refurb_cost" class="form-control hzaNumberFormatCls ltgdvcls" placeholder="Cost of Works" value="<?=number_format($this->request->getPost('refurb_cost'), 2)?>" />
                          </div>
                        </div>
                  </div>
                  <div class="form-group row hidecurrentfieldcls">
                      <div class="col-md-12 inputGroupContainer">
                      <label>Current First Charge Debt</label>
                      <div class="input-group"><span class="input-group-addon">
                      <i class="fas fa-pound-sign"></i></span> <input type="text" id="first_charge_current_debt" name="first_charge_current_debt" class="form-control hzaNumberFormatCls" placeholder="Current First Charge Debt" value="<?=number_format($this->request->getPost('first_charge_current_debt'), 2)?>" />

                      </div>
                      </div>
                    </div>
                    <div class="form-group row hidecurrentfieldcls">
                      <div class="col-md-12 inputGroupContainer">
                      <label>Lender</label>
                      <div class="input-group"><span class="input-group-addon">
                      <i class="fas fa-user"></i></span> <input type="text" id="first_charge_lender" name="first_charge_lender" class="form-control " placeholder="Lender" value="<?=$this->request->getPost('first_charge_lender')?>" />

                      </div>
                      </div>
                    </div>

                    <div class="form-group row hidecurrentfieldcls">
                      <div class="col-md-12 inputGroupContainer">
                      <label>Current Second Charge Debt</label>
                      <div class="input-group"><span class="input-group-addon">
                      <i class="fas fa-pound-sign"></i></span> <input type="text" id="second_charge_current_debt" name="second_charge_current_debt" class="form-control hzaNumberFormatCls" placeholder="Current Second Charge Debt" value="<?=number_format($this->request->getPost('second_charge_current_debt'), 2)?>" />

                      </div>
                      </div>
                    </div>
                    <div class="form-group row hidecurrentfieldcls">
                      <div class="col-md-12 inputGroupContainer">
                      <label>Lender</label>
                      <div class="input-group"><span class="input-group-addon">
                      <i class="fas fa-user"></i></span> <input type="text" id="second_charge_lender" name="second_charge_lender" class="form-control " placeholder="Lender" value="<?=$this->request->getPost('second_charge_lender')?>" />

                      </div>
                      </div>
                    </div>
                  <div class="form-group row">
                        <div class="col-md-6 inputGroupContainer">
                          <label>Capital Raise</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                          <input type="text" id="capital_raise" name="capital_raise" placeholder="Capital Raise" class="form-control ist_chrage_fin_ltv_cls hzaNumberFormatCls" value="<?=number_format($this->request->getPost('capital_raise'), 2)?>">
                          </div>
                        </div>
                        <div class="col-md-6 inputGroupContainer hideonclickrefurbishment"<?php if($this->request->getPost('refurbishment')<2){?> style="display: none;"<?php }?>>
                          <label>GDV</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                          <input type="text" id="gdv" name="gdv" placeholder="GDV" class="form-control hzaNumberFormatCls ltgdvcls" value="<?=number_format($this->request->getPost('gdv'), 2)?>">
                          </div>
                        </div>
                  </div>
                  <div class="form-group row">
                        <div class="col-md-6 inputGroupContainer">
                          <label>Gross Loan</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                          <input type="text" id="amount_required" name="amount_required" placeholder="Gross Loan" class="form-control hzaNumberFormatCls" value="<?=number_format($this->request->getPost('amount_required'), 2)?>">
                          </div>
                        </div>
                        <div class="col-md-6 inputGroupContainer hideonclickrefurbishment"<?php if($this->request->getPost('refurbishment')<2){?> style="display: none;"<?php }?>>
                          <label>LTGDV -exe interest</label>
                          <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-percent"></i></span><input type="text" placeholder="LTGDV -exe interest" class="form-control" id="ltgdv_exe_interest" name="ltgdv_exe_interest" value="<?=@$this->request->getPost('ltgdv_exe_interest')?>" onkeypress="return isNumberKey(event)"></div>
                          <span id="error_ltgdv_exe_interest" class="text-danger"></span>
                        </div>
                  </div>
                  <h5>History</h5>
                  <div class="form-group row">
                        <div class="col-md-6 inputGroupContainer">
                          <label>Date of purchase</label>
                          <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-calendar"></i></span><input type="text" placeholder="Date of Purchase" class="form-control" id="date_of_purchase" name="date_of_purchase" value="<?=@$this->request->getPost('date_of_purchase')?>"></div>
                          <span id="error_date_of_purchase" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 inputGroupContainer">
                          <label>Monthly mortgage payment</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                          <input type="text" id="monthly_mortgage_pmt" name="monthly_mortgage_pmt" placeholder="Monthly mortgage payment" class="form-control hzaNumberFormatCls" value="<?=number_format($this->request->getPost('monthly_mortgage_pmt'), 2)?>">
                          </div>
                        </div>
                  </div>
                  <div class="form-group row">
                        <div class="col-md-6 inputGroupContainer">
                          <label>Original Purchase price</label>
                          <div class="input-group"><span class="input-group-addon">
                          <i class="fas fa-pound-sign"></i></span><input type="text" placeholder="Original Purchase price" class="form-control hzaNumberFormatCls" id="original_purchase_price" name="original_purchase_price" value="<?=number_format(@$this->request->getPost('original_purchase_price'), 2)?>" onkeypress="return isNumberKey(event)"></div>
                          <span id="error_original_purchase_price" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 inputGroupContainer">
                          <label>Rental income if tenanted</label>
                          <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-info"></i></span><input type="text" placeholder="Rental income if tenanted" class="form-control" id="rental_income_tennted" name="rental_income_tennted" value="<?=@$this->request->getPost('rental_income_tennted')?>"></div>
                          <span id="error_rental_income_tennted" class="text-danger"></span>
                        </div>
                      </div>
                      <div class="form-group row">
                        <div class="col-md-6 inputGroupContainer">
                          <label>Name of 1st charge lender</label>
                          <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-info"></i></span><input type="text" placeholder="Name of 1st charge lender" class="form-control" id="name_ist_charge_lender" name="name_ist_charge_lender" value="<?=@$this->request->getPost('name_ist_charge_lender')?>"></div>
                          <span id="error_name_ist_charge_lender" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 inputGroupContainer">
                          <label>Any arrears on the mortgage</label>
                          <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-info"></i></span><input type="text" placeholder="Any arrears on the mortgage" class="form-control" id="any_arrer_mortgage" name="any_arrer_mortgage" value="<?=@$this->request->getPost('any_arrer_mortgage')?>"></div>
                          <span id="error_any_arrer_mortgage" class="text-danger"></span>
                        </div>
                      </div>
                      <h5>Required</h5>
                      <div class="form-group row">
                        <div class="col-md-6 inputGroupContainer">
                          <label>Term</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                          <select id="term_required" name="term_required" class="selectpicker form-control">
                          <option value="">--Select --</option>
                          <?php
                          foreach ($termTypeArr as $key => $termType) {
                          ?>
                          <option value="<?php echo $key;?>"<?php if($this->request->getPost('term_required') && $this->request->getPost('term_required')==$key){?> selected<?php }?>><?php echo $termType;?></option>
                          <?php }?>
                          </select>
                          </div>
                        </div>
                        <div class="col-md-6 inputGroupContainer">
                          <label>Broker Fee</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fas fa-percent"></i></span>
                          <input type="text" id="brokerfee" name="brokerfee" placeholder="Broker Fee" class="form-control hzaNumberFormatCls" value="<?=number_format($this->request->getPost('brokerfee'), 2)?>">
                          </div>
                          <span id="error_brokerfee" class="text-danger"></span>
                        </div>
                  </div>
                  <div class="form-group row">
                        <div class="col-md-6 inputGroupContainer">
                          <label>Interest Servicing</label>
                          <div class="input-group">
                          <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-credit-card"></i></span>
                          <select name="interestservicing" class="selectpicker form-control interestserviceCls" id="interestservicing">
                          <option value="">--select--</option>
                          <?php foreach ($interestServicingOptionArr as $key => $interestservicing) {
                          ?>
                          <option value="<?php echo $key;?>" <?php if($this->request->getPost('interestservicing') && $this->request->getPost('interestservicing')==$key){?> selected<?php }?> ><?php echo $interestservicing;?></option>
                          <?php }?>
                          </select>
                          </div>
                          <span id="error_interestservicing" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 inputGroupContainer">
                          <label>Exit</label>
                          <div class="input-group">
                          <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-home"></i></span>
                          <select id="exit_val" name="exit_val" class="selectpicker form-control">
                          <option value="">--Select description--</option>
                          <?php foreach($exitvalArr as $key => $exitval){?>
                          <option value="<?php echo $key;?>" <?=$key==$this->request->getPost('exit_val') ? 'selected' : ''?> ><?php echo $exitval;?></option>
                          <?php }?>
                          </select>
                          </div>
                        </div>
                  </div>
                  <div class="form-group row">

                  <div class="col-md-12 inputGroupContainer">
                  <label>Broker Fee</label>
                  <div class="input-group"><span class="input-group-addon"><i class="fas fa-percent"></i></span>
                  <input type="text" id="brokerfee" name="brokerfee" placeholder="Broker Fee" class="form-control hzaNumberFormatCls" value="1">
                  </div>
                  </div>
                </div>
                  <div class="form-group row interestServiceShowDiv"<?php if($this->request->getPost('interestservicing') && $this->request->getPost('interestservicing')==4){?> style="display:block;" <?php }else{?> style="display:none;" <?php }?>>
                        <div class="col-md-3 inputGroupContainer">
                          <label>Number of Months Retained</label>
                          <div class="input-group">
                          <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-credit-card"></i></span>
                          <input type="text" id="no_of_month_retained" name="no_of_month_retained" placeholder="Number of Months Retained" class="form-control" value="<?=$this->request->getPost('no_of_month_retained')?>">
                          </div>
                          <span id="error_no_of_month_retained" class="text-danger"></span>
                        </div>
                        <div class="col-md-3 inputGroupContainer">
                          <label>Number of Months Serviced</label>
                          <div class="input-group">
                          <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-credit-card"></i></span>
                          <input type="text" id="no_of_month_serviced" name="no_of_month_serviced" placeholder="Number of Months Serviced" class="form-control" value="<?=$this->request->getPost('no_of_month_serviced')?>">
                          </div>
                          <span id="error_no_of_month_serviced" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 inputGroupContainer">
                        &nbsp;
                        </div>
                  </div>
                  <div class="form-group row">
                        <div class="col-md-6 inputGroupContainer">
                        &nbsp;
                        </div>
                        <div class="col-md-6 inputGroupContainer">
                          <label>Notes</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fa fa-sticky-note-o"></i></span>
                          <textarea id="note_text" name="note_text" placeholder="Note" class="form-control"><?=$this->request->getPost('note_text')?></textarea>
                          </div>
                        </div>
                  </div>
                  <?php }else{?>
                  <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                        <label>Purchage Price / Estimated Value<span style="color:#f80477;">*</span></label>
                        <div class="input-group"><span class="input-group-addon">
                        <i class="fas fa-pound-sign"></i></span> <input type="text" id="purchase_price" name="purchase_price" class="form-control hzaNumberFormatCls" placeholder="Enter Purchase Price" value="<?=number_format($this->request->getPost('purchase_price'), 2)?>" />
                        <span class="tick_mark"><i class="fa fa-check" aria-hidden="true"></i></span>
                        </div>
                        </div>
                  </div>
                  <div class="form-group row">
                    <div class="col-md-6 inputGroupContainer">
                      <label>Interest Service Option<span style="color:#f80477;">*</span></label>
                      <div class="input-group">
                      <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-credit-card"></i></span>
                      <select name="interestservicing" class="selectpicker form-control interestserviceCls" id="interestservicing">
                      <option value="">--select--</option>
                      <?php foreach ($interestServicingOptionArr as $key => $interestservicing) {
                      ?>
                      <option value="<?php echo $key;?>" <?php if($this->request->getPost('interestservicing') && $this->request->getPost('interestservicing')==$key){?> selected<?php }?> ><?php echo $interestservicing;?></option>
                      <?php }?>
                      </select>
                      </div>
                    </div>
                    <div class="col-md-6 inputGroupContainer">
                      <label>Broker Fee<span style="color:#f80477;">*</span></label>
                      <div class="input-group"><span class="input-group-addon"><i class="fas fa-percent"></i></span>
                      <input type="text" id="brokerfee" name="brokerfee" placeholder="Broker Fee" class="form-control hzaNumberFormatCls" value="<?=number_format($this->request->getPost('brokerfee'), 2)?>">
                      </div>
                    </div>
                  </div>
                  <div class="form-group row interestServiceShowDiv"<?php if($this->request->getPost('interestservicing') && $this->request->getPost('interestservicing')==4){?> style="display:block;" <?php }else{?> style="display:none;" <?php }?>>
                    <div class="col-md-3 inputGroupContainer">
                      <label>Number of Months Retained</label>
                      <div class="input-group">
                      <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-credit-card"></i></span>
                      <input type="text" id="no_of_month_retained" name="no_of_month_retained" placeholder="Number of Months Retained" class="form-control" value="<?=$this->request->getPost('no_of_month_retained')?>">
                      </div>
                      <span id="error_no_of_month_retained" class="text-danger"></span>
                    </div>
                    <div class="col-md-3 inputGroupContainer">
                      <label>Number of Months Serviced</label>
                      <div class="input-group">
                      <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-credit-card"></i></span>
                      <input type="text" id="no_of_month_serviced" name="no_of_month_serviced" placeholder="Number of Months Serviced" class="form-control" value="<?=$this->request->getPost('no_of_month_serviced')?>">
                      </div>
                      <span id="error_no_of_month_serviced" class="text-danger"></span>
                    </div>
                    <div class="col-md-6 inputGroupContainer">
                    &nbsp;
                    </div>
                  </div>






                <?php
            }

            }else if($allPost['purposeid']==6){
                ?>
                <div class="loandetailborder">
                    <!-- <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                          <label>Auction Purchase</label>
                          <div class="input-group"><span class="input-group-addon">
                            <i class="fa fa-home"></i></span>
                            <select id="auction_purchase" name="auction_purchase" class="selectpicker form-control">
                              <option value="">Select</option>
                              <option value="Yes"<?php if($this->request->getPost('auction_purchase') && $this->request->getPost('auction_purchase')=='Yes'){?> selected<?php }?>>Yes</option>
                              <option value="No"<?php if($this->request->getPost('auction_purchase') && $this->request->getPost('auction_purchase')=='No'){?> selected<?php }?>>No</option>

                            </select>

                          </div>
                        </div>
                    </div> -->
                    <div class="form-group row auctionfieldcls" style="display: none;">
                        <div class="col-md-12 inputGroupContainer">
                        <label>Date of completion</label>
                        <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-calendar"></i></span>
                           <input type="text" id="date_of_completion" name="date_of_completion" autocomplete="off" placeholder="Date of completion" class="form-control datepicker1" value="">

                        </div>
                      </div>
                  </div>

                  <div class="form-group row auctionfieldcls" style="display: none;">
                    <div class="col-md-12 inputGroupContainer">
                        <label>Link to property auction listing</label>
                        <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-home"></i></span>
                          <input type="text" id="property_auction_lising" name="property_auction_lising" placeholder="Link to property auction listing" class="form-control" value="">

                        </div>
                      </div>
                  </div>
                   <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                            <label>Security</label>
                            <div class="input-group"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                              <select id="property_type" name="property_type" class="selectpicker form-control">
                                <option value="">--Select --</option>
                                <?php
                                foreach ($propertyTypeArr as $key => $propertyType) {
                                ?>
                                <option value="<?php echo $key;?>"<?php if($this->request->getPost('property_type') && $this->request->getPost('property_type')==$key){?> selected<?php }?>><?php echo $propertyType;?></option>
                                <?php }?>
                              </select>
                            </div>
                          </div>

                      </div>
                      <div class="form-group row">

                          <div class="col-md-12 inputGroupContainer">
                          <label>Date Of Purchase</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                          <input type="text" id="date_of_purchase" name="date_of_purchase" placeholder="Date Of Purchase" class="form-control datepicker" value="<?=$this->request->getPost('date_of_purchase')?>" autocomplete="off">
                          </div>
                          </div>
                        </div>
                      <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                          <label>Term</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                          <select id="term_required" name="term_required" class="selectpicker form-control">
                          <option value="">--Select --</option>
                          <?php
                          foreach ($termTypeArr as $key => $termType) {
                          ?>
                          <option value="<?php echo $key;?>"<?php if($this->request->getPost('term_required') && $this->request->getPost('term_required')==$key){?> selected<?php }?>><?php echo $termType;?></option>
                          <?php }?>
                          </select>
                          </div>
                          </div>
                      </div>
                    <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                            <label>Refurbishment</label>
                            <div class="input-group">
                              <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-home"></i></span>
                              <select id="refurbishment" name="refurbishment" class="selectpicker form-control">
                                <option value="">--Select Product--</option>
                                <?php foreach($refurbishmentArr as $key => $refurbishment){?>
                                <option value="<?php echo $key;?>" <?=$key==$this->request->getPost('refurbishment') ? 'selected' : ''?> ><?php echo $refurbishment;?></option>
                                <?php }?>
                              </select>
                            </div>
                            <span id="error_property_description" class="text-danger"></span>
                          </div>
                    </div>
                </div>

                    <h5>Numbers</h5>
                    <div class="loandetailborder">
                        <div class="form-group row">
                              <div class="col-md-12 inputGroupContainer">
                              <label>CMV</label>
                              <div class="input-group"><span class="input-group-addon">
                              <i class="fas fa-pound-sign"></i></span> <input type="text" id="purchase_price" name="purchase_price" class="form-control hzaNumberFormatCls ist_chrage_fin_ltv_cls" placeholder="CMV" value="<?=number_format($this->request->getPost('purchase_price'), 2)?>" />

                              </div>
                              </div>
                            </div>

                            <div class="form-group row">
                              <div class="col-md-12 inputGroupContainer">
                              <label>Current Debt</label>
                              <div class="input-group"><span class="input-group-addon">
                              <i class="fas fa-pound-sign"></i></span> <input type="text" id="current_debt" name="current_debt" class="form-control hzaNumberFormatCls ist_chrage_fin_ltv_cls" placeholder="Current Debt" value="<?=number_format($this->request->getPost('current_debt'), 2)?>" />

                              </div>
                              </div>
                            </div>
                            <div class="form-group row hidecurrentfieldcls">
                              <div class="col-md-12 inputGroupContainer">
                              <label>Current First Charge Debt</label>
                              <div class="input-group"><span class="input-group-addon">
                              <i class="fas fa-pound-sign"></i></span> <input type="text" id="first_charge_current_debt" name="first_charge_current_debt" class="form-control hzaNumberFormatCls" placeholder="Current First Charge Debt" value="<?=number_format($this->request->getPost('first_charge_current_debt'), 2)?>" />

                              </div>
                              </div>
                            </div>
                            <div class="form-group row hidecurrentfieldcls">
                              <div class="col-md-12 inputGroupContainer">
                              <label>Lender</label>
                              <div class="input-group"><span class="input-group-addon">
                              <i class="fas fa-user"></i></span> <input type="text" id="first_charge_lender" name="first_charge_lender" class="form-control " placeholder="Lender" value="<?=$this->request->getPost('first_charge_lender')?>" />

                              </div>
                              </div>
                            </div>

                            <div class="form-group row hidecurrentfieldcls">
                              <div class="col-md-12 inputGroupContainer">
                              <label>Current Second Charge Debt</label>
                              <div class="input-group"><span class="input-group-addon">
                              <i class="fas fa-pound-sign"></i></span> <input type="text" id="second_charge_current_debt" name="second_charge_current_debt" class="form-control hzaNumberFormatCls" placeholder="Current Second Charge Debt" value="<?=number_format($this->request->getPost('second_charge_current_debt'), 2)?>" />

                              </div>
                              </div>
                            </div>
                            <div class="form-group row hidecurrentfieldcls">
                              <div class="col-md-12 inputGroupContainer">
                              <label>Lender</label>
                              <div class="input-group"><span class="input-group-addon">
                              <i class="fas fa-user"></i></span> <input type="text" id="second_charge_lender" name="second_charge_lender" class="form-control " placeholder="Lender" value="<?=$this->request->getPost('second_charge_lender')?>" />

                              </div>
                              </div>
                            </div>
                            <div class="form-group row">
                              <div class="col-md-12 inputGroupContainer">
                              <label>Capital Raise</label>
                              <div class="input-group"><span class="input-group-addon">
                              <i class="fas fa-pound-sign"></i></span> <input type="text" id="capital_raise" name="capital_raise" class="form-control hzaNumberFormatCls ist_chrage_fin_ltv_cls" placeholder="Capital Raise" value="<?=number_format($this->request->getPost('capital_raise'), 2)?>" />

                              </div>
                              </div>
                            </div>


                            <div class="form-group row">
                              <div class="col-md-12 inputGroupContainer">
                              <label>Gross Loan</label>
                              <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                              <input type="text" id="amount_required" name="amount_required" placeholder="Gross Loan" class="form-control ltgdvcls hzaNumberFormatCls" value="<?=number_format($this->request->getPost('amount_required'), 2)?>">
                              </div>
                              </div>
                            </div>
                        </div>

                        <h5>Leverage</h5>

                    <div class="loandetailborder">
                        <div class="form-group row">

                          <div class="col-md-12 inputGroupContainer">
                          <label>LTV</label>
                          <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-percent"></i></span><input type="text" placeholder="LTV Required" class="form-control" id="ltv_required" name="ltv_required" value="<?=@$this->request->getPost('ltv_required')?>" onkeypress="return isNumberKey(event)"></div>
                          <span id="error_ltv_required" class="text-danger"></span>
                          </div>
                        </div>
                    </div>

                    <h5>Exit</h5>
                <div class="loandetailborder">

                    <div class="form-group row">
                          <div class="col-md-12 inputGroupContainer">
                            <label>Interest Servicing</label>
                            <div class="input-group">
                              <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-credit-card"></i></span>
                              <select name="interestservicing" class="selectpicker form-control interestserviceCls" id="interestservicing">
                                <option value="">--select--</option>
                                <?php foreach ($interestServicingOptionArr as $key => $interestservicing) {
                                ?>
                                <option value="<?php echo $key;?>" <?php if($this->request->getPost('interestservicing') && $this->request->getPost('interestservicing')==$key){?> selected<?php }?> ><?php echo $interestservicing;?></option>
                                <?php }?>
                              </select>
                            </div>
                            <span id="error_interestservicing" class="text-danger"></span>
                          </div>

                         </div>

                        <div class="form-group row">
                          <div class="col-md-12 inputGroupContainer">
                            <label>Exit</label>
                            <div class="input-group">
                            <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-home"></i></span>
                            <select id="exit_val" name="exit_val" class="selectpicker form-control">
                            <option value="">--Select description--</option>
                            <?php foreach($exitvalArr as $key => $exitval){?>
                            <option value="<?php echo $key;?>" <?=$key==$this->request->getPost('exit_val') ? 'selected' : ''?> ><?php echo $exitval;?></option>
                            <?php }?>
                            </select>
                            </div>
                          </div>
                        </div>
                        <div class="form-group row">

                          <div class="col-md-12 inputGroupContainer">
                          <label>Broker Fee</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fas fa-percent"></i></span>
                          <input type="text" id="brokerfee" name="brokerfee" placeholder="Broker Fee" class="form-control hzaNumberFormatCls" value="1">
                          </div>
                          </div>
                        </div>
                        <!-- <div class="form-group row ervdivrow">

                          <div class="col-md-12 inputGroupContainer">
                          <label>ERV</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                          <input type="text" id="erv" name="erv" placeholder="ERV" class="form-control hzaNumberFormatCls" value="<?=number_format($this->request->getPost('erv'), 2)?>">
                          </div>
                          </div>
                        </div> -->


                        <div class="form-group row">

                          <div class="col-md-12 inputGroupContainer">
                          <label>Current Lender</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fa fa-user"></i></span>
                          <input type="text" id="current_lender" name="current_lender" placeholder="Current Lender" class="form-control" value="<?=$this->request->getPost('current_lender')?>">
                          </div>
                          </div>
                        </div>
                    </div>

                <?php

            }
        }
    }
    public function istchargefielddetailAction(){
        $propertyTypeArr=array('1'=>'Residential','2'=>'Semi Commercial','3'=>'Commercial','4'=>'Land no planning','Land With Planning');
        $termTypeArr=array('1'=>'1 month','2'=>'2 months','3'=>'3 months','4'=>'4 months','5'=>'5 months','6'=>'6 months','7'=>'7 months','8'=>'8 months','9'=>'9 months','10'=>'10 months','11'=>'11 months','12'=>'12 months','13'=>'13 months','14'=>'14 months','15'=>'15 months','16'=>'16 months','17'=>'17 months','18'=>'18 months','19'=>'19 months','20'=>'20 months','21'=>'21 months','22'=>'22 months','23'=>'23 months','24'=>'24 months', 33 => '25 Months', 34 => '26 Months', 35 => '27 Months', 36 => '28 Months', 37 => '29 Months', 38 => '30 Months', 39 => '31 Months', 40 => '32 Months', 41 => '33 Months', 42 => '34 Months', 43 => '35 Months', 44 => '36 Months', 45 => '37 Months', 46 => '38 Months', 47 => '39 Months', 48 => '40 Months', '25' => '3 Years', '26' => '4 Years', '27' => '5 Years', '28' => '6 Years', '29' => '7 Years', '30' => '8 Years', '31' => '9 Years', '32' => '10 Years', 49 => '11 Years', 50 => '12 Years', 51 => '13 Years', 52 => '14 Years', 53 => '15 Years', 54 => '16 Years', 55 => '17 Years', 56 => '18 Years', 57 => '19 Years', 58 => '20 Years', 59 => '21 Years', 60 => '22 Years', 61 => '23 Years', 62 => '24 Years', 63 => '25 Years', 64 => '26 Years', 65 => '27 Years', 66 => '28 Years', 67 => '29 Years', 68 => '30 Years', 69 => '31 Years', 70 => '32 Years', 71 => '33 Years', 72 => '34 Years', 73 => '35 Years');
        $propertyDescArr=array('flat'=>'Flat','detached_house'=>'Detached house','terraced_house'=>'Terraced house','semi-detached_house'=>'Semi-detached house', 'end_terrace_house' => 'End terrace house', 'studio' => 'Studio', 'detached_bungalow' => 'Detached Bungalow', 'bungalow' => 'Bungalow', 'maisonette' => 'Maisonette', 'town_house'=>'Town house','cottage'=>'Cottage','semi-detached_bungalow'=>'Semi-detached Bungalow','mobile_or_park_home'=>'Mobile or park home', 'link-detached_house' => 'Link-detached house', 'barn_conversion' => 'Barn conversion', 'mews_house' => 'Mews house', 'micro_apartment'=>'micro_apartment','office'=>'Office','light_industrial'=>'Light industrial','heavy_industrial'=>'Heavy industrial', 'care_home' => 'Care home', 'hotel' => 'Hotel', 'shop_with_uppers' => 'Shop with uppers', 'retail' =>'Retail','hmo' =>'Hmo','shopping_centre' =>'Shopping centre','strategic_land' =>'Strategic land', 'land' => 'Land', 'Public House' => 'Public House');
         $refurbishmentArr=array('1'=>'None','2'=>'Light Refurb','3'=>'Heavy Refurb');
          $exitvalArr=array(1 => 'Sale', 2 => 'Refinance');
          $interestServicingOptionArr=array('2'=>'Serviced', '1'=>'Deducted', '4' => 'Part Serviced');

        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if($allPost['purposeid']==1){
                ?>


                <div class="loandetailborder">
                    <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                          <label>Auction Purchase</label>
                          <div class="input-group"><span class="input-group-addon">
                            <i class="fa fa-home"></i></span>
                            <select id="auction_purchase" name="auction_purchase" class="selectpicker form-control">
                              <option value="">Select</option>
                              <option value="Yes"<?php if($this->request->getPost('auction_purchase') && $this->request->getPost('auction_purchase')=='Yes'){?> selected<?php }?>>Yes</option>
                              <option value="No"<?php if($this->request->getPost('auction_purchase') && $this->request->getPost('auction_purchase')=='No'){?> selected<?php }?>>No</option>
                              <!-- <option value="1">Yes</option>
                              <option value="0">No</option> -->
                            </select>

                          </div>
                        </div>
                    </div>
                    <div class="form-group row auctionfieldcls" style="display: none;">
                        <div class="col-md-12 inputGroupContainer">
                        <label>Date of completion</label>
                        <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-calendar"></i></span>
                           <input type="text" id="date_of_completion" name="date_of_completion" autocomplete="off" placeholder="Date of completion" class="form-control datepicker1" value="">

                        </div>
                      </div>
                  </div>

                  <div class="form-group row auctionfieldcls" style="display: none;">
                    <div class="col-md-12 inputGroupContainer">
                        <label>Link to property auction listing</label>
                        <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-home"></i></span>
                          <input type="text" id="property_auction_lising" name="property_auction_lising" placeholder="Link to property auction listing" class="form-control" value="">

                        </div>
                      </div>
                  </div>
                    <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                            <label>Security</label>
                            <div class="input-group"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                              <select id="property_type" name="property_type" class="selectpicker form-control">
                                <option value="">--Select --</option>
                                <?php
                                foreach ($propertyTypeArr as $key => $propertyType) {
                                ?>
                                <option value="<?php echo $key;?>"<?php if($this->request->getPost('property_type') && $this->request->getPost('property_type')==$key){?> selected<?php }?>><?php echo $propertyType;?></option>
                                <?php }?>
                              </select>
                            </div>
                          </div>

                      </div>
                      <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                          <label>Term</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                          <select id="term_required" name="term_required" class="selectpicker form-control">
                          <option value="">--Select --</option>
                          <?php
                          foreach ($termTypeArr as $key => $termType) {
                          ?>
                          <option value="<?php echo $key;?>"<?php if($this->request->getPost('term_required') && $this->request->getPost('term_required')==$key){?> selected<?php }?>><?php echo $termType;?></option>
                          <?php }?>
                          </select>
                          </div>
                          </div>
                      </div>
                    <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                            <label>Refurbishment</label>
                            <div class="input-group">
                              <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-home"></i></span>
                              <select id="ist_crg_refurbishment" name="refurbishment" class="selectpicker form-control">
                                <option value="">--Select Product--</option>
                                <?php foreach($refurbishmentArr as $key => $refurbishment){?>
                                <option value="<?php echo $key;?>" <?=$key==$this->request->getPost('refurbishment') ? 'selected' : ''?> ><?php echo $refurbishment;?></option>
                                <?php }?>
                              </select>
                            </div>
                            <span id="error_property_description" class="text-danger"></span>
                          </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer" style="display: none;">
                            <label>Works Funded</label>
                            <div class="input-group">
                              <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-home"></i></span>
                              <select id="works_funded" name="works_funded" class="selectpicker form-control">
                                <option value="">--Select--</option>

                                <option value="Self Funded" <?='Self Funded'==$this->request->getPost('works_funded') ? 'selected' : ''?> >Self Funded</option>
                                 <option value="Lender Funded" <?='Lender Funded'==$this->request->getPost('works_funded') ? 'selected' : ''?> >Lender Funded</option>

                              </select>
                            </div>
                            <span id="error_property_description" class="text-danger"></span>
                          </div>
                    </div>
                </div>

                    <h5>Numbers</h5>
                <div class="loandetailborder">
                    <div class="form-group row">
                          <div class="col-md-12 inputGroupContainer">
                          <label>OMV</label>
                          <div class="input-group"><span class="input-group-addon">
                          <i class="fas fa-pound-sign"></i></span> <input type="text" id="ist_crg_omv" name="omv" class="form-control hzaNumberFormatCls ist_chrage_ltv_cls" placeholder="OMV" value="<?=number_format($this->request->getPost('omv'), 2)?>" />

                          </div>
                          </div>
                        </div>

                        <div class="form-group row">
                          <div class="col-md-12 inputGroupContainer">
                          <label>Purchase Price</label>
                          <div class="input-group"><span class="input-group-addon">
                          <i class="fas fa-pound-sign"></i></span> <input type="text" id="ist_crg_purchase_price" name="purchase_price" class="form-control ist_chrage_ltv_cls hzaNumberFormatCls" placeholder="Purchase Price" value="<?=number_format($this->request->getPost('purchase_price'), 2)?>" />

                          </div>
                          </div>
                        </div>

                        <div class="form-group row">
                          <div class="col-md-12 inputGroupContainer">
                          <label>Deposit</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                          <input type="text" id="ist_crg_deposit" name="deposit" placeholder="Deposit" class="form-control ist_chrage_ltv_cls hzaNumberFormatCls" value="<?=number_format($this->request->getPost('deposit'), 2)?>">
                          </div>
                          </div>
                        </div>

                        <div class="form-group row">
                          <div class="col-md-12 inputGroupContainer">
                          <label>Gross Loan</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                          <input type="text" id="ist_crg_amount_required" name="amount_required" placeholder="Gross Loan" class="form-control ltgdvcls hzaNumberFormatCls" value="<?=number_format($this->request->getPost('amount_required'), 2)?>">
                          </div>
                          </div>
                        </div>
                        <div class="form-group row">

                          <div class="col-md-12 inputGroupContainer" style="display: none;">
                          <label>Cost of Works</label>
                          <div class="input-group"><span class="input-group-addon">
                          <i class="fas fa-pound-sign"></i></span> <input type="text" id="ist_crg_refurb_cost" name="refurb_cost" class="form-control hzaNumberFormatCls ltgdvcls ist_chrage_ltv_cls" placeholder="Cost of Works" value="<?=number_format($this->request->getPost('refurb_cost'), 2)?>" />
                          </div>
                          </div>
                        </div>
                        <div class="form-group row">

                          <div class="col-md-12 inputGroupContainer" style="display: none;">
                          <label>GDV</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                          <input type="text" id="ist_crg_gdv" name="gdv" placeholder="GDV" class="form-control hzaNumberFormatCls ltgdvcls ist_chrage_ltv_cls" value="<?=number_format($this->request->getPost('gdv'), 2)?>">
                          </div>
                          </div>
                        </div>
                        <div class="form-group row">

                          <div class="col-md-12 inputGroupContainer" style="display: none;">
                          <label>Net Loan</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                          <input type="text" id="ist_crg_net_loan" name="net_loan" placeholder="Net Loan" class="form-control hzaNumberFormatCls" value="<?=number_format($this->request->getPost('net_loan'), 2)?>">
                          </div>
                          </div>
                        </div>
                    </div>

                    <h5>Leverage</h5>

                    <div class="loandetailborder">
                        <div class="form-group row">

                          <div class="col-md-12 inputGroupContainer">
                          <label>LTV</label>
                          <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-percent"></i></span><input type="text" placeholder="LTV Required" class="form-control" id="ist_crg_ltv_required" name="ltv_required" value="<?=@$this->request->getPost('ltv_required')?>" onkeypress="return isNumberKey(event)"></div>
                          <span id="error_ltv_required" class="text-danger"></span>
                          </div>
                        </div>
                        <div class="form-group row">

                          <div class="col-md-12 inputGroupContainer">
                          <label>LTP</label>
                          <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-percent"></i></span><input type="text" placeholder="LTP" class="form-control" id="ist_crg_ltp" name="ltp" value="<?=@$this->request->getPost('ltp')?>" onkeypress="return isNumberKey(event)"></div>
                          <span id="error_ltp" class="text-danger"></span>
                          </div>
                        </div>
                        <div class="form-group row">

                          <div class="col-md-12 inputGroupContainer" style="display: none;">
                          <label>Net LTGDV</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                          <input type="text" id="ist_crg_net_ltgdv" name="net_ltgdv" placeholder="Net LTGDV" class="form-control hzaNumberFormatCls" value="<?=number_format($this->request->getPost('net_ltgdv'), 2)?>">
                          </div>
                          </div>
                        </div>
                        <div class="form-group row">

                          <div class="col-md-12 inputGroupContainer" style="display: none;">
                          <label>LTC exe fin</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                          <input type="text" id="ist_crg_ltc_exe_fin" name="ltc_exe_fin" placeholder="LTC exe fin" class="form-control hzaNumberFormatCls" value="<?=number_format($this->request->getPost('ltc_exe_fin'), 2)?>">
                          </div>
                          </div>
                        </div>
                    </div>

                    <h5>Exit</h5>
                    <div class="loandetailborder">

                            <div class="form-group row">
                                  <div class="col-md-12 inputGroupContainer">
                                    <label>Interest Servicing</label>
                                    <div class="input-group">
                                      <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-credit-card"></i></span>
                                      <select name="interestservicing" class="selectpicker form-control interestserviceCls" id="interestservicing">
                                        <option value="">--select--</option>
                                        <?php foreach ($interestServicingOptionArr as $key => $interestservicing) {
                                        ?>
                                        <option value="<?php echo $key;?>" <?php if($this->request->getPost('interestservicing') && $this->request->getPost('interestservicing')==$key){?> selected<?php }?> ><?php echo $interestservicing;?></option>
                                        <?php }?>
                                      </select>
                                    </div>
                                    <span id="error_interestservicing" class="text-danger"></span>
                                  </div>

                            </div>

                                <div class="form-group row">
                                  <div class="col-md-12 inputGroupContainer">
                                    <label>Exit</label>
                                    <div class="input-group">
                                    <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-home"></i></span>
                                    <select id="ist_crg_exit_val" name="exit_val" class="selectpicker form-control">
                                    <option value="">--Select description--</option>
                                    <?php foreach($exitvalArr as $key => $exitval){?>
                                    <option value="<?php echo $key;?>" <?=$key==$this->request->getPost('exit_val') ? 'selected' : ''?> ><?php echo $exitval;?></option>
                                    <?php }?>
                                    </select>
                                    </div>
                                  </div>
                                </div>
                            <div class="form-group row">

                                  <div class="col-md-12 inputGroupContainer">
                                  <label>Broker Fee</label>
                                  <div class="input-group"><span class="input-group-addon"><i class="fas fa-percent"></i></span>
                                  <input type="text" id="brokerfee" name="brokerfee" placeholder="Broker Fee" class="form-control hzaNumberFormatCls" value="1">
                                  </div>
                                  </div>
                                </div>

                            <div class="form-group row">

                              <div class="col-md-12 inputGroupContainer" style="display: none;">
                              <label>ERV</label>
                              <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                              <input type="text" id="ist_crg_erv" name="erv" placeholder="ERV" class="form-control hzaNumberFormatCls" value="<?=number_format($this->request->getPost('erv'), 2)?>">
                              </div>
                              </div>
                            </div>
                            <div class="form-group row">

                              <div class="col-md-12 inputGroupContainer" style="display: none;">
                              <label>Net LTV on Exit</label>
                              <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                              <input type="text" id="ist_crg_net_ltv_on_exit" name="net_ltv_on_exit" placeholder="" class="form-control hzaNumberFormatCls" value="<?=number_format($this->request->getPost('net_ltv_on_exit'), 2)?>">
                              </div>
                              </div>
                            </div>
                        </div>


                <?php

            }else if($allPost['purposeid']==2 || $allPost['purposeid']==6){
                if($allPost['application_type']==5){
                ?>
                <div class="loandetailborder">

                    <!-- <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                          <label>Auction Purchase</label>
                          <div class="input-group"><span class="input-group-addon">
                            <i class="fa fa-home"></i></span>
                            <select id="auction_purchase" name="auction_purchase" class="selectpicker form-control">
                              <option value="">Select</option>
                              <option value="Yes"<?php if($this->request->getPost('auction_purchase') && $this->request->getPost('auction_purchase')=='Yes'){?> selected<?php }?>>Yes</option>
                              <option value="No"<?php if($this->request->getPost('auction_purchase') && $this->request->getPost('auction_purchase')=='No'){?> selected<?php }?>>No</option>

                            </select>

                          </div>
                        </div>
                    </div> -->

                    <div class="form-group row auctionfieldcls" style="display: none;">
                        <div class="col-md-12 inputGroupContainer">
                        <label>Date of completion</label>
                        <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-calendar"></i></span>
                           <input type="text" id="date_of_completion" name="date_of_completion" autocomplete="off" placeholder="Date of completion" class="form-control datepicker1" value="">

                        </div>
                      </div>
                  </div>

                  <div class="form-group row auctionfieldcls" style="display: none;">
                    <div class="col-md-12 inputGroupContainer">
                        <label>Link to property auction listing</label>
                        <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-home"></i></span>
                          <input type="text" id="property_auction_lising" name="property_auction_lising" placeholder="Link to property auction listing" class="form-control" value="">

                        </div>
                      </div>
                  </div>
                   <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                            <label>Security</label>
                            <div class="input-group"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                              <select id="property_type" name="property_type" class="selectpicker form-control">
                                <option value="">--Select --</option>
                                <?php
                                foreach ($propertyTypeArr as $key => $propertyType) {
                                ?>
                                <option value="<?php echo $key;?>"<?php if($this->request->getPost('property_type') && $this->request->getPost('property_type')==$key){?> selected<?php }?>><?php echo $propertyType;?></option>
                                <?php }?>
                              </select>
                            </div>
                          </div>

                      </div>
                       <?php if($allPost['purposeid']==6){?>
                                <div class="form-group row">

                                  <div class="col-md-12 inputGroupContainer">
                                  <label>Date Of Purchase</label>
                                  <div class="input-group"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                  <input type="text" id="ist_crg_date_of_purchase" name="date_of_purchase" placeholder="Date Of Purchase" class="form-control datepicker" value="<?=$this->request->getPost('date_of_purchase')?>" autocomplete="off">
                                  </div>
                                  </div>
                                </div>
                            <?php }?>
                      <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                          <label>Term</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                          <select id="term_required" name="term_required" class="selectpicker form-control">
                          <option value="">--Select --</option>
                          <?php
                          foreach ($termTypeArr as $key => $termType) {
                          ?>
                          <option value="<?php echo $key;?>"<?php if($this->request->getPost('term_required') && $this->request->getPost('term_required')==$key){?> selected<?php }?>><?php echo $termType;?></option>
                          <?php }?>
                          </select>
                          </div>
                          </div>
                      </div>
                    <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                            <label>Refurbishment</label>
                            <div class="input-group">
                              <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-home"></i></span>
                              <select id="ist_crg_refurbishment" name="refurbishment" class="selectpicker form-control">
                                <option value="">--Select Product--</option>
                                <?php foreach($refurbishmentArr as $key => $refurbishment){?>
                                <option value="<?php echo $key;?>" <?=$key==$this->request->getPost('refurbishment') ? 'selected' : ''?> ><?php echo $refurbishment;?></option>
                                <?php }?>
                              </select>
                            </div>
                            <span id="error_property_description" class="text-danger"></span>
                          </div>
                    </div>
                </div>

                    <h5>Numbers</h5>

                    <div class="loandetailborder">
                        <div class="form-group row">
                              <div class="col-md-12 inputGroupContainer">
                              <label>CMV</label>
                              <div class="input-group"><span class="input-group-addon">
                              <i class="fas fa-pound-sign"></i></span> <input type="text" id="ist_crg_purchase_price" name="purchase_price" class="form-control hzaNumberFormatCls ist_chrage_fin_ltv_cls" placeholder="CMV" value="<?=number_format($this->request->getPost('purchase_price'), 2)?>" />

                              </div>
                              </div>
                            </div>

                            <div class="form-group row">
                              <div class="col-md-12 inputGroupContainer">
                              <label>Current Debt</label>
                              <div class="input-group"><span class="input-group-addon">
                              <i class="fas fa-pound-sign"></i></span> <input type="text" id="ist_crg_current_debt" name="current_debt" class="form-control hzaNumberFormatCls ist_chrage_fin_ltv_cls" placeholder="Current Debt" value="<?=number_format($this->request->getPost('current_debt'), 2)?>" />

                              </div>
                              </div>
                            </div>
                            <?php if($allPost['purposeid']==6){?>
                            <div class="form-group row hidecurrentfieldcls">
                              <div class="col-md-12 inputGroupContainer">
                              <label>Current First Charge Debt</label>
                              <div class="input-group"><span class="input-group-addon">
                              <i class="fas fa-pound-sign"></i></span> <input type="text" id="first_charge_current_debt" name="first_charge_current_debt" class="form-control hzaNumberFormatCls" placeholder="Current First Charge Debt" value="<?=number_format($this->request->getPost('first_charge_current_debt'), 2)?>" />

                              </div>
                              </div>
                            </div>
                            <div class="form-group row hidecurrentfieldcls">
                              <div class="col-md-12 inputGroupContainer">
                              <label>Lender</label>
                              <div class="input-group"><span class="input-group-addon">
                              <i class="fas fa-user"></i></span> <input type="text" id="first_charge_lender" name="first_charge_lender" class="form-control " placeholder="Lender" value="<?=$this->request->getPost('first_charge_lender')?>" />

                              </div>
                              </div>
                            </div>

                            <div class="form-group row hidecurrentfieldcls">
                              <div class="col-md-12 inputGroupContainer">
                              <label>Current Second Charge Debt</label>
                              <div class="input-group"><span class="input-group-addon">
                              <i class="fas fa-pound-sign"></i></span> <input type="text" id="second_charge_current_debt" name="second_charge_current_debt" class="form-control hzaNumberFormatCls" placeholder="Current Second Charge Debt" value="<?=number_format($this->request->getPost('second_charge_current_debt'), 2)?>" />

                              </div>
                              </div>
                            </div>
                            <div class="form-group row hidecurrentfieldcls">
                              <div class="col-md-12 inputGroupContainer">
                              <label>Lender</label>
                              <div class="input-group"><span class="input-group-addon">
                              <i class="fas fa-user"></i></span> <input type="text" id="second_charge_lender" name="second_charge_lender" class="form-control " placeholder="Lender" value="<?=$this->request->getPost('second_charge_lender')?>" />

                              </div>
                              </div>
                            </div>
                        <?php }?>
                            <div class="form-group row">
                              <div class="col-md-12 inputGroupContainer">
                              <label>Capital Raise</label>
                              <div class="input-group"><span class="input-group-addon">
                              <i class="fas fa-pound-sign"></i></span> <input type="text" id="ist_crg_capital_raise" name="capital_raise" class="form-control hzaNumberFormatCls ist_chrage_fin_ltv_cls" placeholder="Capital Raise" value="<?=number_format($this->request->getPost('capital_raise'), 2)?>" />

                              </div>
                              </div>
                            </div>


                            <div class="form-group row">
                              <div class="col-md-12 inputGroupContainer">
                              <label>Gross Loan</label>
                              <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                              <input type="text" id="ist_crg_amount_required" name="amount_required" placeholder="Gross Loan" class="form-control ltgdvcls hzaNumberFormatCls" value="<?=number_format($this->request->getPost('amount_required'), 2)?>">
                              </div>
                              </div>
                            </div>
                        </div>

                        <h5>Leverage</h5>

                        <div class="loandetailborder">
                            <div class="form-group row">

                              <div class="col-md-12 inputGroupContainer">
                              <label>LTV</label>
                              <div class="input-group"><span class="input-group-addon">
                              <i class="fa fa-percent"></i></span><input type="text" placeholder="LTV Required" class="form-control" id="ist_crg_ltv_required" name="ltv_required" value="<?=@$this->request->getPost('ltv_required')?>" onkeypress="return isNumberKey(event)"></div>
                              <span id="error_ltv_required" class="text-danger"></span>
                              </div>
                            </div>
                        </div>

                        <h5>Exit</h5>
                        <div class="loandetailborder">
                            <div class="form-group row">
                                  <div class="col-md-12 inputGroupContainer">
                                    <label>Interest Servicing</label>
                                    <div class="input-group">
                                      <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-credit-card"></i></span>
                                      <select name="interestservicing" class="selectpicker form-control interestserviceCls" id="interestservicing">
                                        <option value="">--select--</option>
                                        <?php foreach ($interestServicingOptionArr as $key => $interestservicing) {
                                        ?>
                                        <option value="<?php echo $key;?>" <?php if($this->request->getPost('interestservicing') && $this->request->getPost('interestservicing')==$key){?> selected<?php }?> ><?php echo $interestservicing;?></option>
                                        <?php }?>
                                      </select>
                                    </div>
                                    <span id="error_interestservicing" class="text-danger"></span>
                                  </div>

                                 </div>

                                <div class="form-group row">
                                  <div class="col-md-12 inputGroupContainer">
                                    <label>Exit</label>
                                    <div class="input-group">
                                    <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-home"></i></span>
                                    <select id="ist_crg_exit_val" name="exit_val" class="selectpicker form-control">
                                    <option value="">--Select description--</option>
                                    <?php foreach($exitvalArr as $key => $exitval){?>
                                    <option value="<?php echo $key;?>" <?=$key==$this->request->getPost('exit_val') ? 'selected' : ''?> ><?php echo $exitval;?></option>
                                    <?php }?>
                                    </select>
                                    </div>
                                  </div>
                                </div>
                                <div class="form-group row">

                                  <div class="col-md-12 inputGroupContainer">
                                  <label>Broker Fee</label>
                                  <div class="input-group"><span class="input-group-addon"><i class="fas fa-percent"></i></span>
                                  <input type="text" id="brokerfee" name="brokerfee" placeholder="Broker Fee" class="form-control hzaNumberFormatCls" value="1">
                                  </div>
                                  </div>
                                </div>
                                <?php if($allPost['purposeid']==2){?>
                                <div class="form-group row ervdivrow">

                                  <div class="col-md-12 inputGroupContainer">
                                  <label>ERV</label>
                                  <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                                  <input type="text" id="ist_crg_erv" name="erv" placeholder="ERV" class="form-control hzaNumberFormatCls" value="<?=number_format($this->request->getPost('erv'), 2)?>">
                                  </div>
                                  </div>
                                </div>
                            <?php }?>
                                <?php if($allPost['purposeid']==2){?>
                                <div class="form-group row">

                                  <div class="col-md-12 inputGroupContainer">
                                  <label>Date Of Purchase</label>
                                  <div class="input-group"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                  <input type="text" id="ist_crg_date_of_purchase" name="date_of_purchase" placeholder="Date Of Purchase" class="form-control datepicker" value="<?=$this->request->getPost('date_of_purchase')?>" autocomplete="off">
                                  </div>
                                  </div>
                                </div>
                            <?php }?>

                                <div class="form-group row">

                                  <div class="col-md-12 inputGroupContainer">
                                  <label>Current Lender</label>
                                  <div class="input-group"><span class="input-group-addon"><i class="fa fa-user"></i></span>
                                  <input type="text" id="current_lender" name="current_lender" placeholder="Current Lender" class="form-control" value="<?=$this->request->getPost('current_lender')?>">
                                  </div>
                                  </div>
                                </div>
                            </div>
                <?php
            }else if($allPost['application_type']==2){
                $mordgagePurposeArr=array('2' => 'refinance', '6'=>'Capital Raise');
                ?>
                <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                          <label>Auction Purchase</label>
                          <div class="input-group"><span class="input-group-addon">
                            <i class="fa fa-home"></i></span>
                            <select id="auction_purchase" name="auction_purchase" class="selectpicker form-control">
                              <option value="">Select</option>
                              <option value="Yes"<?php if($this->request->getPost('auction_purchase') && $this->request->getPost('auction_purchase')=='Yes'){?> selected<?php }?>>Yes</option>
                              <option value="No"<?php if($this->request->getPost('auction_purchase') && $this->request->getPost('auction_purchase')=='No'){?> selected<?php }?>>No</option>
                              <!-- <option value="1">Yes</option>
                              <option value="0">No</option> -->
                            </select>

                          </div>
                        </div>
                    </div>
                    <div class="form-group row auctionfieldcls" style="display: none;">
                        <div class="col-md-12 inputGroupContainer">
                        <label>Date of completion</label>
                        <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-calendar"></i></span>
                           <input type="text" id="date_of_completion" name="date_of_completion" autocomplete="off" placeholder="Date of completion" class="form-control datepicker1" value="">

                        </div>
                      </div>
                  </div>

                  <div class="form-group row auctionfieldcls" style="display: none;">
                    <div class="col-md-12 inputGroupContainer">
                        <label>Link to property auction listing</label>
                        <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-home"></i></span>
                          <input type="text" id="property_auction_lising" name="property_auction_lising" placeholder="Link to property auction listing" class="form-control" value="">

                        </div>
                      </div>
                  </div>
                <div class="form-group row">
                    <div class="col-md-6 inputGroupContainer">
                      <label>Security</label>
                      <div class="input-group"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                      <select id="property_type" name="property_type" class="selectpicker form-control">
                      <option value="">--Select --</option>
                      <?php
                      foreach ($propertyTypeArr as $key => $propertyType) {
                      ?>
                      <option value="<?php echo $key;?>"<?php if($this->request->getPost('property_type') && $this->request->getPost('property_type')==$key){?> selected<?php }?>><?php echo $propertyType;?></option>
                      <?php }?>
                      </select>
                      </div>
                    </div>
                    <div class="col-md-6 inputGroupContainer">
                      <label>Refurbishment</label>
                      <div class="input-group">
                      <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-home"></i></span>
                      <select id="refurbishment" name="refurbishment" class="selectpicker form-control">
                      <option value="">--Select Product--</option>
                      <?php foreach($refurbishmentArr as $key => $refurbishment){?>
                      <option value="<?php echo $key;?>" <?=$key==$this->request->getPost('refurbishment') ? 'selected' : ''?> ><?php echo $refurbishment;?></option>
                      <?php }?>
                      </select>
                      </div>
                      <span id="error_property_description" class="text-danger"></span>
                    </div>
                  </div>
                  <h5>Numbers</h5>
                  <div class="form-group row">
                    <div class="col-md-6 inputGroupContainer">
                      <label>Value</label>
                      <div class="input-group"><span class="input-group-addon">
                      <i class="fas fa-pound-sign"></i></span> <input type="text" id="purchase_price" name="purchase_price" class="form-control hzaNumberFormatCls" placeholder="Value" value="<?=number_format($this->request->getPost('purchase_price'),  2)?>" />
                      </div>
                    </div>
                    <div class="col-md-6 inputGroupContainer">
                      <label>Net LTV</label>
                      <div class="input-group"><span class="input-group-addon">
                      <i class="fa fa-percent"></i></span><input type="text" placeholder="LTV Required" class="form-control" id="ltv_required" name="ltv_required" value="<?=@$this->request->getPost('ltv_required')?>" onkeypress="return isNumberKey(event)"></div>
                      <span id="error_ltv_required" class="text-danger"></span>
                    </div>
                  </div>
                  <div class="form-group row">
                        <div class="col-md-6 inputGroupContainer">
                          <label>Current Debt</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                            <input type="text" id="current_debt" name="current_debt" placeholder="Current Debt" class="form-control ist_chrage_fin_ltv_cls hzaNumberFormatCls" value="<?=number_format($this->request->getPost('current_debt'), 2)?>">
                          </div>
                        </div>
                        <div class="col-md-6 inputGroupContainer hideonclickrefurbishment"<?php if($this->request->getPost('refurbishment')<2){?> style="display: none;"<?php }?>>
                          <label>Cost of Works</label>
                          <div class="input-group"><span class="input-group-addon">
                          <i class="fas fa-pound-sign"></i></span> <input type="text" id="refurb_cost" name="refurb_cost" class="form-control hzaNumberFormatCls ltgdvcls" placeholder="Cost of Works" value="<?=number_format($this->request->getPost('refurb_cost'), 2)?>" />
                          </div>
                        </div>
                  </div>
                  <div class="form-group row">
                      <div class="col-md-12 inputGroupContainer">
                      <label>Current First Charge Debt</label>
                      <div class="input-group"><span class="input-group-addon">
                      <i class="fas fa-pound-sign"></i></span> <input type="text" id="first_charge_current_debt" name="first_charge_current_debt" class="form-control hzaNumberFormatCls" placeholder="Current First Charge Debt" value="<?=number_format($this->request->getPost('first_charge_current_debt'), 2)?>" />

                      </div>
                      </div>
                    </div>
                    <div class="form-group row">
                      <div class="col-md-12 inputGroupContainer">
                      <label>Lender</label>
                      <div class="input-group"><span class="input-group-addon">
                      <i class="fas fa-user"></i></span> <input type="text" id="first_charge_lender" name="first_charge_lender" class="form-control " placeholder="Lender" value="<?=$this->request->getPost('first_charge_lender')?>" />

                      </div>
                      </div>
                    </div>

                    <div class="form-group row">
                      <div class="col-md-12 inputGroupContainer">
                      <label>Current Second Charge Debt</label>
                      <div class="input-group"><span class="input-group-addon">
                      <i class="fas fa-pound-sign"></i></span> <input type="text" id="second_charge_current_debt" name="second_charge_current_debt" class="form-control hzaNumberFormatCls" placeholder="Current Second Charge Debt" value="<?=number_format($this->request->getPost('second_charge_current_debt'), 2)?>" />

                      </div>
                      </div>
                    </div>
                    <div class="form-group row">
                      <div class="col-md-12 inputGroupContainer">
                      <label>Lender</label>
                      <div class="input-group"><span class="input-group-addon">
                      <i class="fas fa-user"></i></span> <input type="text" id="second_charge_lender" name="second_charge_lender" class="form-control " placeholder="Lender" value="<?=$this->request->getPost('second_charge_lender')?>" />

                      </div>
                      </div>
                    </div>
                  <div class="form-group row">
                        <div class="col-md-6 inputGroupContainer">
                          <label>Capital Raise</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                          <input type="text" id="capital_raise" name="capital_raise" placeholder="Capital Raise" class="form-control ist_chrage_fin_ltv_cls hzaNumberFormatCls" value="<?=number_format($this->request->getPost('capital_raise'), 2)?>">
                          </div>
                        </div>
                        <div class="col-md-6 inputGroupContainer hideonclickrefurbishment"<?php if($this->request->getPost('refurbishment')<2){?> style="display: none;"<?php }?>>
                          <label>GDV</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                          <input type="text" id="gdv" name="gdv" placeholder="GDV" class="form-control hzaNumberFormatCls ltgdvcls" value="<?=number_format($this->request->getPost('gdv'), 2)?>">
                          </div>
                        </div>
                  </div>
                  <div class="form-group row">
                        <div class="col-md-6 inputGroupContainer">
                          <label>Gross Loan</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                          <input type="text" id="amount_required" name="amount_required" placeholder="Gross Loan" class="form-control hzaNumberFormatCls" value="<?=number_format($this->request->getPost('amount_required'), 2)?>">
                          </div>
                        </div>
                        <div class="col-md-6 inputGroupContainer hideonclickrefurbishment"<?php if($this->request->getPost('refurbishment')<2){?> style="display: none;"<?php }?>>
                          <label>LTGDV -exe interest</label>
                          <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-percent"></i></span><input type="text" placeholder="LTGDV -exe interest" class="form-control" id="ltgdv_exe_interest" name="ltgdv_exe_interest" value="<?=@$this->request->getPost('ltgdv_exe_interest')?>" onkeypress="return isNumberKey(event)"></div>
                          <span id="error_ltgdv_exe_interest" class="text-danger"></span>
                        </div>
                  </div>
                  <h5>History</h5>
                  <div class="form-group row">
                        <div class="col-md-6 inputGroupContainer">
                          <label>Date of purchase</label>
                          <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-calendar"></i></span><input type="text" placeholder="Date of Purchase" class="form-control" id="date_of_purchase" name="date_of_purchase" value="<?=@$this->request->getPost('date_of_purchase')?>"></div>
                          <span id="error_date_of_purchase" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 inputGroupContainer">
                          <label>Monthly mortgage payment</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                          <input type="text" id="monthly_mortgage_pmt" name="monthly_mortgage_pmt" placeholder="Monthly mortgage payment" class="form-control hzaNumberFormatCls" value="<?=number_format($this->request->getPost('monthly_mortgage_pmt'), 2)?>">
                          </div>
                        </div>
                  </div>
                  <div class="form-group row">
                        <div class="col-md-6 inputGroupContainer">
                          <label>Original Purchase price</label>
                          <div class="input-group"><span class="input-group-addon">
                          <i class="fas fa-pound-sign"></i></span><input type="text" placeholder="Original Purchase price" class="form-control hzaNumberFormatCls" id="original_purchase_price" name="original_purchase_price" value="<?=number_format(@$this->request->getPost('original_purchase_price'), 2)?>" onkeypress="return isNumberKey(event)"></div>
                          <span id="error_original_purchase_price" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 inputGroupContainer">
                          <label>Rental income if tenanted</label>
                          <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-info"></i></span><input type="text" placeholder="Rental income if tenanted" class="form-control" id="rental_income_tennted" name="rental_income_tennted" value="<?=@$this->request->getPost('rental_income_tennted')?>"></div>
                          <span id="error_rental_income_tennted" class="text-danger"></span>
                        </div>
                      </div>
                      <div class="form-group row">
                        <div class="col-md-6 inputGroupContainer">
                          <label>Name of 1st charge lender</label>
                          <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-info"></i></span><input type="text" placeholder="Name of 1st charge lender" class="form-control" id="name_ist_charge_lender" name="name_ist_charge_lender" value="<?=@$this->request->getPost('name_ist_charge_lender')?>"></div>
                          <span id="error_name_ist_charge_lender" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 inputGroupContainer">
                          <label>Any arrears on the mortgage</label>
                          <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-info"></i></span><input type="text" placeholder="Any arrears on the mortgage" class="form-control" id="any_arrer_mortgage" name="any_arrer_mortgage" value="<?=@$this->request->getPost('any_arrer_mortgage')?>"></div>
                          <span id="error_any_arrer_mortgage" class="text-danger"></span>
                        </div>
                      </div>
                      <h5>Required</h5>
                      <div class="form-group row">
                        <div class="col-md-6 inputGroupContainer">
                          <label>Term</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                          <select id="term_required" name="term_required" class="selectpicker form-control">
                          <option value="">--Select --</option>
                          <?php
                          foreach ($termTypeArr as $key => $termType) {
                          ?>
                          <option value="<?php echo $key;?>"<?php if($this->request->getPost('term_required') && $this->request->getPost('term_required')==$key){?> selected<?php }?>><?php echo $termType;?></option>
                          <?php }?>
                          </select>
                          </div>
                        </div>
                        <div class="col-md-6 inputGroupContainer">
                          <label>Broker Fee</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fas fa-percent"></i></span>
                          <input type="text" id="brokerfee" name="brokerfee" placeholder="Broker Fee" class="form-control hzaNumberFormatCls" value="<?=number_format($this->request->getPost('brokerfee'), 2)?>">
                          </div>
                          <span id="error_brokerfee" class="text-danger"></span>
                        </div>
                  </div>
                  <div class="form-group row">
                        <div class="col-md-6 inputGroupContainer">
                          <label>Interest Servicing</label>
                          <div class="input-group">
                          <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-credit-card"></i></span>
                          <select name="interestservicing" class="selectpicker form-control interestserviceCls" id="interestservicing">
                          <option value="">--select--</option>
                          <?php foreach ($interestServicingOptionArr as $key => $interestservicing) {
                          ?>
                          <option value="<?php echo $key;?>" <?php if($this->request->getPost('interestservicing') && $this->request->getPost('interestservicing')==$key){?> selected<?php }?> ><?php echo $interestservicing;?></option>
                          <?php }?>
                          </select>
                          </div>
                          <span id="error_interestservicing" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 inputGroupContainer">
                          <label>Exit</label>
                          <div class="input-group">
                          <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-home"></i></span>
                          <select id="exit_val" name="exit_val" class="selectpicker form-control">
                          <option value="">--Select description--</option>
                          <?php foreach($exitvalArr as $key => $exitval){?>
                          <option value="<?php echo $key;?>" <?=$key==$this->request->getPost('exit_val') ? 'selected' : ''?> ><?php echo $exitval;?></option>
                          <?php }?>
                          </select>
                          </div>
                        </div>
                  </div>
                  <div class="form-group row">

                  <div class="col-md-12 inputGroupContainer">
                  <label>Broker Fee</label>
                  <div class="input-group"><span class="input-group-addon"><i class="fas fa-percent"></i></span>
                  <input type="text" id="brokerfee" name="brokerfee" placeholder="Broker Fee" class="form-control hzaNumberFormatCls" value="1">
                  </div>
                  </div>
                </div>
                  <div class="form-group row interestServiceShowDiv"<?php if($this->request->getPost('interestservicing') && $this->request->getPost('interestservicing')==4){?> style="display:block;" <?php }else{?> style="display:none;" <?php }?>>
                        <div class="col-md-3 inputGroupContainer">
                          <label>Number of Months Retained</label>
                          <div class="input-group">
                          <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-credit-card"></i></span>
                          <input type="text" id="no_of_month_retained" name="no_of_month_retained" placeholder="Number of Months Retained" class="form-control" value="<?=$this->request->getPost('no_of_month_retained')?>">
                          </div>
                          <span id="error_no_of_month_retained" class="text-danger"></span>
                        </div>
                        <div class="col-md-3 inputGroupContainer">
                          <label>Number of Months Serviced</label>
                          <div class="input-group">
                          <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-credit-card"></i></span>
                          <input type="text" id="no_of_month_serviced" name="no_of_month_serviced" placeholder="Number of Months Serviced" class="form-control" value="<?=$this->request->getPost('no_of_month_serviced')?>">
                          </div>
                          <span id="error_no_of_month_serviced" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 inputGroupContainer">
                        &nbsp;
                        </div>
                  </div>
                  <div class="form-group row">
                        <div class="col-md-6 inputGroupContainer">
                        &nbsp;
                        </div>
                        <div class="col-md-6 inputGroupContainer">
                          <label>Notes</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fa fa-sticky-note-o"></i></span>
                          <textarea id="note_text" name="note_text" placeholder="Note" class="form-control"><?=$this->request->getPost('note_text')?></textarea>
                          </div>
                        </div>
                  </div>
                  <?php }else{?>
                  <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                        <label>Purchage Price / Estimated Value<span style="color:#f80477;">*</span></label>
                        <div class="input-group"><span class="input-group-addon">
                        <i class="fas fa-pound-sign"></i></span> <input type="text" id="purchase_price" name="purchase_price" class="form-control hzaNumberFormatCls" placeholder="Enter Purchase Price" value="<?=number_format($this->request->getPost('purchase_price'), 2)?>" />
                        <span class="tick_mark"><i class="fa fa-check" aria-hidden="true"></i></span>
                        </div>
                        </div>
                  </div>
                  <div class="form-group row">
                    <div class="col-md-6 inputGroupContainer">
                      <label>Interest Service Option<span style="color:#f80477;">*</span></label>
                      <div class="input-group">
                      <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-credit-card"></i></span>
                      <select name="interestservicing" class="selectpicker form-control interestserviceCls" id="interestservicing">
                      <option value="">--select--</option>
                      <?php foreach ($interestServicingOptionArr as $key => $interestservicing) {
                      ?>
                      <option value="<?php echo $key;?>" <?php if($this->request->getPost('interestservicing') && $this->request->getPost('interestservicing')==$key){?> selected<?php }?> ><?php echo $interestservicing;?></option>
                      <?php }?>
                      </select>
                      </div>
                    </div>
                    <div class="col-md-6 inputGroupContainer">
                      <label>Broker Fee<span style="color:#f80477;">*</span></label>
                      <div class="input-group"><span class="input-group-addon"><i class="fas fa-percent"></i></span>
                      <input type="text" id="brokerfee" name="brokerfee" placeholder="Broker Fee" class="form-control hzaNumberFormatCls" value="<?=number_format($this->request->getPost('brokerfee'), 2)?>">
                      </div>
                    </div>
                  </div>
                  <div class="form-group row interestServiceShowDiv"<?php if($this->request->getPost('interestservicing') && $this->request->getPost('interestservicing')==4){?> style="display:block;" <?php }else{?> style="display:none;" <?php }?>>
                    <div class="col-md-3 inputGroupContainer">
                      <label>Number of Months Retained</label>
                      <div class="input-group">
                      <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-credit-card"></i></span>
                      <input type="text" id="no_of_month_retained" name="no_of_month_retained" placeholder="Number of Months Retained" class="form-control" value="<?=$this->request->getPost('no_of_month_retained')?>">
                      </div>
                      <span id="error_no_of_month_retained" class="text-danger"></span>
                    </div>
                    <div class="col-md-3 inputGroupContainer">
                      <label>Number of Months Serviced</label>
                      <div class="input-group">
                      <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-credit-card"></i></span>
                      <input type="text" id="no_of_month_serviced" name="no_of_month_serviced" placeholder="Number of Months Serviced" class="form-control" value="<?=$this->request->getPost('no_of_month_serviced')?>">
                      </div>
                      <span id="error_no_of_month_serviced" class="text-danger"></span>
                    </div>
                    <div class="col-md-6 inputGroupContainer">
                    &nbsp;
                    </div>
                  </div>






                <?php
            }

            }else if($allPost['purposeid']==6){
                ?>
                <div class="loandetailborder">
                    <!-- <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                          <label>Auction Purchase</label>
                          <div class="input-group"><span class="input-group-addon">
                            <i class="fa fa-home"></i></span>
                            <select id="auction_purchase" name="auction_purchase" class="selectpicker form-control">
                              <option value="">Select</option>
                              <option value="Yes"<?php if($this->request->getPost('auction_purchase') && $this->request->getPost('auction_purchase')=='Yes'){?> selected<?php }?>>Yes</option>
                              <option value="No"<?php if($this->request->getPost('auction_purchase') && $this->request->getPost('auction_purchase')=='No'){?> selected<?php }?>>No</option>

                            </select>

                          </div>
                        </div>
                    </div> -->
                    <div class="form-group row auctionfieldcls" style="display: none;">
                        <div class="col-md-12 inputGroupContainer">
                        <label>Date of completion</label>
                        <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-calendar"></i></span>
                           <input type="text" id="date_of_completion" name="date_of_completion" autocomplete="off" placeholder="Date of completion" class="form-control datepicker1" value="">

                        </div>
                      </div>
                  </div>

                  <div class="form-group row auctionfieldcls" style="display: none;">
                    <div class="col-md-12 inputGroupContainer">
                        <label>Link to property auction listing</label>
                        <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-home"></i></span>
                          <input type="text" id="property_auction_lising" name="property_auction_lising" placeholder="Link to property auction listing" class="form-control" value="">

                        </div>
                      </div>
                  </div>
                   <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                            <label>Security</label>
                            <div class="input-group"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                              <select id="property_type" name="property_type" class="selectpicker form-control">
                                <option value="">--Select --</option>
                                <?php
                                foreach ($propertyTypeArr as $key => $propertyType) {
                                ?>
                                <option value="<?php echo $key;?>"<?php if($this->request->getPost('property_type') && $this->request->getPost('property_type')==$key){?> selected<?php }?>><?php echo $propertyType;?></option>
                                <?php }?>
                              </select>
                            </div>
                          </div>

                      </div>
                      <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                          <label>Term</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                          <select id="term_required" name="term_required" class="selectpicker form-control">
                          <option value="">--Select --</option>
                          <?php
                          foreach ($termTypeArr as $key => $termType) {
                          ?>
                          <option value="<?php echo $key;?>"<?php if($this->request->getPost('term_required') && $this->request->getPost('term_required')==$key){?> selected<?php }?>><?php echo $termType;?></option>
                          <?php }?>
                          </select>
                          </div>
                          </div>
                      </div>
                    <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                            <label>Refurbishment</label>
                            <div class="input-group">
                              <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-home"></i></span>
                              <select id="refurbishment" name="refurbishment" class="selectpicker form-control">
                                <option value="">--Select Product--</option>
                                <?php foreach($refurbishmentArr as $key => $refurbishment){?>
                                <option value="<?php echo $key;?>" <?=$key==$this->request->getPost('refurbishment') ? 'selected' : ''?> ><?php echo $refurbishment;?></option>
                                <?php }?>
                              </select>
                            </div>
                            <span id="error_property_description" class="text-danger"></span>
                          </div>
                    </div>
                </div>

                    <h5>Numbers</h5>
                    <div class="loandetailborder">
                        <div class="form-group row">
                              <div class="col-md-12 inputGroupContainer">
                              <label>CMV</label>
                              <div class="input-group"><span class="input-group-addon">
                              <i class="fas fa-pound-sign"></i></span> <input type="text" id="purchase_price" name="purchase_price" class="form-control hzaNumberFormatCls ist_chrage_fin_ltv_cls" placeholder="CMV" value="<?=number_format($this->request->getPost('purchase_price'), 2)?>" />

                              </div>
                              </div>
                            </div>

                            <div class="form-group row">
                              <div class="col-md-12 inputGroupContainer">
                              <label>Current Debt</label>
                              <div class="input-group"><span class="input-group-addon">
                              <i class="fas fa-pound-sign"></i></span> <input type="text" id="current_debt" name="current_debt" class="form-control hzaNumberFormatCls ist_chrage_fin_ltv_cls" placeholder="Current Debt" value="<?=number_format($this->request->getPost('current_debt'), 2)?>" />

                              </div>
                              </div>
                            </div>
                            <div class="form-group row hidecurrentfieldcls">
                              <div class="col-md-12 inputGroupContainer">
                              <label>Current First Charge Debt</label>
                              <div class="input-group"><span class="input-group-addon">
                              <i class="fas fa-pound-sign"></i></span> <input type="text" id="first_charge_current_debt" name="first_charge_current_debt" class="form-control hzaNumberFormatCls" placeholder="Current First Charge Debt" value="<?=number_format($this->request->getPost('first_charge_current_debt'), 2)?>" />

                              </div>
                              </div>
                            </div>
                            <div class="form-group row hidecurrentfieldcls">
                              <div class="col-md-12 inputGroupContainer">
                              <label>Lender</label>
                              <div class="input-group"><span class="input-group-addon">
                              <i class="fas fa-user"></i></span> <input type="text" id="first_charge_lender" name="first_charge_lender" class="form-control " placeholder="Lender" value="<?=$this->request->getPost('first_charge_lender')?>" />

                              </div>
                              </div>
                            </div>

                            <div class="form-group row hidecurrentfieldcls">
                              <div class="col-md-12 inputGroupContainer">
                              <label>Current Second Charge Debt</label>
                              <div class="input-group"><span class="input-group-addon">
                              <i class="fas fa-pound-sign"></i></span> <input type="text" id="second_charge_current_debt" name="second_charge_current_debt" class="form-control hzaNumberFormatCls" placeholder="Current Second Charge Debt" value="<?=number_format($this->request->getPost('second_charge_current_debt'), 2)?>" />

                              </div>
                              </div>
                            </div>
                            <div class="form-group row hidecurrentfieldcls">
                              <div class="col-md-12 inputGroupContainer">
                              <label>Lender</label>
                              <div class="input-group"><span class="input-group-addon">
                              <i class="fas fa-user"></i></span> <input type="text" id="second_charge_lender" name="second_charge_lender" class="form-control " placeholder="Lender" value="<?=$this->request->getPost('second_charge_lender')?>" />

                              </div>
                              </div>
                            </div>
                            <div class="form-group row">
                              <div class="col-md-12 inputGroupContainer">
                              <label>Capital Raise</label>
                              <div class="input-group"><span class="input-group-addon">
                              <i class="fas fa-pound-sign"></i></span> <input type="text" id="capital_raise" name="capital_raise" class="form-control hzaNumberFormatCls ist_chrage_fin_ltv_cls" placeholder="Capital Raise" value="<?=number_format($this->request->getPost('capital_raise'), 2)?>" />

                              </div>
                              </div>
                            </div>


                            <div class="form-group row">
                              <div class="col-md-12 inputGroupContainer">
                              <label>Gross Loan</label>
                              <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                              <input type="text" id="amount_required" name="amount_required" placeholder="Gross Loan" class="form-control ltgdvcls hzaNumberFormatCls" value="<?=number_format($this->request->getPost('amount_required'), 2)?>">
                              </div>
                              </div>
                            </div>
                        </div>

                       <h5>Leverage</h5>

                    <div class="loandetailborder">
                        <div class="form-group row">

                          <div class="col-md-12 inputGroupContainer">
                          <label>LTV</label>
                          <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-percent"></i></span><input type="text" placeholder="LTV Required" class="form-control" id="ltv_required" name="ltv_required" value="<?=@$this->request->getPost('ltv_required')?>" onkeypress="return isNumberKey(event)"></div>
                          <span id="error_ltv_required" class="text-danger"></span>
                          </div>
                        </div>
                    </div>

                    <h5>Exit</h5>
                <div class="loandetailborder">

                    <div class="form-group row">
                          <div class="col-md-12 inputGroupContainer">
                            <label>Interest Servicing</label>
                            <div class="input-group">
                              <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-credit-card"></i></span>
                              <select name="interestservicing" class="selectpicker form-control interestserviceCls" id="interestservicing">
                                <option value="">--select--</option>
                                <?php foreach ($interestServicingOptionArr as $key => $interestservicing) {
                                ?>
                                <option value="<?php echo $key;?>" <?php if($this->request->getPost('interestservicing') && $this->request->getPost('interestservicing')==$key){?> selected<?php }?> ><?php echo $interestservicing;?></option>
                                <?php }?>
                              </select>
                            </div>
                            <span id="error_interestservicing" class="text-danger"></span>
                          </div>

                         </div>

                        <div class="form-group row">
                          <div class="col-md-12 inputGroupContainer">
                            <label>Exit</label>
                            <div class="input-group">
                            <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-home"></i></span>
                            <select id="exit_val" name="exit_val" class="selectpicker form-control">
                            <option value="">--Select description--</option>
                            <?php foreach($exitvalArr as $key => $exitval){?>
                            <option value="<?php echo $key;?>" <?=$key==$this->request->getPost('exit_val') ? 'selected' : ''?> ><?php echo $exitval;?></option>
                            <?php }?>
                            </select>
                            </div>
                          </div>
                        </div>
                        <div class="form-group row">

                          <div class="col-md-12 inputGroupContainer">
                          <label>Broker Fee</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fas fa-percent"></i></span>
                          <input type="text" id="brokerfee" name="brokerfee" placeholder="Broker Fee" class="form-control hzaNumberFormatCls" value="1">
                          </div>
                          </div>
                        </div>
                        <div class="form-group row ervdivrow">

                          <div class="col-md-12 inputGroupContainer">
                          <label>ERV</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                          <input type="text" id="erv" name="erv" placeholder="ERV" class="form-control hzaNumberFormatCls" value="<?=number_format($this->request->getPost('erv'), 2)?>">
                          </div>
                          </div>
                        </div>
                        <div class="form-group row">

                          <div class="col-md-12 inputGroupContainer">
                          <label>Date Of Purchase</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                          <input type="text" id="date_of_purchase" name="date_of_purchase" placeholder="Date Of Purchase" class="form-control datepicker" value="<?=$this->request->getPost('date_of_purchase')?>" autocomplete="off">
                          </div>
                          </div>
                        </div>

                        <div class="form-group row">

                          <div class="col-md-12 inputGroupContainer">
                          <label>Current Lender</label>
                          <div class="input-group"><span class="input-group-addon"><i class="fa fa-user"></i></span>
                          <input type="text" id="current_lender" name="current_lender" placeholder="Current Lender" class="form-control" value="<?=$this->request->getPost('current_lender')?>">
                          </div>
                          </div>
                        </div>
                    </div>

                <?php

            }
        }
    }
    public function termloanfieldAction(){
       $loanTypeArr=array('1'=>'Investment','3'=>'Trading business');
       $propertyTypeArr=array('1'=>'Residential','2'=>'Semi Commercial','3'=>'Commercial','4'=>'Land no planning','Land With Planning');
       $termTypeArr=array('1'=>'1 month','2'=>'2 months','3'=>'3 months','4'=>'4 months','5'=>'5 months','6'=>'6 months','7'=>'7 months','8'=>'8 months','9'=>'9 months','10'=>'10 months','11'=>'11 months','12'=>'12 months','13'=>'13 months','14'=>'14 months','15'=>'15 months','16'=>'16 months','17'=>'17 months','18'=>'18 months','19'=>'19 months','20'=>'20 months','21'=>'21 months','22'=>'22 months','23'=>'23 months','24'=>'24 months', 33 => '25 Months', 34 => '26 Months', 35 => '27 Months', 36 => '28 Months', 37 => '29 Months', 38 => '30 Months', 39 => '31 Months', 40 => '32 Months', 41 => '33 Months', 42 => '34 Months', 43 => '35 Months', 44 => '36 Months', 45 => '37 Months', 46 => '38 Months', 47 => '39 Months', 48 => '40 Months', '25' => '3 Years', '26' => '4 Years', '27' => '5 Years', '28' => '6 Years', '29' => '7 Years', '30' => '8 Years', '31' => '9 Years', '32' => '10 Years', 49 => '11 Years', 50 => '12 Years', 51 => '13 Years', 52 => '14 Years', 53 => '15 Years', 54 => '16 Years', 55 => '17 Years', 56 => '18 Years', 57 => '19 Years', 58 => '20 Years', 59 => '21 Years', 60 => '22 Years', 61 => '23 Years', 62 => '24 Years', 63 => '25 Years', 64 => '26 Years', 65 => '27 Years', 66 => '28 Years', 67 => '29 Years', 68 => '30 Years', 69 => '31 Years', 70 => '32 Years', 71 => '33 Years', 72 => '34 Years', 73 => '35 Years');
          $adverseTypeArr=array('1'=>'No','2'=>'Minor','3'=>'Light','4'=>'Heavy');
          $chargeTypeArr=array('1'=>'1st charge bridge','2'=>'2nd charge bridge','3'=>'Development loan','4'=>'commercial loan', '5' => 'buy to let', '6' => 'Mezz');
          $valuationTypeArr=array('1'=>'Purchase Price','2'=>'Market Value','3'=>'Open Market Value');
          $interestServicingOptionArr=array('1'=>'Deducted for entire term','2'=>'Serviced Monthly','3'=>'Rolled Up', '4' => 'Part & Part');

          $ltvTypeArr=array('1'=>'0-50%','2'=>'50.01-60%','3'=>'60.01-65%','4'=>'65.01-70%','5'=>'70.01-75%','6'=>'75.01-80.55%','7'=>'80.56-81%');

          if($this->request->getPost('purchase_price') && $this->request->getPost('amount_required')){
                $ltvPercent=$this->request->getPost('amount_required')/$this->request->getPost('purchase_price')*100;
                $_POST['ltv']=number_format($ltvPercent, 2, '.', '');
          }
           $applicationTypeArr=array('1'=>'Bridging loan','2'=>'2nd Charge loan','3'=>'Term loan','4'=>'Development loan');
           $mordgagePurposeArr=array('1'=>'Purchase','2'=>'Refinance','3'=>'Refinance + Capital Raising','4'=>'Capital Raising','5' => 'Transfer of Enquiry');
         if($this->request->getPost('application_type')==2){
          $mordgagePurposeArr=array('2' => 'refinance', '6'=>'Capital Raise');
         }else if($this->request->getPost('application_type')==4 || $this->request->getPost('application_type')==1){
          $mordgagePurposeArr=array('1'=>'Purchase','2'=>'Refinance', '8' => 'Owned with no debt');
         }else if($this->request->getPost('application_type')==5 || $this->request->getPost('application_type')==3){
          $mordgagePurposeArr=array('1'=>'Purchase','2'=>'Refinance');
         }
         $exitvalArr=array(1 => 'Sale', 2 => 'Refinance');
         $propertyDescArr=array('flat'=>'Flat','detached_house'=>'Detached house','terraced_house'=>'Terraced house','semi-detached_house'=>'Semi-detached house', 'end_terrace_house' => 'End terrace house', 'studio' => 'Studio', 'detached_bungalow' => 'Detached Bungalow', 'bungalow' => 'Bungalow', 'maisonette' => 'Maisonette', 'town_house'=>'Town house','cottage'=>'Cottage','semi-detached_bungalow'=>'Semi-detached Bungalow','mobile_or_park_home'=>'Mobile or park home', 'link-detached_house' => 'Link-detached house', 'barn_conversion' => 'Barn conversion', 'mews_house' => 'Mews house', 'micro_apartment'=>'micro_apartment','office'=>'Office','light_industrial'=>'Light industrial','heavy_industrial'=>'Heavy industrial', 'care_home' => 'Care home', 'hotel' => 'Hotel', 'shop_with_uppers' => 'Shop with uppers', 'retail' =>'Retail','hmo' =>'Hmo','shopping_centre' =>'Shopping centre','strategic_land' =>'Strategic land', 'land' => 'Land', 'Public House' => 'Public House');
         $securityArr=array();

        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if($allPost['purposeid']==1){
                ?>


                <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                          <label>Auction Purchase</label>
                          <div class="input-group"><span class="input-group-addon">
                            <i class="fa fa-home"></i></span>
                            <select id="auction_purchase" name="auction_purchase" class="selectpicker form-control">
                              <option value="">Select</option>
                              <option value="Yes"<?php if($this->request->getPost('auction_purchase') && $this->request->getPost('auction_purchase')=='Yes'){?> selected<?php }?>>Yes</option>
                              <option value="No"<?php if($this->request->getPost('auction_purchase') && $this->request->getPost('auction_purchase')=='No'){?> selected<?php }?>>No</option>
                              <!-- <option value="1">Yes</option>
                              <option value="0">No</option> -->
                            </select>

                          </div>
                        </div>
                    </div>
                    <div class="form-group row auctionfieldcls" style="display: none;">
                        <div class="col-md-12 inputGroupContainer">
                        <label>Date of completion</label>
                        <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-calendar"></i></span>
                           <input type="text" id="date_of_completion" name="date_of_completion" autocomplete="off" placeholder="Date of completion" class="form-control datepicker1" value="">

                        </div>
                      </div>
                  </div>

                  <div class="form-group row auctionfieldcls" style="display: none;">
                    <div class="col-md-12 inputGroupContainer">
                        <label>Link to property auction listing</label>
                        <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-home"></i></span>
                          <input type="text" id="property_auction_lising" name="property_auction_lising" placeholder="Link to property auction listing" class="form-control" value="">

                        </div>
                      </div>
                  </div>
                 <div class="form-group row">
                     <div class="col-md-6 inputGroupContainer">
                          <label>Security</label>
                         <div class="input-group"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                         <select id="property_type" name="property_type" class="selectpicker form-control">
                            <option value="">--Select --</option>
                            <?php
                                           foreach ($propertyTypeArr as $key => $propertyType) {
                                    ?>
                                    <option value="<?php echo $key;?>"<?php if($this->request->getPost('property_type') && $this->request->getPost('property_type')==$key){?> selected<?php }?>><?php echo $propertyType;?></option>
                                    <?php }?>
                          </select>

                      </div>
                      </div>
                      <div class="col-md-6 inputGroupContainer">
                          <label>Loan Type</label>
                             <div class="input-group">
                                <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-home"></i></span>
                                <select id="loan_type" name="loan_type" class="selectpicker form-control">
                                  <option value="">--Select Product--</option>
                                  <?php foreach($loanTypeArr as $key => $loanType){?>
                                    <option value="<?php echo $key;?>" <?=$key==$this->request->getPost('loan_type') ? 'selected' : ''?> ><?php echo $loanType;?></option>
                                  <?php }?>

                                </select>

                             </div>
                             <span id="error_loan_type" class="text-danger"></span>
                      </div>

                 </div>

                 <h5>Numbers</h5>
                  <div class="form-group row">
                     <div class="col-md-6 inputGroupContainer">
                          <label>OMV</label>
                          <div class="input-group"><span class="input-group-addon">
                         <i class="fas fa-pound-sign"></i></span> <input type="text" id="omv" name="omv" class="form-control hzaNumberFormatCls ist_chrage_ltv_cls" placeholder="OMV" value="<?=number_format($this->request->getPost('omv'), 2)?>" />

                       </div>
                      </div>
                       <div class="col-md-6 inputGroupContainer">
                        <label>LTV</label>
                         <div class="input-group"><span class="input-group-addon">
                           <i class="fa fa-percent"></i></span><input type="text" placeholder="LTV Required" class="form-control" id="ltv_required" name="ltv_required" value="<?=@$this->request->getPost('ltv_required')?>" onkeypress="return isNumberKey(event)"></div>
                            <span id="error_ltv_required" class="text-danger"></span>
                      </div>

                 </div>



                 <div class="form-group row">
                        <div class="col-md-6 inputGroupContainer">
                            <label>Purchase Price</label>
                            <div class="input-group"><span class="input-group-addon">
                             <i class="fas fa-pound-sign"></i></span> <input type="text" id="purchase_price" name="purchase_price" class="form-control ist_chrage_ltv_cls hzaNumberFormatCls" placeholder="Purchase Price" value="<?=number_format($this->request->getPost('purchase_price'), 2)?>" />

                            </div>
                        </div>
                        <div class="col-md-6 inputGroupContainer hideonclickrefurbishment">
                            <label>Rental Per Annum</label>
                            <div class="input-group"><span class="input-group-addon">
                             <i class="fas fa-pound-sign"></i></span> <input type="text" id="rental_per_anum" name="rental_per_anum" class="form-control hzaNumberFormatCls" placeholder="Rental Per Annum" value="<?=number_format($this->request->getPost('rental_per_anum'), 2)?>" />

                            </div>
                        </div>

                 </div>

                <div class="form-group row">
                        <div class="col-md-6 inputGroupContainer">
                            <label>Deposit</label>
                           <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                           <input type="text" id="deposit" name="deposit" placeholder="Deposit" class="form-control ist_chrage_ltv_cls hzaNumberFormatCls" value="<?=number_format($this->request->getPost('deposit'), 2)?>">

                            </div>
                         </div>
                        <div class="col-md-6 inputGroupContainer hideonclickrefurbishment">
                           &nbsp;
                         </div>

                 </div>
                   <div class="form-group row">
                        <div class="col-md-6 inputGroupContainer">
                                <label>Gross Loan</label>
                               <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                               <input type="text" id="amount_required" name="amount_required" placeholder="Gross Loan" class="form-control ltgdvcls hzaNumberFormatCls" value="<?=number_format($this->request->getPost('amount_required'), 2)?>">

                            </div>
                         </div>
                         <div class="col-md-6 inputGroupContainer hideonclickrefurbishment">
                       &nbsp;
                      </div>
                 </div>
                 <h5>Details</h5>

                 <div class="form-group row">

                      <div class="col-md-6 inputGroupContainer">
                        <label>Term</label>
                               <div class="input-group"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                               <select id="term_required" name="term_required" class="selectpicker form-control">
                                  <option value="">--Select --</option>
                                  <?php
                                    foreach ($termTypeArr as $key => $termType) {
                                  ?>
                                  <option value="<?php echo $key;?>"<?php if($this->request->getPost('term_required') && $this->request->getPost('term_required')==$key){?> selected<?php }?>><?php echo $termType;?></option>
                                  <?php }?>
                                </select>

                            </div>
                         </div>
                      <div class="col-md-6 inputGroupContainer">
                            <label>Broker Fee</label>
                           <div class="input-group"><span class="input-group-addon"><i class="fas fa-percent"></i></span>
                           <input type="text" id="brokerfee" name="brokerfee" placeholder="Broker Fee" class="form-control" value="<?=$this->request->getPost('brokerfee')?>">

                        </div>
                        <span id="error_brokerfee" class="text-danger"></span>
                     </div>
                 </div>
                 <div class="form-group row">

                    <div class="col-md-6 inputGroupContainer">
                        <label>Exit</label>
                        <!--  <div class="input-group"><span class="input-group-addon">
                           <i class="fa fa-info"></i></span> <input type="text" id="exit_val" name="exit_val" class="form-control" placeholder="Exit" value="<?=$this->request->getPost('exit_val')?>" />

                         </div> -->
                         <div class="input-group">
                            <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-home"></i></span>
                            <select id="exit_val" name="exit_val" class="selectpicker form-control">
                              <option value="">--Select description--</option>
                              <?php foreach($exitvalArr as $key => $exitval){?>
                                <option value="<?php echo $key;?>" <?=$key==$this->request->getPost('exit_val') ? 'selected' : ''?> ><?php echo $exitval;?></option>
                              <?php }?>

                            </select>

                         </div>
                    </div>
                    <div class="col-md-6 inputGroupContainer">
                            <label>Notes</label>
                           <div class="input-group"><span class="input-group-addon"><i class="fa fa-sticky-note-o"></i></span>
                           <textarea id="note_text" name="note_text" placeholder="Note" class="form-control"><?=$this->request->getPost('note_text')?></textarea>

                        </div>
                     </div>

                 </div>

                 <div class="form-group row">

                  <div class="col-md-12 inputGroupContainer">
                  <label>Broker Fee</label>
                  <div class="input-group"><span class="input-group-addon"><i class="fas fa-percent"></i></span>
                  <input type="text" id="brokerfee" name="brokerfee" placeholder="Broker Fee" class="form-control hzaNumberFormatCls" value="1">
                  </div>
                  </div>
                </div>
                <?php

            }else if($allPost['purposeid']==2){
                ?>
                <!-- <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                          <label>Auction Purchase</label>
                          <div class="input-group"><span class="input-group-addon">
                            <i class="fa fa-home"></i></span>
                            <select id="auction_purchase" name="auction_purchase" class="selectpicker form-control">
                              <option value="">Select</option>
                              <option value="Yes"<?php if($this->request->getPost('auction_purchase') && $this->request->getPost('auction_purchase')=='Yes'){?> selected<?php }?>>Yes</option>
                              <option value="No"<?php if($this->request->getPost('auction_purchase') && $this->request->getPost('auction_purchase')=='No'){?> selected<?php }?>>No</option>

                            </select>

                          </div>
                        </div>
                    </div> -->
                    <div class="form-group row auctionfieldcls" style="display: none;">
                        <div class="col-md-12 inputGroupContainer">
                        <label>Date of completion</label>
                        <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-calendar"></i></span>
                           <input type="text" id="date_of_completion" name="date_of_completion" autocomplete="off" placeholder="Date of completion" class="form-control datepicker1" value="">

                        </div>
                      </div>
                  </div>

                  <div class="form-group row auctionfieldcls" style="display: none;">
                    <div class="col-md-12 inputGroupContainer">
                        <label>Link to property auction listing</label>
                        <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-home"></i></span>
                          <input type="text" id="property_auction_lising" name="property_auction_lising" placeholder="Link to property auction listing" class="form-control" value="">

                        </div>
                      </div>
                  </div>
              <div class="form-group row">
                     <div class="col-md-6 inputGroupContainer">
                          <label>Security</label>
                         <div class="input-group"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                         <select id="property_type" name="property_type" class="selectpicker form-control">
                            <option value="">--Select --</option>
                            <?php
                                           foreach ($propertyTypeArr as $key => $propertyType) {
                                    ?>
                                    <option value="<?php echo $key;?>"<?php if($this->request->getPost('property_type') && $this->request->getPost('property_type')==$key){?> selected<?php }?>><?php echo $propertyType;?></option>
                                    <?php }?>
                          </select>

                      </div>
                      </div>
                        <div class="col-md-6 inputGroupContainer">
                          <label>Loan Type</label>
                             <div class="input-group">
                                <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-home"></i></span>
                                <select id="loan_type" name="loan_type" class="selectpicker form-control">
                                  <option value="">--Select Product--</option>
                                  <?php foreach($loanTypeArr as $key => $loanType){?>
                                    <option value="<?php echo $key;?>" <?=$key==$this->request->getPost('loan_type') ? 'selected' : ''?> ><?php echo $loanType;?></option>
                                  <?php }?>

                                </select>

                             </div>
                             <span id="error_loan_type" class="text-danger"></span>
                      </div>

                 </div>
                 <h5>Numbers</h5>
                  <div class="form-group row">
                     <div class="col-md-6 inputGroupContainer">
                          <label>OMV</label>
                          <div class="input-group"><span class="input-group-addon">
                         <i class="fas fa-pound-sign"></i></span> <input type="text" id="omv" name="omv" class="form-control hzaNumberFormatCls ist_chrage_ltv_cls" placeholder="OMV" value="<?=number_format($this->request->getPost('omv'), 2)?>" />

                       </div>
                      </div>
                       <div class="col-md-6 inputGroupContainer">
                        <label>LTV</label>
                         <div class="input-group"><span class="input-group-addon">
                           <i class="fa fa-percent"></i></span><input type="text" placeholder="LTV Required" class="form-control" id="ltv_required" name="ltv_required" value="<?=@$this->request->getPost('ltv_required')?>" onkeypress="return isNumberKey(event)"></div>
                            <span id="error_ltv_required" class="text-danger"></span>
                      </div>

                 </div>



                 <div class="form-group row">
                        <div class="col-md-6 inputGroupContainer">
                            <label>Purchase Price</label>
                            <div class="input-group"><span class="input-group-addon">
                             <i class="fas fa-pound-sign"></i></span> <input type="text" id="purchase_price" name="purchase_price" class="form-control ist_chrage_ltv_cls hzaNumberFormatCls" placeholder="Purchase Price" value="<?=number_format($this->request->getPost('purchase_price'), 2)?>" />

                            </div>
                        </div>
                        <div class="col-md-6 inputGroupContainer hideonclickrefurbishment">
                            <label>Rental Per Annum</label>
                            <div class="input-group"><span class="input-group-addon">
                             <i class="fas fa-pound-sign"></i></span> <input type="text" id="rental_per_anum" name="rental_per_anum" class="form-control hzaNumberFormatCls" placeholder="Rental Per Annum" value="<?=number_format($this->request->getPost('rental_per_anum'), 2)?>" />

                            </div>
                        </div>

                 </div>

                <div class="form-group row">
                        <div class="col-md-6 inputGroupContainer">
                            <label>Deposit</label>
                           <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                           <input type="text" id="deposit" name="deposit" placeholder="Deposit" class="form-control ist_chrage_ltv_cls hzaNumberFormatCls" value="<?=number_format($this->request->getPost('deposit'), 2)?>">

                            </div>
                         </div>
                        <div class="col-md-6 inputGroupContainer hideonclickrefurbishment">
                           &nbsp;
                         </div>

                 </div>
                   <div class="form-group row">
                        <div class="col-md-6 inputGroupContainer">
                                <label>Gross Loan</label>
                               <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                               <input type="text" id="amount_required" name="amount_required" placeholder="Gross Loan" class="form-control ltgdvcls hzaNumberFormatCls" value="<?=number_format($this->request->getPost('amount_required'), 2)?>">

                            </div>
                         </div>
                         <div class="col-md-6 inputGroupContainer hideonclickrefurbishment">
                       &nbsp;
                      </div>
                 </div>

               <h5>Details</h5>

                 <div class="form-group row">

                      <div class="col-md-6 inputGroupContainer">
                        <label>Term</label>
                               <div class="input-group"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                               <select id="term_required" name="term_required" class="selectpicker form-control">
                                  <option value="">--Select --</option>
                                  <?php
                                    foreach ($termTypeArr as $key => $termType) {
                                  ?>
                                  <option value="<?php echo $key;?>"<?php if($this->request->getPost('term_required') && $this->request->getPost('term_required')==$key){?> selected<?php }?>><?php echo $termType;?></option>
                                  <?php }?>
                                </select>

                            </div>
                         </div>
                      <div class="col-md-6 inputGroupContainer">
                            <label>Broker Fee</label>
                           <div class="input-group"><span class="input-group-addon"><i class="fas fa-percent"></i></span>
                           <input type="text" id="brokerfee" name="brokerfee" placeholder="Broker Fee" class="form-control" value="<?=$this->request->getPost('brokerfee')?>">

                        </div>
                        <span id="error_brokerfee" class="text-danger"></span>
                     </div>
                 </div>
                 <div class="form-group row">

                    <div class="col-md-6 inputGroupContainer">
                        <label>Exit</label>
                        <!--  <div class="input-group"><span class="input-group-addon">
                           <i class="fa fa-info"></i></span> <input type="text" id="exit_val" name="exit_val" class="form-control" placeholder="Exit" value="<?=$this->request->getPost('exit_val')?>" />

                         </div> -->
                         <div class="input-group">
                            <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-home"></i></span>
                            <select id="exit_val" name="exit_val" class="selectpicker form-control">
                              <option value="">--Select description--</option>
                              <?php foreach($exitvalArr as $key => $exitval){?>
                                <option value="<?php echo $key;?>" <?=$key==$this->request->getPost('exit_val') ? 'selected' : ''?> ><?php echo $exitval;?></option>
                              <?php }?>

                            </select>

                         </div>
                    </div>
                    <div class="col-md-6 inputGroupContainer">
                            <label>Notes</label>
                           <div class="input-group"><span class="input-group-addon"><i class="fa fa-sticky-note-o"></i></span>
                           <textarea id="note_text" name="note_text" placeholder="Note" class="form-control"><?=$this->request->getPost('note_text')?></textarea>

                        </div>
                     </div>

                 </div>
                 <div class="form-group row">

                  <div class="col-md-12 inputGroupContainer">
                  <label>Broker Fee</label>
                  <div class="input-group"><span class="input-group-addon"><i class="fas fa-percent"></i></span>
                  <input type="text" id="brokerfee" name="brokerfee" placeholder="Broker Fee" class="form-control hzaNumberFormatCls" value="1">
                  </div>
                  </div>
                </div>
                  <h5>History</h5>

                 <div class="form-group row">

                      <div class="col-md-6 inputGroupContainer">
                      <label>Date of purchase</label>
                       <div class="input-group"><span class="input-group-addon">
                         <i class="fa fa-calendar"></i></span><input type="text" placeholder="Date of Purchase" class="form-control" id="date_of_purchase" name="date_of_purchase" value="<?=@$this->request->getPost('date_of_purchase')?>"></div>
                          <span id="error_date_of_purchase" class="text-danger"></span>
                    </div>
                      <div class="col-md-6 inputGroupContainer">
                        <label>Monthly mortgage payment</label>
                           <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                             <input type="text" id="monthly_mortgage_pmt" name="monthly_mortgage_pmt" placeholder="Monthly mortgage payment" class="form-control hzaNumberFormatCls" value="<?=number_format($this->request->getPost('monthly_mortgage_pmt'), 2)?>">

                          </div>

                        </div>
                 </div>

                 <div class="form-group row">

                      <div class="col-md-6 inputGroupContainer">
                      <label>Original Purchase price</label>
                     <div class="input-group"><span class="input-group-addon">
                         <i class="fas fa-pound-sign"></i></span><input type="text" placeholder="Original Purchase price" class="form-control hzaNumberFormatCls" id="original_purchase_price" name="original_purchase_price" value="<?=number_format(@$this->request->getPost('original_purchase_price'), 2)?>" onkeypress="return isNumberKey(event)"></div>
                          <span id="error_original_purchase_price" class="text-danger"></span>
                    </div>
                      <div class="col-md-6 inputGroupContainer">
                        <label>Any arrears on the mortgage</label>
                         <div class="input-group"><span class="input-group-addon">
                           <i class="fa fa-info"></i></span><input type="text" placeholder="Any arrears on the mortgage" class="form-control" id="any_arrer_mortgage" name="any_arrer_mortgage" value="<?=@$this->request->getPost('any_arrer_mortgage')?>"></div>
                            <span id="error_any_arrer_mortgage" class="text-danger"></span>
                      </div>
                 </div>
                 <div class="form-group row">

                     <div class="col-md-6 inputGroupContainer">
                      <label>Name of 1st charge lender</label>
                     <div class="input-group"><span class="input-group-addon">
                         <i class="fa fa-info"></i></span><input type="text" placeholder="Name of 1st charge lender" class="form-control" id="name_ist_charge_lender" name="name_ist_charge_lender" value="<?=@$this->request->getPost('name_ist_charge_lender')?>" onkeypress="return isNumberKey(event)"></div>
                          <span id="error_name_ist_charge_lender" class="text-danger"></span>
                    </div>

                 </div>
                <?php

            }
        }
    }
    public function edittermloanfieldAction(){
       $loanTypeArr=array('1'=>'Investment','3'=>'Trading business');
       $propertyTypeArr=array('1'=>'Residential','2'=>'Semi Commercial','3'=>'Commercial','4'=>'Land no planning','Land With Planning');
       $termTypeArr=array('1'=>'1 month','2'=>'2 months','3'=>'3 months','4'=>'4 months','5'=>'5 months','6'=>'6 months','7'=>'7 months','8'=>'8 months','9'=>'9 months','10'=>'10 months','11'=>'11 months','12'=>'12 months','13'=>'13 months','14'=>'14 months','15'=>'15 months','16'=>'16 months','17'=>'17 months','18'=>'18 months','19'=>'19 months','20'=>'20 months','21'=>'21 months','22'=>'22 months','23'=>'23 months','24'=>'24 months', 33 => '25 Months', 34 => '26 Months', 35 => '27 Months', 36 => '28 Months', 37 => '29 Months', 38 => '30 Months', 39 => '31 Months', 40 => '32 Months', 41 => '33 Months', 42 => '34 Months', 43 => '35 Months', 44 => '36 Months', 45 => '37 Months', 46 => '38 Months', 47 => '39 Months', 48 => '40 Months', '25' => '3 Years', '26' => '4 Years', '27' => '5 Years', '28' => '6 Years', '29' => '7 Years', '30' => '8 Years', '31' => '9 Years', '32' => '10 Years', 49 => '11 Years', 50 => '12 Years', 51 => '13 Years', 52 => '14 Years', 53 => '15 Years', 54 => '16 Years', 55 => '17 Years', 56 => '18 Years', 57 => '19 Years', 58 => '20 Years', 59 => '21 Years', 60 => '22 Years', 61 => '23 Years', 62 => '24 Years', 63 => '25 Years', 64 => '26 Years', 65 => '27 Years', 66 => '28 Years', 67 => '29 Years', 68 => '30 Years', 69 => '31 Years', 70 => '32 Years', 71 => '33 Years', 72 => '34 Years', 73 => '35 Years');
          $adverseTypeArr=array('1'=>'No','2'=>'Minor','3'=>'Light','4'=>'Heavy');
          $chargeTypeArr=array('1'=>'1st charge bridge','2'=>'2nd charge bridge','3'=>'Development loan','4'=>'commercial loan', '5' => 'buy to let', '6' => 'Mezz');
          $valuationTypeArr=array('1'=>'Purchase Price','2'=>'Market Value','3'=>'Open Market Value');
          $interestServicingOptionArr=array('1'=>'Deducted for entire term','2'=>'Serviced Monthly','3'=>'Rolled Up', '4' => 'Part & Part');

          $ltvTypeArr=array('1'=>'0-50%','2'=>'50.01-60%','3'=>'60.01-65%','4'=>'65.01-70%','5'=>'70.01-75%','6'=>'75.01-80.55%','7'=>'80.56-81%');

          if($this->request->getPost('purchase_price') && $this->request->getPost('amount_required')){
                $ltvPercent=$this->request->getPost('amount_required')/$this->request->getPost('purchase_price')*100;
                $_POST['ltv']=number_format($ltvPercent, 2, '.', '');
          }
           $applicationTypeArr=array('1'=>'Bridging loan','2'=>'2nd Charge loan','3'=>'Term loan','4'=>'Development loan');
          $mordgagePurposeArr=array('1'=>'Purchase','2'=>'Refinance');
         $exitvalArr=array(1 => 'Sale', 2 => 'Refinance');
         $propertyDescArr=array('flat'=>'Flat','detached_house'=>'Detached house','terraced_house'=>'Terraced house','semi-detached_house'=>'Semi-detached house', 'end_terrace_house' => 'End terrace house', 'studio' => 'Studio', 'detached_bungalow' => 'Detached Bungalow', 'bungalow' => 'Bungalow', 'maisonette' => 'Maisonette', 'town_house'=>'Town house','cottage'=>'Cottage','semi-detached_bungalow'=>'Semi-detached Bungalow','mobile_or_park_home'=>'Mobile or park home', 'link-detached_house' => 'Link-detached house', 'barn_conversion' => 'Barn conversion', 'mews_house' => 'Mews house', 'micro_apartment'=>'micro_apartment','office'=>'Office','light_industrial'=>'Light industrial','heavy_industrial'=>'Heavy industrial', 'care_home' => 'Care home', 'hotel' => 'Hotel', 'shop_with_uppers' => 'Shop with uppers', 'retail' =>'Retail','hmo' =>'Hmo','shopping_centre' =>'Shopping centre','strategic_land' =>'Strategic land', 'land' => 'Land', 'Public House' => 'Public House');
         $securityArr=array();

        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if($allPost['purposeid']==1){
                ?>


                <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                          <label>Auction Purchase</label>
                          <div class="input-group"><span class="input-group-addon">
                            <i class="fa fa-home"></i></span>
                            <select id="auction_purchase" name="auction_purchase" class="selectpicker form-control">
                              <option value="">Select</option>
                              <option value="Yes"<?php if($this->request->getPost('auction_purchase') && $this->request->getPost('auction_purchase')=='Yes'){?> selected<?php }?>>Yes</option>
                              <option value="No"<?php if($this->request->getPost('auction_purchase') && $this->request->getPost('auction_purchase')=='No'){?> selected<?php }?>>No</option>
                              <!-- <option value="1">Yes</option>
                              <option value="0">No</option> -->
                            </select>

                          </div>
                        </div>
                    </div>
                    <div class="form-group row auctionfieldcls" style="display: none;">
                        <div class="col-md-12 inputGroupContainer">
                        <label>Date of completion</label>
                        <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-calendar"></i></span>
                           <input type="text" id="date_of_completion" name="date_of_completion" autocomplete="off" placeholder="Date of completion" class="form-control datepicker1" value="">

                        </div>
                      </div>
                  </div>

                  <div class="form-group row auctionfieldcls" style="display: none;">
                    <div class="col-md-12 inputGroupContainer">
                        <label>Link to property auction listing</label>
                        <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-home"></i></span>
                          <input type="text" id="property_auction_lising" name="property_auction_lising" placeholder="Link to property auction listing" class="form-control" value="">

                        </div>
                      </div>
                  </div>
                 <div class="form-group row">
                     <div class="col-md-6 inputGroupContainer">
                          <label>Security</label>
                         <div class="input-group"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                         <select id="property_type" name="property_type" class="selectpicker form-control">
                            <option value="">--Select --</option>
                            <?php
                                           foreach ($propertyTypeArr as $key => $propertyType) {
                                    ?>
                                    <option value="<?php echo $key;?>"<?php if($this->request->getPost('property_type') && $this->request->getPost('property_type')==$key){?> selected<?php }?>><?php echo $propertyType;?></option>
                                    <?php }?>
                          </select>

                      </div>
                      </div>
                      <div class="col-md-6 inputGroupContainer">
                          <label>Loan Type</label>
                             <div class="input-group">
                                <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-home"></i></span>
                                <select id="loan_type" name="loan_type" class="selectpicker form-control">
                                  <option value="">--Select Product--</option>
                                  <?php foreach($loanTypeArr as $key => $loanType){?>
                                    <option value="<?php echo $key;?>" <?=$key==$this->request->getPost('loan_type') ? 'selected' : ''?> ><?php echo $loanType;?></option>
                                  <?php }?>

                                </select>

                             </div>
                             <span id="error_loan_type" class="text-danger"></span>
                      </div>

                 </div>

                 <h5>Numbers</h5>
                  <div class="form-group row">
                     <div class="col-md-6 inputGroupContainer">
                          <label>OMV</label>
                          <div class="input-group"><span class="input-group-addon">
                         <i class="fas fa-pound-sign"></i></span> <input type="text" id="omv" name="omv" class="form-control hzaNumberFormatCls ist_chrage_ltv_cls" placeholder="OMV" value="<?=number_format($this->request->getPost('omv'), 2)?>" />

                       </div>
                      </div>
                       <div class="col-md-6 inputGroupContainer">
                        <label>LTV</label>
                         <div class="input-group"><span class="input-group-addon">
                           <i class="fa fa-percent"></i></span><input type="text" placeholder="LTV Required" class="form-control" id="ist_crg_ltv_required" name="ltv_required" value="<?=@$this->request->getPost('ltv_required')?>" onkeypress="return isNumberKey(event)"></div>
                            <span id="error_ltv_required" class="text-danger"></span>
                      </div>

                 </div>



                 <div class="form-group row">
                        <div class="col-md-6 inputGroupContainer">
                            <label>Purchase Price</label>
                            <div class="input-group"><span class="input-group-addon">
                             <i class="fas fa-pound-sign"></i></span> <input type="text" id="ist_crg_purchase_price" name="purchase_price" class="form-control ist_chrage_ltv_cls hzaNumberFormatCls" placeholder="Purchase Price" value="<?=number_format($this->request->getPost('purchase_price'), 2)?>" />

                            </div>
                        </div>
                        <div class="col-md-6 inputGroupContainer hideonclickrefurbishment">
                            <label>Rental Per Annum</label>
                            <div class="input-group"><span class="input-group-addon">
                             <i class="fas fa-pound-sign"></i></span> <input type="text" id="rental_per_anum" name="rental_per_anum" class="form-control hzaNumberFormatCls" placeholder="Rental Per Annum" value="<?=number_format($this->request->getPost('rental_per_anum'), 2)?>" />

                            </div>
                        </div>

                 </div>

                <div class="form-group row">
                        <div class="col-md-6 inputGroupContainer">
                            <label>Deposit</label>
                           <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                           <input type="text" id="ist_crg_deposit" name="deposit" placeholder="Deposit" class="form-control ist_chrage_ltv_cls hzaNumberFormatCls" value="<?=number_format($this->request->getPost('deposit'), 2)?>">

                            </div>
                         </div>
                        <div class="col-md-6 inputGroupContainer hideonclickrefurbishment">
                           &nbsp;
                         </div>

                 </div>
                   <div class="form-group row">
                        <div class="col-md-6 inputGroupContainer">
                                <label>Gross Loan</label>
                               <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                               <input type="text" id="ist_crg_amount_required" name="amount_required" placeholder="Gross Loan" class="form-control ltgdvcls hzaNumberFormatCls" value="<?=number_format($this->request->getPost('amount_required'), 2)?>">

                            </div>
                         </div>
                         <div class="col-md-6 inputGroupContainer hideonclickrefurbishment">
                       &nbsp;
                      </div>
                 </div>
                 <h5>Details</h5>

                 <div class="form-group row">

                      <div class="col-md-6 inputGroupContainer">
                        <label>Term</label>
                               <div class="input-group"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                               <select id="term_required" name="term_required" class="selectpicker form-control">
                                  <option value="">--Select --</option>
                                  <?php
                                    foreach ($termTypeArr as $key => $termType) {
                                  ?>
                                  <option value="<?php echo $key;?>"<?php if($this->request->getPost('term_required') && $this->request->getPost('term_required')==$key){?> selected<?php }?>><?php echo $termType;?></option>
                                  <?php }?>
                                </select>

                            </div>
                         </div>
                      <div class="col-md-6 inputGroupContainer">
                            <label>Broker Fee</label>
                           <div class="input-group"><span class="input-group-addon"><i class="fas fa-percent"></i></span>
                           <input type="text" id="brokerfee" name="brokerfee" placeholder="Broker Fee" class="form-control" value="<?=$this->request->getPost('brokerfee')?>">

                        </div>
                        <span id="error_brokerfee" class="text-danger"></span>
                     </div>
                 </div>
                 <div class="form-group row">

                    <div class="col-md-6 inputGroupContainer">
                        <label>Exit</label>
                        <!--  <div class="input-group"><span class="input-group-addon">
                           <i class="fa fa-info"></i></span> <input type="text" id="exit_val" name="exit_val" class="form-control" placeholder="Exit" value="<?=$this->request->getPost('exit_val')?>" />

                         </div> -->
                         <div class="input-group">
                            <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-home"></i></span>
                            <select id="exit_val" name="exit_val" class="selectpicker form-control">
                              <option value="">--Select description--</option>
                              <?php foreach($exitvalArr as $key => $exitval){?>
                                <option value="<?php echo $key;?>" <?=$key==$this->request->getPost('exit_val') ? 'selected' : ''?> ><?php echo $exitval;?></option>
                              <?php }?>

                            </select>

                         </div>
                    </div>
                    <div class="col-md-6 inputGroupContainer">
                            <label>Notes</label>
                           <div class="input-group"><span class="input-group-addon"><i class="fa fa-sticky-note-o"></i></span>
                           <textarea id="note_text" name="note_text" placeholder="Note" class="form-control"><?=$this->request->getPost('note_text')?></textarea>

                        </div>
                     </div>

                 </div>
                 <div class="form-group row">

                  <div class="col-md-12 inputGroupContainer">
                  <label>Broker Fee</label>
                  <div class="input-group"><span class="input-group-addon"><i class="fas fa-percent"></i></span>
                  <input type="text" id="brokerfee" name="brokerfee" placeholder="Broker Fee" class="form-control hzaNumberFormatCls" value="1">
                  </div>
                  </div>
                </div>

                <?php

            }else if($allPost['purposeid']==2){
                ?>
                <!-- <div class="form-group row">
                        <div class="col-md-12 inputGroupContainer">
                          <label>Auction Purchase</label>
                          <div class="input-group"><span class="input-group-addon">
                            <i class="fa fa-home"></i></span>
                            <select id="auction_purchase" name="auction_purchase" class="selectpicker form-control">
                              <option value="">Select</option>
                              <option value="Yes"<?php if($this->request->getPost('auction_purchase') && $this->request->getPost('auction_purchase')=='Yes'){?> selected<?php }?>>Yes</option>
                              <option value="No"<?php if($this->request->getPost('auction_purchase') && $this->request->getPost('auction_purchase')=='No'){?> selected<?php }?>>No</option>

                            </select>

                          </div>
                        </div>
                    </div> -->
                    <div class="form-group row auctionfieldcls" style="display: none;">
                        <div class="col-md-12 inputGroupContainer">
                        <label>Date of completion</label>
                        <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-calendar"></i></span>
                           <input type="text" id="date_of_completion" name="date_of_completion" autocomplete="off" placeholder="Date of completion" class="form-control datepicker1" value="">

                        </div>
                      </div>
                  </div>

                  <div class="form-group row auctionfieldcls" style="display: none;">
                    <div class="col-md-12 inputGroupContainer">
                        <label>Link to property auction listing</label>
                        <div class="input-group"><span class="input-group-addon">
                          <i class="fa fa-home"></i></span>
                          <input type="text" id="property_auction_lising" name="property_auction_lising" placeholder="Link to property auction listing" class="form-control" value="">

                        </div>
                      </div>
                  </div>
              <div class="form-group row">
                     <div class="col-md-6 inputGroupContainer">
                          <label>Security</label>
                         <div class="input-group"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                         <select id="property_type" name="property_type" class="selectpicker form-control">
                            <option value="">--Select --</option>
                            <?php
                                           foreach ($propertyTypeArr as $key => $propertyType) {
                                    ?>
                                    <option value="<?php echo $key;?>"<?php if($this->request->getPost('property_type') && $this->request->getPost('property_type')==$key){?> selected<?php }?>><?php echo $propertyType;?></option>
                                    <?php }?>
                          </select>

                      </div>
                      </div>
                        <div class="col-md-6 inputGroupContainer">
                          <label>Loan Type</label>
                             <div class="input-group">
                                <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-home"></i></span>
                                <select id="loan_type" name="loan_type" class="selectpicker form-control">
                                  <option value="">--Select Product--</option>
                                  <?php foreach($loanTypeArr as $key => $loanType){?>
                                    <option value="<?php echo $key;?>" <?=$key==$this->request->getPost('loan_type') ? 'selected' : ''?> ><?php echo $loanType;?></option>
                                  <?php }?>

                                </select>

                             </div>
                             <span id="error_loan_type" class="text-danger"></span>
                      </div>

                 </div>
                 <h5>Numbers</h5>
                  <div class="form-group row">
                     <div class="col-md-6 inputGroupContainer">
                          <label>OMV</label>
                          <div class="input-group"><span class="input-group-addon">
                         <i class="fas fa-pound-sign"></i></span> <input type="text" id="omv" name="omv" class="form-control hzaNumberFormatCls ist_chrage_ltv_cls" placeholder="OMV" value="<?=number_format($this->request->getPost('omv'), 2)?>" />

                       </div>
                      </div>
                       <div class="col-md-6 inputGroupContainer">
                        <label>LTV</label>
                         <div class="input-group"><span class="input-group-addon">
                           <i class="fa fa-percent"></i></span><input type="text" placeholder="LTV Required" class="form-control" id="ist_crg_ltv_required" name="ltv_required" value="<?=@$this->request->getPost('ltv_required')?>" onkeypress="return isNumberKey(event)"></div>
                            <span id="error_ltv_required" class="text-danger"></span>
                      </div>

                 </div>



                 <div class="form-group row">
                        <div class="col-md-6 inputGroupContainer">
                            <label>Purchase Price</label>
                            <div class="input-group"><span class="input-group-addon">
                             <i class="fas fa-pound-sign"></i></span> <input type="text" id="ist_crg_purchase_price" name="purchase_price" class="form-control ist_chrage_ltv_cls hzaNumberFormatCls" placeholder="Purchase Price" value="<?=number_format($this->request->getPost('purchase_price'), 2)?>" />

                            </div>
                        </div>
                        <div class="col-md-6 inputGroupContainer hideonclickrefurbishment">
                            <label>Rental Per Annum</label>
                            <div class="input-group"><span class="input-group-addon">
                             <i class="fas fa-pound-sign"></i></span> <input type="text" id="rental_per_anum" name="rental_per_anum" class="form-control hzaNumberFormatCls" placeholder="Rental Per Annum" value="<?=number_format($this->request->getPost('rental_per_anum'), 2)?>" />

                            </div>
                        </div>

                 </div>

                <div class="form-group row">
                        <div class="col-md-6 inputGroupContainer">
                            <label>Deposit</label>
                           <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                           <input type="text" id="ist_crg_deposit" name="deposit" placeholder="Deposit" class="form-control ist_chrage_ltv_cls hzaNumberFormatCls" value="<?=number_format($this->request->getPost('deposit'), 2)?>">

                            </div>
                         </div>
                        <div class="col-md-6 inputGroupContainer hideonclickrefurbishment">
                           &nbsp;
                         </div>

                 </div>
                   <div class="form-group row">
                        <div class="col-md-6 inputGroupContainer">
                                <label>Gross Loan</label>
                               <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                               <input type="text" id="ist_crg_amount_required" name="amount_required" placeholder="Gross Loan" class="form-control ltgdvcls hzaNumberFormatCls" value="<?=number_format($this->request->getPost('amount_required'), 2)?>">

                            </div>
                         </div>
                         <div class="col-md-6 inputGroupContainer hideonclickrefurbishment">
                       &nbsp;
                      </div>
                 </div>

               <h5>Details</h5>

                 <div class="form-group row">

                      <div class="col-md-6 inputGroupContainer">
                        <label>Term</label>
                               <div class="input-group"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                               <select id="term_required" name="term_required" class="selectpicker form-control">
                                  <option value="">--Select --</option>
                                  <?php
                                    foreach ($termTypeArr as $key => $termType) {
                                  ?>
                                  <option value="<?php echo $key;?>"<?php if($this->request->getPost('term_required') && $this->request->getPost('term_required')==$key){?> selected<?php }?>><?php echo $termType;?></option>
                                  <?php }?>
                                </select>

                            </div>
                         </div>
                      <div class="col-md-6 inputGroupContainer">
                            <label>Broker Fee</label>
                           <div class="input-group"><span class="input-group-addon"><i class="fas fa-percent"></i></span>
                           <input type="text" id="brokerfee" name="brokerfee" placeholder="Broker Fee" class="form-control" value="<?=$this->request->getPost('brokerfee')?>">

                        </div>
                        <span id="error_brokerfee" class="text-danger"></span>
                     </div>
                 </div>
                 <div class="form-group row">

                    <div class="col-md-6 inputGroupContainer">
                        <label>Exit</label>
                        <!--  <div class="input-group"><span class="input-group-addon">
                           <i class="fa fa-info"></i></span> <input type="text" id="exit_val" name="exit_val" class="form-control" placeholder="Exit" value="<?=$this->request->getPost('exit_val')?>" />

                         </div> -->
                         <div class="input-group">
                            <span class="input-group-addon" style="max-width: 100%;"><i class="fa fa-home"></i></span>
                            <select id="exit_val" name="exit_val" class="selectpicker form-control">
                              <option value="">--Select description--</option>
                              <?php foreach($exitvalArr as $key => $exitval){?>
                                <option value="<?php echo $key;?>" <?=$key==$this->request->getPost('exit_val') ? 'selected' : ''?> ><?php echo $exitval;?></option>
                              <?php }?>

                            </select>

                         </div>
                    </div>
                    <div class="col-md-6 inputGroupContainer">
                            <label>Notes</label>
                           <div class="input-group"><span class="input-group-addon"><i class="fa fa-sticky-note-o"></i></span>
                           <textarea id="note_text" name="note_text" placeholder="Note" class="form-control"><?=$this->request->getPost('note_text')?></textarea>

                        </div>
                     </div>

                 </div>
                 <div class="form-group row">

                                  <div class="col-md-12 inputGroupContainer">
                                  <label>Broker Fee</label>
                                  <div class="input-group"><span class="input-group-addon"><i class="fas fa-percent"></i></span>
                                  <input type="text" id="brokerfee" name="brokerfee" placeholder="Broker Fee" class="form-control hzaNumberFormatCls" value="1">
                                  </div>
                                  </div>
                                </div>
                  <h5>History</h5>

                 <div class="form-group row">

                      <div class="col-md-6 inputGroupContainer">
                      <label>Date of purchase</label>
                       <div class="input-group"><span class="input-group-addon">
                         <i class="fa fa-calendar"></i></span><input type="text" placeholder="Date of Purchase" class="form-control" id="date_of_purchase" name="date_of_purchase" value="<?=@$this->request->getPost('date_of_purchase')?>"></div>
                          <span id="error_date_of_purchase" class="text-danger"></span>
                    </div>
                      <div class="col-md-6 inputGroupContainer">
                        <label>Monthly mortgage payment</label>
                           <div class="input-group"><span class="input-group-addon"><i class="fas fa-pound-sign"></i></span>
                             <input type="text" id="monthly_mortgage_pmt" name="monthly_mortgage_pmt" placeholder="Monthly mortgage payment" class="form-control hzaNumberFormatCls" value="<?=number_format($this->request->getPost('monthly_mortgage_pmt'), 2)?>">

                          </div>

                        </div>
                 </div>

                 <div class="form-group row">

                      <div class="col-md-6 inputGroupContainer">
                      <label>Original Purchase price</label>
                     <div class="input-group"><span class="input-group-addon">
                         <i class="fas fa-pound-sign"></i></span><input type="text" placeholder="Original Purchase price" class="form-control hzaNumberFormatCls" id="original_purchase_price" name="original_purchase_price" value="<?=number_format(@$this->request->getPost('original_purchase_price'), 2)?>" onkeypress="return isNumberKey(event)"></div>
                          <span id="error_original_purchase_price" class="text-danger"></span>
                    </div>
                      <div class="col-md-6 inputGroupContainer">
                        <label>Any arrears on the mortgage</label>
                         <div class="input-group"><span class="input-group-addon">
                           <i class="fa fa-info"></i></span><input type="text" placeholder="Any arrears on the mortgage" class="form-control" id="any_arrer_mortgage" name="any_arrer_mortgage" value="<?=@$this->request->getPost('any_arrer_mortgage')?>"></div>
                            <span id="error_any_arrer_mortgage" class="text-danger"></span>
                      </div>
                 </div>
                 <div class="form-group row">

                     <div class="col-md-6 inputGroupContainer">
                      <label>Name of 1st charge lender</label>
                     <div class="input-group"><span class="input-group-addon">
                         <i class="fa fa-info"></i></span><input type="text" placeholder="Name of 1st charge lender" class="form-control" id="name_ist_charge_lender" name="name_ist_charge_lender" value="<?=@$this->request->getPost('name_ist_charge_lender')?>" onkeypress="return isNumberKey(event)"></div>
                          <span id="error_name_ist_charge_lender" class="text-danger"></span>
                    </div>

                 </div>
                <?php

            }
        }
    }
    public function actiontasksaveAction(){
        // echo "<pre>"; print_r($this->request->getPost());die;
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            // echo "<pre>"; print_r($allPost);die;
            $allPost['c
            reated']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));


            $whenval             = str_replace("/", "-", $allPost['when_val']);
            $allPost['when_val'] = date("Y-m-d", strtotime($whenval));

            $varData      = $allPost['when_val']." ".$allPost['time_val']; //  .' + 60 minute'
            $newtimestamp = strtotime($varData);
            // $timeDate     = date('Y-m-d H:i:s', $newtimestamp);
            $allPost['time_val'] = date('H:i', $newtimestamp);
            $actionTask          = new ActionTask();

            $actiontaskSave=$actionTask->save($allPost);
            if($actiontaskSave){
                if($allPost['reminder_val']==1){
                    $notificationData['notification_by'] = $this->session->get('sessUserID');
                    $notificationData['notification_of'] = 'actionTaskNotice';
                    $notificationData['notification_id'] = $actionTask->id;
                    $notificationData['notification_on'] = date("Y-m-d");
                    $notificationData['notification_to'] = $allPost['assign_advisor'];

                    // echo "<pre>"; print_r($notificationData);die;
                    $notificationDb = new Notification();
                    $save = $notificationDb->save($notificationData);
                }

                echo 1;
            }else{
                echo 2;
            }

        }
        exit();
    }

    public function actiontaskeditAction(){
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));

            $whenval=str_replace("/", "-", $allPost['when_val']);
            $allPost['when_val']=date("Y-m-d", strtotime($whenval));
           //print_r($allPost); exit();
            $actionTask = new ActionTask();

            $actiontaskSave=$actionTask->save($allPost);
            if($actiontaskSave){
                echo 1;
            }else{
                echo 2;
            }

        }
        exit();
    }
    public function lenderdeleteAction($id=""){
        $response = new \Phalcon\Http\Response();
        if($id!='')
        {

            //echo $id; exit();
            $sql="delete from Lenders where id='".$id."'";
            $deleteUsers=$this->modelsManager->executeQuery($sql);
            if($deleteUsers)
            {
                $infoSql="delete from LenderInformation where lender_id='".$id."'";
                $deleteLenderInfoUsers=$this->modelsManager->executeQuery($infoSql);
                $this->flashSession->success('Well done!Lender Detail Deleted Successfully');
            }
            else
            {
                $this->flashSession->error('Lender Detail Deleting Failed');

            }
        }
        return $response->redirect('dashboard/lendermanagement');
    }
    public function getuserbylenderAction(){
        $responseArr=array('response' => 2, 'email' => '', 'contact_no' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $userDetail=Users::findFirst(array("conditions" => "id=".$allPost['lender_id']));
            $responseArr=array('response' => 1, 'email' => $userDetail->email_id, 'contact_no' => $userDetail->contact_no);
        }
        echo json_encode($responseArr);
        exit();
    }
    public function actiontaskdetailAction(){
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
             $actionTaskRes=ActionTask::find(array('conditions' => "id=".$allPost['actiontaskid']."", 'order' => "id asc", 'limit' => 1));
             if(count($actionTaskRes)){
                $clientname="";
                $userDiv='';
                $actionTaskResult=$actionTaskRes[0];
                $actionArr=array(1 => 'Call back', 2 => 'Follow up');
                $reminderArr=array(1 => "Yes", 2 => "No");
                 $assignAdvisorDetail=Users::findFirst(array('conditions' => "id=".$actionTaskResult->assign_advisor));
                 if($actionTaskResult->lead_id!=''){
                     $enquirydetails=Enquiry::find(array('conditions' => "id=".$actionTaskResult->lead_id, 'limit' => 1));
                     if(count($enquirydetails)>0){
                        $enquirydetail=$enquirydetails[0];
                        $leadAppDetail=LeadApplication::find(array('conditions' => "lead_id=".$enquirydetail->id, 'limit' => 1));
                         if(count($leadAppDetail)>0){
                            $nameArr=explode(":::", $leadAppDetail[0]->pd_fullname);
                            $clientname=stripslashes($nameArr[0]);
                          }else{
                            if($leadResult->borrower_name!=''){
                              $clientname=$leadResult->borrower_name;
                            }else if($leadResult->first_name!=''){
                              $clientname=stripslashes($leadResult->first_name." ".$leadResult->last_name);
                            }else{
                              $clientname="";
                            }
                          }
                     }
                 }else if($actionTaskResult->abi_id!=''){
                    $barberabiDetail=BarberAbi::findFirst(array('conditions' => "id=".$actionTaskResult->abi_id, 'limit' => 1));
                    $userDiv='<tr>
                        <td><strong>ABI</strong></td>
                        <td><a href="'.BASEURL.'barberabi/detail/'.$actionTaskResult->abi_id.'" target="_blank">'.stripslashes($barberabiDetail->first_name." ".$barberabiDetail->last_name).'</a></td>
                      </tr>';

                 }
                 if($clientname!=''){
                    $userDiv='<tr>
                        <td><strong>Lead</strong></td>
                        <td><a href="'.BASEURL.'dashboard/enquirydetail/'.$actionTaskResult->lead_id.'" target="_blank">'.$clientname.'</a></td>
                      </tr>';
                 }
                 else
                 {
                    $userDiv='<tr>
                        <td><strong>Lead Name</strong></td>
                        <td>N/A (<a href="'.BASEURL.'dashboard/enquirydetail/'.$actionTaskResult->lead_id.'" target="_blank">Lead Link</a>)</td>
                      </tr>';
                 }
                ?>

                <div class="table-responsive">
                 <table class="table table-bordered">
                    <tbody>
                      <tr>
                        <td><strong>Action</strong></td>
                        <td><?=$actionArr[$actionTaskResult->action_val]?></td>
                      </tr>
                      <tr>
                        <td><strong>When</strong></td>
                        <td><?=date("d/m/Y", strtotime($actionTaskResult->when_val))?></td>
                      </tr>
                      <tr>
                        <td><strong>Time</strong></td>
                        <td><?=date("h:i A", strtotime($actionTaskResult->time_val))?></td>
                      </tr>
                       <tr>
                        <td><strong>Reminder</strong></td>
                        <td><?=$reminderArr[$actionTaskResult->reminder_val]?></td>
                      </tr>
                      <tr>
                        <td><strong>Assign advisors</strong></td>
                        <td><?=stripslashes($assignAdvisorDetail->first_name)?></td>
                      </tr>
                       <tr>
                        <td><strong>Note</strong></td>
                        <td><?=stripslashes($actionTaskResult->action_note)?></td>
                      </tr>
                      <!-- <tr>
                        <td><strong>Lead</strong></td>
                        <td><a href="<?=BASEURL?>dashboard/enquirydetail/<?=$actionTaskResult->lead_id?>" target="_blank"><?=$clientname?></a></td>
                      </tr> -->
                      <?=$userDiv?>
                    </tbody>
                  </table>
              </div>
                <?php
             }
        }
    }
    public function actiontaskdeleteAction(){
        if($this->request->isPost()){
            $allPost = $this->request->getPost();
            if($allPost['actiontaskid']!=''){
                $actionTaskRes=$this->modelsManager->executeQuery("delete from ActionTask where id=".$allPost['actiontaskid']);
                if($actionTaskRes){
                    echo 1;
                }else{
                    echo 2;
                }
            }
            exit();
        }
    }



     public function actionedittaskdetailAction(){
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
              $actionTaskRes=ActionTask::find(array('conditions' => "id=".$allPost['actiontaskid']."", 'order' => "id asc", 'limit' => 1));
              if(count($actionTaskRes)>0){
                $_POST=$actionTaskRes[0]->toArray();

                //print_r($_POST); exit();
                //echo $this->request->getPost('when_val');
              } ?>
                <form action="" method="post" name="actioneditSubmitForm" id="actioneditSubmitForm" enctype="multipart/form-data">
                  <div class="workflowtaskdiv">
                    <div class="row">
                      <div class="col-md-6">
                        <div class="row">
                          <div class="col-md-12"> <label>Action</label></div>
                          <div class="col-md-12 details">
                            <select name="action_val" id="action_val" class="enternotesubmit">
                              <option value="">--Select--</option>

                              <option value="1"<?php if($this->request->getPost('action_val') && $this->request->getPost('action_val')==1){?> selected <?php }?>>Call Back</option>
                              <option value="2"<?php if($this->request->getPost('action_val') && $this->request->getPost('action_val')==2){?> selected <?php }?>>Follow Up</option>
                            </select>
                          </div>
                        </div>
                      </div>
                      <div class="col-md-6">
                        <div class="row">
                          <div class="col-md-12"> <label>When</label></div>
                          <div class="col-md-12 details">
                            <input type="text" name="when_val" id="when_val" class="enternotesubmit datepicker1" value="<?php echo date("d/m/Y", strtotime($this->request->getPost('when_val')))?>" autocomplete="off" />
                          </div>
                        </div>
                      </div>
                    </div>

                     <div class="row">
                      <div class="col-md-6">
                        <div class="row">
                          <div class="col-md-12"> <label>Time</label></div>
                          <div class="col-md-12 details">
                            <input type="text" name="time_val" id="time_val" class="enternotesubmit" value="<?php echo $this->request->getPost('time_val')?>" autocomplete="off" />
                          </div>
                        </div>
                      </div>
                      <div class="col-md-6">
                        <div class="row">
                          <div class="col-md-12"> <label>Reminder</label></div>
                          <div class="col-md-12 details">
                           <select name="reminder_val" id="reminder_val" class="enternotesubmit">
                              <option value="">--Select--</option>

                              <option value="1"<?php if($this->request->getPost('reminder_val') && $this->request->getPost('reminder_val')==1){?> selected <?php }?>>Yes</option>
                              <option value="2"<?php if($this->request->getPost('reminder_val') && $this->request->getPost('reminder_val')==2){?> selected <?php }?>>No</option>
                            </select>
                          </div>
                        </div>
                      </div>
                    </div>

                     <div class="row">
                      <div class="col-md-6">
                        <div class="row">
                          <div class="col-md-12"> <label>Assign advisors</label></div>
                          <div class="col-md-12 details">
                            <select name="assign_advisor" id="assign_advisor" class="enternotesubmit">
                              <option value="">--Select--</option>
                              <?php
                                $advisorRes=Users::find(array('conditions' => "is_active=1 and u_type=0 and email_id!='shiraz@hankzarihs.com'", 'order' => "first_name asc"));
                                if(count($advisorRes)>0){
                                  foreach($advisorRes as $advisorResult){ ?>
                                    <option value="<?=$advisorResult->id?>"<?php if($this->request->getPost('assign_advisor')){if($this->request->getPost('assign_advisor')==$advisorResult->id){?> selected <?php }}else if($leadDetail->assign_advisor==$advisorResult->id){?> selected <?php }?>><?=$advisorResult->first_name?></option>
                                    <?php
                                  }
                                }
                              ?>
                            </select>
                          </div>
                        </div>
                      </div>
                      <div class="col-md-6">
                        <div class="row">
                          <div class="col-md-12"> <label>Notes</label></div>
                          <div class="col-md-12 details">
                            <textarea name="action_note" id="action_note" class="enternotesubmit"><?=@$this->request->getPost('action_note')?></textarea>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div class="editbox">
                    <span id="showEditActionTaskMsg"></span>
                    <input type="hidden" name="id" value="<?=$this->request->getPost('id')?>">
                    <input type="hidden" name="lead_id" value="<?=$this->request->getPost('lead_id')?>">
                    <input type="hidden" id="action_lead_id" name="action_lead_id" value="<?=$this->request->getPost('lead_id')?>">
                    <button type="button" class="btn_send editActiontaskcls">Save</button>
                    <div class="clear"></div>
                  </div>
                </form>
                <link rel="stylesheet" type="text/css" href="<?=BASEURL?>frontfile/datepicker/css/bootstrap-datepicker.min.css">
                <script type="text/javascript" src="<?=BASEURL?>/frontfile/datepicker/js/bootstrap-datepicker.min.js"></script>

                <!-- <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.1/themes/base/jquery-ui.css">
                <script src="https://code.jquery.com/ui/1.13.1/jquery-ui.js"></script> -->

                <link  rel="stylesheet" type="text/css" href="<?=BASEURL?>frontfile/timepicker/timepicki.css">
                <script src="<?=BASEURL?>frontfile/timepicker/timepicki.js"></script>
                <script>
                $(".datepicker1").datepicker({
                    timepicker:false,
                    format:'dd/mm/yyyy',
                    changeYear: true,
                    changeMonth: true,
                    autoclose: 1,
                    todayHighlight: true,
                });
                $('#time_val').timepicki({
                    show_meridian:false,
                    min_hour_value:0,
                    max_hour_value:23,
                });
                </script>
                <?php }
    }
    public function getleadsourcesentuserAction(){
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $sendid=$allPost['sent_id'];

            $sentList=Dataleadsourcemail::findAll("select * from dataleadsourcemail where id=".$sendid." limit 1");


           if(count($sentList)>0){
            ?>
            <ul style="list-style-type: none;">

           <?php
           $sentResult=$sentList[0];
           $data_users=explode(",",$sentResult->data_users);
           if(count($data_users)>0){
                foreach($data_users as $dataid){
                  $datadetail=Datatab::findFirst(array('conditions' => "id='".$dataid."'", 'limit' => 1));
                  if($datadetail->first_name){
                  ?>
                  <li><?=stripslashes($datadetail->first_name." ".$datadetail->last_name)."[".$datadetail->data_email."]"?></li>
                  <?php
                 }
                }
            }
            ?>
           </ul>
            <?php
           }


        }
        exit();
    }
    public function quotecalculationAction($id=""){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }

        if($this->request->isPost()){
            $allPost=$this->request->getPost();
              $allPost['amount_required']=str_replace(",", "", $allPost['amount_required']);
                $allPost['purchase_price']=str_replace(",", "", $allPost['purchase_price']);
                $allPost['ltv']=str_replace(",", "", $allPost['ltv']);
                if((isset($allPost['product']) && $allPost['product']!='') && (isset($allPost['ltv']) && $allPost['ltv']!='')){
                $product=$allPost['product'];
               /* switch($product){
                    case 1 :
                    $productLtv=" and (ltv_ist_crg_bridge >=".$allPost['ltv'].")";
                    break;
                     case 2 :
                    $productLtv=" and (ltv_semi_ist_chrg_bridge >=".$allPost['ltv'].")";
                    break;
                     case 3 :
                    $productLtv=" and (ltv_comm_ist_charg_bridge >=".$allPost['ltv'].")";
                    break;
                     case 4 :
                    $productLtv=" and (ltv_resi_ist_light_refurb_bridge >=".$allPost['ltv'].")";
                    break;
                     case 5 :
                    $productLtv=" and (ltv_resi_ist_heavy_refurb_bridge >=".$allPost['ltv'].")";
                    break;
                     case 6 :
                    $productLtv=" and (ltv_resi_sec_charge_bridge >=".$allPost['ltv'].")";
                    break;
                    case 7 :
                    $productLtv=" and (ltv_semi_sec_charge_bridge >=".$allPost['ltv'].")";
                    break;
                     case 8 :
                    $productLtv=" and (ltv_comm_sec__charge_bridge >=".$allPost['ltv'].")";
                    break;
                     case 9 :
                    $productLtv=" and (land_with_planning >=".$allPost['ltv'].")";
                    break;
                     case 10 :
                    $productLtv=" and (land_without_planning >=".$allPost['ltv'].")";
                    break;
                    case 11 :
                    $productLtv=" and (ltgdv_development >=".$allPost['ltv'].")";
                    break;
                    case 12 :
                    $productLtv=" and (mezzanine>0 and mezzanine >=".$allPost['ltv'].")";
                    break;
                    case 13 :
                    $productLtv=" and (ltv_btl_mortgage >=".$allPost['ltv'].")";
                    break;
                    case 14 :
                    $productLtv=" and (ltv_btl_semi_commercial >=".$allPost['ltv'].")";
                    break;
                    case 15 :
                    $productLtv=" and (ltv_btl_commercial >=".$allPost['ltv'].")";
                    break;
                    case 16 :
                    $productLtv=" and (bridging_finance>=".$allPost['ltv'].")";
                    break;
                     case 17 :
                    $productLtv=" and (corporate_finance>=".$allPost['ltv'].")";
                    break;
                    case 18 :
                    $productLtv=" and (equity_funding >=".$allPost['ltv'].")";
                    break;
                    case 19 :
                    $productLtv=" and (leasing_asset_finance>=".$allPost['ltv'].")";
                    break;
                    case 20 :
                    $productLtv=" and (mezzanine_growth_debt_finance>=".$allPost['ltv'].")";
                    break;
                    case 21 :
                    $productLtv=" and (trade_finance>=".$allPost['ltv'].")";
                    break;
                    case 22 :
                    $productLtv=" and (turnarround_funding>=".$allPost['ltv'].")";
                    break;
                    default:
                    break;
                }*/
                switch($product){
                    case 1 :
                    $productLtv=" and (regi_bridge >=".$allPost['ltv'].")";
                    break;
                     case 2 :
                    $productLtv=" and (semi_comm_bridge >=".$allPost['ltv'].")";
                    break;
                     case 3 :
                    $productLtv=" and (comm_bridge >=".$allPost['ltv'].")";
                    break;
                     case 4 :
                    $productLtv=" and (refurb_bridge >=".$allPost['ltv'].")";
                    break;
                     case 5 :
                    $productLtv=" and (refurb_bridge >=".$allPost['ltv'].")";
                    break;
                     case 6 :
                    $productLtv=" and (regi_bridge >=".$allPost['ltv'].")";
                    break;
                    case 7 :
                    $productLtv=" and (semi_comm_bridge >=".$allPost['ltv'].")";
                    break;
                     case 8 :
                    $productLtv=" and (semi_comm_bridge >=".$allPost['ltv'].")";
                    break;
                     case 9 :
                    $productLtv=" and (land_bridge >=".$allPost['ltv'].")";
                    break;
                     case 10 :
                    $productLtv=" and (land_without_planning >=".$allPost['ltv'].")";
                    break;
                    case 11 :
                    $productLtv=" and (deve >=".$allPost['ltv'].")";
                    break;
                    case 12 :
                    $productLtv=" and (mezz >=".$allPost['ltv'].")";
                    break;
                    case 13 :
                    $productLtv=" and (ltv_btl_mortgage >=".$allPost['ltv'].")";
                    break;
                    case 14 :
                    $productLtv=" and (semi_comm_bridge >=".$allPost['ltv'].")";
                    break;
                    case 15 :
                    $productLtv=" and (comm_bridge >=".$allPost['ltv'].")";
                    break;
                    case 16 :
                    $productLtv=" and (bridging_finance>=".$allPost['ltv'].")";
                    break;
                     case 17 :
                    $productLtv=" and (corporate_finance>=".$allPost['ltv'].")";
                    break;
                    case 18 :
                    $productLtv=" and (equity_funding >=".$allPost['ltv'].")";
                    break;
                    case 19 :
                    $productLtv=" and (leasing_asset_finance>=".$allPost['ltv'].")";
                    break;
                    case 20 :
                    $productLtv=" and (mezzanine_growth_debt_finance>=".$allPost['ltv'].")";
                    break;
                    case 21 :
                    $productLtv=" and (trade_finance>=".$allPost['ltv'].")";
                    break;
                    case 22 :
                    $productLtv=" and (turnarround_funding>=".$allPost['ltv'].")";
                    break;
                    default:
                    break;
                }
            }


                $sql1="select * from Lenders where (max_loan>='".$allPost['amount_required']."' and min_loan<='".$allPost['amount_required']."')".$productLtv." limit 35";
                //echo $sql1; exit();
                $lenderList=$this->modelsManager->executeQuery($sql1);
                //echo count($lenderList); exit();
                $allPost['quoteid']=$id;
                //print_r($allPost); exit();
                $this->view->setVar('lenderList', $lenderList);
                $this->session->set('all_cla_data', $allPost);
                $_POST=$allPost;

        }else{
            if($id!=''){
                $quickQuoteDetail=QuickQuote::find(array('conditions' => "id=".$id, 'limit' => 1));
                if(count($quickQuoteDetail)>0){
                    $_POST=$quickQuoteDetail[0]->toArray();
                    $_POST['quoteid']=$_POST['id'];
                    $allPost=$_POST;
                     if((isset($allPost['product']) && $allPost['product']!='') && (isset($allPost['ltv']) && $allPost['ltv']!='')){
                $product=$allPost['product'];
                switch($product){
                    case 1 :
                    $productLtv=" and (ltv_ist_crg_bridge >=".$allPost['ltv'].")";
                    break;
                     case 2 :
                    $productLtv=" and (ltv_semi_ist_chrg_bridge >=".$allPost['ltv'].")";
                    break;
                     case 3 :
                    $productLtv=" and (ltv_comm_ist_charg_bridge >=".$allPost['ltv'].")";
                    break;
                     case 4 :
                    $productLtv=" and (ltv_resi_ist_light_refurb_bridge >=".$allPost['ltv'].")";
                    break;
                     case 5 :
                    $productLtv=" and (ltv_resi_ist_heavy_refurb_bridge >=".$allPost['ltv'].")";
                    break;
                     case 6 :
                    $productLtv=" and (ltv_resi_sec_charge_bridge >=".$allPost['ltv'].")";
                    break;
                    case 7 :
                    $productLtv=" and (ltv_semi_sec_charge_bridge >=".$allPost['ltv'].")";
                    break;
                     case 8 :
                    $productLtv=" and (ltv_comm_sec__charge_bridge >=".$allPost['ltv'].")";
                    break;
                     case 9 :
                    $productLtv=" and (land_with_planning >=".$allPost['ltv'].")";
                    break;
                     case 10 :
                    $productLtv=" and (land_without_planning >=".$allPost['ltv'].")";
                    break;
                    case 11 :
                    $productLtv=" and (ltgdv_development >=".$allPost['ltv'].")";
                    break;
                    case 12 :
                    $productLtv=" and (mezzanine>0 and mezzanine >=".$allPost['ltv'].")";
                    break;
                    case 13 :
                    $productLtv=" and (ltv_btl_mortgage >=".$allPost['ltv'].")";
                    break;
                    case 14 :
                    $productLtv=" and (ltv_btl_semi_commercial >=".$allPost['ltv'].")";
                    break;
                    case 15 :
                    $productLtv=" and (ltv_btl_commercial >=".$allPost['ltv'].")";
                    break;
                    case 16 :
                    $productLtv=" and (bridging_finance>=".$allPost['ltv'].")";
                    break;
                     case 17 :
                    $productLtv=" and (corporate_finance>=".$allPost['ltv'].")";
                    break;
                    case 18 :
                    $productLtv=" and (equity_funding >=".$allPost['ltv'].")";
                    break;
                    case 19 :
                    $productLtv=" and (leasing_asset_finance>=".$allPost['ltv'].")";
                    break;
                    case 20 :
                    $productLtv=" and (mezzanine_growth_debt_finance>=".$allPost['ltv'].")";
                    break;
                    case 21 :
                    $productLtv=" and (trade_finance>=".$allPost['ltv'].")";
                    break;
                    case 22 :
                    $productLtv=" and (turnarround_funding>=".$allPost['ltv'].")";
                    break;
                    default:
                    break;
                }
            }
                    if($allPost['amount_required']>0){
                     $sql1="select * from Lenders where (max_loan>='".$allPost['amount_required']."' and min_loan<='".$allPost['amount_required']."')".$productLtv." limit 35";
                    //echo $sql1; exit();
                    $lenderList=$this->modelsManager->executeQuery($sql1);
                }else{
                    $lenderList=array();
                }
                    //echo count($lenderList); exit();
                    $this->view->setVar('lenderList', $lenderList);
                    $this->session->set('all_cla_data', $allPost);
                }
            }
        }
    }

    public function quotecalculationsubmitAction(){
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if($allPost['submitclickfrom']==1){


                $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $chkQuote=QuickQuote::find(array('conditions' => "id='".$allPost['quoteid']."'", 'limit' => 1));
                if(count($chkQuote)>0){
                    //echo 1111;
                    $allPost['id']=$chkQuote[0]->id;
                    $allPost['created']=$chkQuote[0]->created;
                }else{
                    $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                }
                $allPost['quote_form']=1;
                $allPost['amount_required']=str_replace(",", "", $allPost['amount_required']);
                $allPost['purchase_price']=str_replace(",", "", $allPost['purchase_price']);
                $allPost['ltv']=str_replace(",", "", $allPost['ltv']);

                //print_r($allPost);exit();
                $quickQuoteDB= new QuickQuote();
                $saveData=$quickQuoteDB->save($allPost);
                if($saveData){
                    //=======Save track report========
                    if(isset($allPost['id'])){
                        $trackData['track_for']='quoteCalculationEdit';
                    }else{
                        $trackData['track_for']='quoteCalculationAdd';
                    }
                    $trackData['userid']=$this->session->get('sessUserID');
                    $trackData['track_save_id']=$quickQuoteDB->id;
                    $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                    $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                    $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $trackClickSave = new TrackClickSave();
                    $saveTrack=$trackClickSave->save($trackData);
                    //=======Save track report End========

                    $quickquoteid=$quickQuoteDB->id;
                    $this->modelsManager->executeQuery("delete from QuickquoteDetails where quickquoteid='".$quickquoteid."'");
                    $quoteData['quickquoteid']=$quickquoteid;
                    if(isset($allPost['lendergetid']) && !empty($allPost['lendergetid'])){
                        foreach($allPost['lendergetid'] as $index => $lendersingid){
                            $chkDetail=QuickquoteDetails::find(array(
                            'conditions' => "quickquoteid='".$quickquoteid."' and lender_id='".$lendersingid."'",
                            'limit' => 1
                            ));
                            if(count($chkDetail)>0){
                                $quoteData['id']=$chkDetail[0]->id;
                                $quoteData['created']=$chkDetail[0]->created;
                                $quoteData['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            }else{
                                $quoteData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            }
                            $fieldIndex=$index+1;
                            $quoteData['lender_id']=$lendersingid;
                            $quoteData['gross_loan']=str_replace(",", "", $allPost['grossLoan'.$fieldIndex]);
                            $quoteData['gross_ltv']=str_replace(",", "", $allPost['grossLtv'.$fieldIndex]);
                            /*$quoteData['lender_fee']=$allPost['lenderFee'.$fieldIndex];
                            $quoteData['brokerfee']=$allPost['brokerfee'.$fieldIndex];*/
                            $quoteData['product']=$allPost['product'.$fieldIndex];
                            $quoteData['purchase']=str_replace(",", "", $allPost['purchase'.$fieldIndex]);
                            $quoteData['ratepermonth']=str_replace(",", "", $allPost['ratepermonth'.$fieldIndex]);

                            $quoteData['ratepermonth']=str_replace(",", "", $allPost['ratepermonth'.$fieldIndex]);
                            $quoteData['rateperanum']=str_replace(",", "", $allPost['rateperanum'.$fieldIndex]);
                            $quoteData['term_required']=str_replace(",", "", $allPost['term_required'.$fieldIndex]);
                            $quoteData['termval']=str_replace(",", "", $allPost['termval'.$fieldIndex]);
                            $quoteData['costpermonth']=str_replace(",", "", $allPost['costpermonth'.$fieldIndex]);
                            $quoteData['costpertheterm']=str_replace(",", "", $allPost['costpertheterm'.$fieldIndex]);
                            $quoteData['in_per']=str_replace(",", "", $allPost['in_per'.$fieldIndex]);
                            $quoteData['in_val']=str_replace(",", "", $allPost['in_val'.$fieldIndex]);
                            $quoteData['broker_per']=str_replace(",", "", $allPost['broker_per'.$fieldIndex]);
                            $quoteData['broker_val']=str_replace(",", "", $allPost['broker_val'.$fieldIndex]);

                            $quoteData['net_loan_if_serviced']=str_replace(",", "", $allPost['net_loan_if_serviced'.$fieldIndex]);
                            $quoteData['net_ltv_serviced']=str_replace(",", "", $allPost['net_ltv_serviced'.$fieldIndex]);
                            $quoteData['net_loan_if_deducted']=str_replace(",", "", $allPost['net_loan_if_deducted'.$fieldIndex]);
                            $quoteData['net_ltv_deducted']=str_replace(",", "", $allPost['net_ltv_deducted'.$fieldIndex]);
                             $quoteData['legals']=$allPost['legals'.$fieldIndex];
                            $quoteData['valuation']=$allPost['quote_valuation'.$fieldIndex];
                            $quoteData['adminval']=$allPost['adminval'.$fieldIndex];
                            $quoteData['exit_fee']=$allPost['exit_fee'.$fieldIndex];

                            $quoteData['interestedCalculated']=$allPost['interestedCalculated'.$fieldIndex];



                            $QuickquoteDetails= new QuickquoteDetails();
                            $save=$QuickquoteDetails->save($quoteData);
                        }

                    }
                    echo 1;
                    $this->flashSession->success("Quote Calculation saved Successfully");
                    exit();

                }
               //$this->session->set('all_cla_data', $allPost);


            }

        }
        echo 2; exit();
    }
    public function quotecalculationlistAction(){
         $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        //===========pagination===========
        $paged=$this->dispatcher->getParam("paged");
        $page = (int) (!isset($paged) ? 1 : $paged);
        $page = ($page == 0 ? 1 : $page);
        $perpage =20;
        $startpoint = ($page * $perpage) - $perpage;
        $totrecord=QuickQuote::findAll("select quick_quote.* from quick_quote where quote_form=1 order by id desc");
        $quoteRes=QuickQuote::findAll("select quick_quote.* from quick_quote where quote_form=1 order by id desc limit ".$startpoint.", ".$perpage);
        $this->view->setVar('quoteRes', $quoteRes);
        $this->view->setVar('totrecord', count($totrecord));
        $this->view->setVar('perpage', $perpage);
        $this->view->setVar('paged', $paged);
        $this->view->setVar('startpoint', $startpoint);
    }
    public function quotecalculationdeleteAction($id=""){
        $response = new \Phalcon\Http\Response();
        if($id!=''){
            $deleteQuote=$this->modelsManager->executeQuery("delete from QuickQuote where id=".$id);
            if($deleteQuote){
                $deleteDetail=$this->modelsManager->executeQuery("delete from QuickquoteDetails where quickquoteid=".$id);
                $this->flashSession->success("Quick Quote deleted successfully.");
            }else{
                $this->flashSession->error("Quick Quote deleting failed.");
            }
        }
        return $response->redirect("dashboard/quotecalculationlist");
    }

     public function quickquotecaldeleteAction(){
        $sucMsg=0;
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if(isset($allPost['enqChk']) && !empty($allPost['enqChk'])){
                foreach($allPost['enqChk'] as $singLeadid){
                    $deleteQuote=$this->modelsManager->executeQuery("delete from QuickQuote where id=".$singLeadid);
                    if($deleteQuote){
                        $deleteDetail=$this->modelsManager->executeQuery("delete from QuickquoteDetails where quickquoteid=".$singLeadid);
                        $sucMsg=1;
                    }else{
                        $this->flashSession->error("Quick Quote deleting failed.");
                    }
                }
            }
        }
        if($sucMsg==1){
            echo 1;
        }else{
            echo 2;
        }
        exit();
    }

    /**
    * Background Action To manage development of background page
    * Action Name: backgroundAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 25-03-2020
    **/
    public function backgroundAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if(!$this->session->has('enquirySessID')){
            return $response->redirect("dashboard/enquiry");
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

                $allPost['id']=$this->session->get('enquirySessID');

               $getData=array();
                $chkBackground=Enquiry::find(array('conditions' => "id='".$allPost['id']."'", 'limit' => 1));
                //echo "<pre>";print_r($chkQuote->toArray());exit;
                if(count($chkBackground)>0){
                    //$getData=$chkQuote[0]->toArray();
                    $getData=array_merge($chkBackground[0]->toArray(),$allPost);
                    $getData['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));

                    $getData['total_value']=str_replace(",", "", $getData['total_value']);
                    $getData['balance_outstanding']=str_replace(",", "", $getData['balance_outstanding']);
                    $getData['net_income']=str_replace(",", "", $getData['net_income']);


                    $enquiryDB= new Enquiry();
                    $saveData=$enquiryDB->save($getData);
                    //echo $saveData;exit;
                    if($saveData){
                        //echo 123;exit;
                        $factfindEnquirySection= FactfindSection::find(array("conditions"=>"section=3 and sub_section=2",));
                        $enquiryID=$enquiryDB->id;
                        if(count($factfindEnquirySection)>0)
                        {
                            foreach($factfindEnquirySection as $factfindEnquirySectionDet){
                                $customFields=CustomFields::find(array('conditions'=>'factfind_id="'.$factfindEnquirySectionDet->id.'"',"order" => "order_no asc",));
                                if(count($customFields)>0)
                                {
                                    $this->modelsManager->executeQuery("delete from EnquiryAdditional where factfind_id='".$factfindEnquirySectionDet->id."'");
                                    foreach($customFields as $customFieldsDet)
                                    {
                                        $enqAddObj=new EnquiryAdditional();
                                        $enqAddObj->enquiry_id=$enquiryID;
                                        $enqAddObj->factfind_id=$factfindEnquirySectionDet->id;
                                        $enqAddObj->customfield_id=$customFieldsDet->id;
                                        $enqAddObj->field_value=$allPost[$customFieldsDet->name_attribute];
                                        $enqAddObj->created=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                        $enqAddObj->modified=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                        $enqAddObj->save();

                                    }

                                }


                            }
                        }

                       // $newquoteData["modified"]=date("Y-m-d H:i:s", strtotime("+60 minutes"));

                        //=======Save track report========
                        if(isset($getData['id'])){
                            $trackData['track_for']='backgroundEdit';
                        }else{
                            $trackData['track_for']='backgroundAdd';
                        }
                        $trackData['userid']=$this->session->get('sessUserID');
                        $trackData['track_save_id']=$enquiryDB->id;
                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);
                    //=======Save track report End========
                    }
                    //return $response->redirect('dashboard/applicant');
                    if($getData['quote_charge']!=2){
                        return $response->redirect('dashboard/experince');
                    }else{
                        return $response->redirect('dashboard/credithistory');
                    }

                }
                //echo "<pre>";print_r($getData);exit;

            //}

        }else{
            if($this->session->has('enquirySessID')){

                    $enquiryID=$this->session->get('enquirySessID');
                    $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
                    $_POST=$enquiryDetails;
            }
        }
    }

    /**
    * Edit Background Action To manage development of background page
    * Action Name: editbackgroundAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 25-03-2020
    **/
    public function editbackgroundAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

                $allPost['id']=$allPost['lead_id'];

               $getData=array();
                $chkBackground=Enquiry::find(array('conditions' => "id='".$allPost['id']."'", 'limit' => 1));
                //echo "<pre>";print_r($chkQuote->toArray());exit;
                if(count($chkBackground)>0){
                    //$getData=$chkQuote[0]->toArray();
                    $getData=array_merge($chkBackground[0]->toArray(),$allPost);
                    $getData['modified']            = date("Y-m-d H:i:s", strtotime("+60 minutes"));

                    $getData['total_value']         = str_replace(",", "", $getData['total_value']);
                    $getData['balance_outstanding'] = str_replace(",", "", $getData['balance_outstanding']);
                    $getData['net_income']          = str_replace(",", "", $getData['net_income']);


                    $enquiryDB= new Enquiry();
                    $saveData=$enquiryDB->save($getData);
                    //echo $saveData;exit;
                    if($saveData){
                        //echo 123;exit;


                       // $newquoteData["modified"]=date("Y-m-d H:i:s", strtotime("+60 minutes"));

                        //=======Save track report========
                        if(isset($getData['id'])){
                            $trackData['track_for']='backgroundEdit';
                        }else{
                            $trackData['track_for']='backgroundAdd';
                        }
                        $trackData['userid']          = $this->session->get('sessUserID');
                        $trackData['track_save_id']   = $enquiryDB->id;
                        $trackData['server_detail']   = $_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']       = $_SERVER['REMOTE_ADDR'];
                        $trackData['created']         = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);
                    //=======Save track report End========
                        echo 1;
                    }else{
                        echo 2;
                    }
                }else{
                    echo 3;
                }

                //echo "<pre>";print_r($getData);exit;

            //}

        }
        exit();
    }

    /**
    * Edit Background Action To manage development of background page
    * Action Name: editbackgroundAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 25-03-2020
    **/
    public function editsourceofdepositAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

                $allPost['id']=$allPost['lead_id'];

               $getData=array();
                $chkSourceofDeposit=Enquiry::find(array('conditions' => "id='".$allPost['id']."'", 'limit' => 1));
                //echo "<pre>";print_r($chkQuote->toArray());exit;
                if(count($chkSourceofDeposit)>0){
                    //$getData=$chkQuote[0]->toArray();
                    $getData=array_merge($chkSourceofDeposit[0]->toArray(),$allPost);
                    $getData['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));

                    $getData["purchase_price"]=str_replace(",", "", $allPost["purchase_price"]);

                    $getData["amount_required"]=str_replace(",", "", $allPost["amount_required"]);

                    $getData["amount"]=str_replace(",", "", $allPost["amount"]);
                    $getData["gift_amount"]=str_replace(",", "", $allPost["gift_amount"]);
                    $getData["source_loan_amount"]=str_replace(",", "", $allPost["source_loan_amount"]);
                    $getData["monthly_payment"]=str_replace(",", "", $allPost["monthly_payment"]);


                    $enquiryDB= new Enquiry();
                    $saveData=$enquiryDB->save($getData);
                    //echo $saveData;exit;
                    if($saveData){
                        //echo 123;exit;


                       // $newquoteData["modified"]=date("Y-m-d H:i:s", strtotime("+60 minutes"));

                        //=======Save track report========
                        if(isset($getData['id'])){
                            $trackData['track_for']='backgroundEdit';
                        }else{
                            $trackData['track_for']='backgroundAdd';
                        }
                        $trackData['userid']=$this->session->get('sessUserID');
                        $trackData['track_save_id']=$enquiryDB->id;
                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);
                    //=======Save track report End========
                        echo 1;
                    }else{
                        echo 2;
                    }
                }else{
                    echo 3;
                }

                //echo "<pre>";print_r($getData);exit;

            //}

        }
        exit();
    }

    public function developmentappraisalAction($calculateId=""){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if(!$this->session->has('enquirySessID')){
            return $response->redirect("dashboard/enquiry");
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            $allPost['lead_id']=$this->session->get('enquirySessID');
            $allPost['is_enquiry_step']=1;
           //echo "<pre>"; print_r($allPost); exit();
                $developmentCalculationDb= new DevelopmentCalculation();
                $save=$developmentCalculationDb->save($allPost);
                if($save){
                    //$this->flashSession->success("Calculation Saved successfully.");

                        $leadiid=$this->session->get('enquirySessID');
                        //return $response->redirect('dashboard/developmentcalculation/'.$developmentCalculationDb->id.'/?lead_id='.$leadiid);
                        return $response->redirect('dashboard/projectdetail');


                }else{
                    $this->flashSession->error("Something is wrong!");
                }
        }

        $leadId=$this->session->get('enquirySessID');
            $developmentCal=DevelopmentCalculation::find(array('conditions'=>"lead_id=".$leadId." and is_enquiry_step=1", 'limit' => 1))->toArray();
            if(count($developmentCal)>0){


                if($this->request->isPost() && $this->request->getPost('clearval')==1 ){
                    unset($_POST);
                }else if($this->request->isPost() && $this->request->getPost('clearval')==0 ){
                    $_POST=$developmentCal[0];
                }else{
                    $_POST=$developmentCal[0];
                }
            }else{
                    $enquiryID=$this->session->get('enquirySessID');
                    $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
                    $_POST=$enquiryDetails;
                    $_POST['towards_bild']=$enquiryDetails['required_toward_build'];
                    $_POST['day_one_debt_pur']=$enquiryDetails['require_day_one_purchase'];
                    $_POST['current_value']=$enquiryDetails['purchase_price'];
                    $_POST['finance_term_in_month']=$enquiryDetails['term_required'];
                    $_POST['etltgdv']=$enquiryDetails['loan_to_gdv_required'];
                    $_POST['finance_net_ltgdv']=$enquiryDetails['loan_to_gdv_required'];
                    $_POST['total_cost']=$enquiryDetails['cost_of_work'];
                    $_POST['finance_gross_loan']=$enquiryDetails['amount_required'];





            }

    }

    public function appraisalsaveAction(){
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            //$allPost['lead_id']=$this->session->get('enquirySessID');
            if($allPost['lead_id']!=''){
                $allPost['is_enquiry_step']=1;

                $developmentapppraisalDetail=DevelopmentCalculation::find(array('conditions'=>"lead_id=".$allPost['lead_id']." and is_enquiry_step=1", 'limit' => 1))->toArray();
                if(count($developmentapppraisalDetail)>0){
                    $allPost['created']=$developmentapppraisalDetail[0]['created'];
                    $allPost['id']=$developmentapppraisalDetail[0]['id'];
                }else{
                    $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                }
                //echo "<pre>"; print_r($allPost); exit();
                $developmentCalculationDb= new DevelopmentCalculation();
                $save=$developmentCalculationDb->save($allPost);
                if($save){
                    //$this->flashSession->success("Calculation Saved successfully.");

                        $leadiid=$this->session->get('enquirySessID');
                        //return $response->redirect('dashboard/developmentcalculation/'.$developmentCalculationDb->id.'/?lead_id='.$leadiid);
                        //return $response->redirect('dashboard/projectdetail');
                        echo 1;


                }else{
                    //$this->flashSession->error("Something is wrong!");
                    echo 2;
                }
            }

        }
        exit();
    }

    public function assignleadtosmsAction($leadid=""){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if($leadid==''){
            return $response->redirect('/enquiry');
        }
        $leadDetail=Enquiry::findFirst(array('conditions' => "id='".$leadid."'"));
        $this->view->setVar('leadDetail', $leadDetail);
        global $client;
        if($this->request->isPost()==true){
            $date=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            $allPost=$this->request->getPost();

            $result = $client->contacts->create(
                array(
                    'firstName' => $allPost['firstName'],
                    'lastName' => $allPost['lastName'],
                    "phone" => $allPost['phone'],
                    "email" => $allPost['email'],
                    "companyName" => $allPost['companyName'],
                    "lists" => implode(",", $allPost['lists']),
                    "favorited" => false,
                    "blocked" => false,
                    "type" => 1,
                    "local" => 0,
                    "country" => $allPost['country']
                )
            );
            if($result['id']){
                $this->flashSession->success("Contact Created Successfully.");
                $this->modelsManager->executeQuery("update Enquiry set is_sms_contact=1, contact_id='".$result['id']."' where id=".$leadid);
                return $response->redirect('dashboard/enquirydetail/'.$leadid);
            }else{
                $this->flashSession->error($result['message']);
            }
        }
        $smslists=$client->lists->getList();
        $this->view->setVar('smslists', $smslists);


    }
    public function leadsendsmsAction($leadid=''){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if($leadid==''){
            return $response->redirect('/enquiry');
        }
        global $client;
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $data=array();
            if($allPost['phones']!=''){
                $data['phones']=$allPost['phones'];
            }
            if($allPost['froms']!=''){
                $data['from']=$allPost['froms'];
            }
            if($allPost['template_id']!=''){
                $data['templateId']=$allPost['template_id'];
            }
            if(isset($allPost['contacts']) && count($allPost['contacts'])){
                $data['contacts']=implode(",", $allPost['contacts']);
            }
            if(isset($allPost['lists']) && count($allPost['lists'])){
                $data['lists']=implode(",", $allPost['lists']);
            }
            if($allPost['smsText']!=''){
                $data['text']=$allPost['smsText'];
            }
            //print_r($allPost);
            //print_r($data); exit();
            $result = $client->messages->create($data);
            //print_r($result); exit();
            if($result['id']){
                $smsData['lead_id']=$leadid;
                $smsData['sms_id']=$result['sessionId'];
                $smsData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $sendSmsDb=new SendSms();
                $save=$sendSmsDb->save($smsData);
                $this->flashSession->success('SMS Sent Successfully.');
                //return $response->redirect('dashboard/enquirydetail')
            }else{
                $this->flashSession->success('SMS Sending Failed.');
            }
        }
        $leadDetail=Enquiry::findFirst(array('conditions' => "id='".$leadid."'"));
        $this->view->setVar('leadDetail', $leadDetail);


        $contactDetail=array();
        if($leadDetail->contact_id>0){
            $contactDetail=$client->contacts->get($leadDetail->contact_id);

            //print_r($contactDetail);exit();

        }
        $this->view->setVar('contactDetail', $contactDetail);
        $templatesList=$client->templates->getList(
            array(
                'page' => 1,
                'limit' => 100
            )
        );
        $this->view->setVar('templatesList', $templatesList);
    }
    public function getsmsphonedataAction(){
        $responseArr=array('response' => 2, 'contentval' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $leadDetail=Enquiry::findFirst(array('conditions' => "id='".$allPost['lead_id']."'"));
            $content='';
            if($allPost['checkedVal']==1){
                global $client;
                $contactResults=$client->contacts->getList(
                    array(
                        'page' => 1,
                        'limit' => 100
                    )
                );
                if($contactResults['resources'] && count($contactResults['resources'])>0){

                    $content.='<div class="col-md-10 col-lg-10 col-sm-10 details">
                      <label for="To">Contacts</label>
                      <select name="contacts[]" id="contacts" multiple="multiple">
                          <option value="">Select Contact</option>';

                          foreach($contactResults['resources'] as $contactResult){

                            $content.='<option value="'.$contactResult['id'].'">'.trim(stripslashes($contactResult['firstName']." ".$contactResult['lastName'])).'</option>';
                          }

                      $content.='</select>
                      <span id="errmsgn" style="color: red;"></span>
                      
                    </div>';
                }
            }else if($allPost['checkedVal']==2){
                global $client;
                $listResults=$client->lists->getList(
                    array(
                        'page' => 1,
                        'limit' => 100
                    )
                );
                if($listResults['resources'] && count($listResults['resources'])>0){

                    $content.='<div class="col-md-10 col-lg-10 col-sm-10 details">
                      <label for="To">Contacts</label>
                      <select name="lists[]" id="lists" multiple="multiple">
                          <option value="">Select Contact</option>';

                          foreach($listResults['resources'] as $listResult){

                            $content.='<option value="'.$listResult['id'].'">'.stripslashes($listResult['name']).'</option>';
                          }

                      $content.='</select>
                      <span id="errmsgn" style="color: red;"></span>
                      
                    </div>';
                }
            }else if($allPost['checkedVal']==3){
                $content.='<div class="col-md-10 col-lg-10 col-sm-10 details">
                      <label for="To">Contacts</label>
                      <label for="To">Phones<small>(Add multiple phone no by comma(,) separator)</small></label>
                      <input type="text" name="phones" id="phones" value="">
                      <span id="errmsgn" style="color: red;"></span>
                      
                    </div>';
            }
            $responseArr=array('response' => 1, 'contentval' => $content);
        }

        echo json_encode($responseArr);
        exit();
    }

    public function databulkmailAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard/datatab');
        }
        $dataList=Datatab::find(array('conditions' => "is_active=1 and (not_send_mail=0 or not_send_mail='' or not_send_mail IS NULL)", "order" => "id desc"));
        //print_r($dataList); exit();
        //echo count($barbarAbiList); exit();
        if(count($dataList)>0){
            $fromUserID=$this->session->get('sessUserID');
            $toUserEmailArr=array();
            $toUserFiveEmailArr=array();
            $ccUserEmailArr=array();
            $bccUserEmailArr=array();
            $mysqlCon=mysqli_connect(host, username, password, dbname);
            foreach($dataList as $dataresult){

                $sessionID=rand(10, 1000000);
                $trackData['session_id']=$sessionID;
                $trackData['send_from']='DATA';
                $trackData['sending_type']='BluckMail';
                $trackData['advisor_id']=$this->session->get('sessUserID');

                 $siteAdmin = Sitesetting::findFirst(array("id=1"));

                //$advisorDetail=Users::findFirst(array('conditions' => "id='".$fromUserID."'"));

                $mailContent=file_get_contents(BASEURL."frontfile/email_template/cbilending.html");
                $mailContent = str_replace("£","&pound;",$mailContent);
                $mailContent = preg_replace('/[\x00-\x1F\x80-\xFF]/', '', $mailContent);

                $mailContent = str_replace("Â","",$mailContent);
                $mailContent = str_replace("ï»¿","",$mailContent);
                $mailSubject='CBILS is ending - Are you missing a trick?';

                //echo $mailContent; exit();
                $pdfAndVideoAttachArr=array();
                //$unsubscribeLink='<a href="'.BASEURL.'unsubscribemail/?actionof=bulkabi&sid='.base64_encode($insertid).'">Unsubscribe</a>';
                $unsubscribeLink='<a href="'.BASEURL.'unsubscribemail/?actionof=data&sid='.base64_encode($insertid).'">Unsubscribe</a>';
                $mailContent=str_replace('{unsubscribeLink}', $unsubscribeLink, $mailContent);
                $mailSubject=str_replace('{unsubscribeLink}', $unsubscribeLink, $mailSubject);

                $currdate=date("Y-m-d");
                $date = strtotime($currdate);
                $lastdate = strtotime("-6 day", $date);
                $startdate=date("Y-m-d", $lastdate);

                //$sixDaysInterval=date("Y-m-d", st)


                if($dataresult->data_email && filter_var($dataresult->data_email, FILTER_VALIDATE_EMAIL)){
                    //$chkSixDaysIntervals=DataBulkSendEmail::findAll("select * from data_bulk_send_email where find_in_set('".mysqli_real_escape_string($mysqlCon, $dataresult->data_email)."', to_user) and (date(created)>'".$startdate."' and date(created)<='".$currdate."') limit 1");

                    $chkSixDaysIntervals=DataBulkSendEmail::findAll("select * from data_bulk_send_email where to_user='".mysqli_real_escape_string($mysqlCon, $dataresult->data_email)."' and (date(created)>'".$startdate."' and date(created)<='".$currdate."') limit 1");

                    if(count($chkSixDaysIntervals)<=0){

                        if(strpos($dataresult->data_email,"gov.")!==false){
                            $trackData['send_user_id_type']='ID';
                            $trackData['user_id']=$dataresult->id;
                            $trackData['status']='FAILED';
                            $trackData['error_reason']='govtMail';
                        }else if(strpos($dataresult->data_email,"police.")!==false){
                            $trackData['send_user_id_type']='ID';
                            $trackData['user_id']=$dataresult->id;
                            $trackData['status']='FAILED';
                            $trackData['error_reason']='govtMail';

                        }else if(strpos($dataresult->data_email,"nhs.")!==false){
                            $trackData['send_user_id_type']='ID';
                            $trackData['user_id']=$dataresult->id;
                            $trackData['status']='FAILED';
                            $trackData['error_reason']='govtMail';
                        }else if(strpos($dataresult->data_email,"sch.")!==false){
                            $trackData['send_user_id_type']='ID';
                            $trackData['user_id']=$dataresult->id;
                            $trackData['status']='FAILED';
                            $trackData['error_reason']='govtMail';
                        }else if(strpos($dataresult->data_email,"ac.")!==false){
                            $trackData['send_user_id_type']='ID';
                            $trackData['user_id']=$dataresult->id;
                            $trackData['status']='FAILED';
                            $trackData['error_reason']='govtMail';
                        }else{
                            //array_push($toUserEmailArr, $dataresult->data_email);
                            $randomid=rand(10, 1000);
                            $mailContent.='<img src="https://www.google-analytics.com/collect?v=1&tid=UA-810265-7&cid='.$randomid.'&aip=1&t=event&ec=email&ea=open&dp=%2Femail%2Fdatabulkmail&dt=Data%20Bulk%20Mail:'.$dataresult->data_email.'">';

                            $sendmail=UIElements::sendEmail($dataresult->data_email,$mailSubject,$mailContent);
                            if($sendmail){
                                $trackData['send_user_id_type']='ID';
                                $trackData['user_id']=$dataresult->id;
                                $trackData['status']='SUCCESS';
                                $trackData['error_reason']='';
                            }else{
                                $trackData['send_user_id_type']='ID';
                                $trackData['user_id']=$dataresult->id;
                                $trackData['status']='FAILED';
                                $trackData['error_reason']='FailDelivery';
                            }
                            //array_push($toUserFiveEmailArr, $dataresult->data_email);
                            $allPost['status']=1;
                            $allPost['from_user']=$fromUserID;
                            $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $allPost['to_user']=$dataresult->data_email;

                             $sendMailDb= new DataBulkSendEmail();
                            $saveSendMail=$sendMailDb->save($allPost);


                        }
                    }else{
                        $trackData['send_user_id_type']='ID';
                        $trackData['user_id']=$dataresult->id;
                        $trackData['status']='FAILED';
                        $trackData['error_reason']='sent7day';
                    }
                }else{
                    $trackData['send_user_id_type']='ID';
                    $trackData['user_id']=$dataresult->id;
                    $trackData['status']='FAILED';
                    $trackData['error_reason']='InvalidAddress';
                }

                $trackData['track_on']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $trackMailReport= NEW TrackMailReport();
                $savetrack=$trackMailReport->save($trackData);

                /*if(count($toUserFiveEmailArr)==5){

                    array_push($toUserFiveEmailArr, 'chittas970@gmail.com');
                    $sentUmail =UIFront::sendEmailMultiple($toUserFiveEmailArr,$ccUserEmailArr,$bccUserEmailArr, $mailSubject, $mailContent,'shiraz.khan@hankzarihs.com', 'shiraz.khan@hankzarihs.com', 'Hank Zarihs Associates', $pdfAndVideoAttachArr);
                    $toUserFiveEmailArr=array();
                    echo 1;
                    print_r($toUserFiveEmailArr);
                    exit();
                }*/

            }

            mysqli_close($mysqlCon);

            $this->flashSession->success("Data Bulk Mail sent successfully.");
            return $response->redirect('dashboard/datatab');

            /*$allPost['status']=1;
            $allPost['from_user']=$fromUserID;
            $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            $allPost['to_user']=implode(',', $toUserEmailArr);

             $sendMailDb= new DataBulkSendEmail();
            $saveSendMail=$sendMailDb->save($allPost);
            if($saveSendMail){
                $insertid=$sendMailDb->id;
                //=======Save track report========
                $trackData['track_for']='data_bulk_send_mail';
                $trackData['userid']=$this->session->get('sessUserID');
                $trackData['track_save_id']=$insertid;
                $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $trackClickSave = new TrackClickSave();
                $saveTrack=$trackClickSave->save($trackData);
                //=======Save track report End========






                $this->flashSession->success("Data Bulk Mail sent successfully.");
                return $response->redirect('dashboard/datatab');

            }else{
                $this->flashSession->error("Message sending failed!");
                return $response->redirect('dashboard/datatab');
            }*/


        }else{
            $this->flashSession->error('Email Address not Found!');
            return $response->redirect('dashboard/datatab');
        }
        exit();
    }

    /**
    * Mail Track report Action To Manage HZA track mail report
    * Action Name: trackmailAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 09-01-2021
    **/
    public function trackmailAction()
    {
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('dashboard');
        }
        if(UIElements::bapCustUniNewAdvChk()==1){
            return $response->redirect('dashboard');
        }

        $sessionID=$this->session->get('sessUserID');
        $userDetail=Users::findFirst(array('conditions' => "id='".$sessionID."'"));
        if($userDetail->is_view_marketing_tab!=1){
             return $response->redirect('dashboard');
        }

        $joinArr=array();
        $whr=array();
        if($this->request->isGet()){
            $allGet=$this->request->get();
            if(isset($allGet['deletrecord']) && $allGet['deletrecord']!=''){
                $dateval=urldecode($allGet['deletrecord']);
                $delete=$this->modelsManager->executeQuery("delete from TrackMailReport where date(track_on)='".$dateval."'");
                if($delete){
                    $this->flashSession->success("Tracking record Deleted Successfully.");
                }else{
                   $this->flashSession->error("Tracking record Deleting Failed.");
                }
            }
            if(isset($allGet['session_id']) && $allGet['session_id']!=''){
                $session_id=$allGet['session_id'];
                array_push($whr, "session_id='".$session_id."'");
            }
            if(isset($allGet['send_from']) && $allGet['send_from']!=''){
                $send_from=$allGet['send_from'];
                array_push($whr, "send_from='".$send_from."'");
            }
            if(isset($allGet['sending_type']) && $allGet['sending_type']!=''){
                $sending_type=$allGet['sending_type'];
                array_push($whr, "sending_type='".$sending_type."'");
            }
        }
        $order="id desc";
        if(isset($allGet['sorting']) && $allGet['sorting']!=''){
            $order=urldecode($allGet['sorting']);

        }
        $where="";
        if(!empty($whr)){
            $where=" where ".implode(" and ", $whr);
        }
        $joinString="";
        if(!empty($joinArr)){
            $joinString=" ".implode(" ", $joinArr);
        }
        //===========pagination===========
        $paged=$this->dispatcher->getParam("paged");
        $page = (int) (!isset($paged) ? 1 : $paged);
        $page = ($page == 0 ? 1 : $page);
        if($this->request->get('pagination') && $this->request->get('pagination')!=''){
            $perpage =$this->request->get('pagination');
        }else{
            $perpage =100;
        }
        $startpoint = ($page * $perpage) - $perpage;

        $totrecord=TrackMailReport::findAll("select * from track_mail_report".$joinString.$where." order by ".$order);
        //echo "select * from track_mail_report".$joinString.$where." order by ".$order." limit ".$startpoint.", ".$perpage; exit();
        $trackMailResults=TrackMailReport::findAll("select * from track_mail_report".$joinString.$where." order by ".$order." limit ".$startpoint.", ".$perpage);

        //================================

        //$adminRes=AdminUsers::findByAll()->toArray();
        $this->view->setVar('trackMailResults', $trackMailResults);
        $this->view->setVar('totrecord', count($totrecord));
        $this->view->setVar('perpage', $perpage);
        $this->view->setVar('paged', $paged);
        $this->view->setVar('startpoint', $startpoint);
    }

     /**
    * Unsubscribe Track report Action To Manage HZA Unsubscribe track report
    * Action Name: trackunsubscribeAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 13-02-2023
    **/
    public function trackunsubscribeAction()
    {
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('dashboard');
        }
        if(UIElements::bapCustUniNewAdvChk()==1){
            return $response->redirect('dashboard');
        }
        $sessionID=$this->session->get('sessUserID');
        $userDetail=Users::findFirst(array('conditions' => "id='".$sessionID."'"));
        if($userDetail->is_view_marketing_tab!=1){
             return $response->redirect('dashboard');
        }
        $joinArr=array();
        $whr=array();
        if($this->request->isGet()){
            $allGet=$this->request->get();

            if(isset($allGet['searchtxt']) && $allGet['searchtxt']!=''){
                $searchtxt=$allGet['searchtxt'];
                array_push($whr, "email_id='".$searchtxt."'");
            }

        }
        $order="id desc";
        if(isset($allGet['sorting']) && $allGet['sorting']!=''){
            $order=urldecode($allGet['sorting']);

        }
        $where="";
        if(!empty($whr)){
            $where=" where ".implode(" and ", $whr);
        }
        $joinString="";
        if(!empty($joinArr)){
            $joinString=" ".implode(" ", $joinArr);
        }
        //===========pagination===========
        $paged=$this->dispatcher->getParam("paged");
        $page = (int) (!isset($paged) ? 1 : $paged);
        $page = ($page == 0 ? 1 : $page);
        if($this->request->get('pagination') && $this->request->get('pagination')!=''){
            $perpage =$this->request->get('pagination');
        }else{
            $perpage =100;
        }
        $startpoint = ($page * $perpage) - $perpage;


        $totrecord=AbiUnsubscribeEmailList::findAll("select * from abi_unsubscribe_email_list".$joinString.$where." order by ".$order);
        //echo "select * from track_mail_report".$joinString.$where." order by ".$order." limit ".$startpoint.", ".$perpage; exit();
        $trackUnsubscribeResults=AbiUnsubscribeEmailList::findAll("select * from abi_unsubscribe_email_list".$joinString.$where." order by ".$order." limit ".$startpoint.", ".$perpage);

        //================================

        //$adminRes=AdminUsers::findByAll()->toArray();
        $this->view->setVar('trackUnsubscribeResults', $trackUnsubscribeResults);
        $this->view->setVar('totrecord', count($totrecord));
        $this->view->setVar('perpage', $perpage);
        $this->view->setVar('paged', $paged);
        $this->view->setVar('startpoint', $startpoint);
    }

    /**
    * completeddeal Action To Manage HZA Completed Deals
    * Action Name: completeddealAction
    * Author By: Chitta Ranjan Sahoo
    * Created Date: 29-01-2021
    **/
    public function completeddealAction()
    {
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('dashboard');
        }
        if($this->session->has('dealeditredirect')){
            $this->session->remove('dealeditredirect');
        }
        if(UIElements::bapCustUniNewAdvChk()==1){
            return $response->redirect('dashboard');
        }
        $joinArr=array();
        $whr=array('is_active=1');
        if($this->request->isGet()){
            $allGet=$this->request->get();
            if(isset($allGet['deletrecord']) && $allGet['deletrecord']!=''){
                $dateval=urldecode($allGet['deletrecord']);
                $delete=$this->modelsManager->executeQuery("update CompletedDeals set is_active=3 where date(created)='".$dateval."'");
                if($delete){
                    $this->flashSession->success("Data Deleted Successfully.");
                }else{
                   $this->flashSession->error("Data Deleting Failed.");
                }
            }
            if(isset($allGet['searchtxt']) && $allGet['searchtxt']!=''){
                $srhtxt=$allGet['searchtxt'];
                array_push($whr, "(advisor = '".$srhtxt."' or borrower_entity like '%".$srhtxt."%' or source_of_lead = '".$srhtxt."' or lender_id like '%".$srhtxt."%' or product = '".$srhtxt."' or charge = '".$srhtxt."' or location like '%".$srhtxt."%' or email_id = '".$srhtxt."')");
            }
            if(isset($allGet['lead_source']) && $allGet['lead_source']!=''){
                $lead_source=$allGet['lead_source'];
                array_push($whr, "lead_source='".$lead_source."'");
            }
        }
        $order="id desc";
        if(isset($allGet['sorting']) && $allGet['sorting']!=''){
            $order=urldecode($allGet['sorting']);

        }
        $where="";
        if(!empty($whr)){
            $where=" where ".implode(" and ", $whr);
        }
        $joinString="";
        if(!empty($joinArr)){
            $joinString=" ".implode(" ", $joinArr);
        }
        //===========pagination===========
        $paged=$this->dispatcher->getParam("paged");
        $page = (int) (!isset($paged) ? 1 : $paged);
        $page = ($page == 0 ? 1 : $page);
        if($this->request->get('pagination') && $this->request->get('pagination')!=''){
            $perpage =$this->request->get('pagination');
        }else{
            $perpage =20;
        }
        $startpoint = ($page * $perpage) - $perpage;

        $totrecord=CompletedDeals::findAll("select * from completed_deals".$joinString.$where." order by ".$order);
        $completedDealResults=CompletedDeals::findAll("select * from completed_deals".$joinString.$where." order by ".$order." limit ".$startpoint.", ".$perpage);

        //================================

        //$adminRes=AdminUsers::findByAll()->toArray();
        $this->view->setVar('completedDealResults', $completedDealResults);
        $this->view->setVar('totrecord', count($totrecord));
        $this->view->setVar('perpage', $perpage);
        $this->view->setVar('paged', $paged);
        $this->view->setVar('startpoint', $startpoint);
    }

    /**
    * Completed Deals import Action To import Completed Deal
    * Action Name: dealimportAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 29-01-2021
    **/
    public function dealimportAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if($this->request->isPost()){
            if($this->request->hasFiles()== true)
            {
                //echo 123;exit;
                $baselocation='uploads/profileimg/';
                $arrfile=$this->request->getUploadedFiles();
                if(!empty($arrfile) && $arrfile[0]->getError()!=4)
                {
                    $file=$arrfile[0];
                    $filename=time().$file->getName();
                    $tmpName=$file->getTempName();
                    $handle = fopen($tmpName, "r");
                    $fcount=1;
                    while (($data = fgetcsv($handle, 0, ",")) !== FALSE) {
                        //print_r($data);exit();
                        if($fcount>1){
                            //print_r($data);exit();
                            //==========User Save===============
                            /*$lenderChk=Users::find(array('conditions' => "first_name like '%".$data[5]."%' and u_type=1", 'order' => "id asc", 'limit' => 1));
                            if(!empty($lenderChk) && count($lenderChk)>0){
                                $dealData['lender_id']=$lenderChk->id;
                            }else{
                               $dealData['lender_id']=0;
                            }*/
                            $dealData['lender_id']=$data[5];
                            $date_of_completion='';
                            if($data[4]!=''){
                               $date_of_completion=date("Y-m-d", strtotime(str_replace("/", "-", $data[4])));
                            }
                            //$userData['lead_source']=$data[0];
                            $gross_loan=preg_replace("/[^0-9.]/", "", $data[9]);
                            $gross_ltv=preg_replace("/[^0-9.]/", "", $data[10]);
                            $rate=preg_replace("/[^0-9.]/", "", $data[12]);
                            $arrangement_fee=preg_replace("/[^0-9.]/", "", $data[15]);
                            $proc_fee=preg_replace("/[^0-9.]/", "", $data[16]);
                            $broker_fee=preg_replace("/[^0-9.]/", "", $data[17]);
                            $exit_fee=preg_replace("/[^0-9.]/", "", $data[18]);

                            $date_to_redeem='';
                            if($data[19]!=''){
                               $date_to_redeem=date("Y-m-d", strtotime(str_replace("/", "-", $data[19])));
                            }
                            $date_redeemed='';
                            if($data[20]!=''){
                               $date_redeemed=date("Y-m-d", strtotime(str_replace("/", "-", $data[20])));
                            }
                            if($data[2]!=''){
                               $dealData['date_of_enquiry']=date("Y-m-d", strtotime(str_replace("/", "-", $data[2])));
                            }



                            $dealData['advisor']=$data[0];
                            $dealData['borrower_entity']=$data[1];
                            $dealData['source_of_lead']=$data[3];
                            $dealData['date_of_completion']=$date_of_completion;
                            $dealData['product']=$data[6];
                            $dealData['charge']=$data[7];
                            $dealData['asset_value']=$data[8];
                            $dealData['gross_loan']=$gross_loan;
                            $dealData['gross_ltv']=$gross_ltv;
                            $dealData['term']=$data[11];
                            $dealData['rate']=$rate;
                            $dealData['security']=$data[13];
                            $dealData['location']=$data[14];
                            $dealData['arrangement_fee']=$arrangement_fee;
                            $dealData['proc_fee']=$proc_fee;
                            $dealData['broker_fee']=$broker_fee;
                            $dealData['exit_fee']=$exit_fee;
                            $dealData['date_to_redeem']=$date_to_redeem;
                            $dealData['date_redeemed']=$date_redeemed;
                            $dealData['email_id']=$data[21];
                            $dealData['note_text']=$data[22];
                            $dealData['is_active']=1;

                             $dealData['advisor_id']=$this->session->get('sessUserID');

                            $dealData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $dealData['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            //print_r($dealData);exit();
                            $dealDb=new CompletedDeals();
                            $saveUser=$dealDb->save($dealData);
                            if($saveUser){
                                $insertUserid=$dealDb->id;
                            }
                            //}

                            //==========User Save End===============
                        }
                        $fcount++;
                    }
                    $this->flashSession->success('Completed Deals Imported Successfully');
                    return $response->redirect("dashboard/completeddeal");
                }else
                    {
                    $this->flashSession->success('Something is wrong.Please try Again.');
                }
            }
        }
    }

    /**
    * Deal delete Action To Manage HZA completed deal delete Page
    * Action Name: dealdeleteAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 29-01-2021
    **/
    public function dealdeleteAction($id=''){
        $sucMsg=0;
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

            if(isset($allPost['enqChk']) && !empty($allPost['enqChk'])){
                foreach($allPost['enqChk'] as $singLeadid){
                    $delete=$this->modelsManager->executeQuery("update CompletedDeals set is_active=3 where id='".$singLeadid."'");
                    if($delete){
                        $sucMsg=1;
                    }
                }
            }
        }
        if($sucMsg==1){
            echo 1;
        }else{
            echo 2;
        }
        exit();
    }

    /**
    * Deal permanentdelete Action To Manage HZA completed deal delete Page
    * Action Name: dealtrashdeleteAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 29-07-2021
    **/
    public function dealtrashdeleteAction($id=''){
        $sucMsg=0;
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

            if(isset($allPost['enqChk']) && !empty($allPost['enqChk'])){
                foreach($allPost['enqChk'] as $singLeadid){
                    $delete=$this->modelsManager->executeQuery("delete from CompletedDeals where id='".$singLeadid."' and is_active=3");
                    if($delete){
                        $sucMsg=1;
                    }
                }
            }
        }
        if($sucMsg==1){
            echo 1;
        }else{
            echo 2;
        }
        exit();
    }
    public function restoredealAction($id=''){
        $sucMsg=0;
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

            if(isset($allPost['enqChk']) && !empty($allPost['enqChk'])){
                foreach($allPost['enqChk'] as $singLeadid){
                    $delete=$this->modelsManager->executeQuery("update CompletedDeals set is_active=1 where id='".$singLeadid."'");
                    if($delete){
                        $sucMsg=1;
                    }
                }
            }
        }
        if($sucMsg==1){
            echo 1;
        }else{
            echo 2;
        }
        exit();
    }




    /**
    * completeddeal Trash Action To Manage HZA Completed Deals
    * Action Name: completeddealtrashAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 29-07-2021
    **/
    public function completeddealtrashAction()
    {
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('dashboard');
        }
        if($this->session->has('dealeditredirect')){
            $this->session->remove('dealeditredirect');
        }
        if(UIElements::bapCustUniNewAdvChk()==1){
            return $response->redirect('dashboard');
        }
        $joinArr=array();
        $whr=array('is_active=3');
        if($this->request->isGet()){
            $allGet=$this->request->get();

            if(isset($allGet['searchtxt']) && $allGet['searchtxt']!=''){
                $srhtxt=$allGet['searchtxt'];
                array_push($whr, "(advisor = '".$srhtxt."' or borrower_entity like '%".$srhtxt."%' or source_of_lead = '".$srhtxt."' or lender_id like '%".$srhtxt."%' or product = '".$srhtxt."' or charge = '".$srhtxt."' or location like '%".$srhtxt."%' or email_id = '".$srhtxt."')");
            }
            if(isset($allGet['lead_source']) && $allGet['lead_source']!=''){
                $lead_source=$allGet['lead_source'];
                array_push($whr, "lead_source='".$lead_source."'");
            }
        }
        $order="id desc";
        if(isset($allGet['sorting']) && $allGet['sorting']!=''){
            $order=urldecode($allGet['sorting']);

        }
        $where="";
        if(!empty($whr)){
            $where=" where ".implode(" and ", $whr);
        }
        $joinString="";
        if(!empty($joinArr)){
            $joinString=" ".implode(" ", $joinArr);
        }
        //===========pagination===========
        $paged=$this->dispatcher->getParam("paged");
        $page = (int) (!isset($paged) ? 1 : $paged);
        $page = ($page == 0 ? 1 : $page);
        if($this->request->get('pagination') && $this->request->get('pagination')!=''){
            $perpage =$this->request->get('pagination');
        }else{
            $perpage =20;
        }
        $startpoint = ($page * $perpage) - $perpage;

        $totrecord=CompletedDeals::findAll("select * from completed_deals".$joinString.$where." order by ".$order);
        $completedDealResults=CompletedDeals::findAll("select * from completed_deals".$joinString.$where." order by ".$order." limit ".$startpoint.", ".$perpage);

        //================================

        //$adminRes=AdminUsers::findByAll()->toArray();
        $this->view->setVar('completedDealResults', $completedDealResults);
        $this->view->setVar('totrecord', count($totrecord));
        $this->view->setVar('perpage', $perpage);
        $this->view->setVar('paged', $paged);
        $this->view->setVar('startpoint', $startpoint);
    }


    /**
    * Deal Add Action To Manage HZA completed deal Add Page
    * Action Name: dealaddAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 01-02-2021
    **/
    public function dealaddAction()
    {
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            /*$chkEmail=Datatab::find(array('conditions' => "data_email='".$allPost['data_email']."'", 'limit' => 1));
            if(count($chkEmail)>0){
                $this->flashSession->error("Email ID Already Exist");
            }else{*/
                $allPost["gross_loan"]=str_replace(",", "", $allPost["gross_loan"]);
                $allPost['advisor_id']=$this->session->get('sessUserID');
                $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));

                if($allPost['date_to_redeem']!=''){
                   $allPost['date_to_redeem']=date("Y-m-d", strtotime(str_replace("/", "-", $allPost['date_to_redeem'])));
                }

                /*if($allPost['date_redeemed']!=''){
                   $allPost['date_redeemed']=date("Y-m-d", strtotime(str_replace("/", "-", $allPost['date_redeemed'])));
                }*/

                if($allPost['date_of_enquiry']!=''){
                   $allPost['date_of_enquiry']=date("Y-m-d", strtotime(str_replace("/", "-", $allPost['date_of_enquiry'])));
                }

                if($allPost['date_of_completion']!=''){
                   $allPost['date_of_completion']=date("Y-m-d", strtotime(str_replace("/", "-", $allPost['date_of_completion'])));
                }

                //$datalast=CompletedDeals::find(array('order' => "id desc", 'limit' => 1));

                $completedDealsDB = new CompletedDeals();
                $save=$completedDealsDB->save($allPost);
                if($save){
                    $dealID=$completedDealsDB->id;
                    //=======Save track report========
                        $trackData['track_for']='CompletedDealAdd';
                        $trackData['userid']=$this->session->get('sessUserID');
                        $trackData['track_save_id']=$dealID;
                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);

                    //=======Save track report End========

                    $this->flashSession->success("Completed Deals Saved Successfully.");
                }else{
                    $this->flashSession->error("Completed Deals Saving Failed.");
                }

            //}
        }
    }

    /**
    * Deal edit Action To Manage HZA completed deal edit Page
    * Action Name: dealeditAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 01-02-2021
    **/
    public function dealeditAction($id="")
    {
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if($_SERVER['HTTP_REFERER']!=''){

            if($this->session->has('dealeditredirect')){
                $sessionredirect=$this->session->get('dealeditredirect');
            }else{
                $this->session->set('dealeditredirect', $_SERVER['HTTP_REFERER']);
                $sessionredirect=$this->session->get('dealeditredirect');
            }

        }
        if($id==''){
            return $response->redirect($sessionredirect);
        }
        if($this->request->isPost()){

            $allPost=$this->request->getPost();

            /*$chkEmail=Datatab::find(array('conditions' => "data_email='".$allPost['data_email']."'", 'limit' => 1));
            if(count($chkEmail)>0){
                $this->flashSession->error("Email ID Already Exist");
            }else{*/
                $allPost["gross_loan"]=str_replace(",", "", $allPost["gross_loan"]);
                $dealRes=CompletedDeals::findFirst(array(
                    'conditions' => "id=".$id,
                ));
                $allPost=array_merge($dealRes->toArray(),$allPost);
                //echo "<pre>";print_r($allPost);exit;
                $allPost['id']=$id;
                //$allPost['advisor_id']=$this->session->get('sessUserID');

                //$allPost['lender_id']=$this->session->get('sessUserID');
                $allPost['created']=$dealRes->created;
                $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));

                if($allPost['date_to_redeem']!=''){
                   $allPost['date_to_redeem']=date("Y-m-d", strtotime(str_replace("/", "-", $allPost['date_to_redeem'])));
                }

                /*if($allPost['date_redeemed']!=''){
                   $allPost['date_redeemed']=date("Y-m-d", strtotime(str_replace("/", "-", $allPost['date_redeemed'])));
                }*/

                if($allPost['date_of_enquiry']!=''){
                   $allPost['date_of_enquiry']=date("Y-m-d", strtotime(str_replace("/", "-", $allPost['date_of_enquiry'])));
                }

                if($allPost['date_of_completion']!=''){
                   $allPost['date_of_completion']=date("Y-m-d", strtotime(str_replace("/", "-", $allPost['date_of_completion'])));
                }

                //$datalast=CompletedDeals::find(array('order' => "id desc", 'limit' => 1));

                $completedDealsDB = new CompletedDeals();
                $save=$completedDealsDB->save($allPost);
                if($save){
                    $dealID=$completedDealsDB->id;
                    //=======Save track report========
                    $trackData['track_for']='CompletedDealEdit';
                    $trackData['userid']=$this->session->get('sessUserID');
                    $trackData['track_save_id']=$dealID;
                    $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                    $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                    $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    $trackClickSave = new TrackClickSave();
                    $saveTrack=$trackClickSave->save($trackData);
                    //=======Save track report End========

                    $this->flashSession->success("Completed Deals Updated Successfully.");
                    return $response->redirect($sessionredirect);
                }else{
                    $this->flashSession->error("Completed Deals Updating Failed.");
                }

            //}
        }

        $dealDetail=CompletedDeals::findFirst(array(
            'conditions' => "id='".$id."'"
        ));
        $this->view->setVar('dealDetail', $dealDetail);
    }
    public function exportexcelplenderAction()
    {
        $response = new \Phalcon\Http\Response();
            if($this->request->isGet()){
                $getData=$this->request->get();
                    // =============Search Functionality===============
                    $sessionID=$this->session->get('sessUserID');
                    $whr=array();
                    $ord=array();
                    $joinArr=array();
                    $groupBy="";
                    if($this->request->isGet()){
                        $allGet=$this->request->get();
                        if(isset($allGet['searchTxt']) && $allGet['searchTxt']!=''){
                            $srhtxt=$allGet['searchTxt'];
                            array_push($whr, "(lender_name like '%".$srhtxt."%' or address like '%".$srhtxt."%' or email_id like '%".$srhtxt."%')");
                        }
                        if((isset($allGet['products']) && $allGet['products']!='')){
                            array_push($whr, "product='".$allGet['products']."'");
                        }
                        if((isset($allGet['lenders']) && $allGet['lenders']!='')){
                            array_push($whr, "lender_name like '%".$allGet['lenders']."%'");
                        }

                        $ordrqry='lender_name asc';
                        if(isset($allGet['sorting']) && $allGet['sorting']!=''){
                            $orderbyVal=$allGet['sorting'];
                            if(isset($allGet['orderby']) && $allGet['orderby']!=''){
                                $orderby=$allGet['orderby'];
                                $ordrqry=$orderbyVal.' '.$orderby;
                            }
                            if($ordrqry!=''){
                                $ordrqry=$ordrqry;
                            }
                        }
                    }

                    $where="";
                    if(!empty($whr)){
                        $where=" where ".implode(" and ", $whr);
                    }
                    $lenderRes=$this->modelsManager->executeQuery("select * from PreferLender".$where.$groupBy)->toArray();
                    $data_array = array(array('Sl#','Products','First Name','Surname','Lender Name','Email','Phone Number','Address', 'Max Loan', 'Min Loan', '80 LTV', '75 LTV', '70 LTV', '65 LTV', '60 LTV', '55 LTV', '50 LTV', 'Lender Fee retained %', 'Product Guide', 'Note','Created'));
                    if(count($lenderRes)>0){
                        foreach ($lenderRes as $lenderResult) {
                            $lenderID=stripslashes($lenderResult["lender_id"]);
                            if($lenderResult["phone_no"]!=''){
                               $contacNo= nl2br(stripslashes($lenderResult["phone_no"]));
                            }else{
                                $contacNo= "N/A";
                            }

                            array_push($data_array, array(
                                $countNo,
                                htmlentities($lenderResult["product"]),
                                htmlentities($lenderResult["first_name"]),
                                htmlentities($lenderResult["surname"]),
                                htmlentities($lenderResult["lender_name"]),
                                htmlentities($lenderResult["email_id"]),
                                htmlentities($lenderResult["address"]),
                                "₤ ".number_format($lenderResult['max_loan'], 2),
                                "₤ ".number_format($lenderResult['min_loan'], 2),
                                htmlentities($lenderResult["ltv_80"]),
                                htmlentities($lenderResult["ltv_75"]),
                                htmlentities($lenderResult["ltv_70"]),
                                htmlentities($lenderResult["ltv_65"]),
                                htmlentities($lenderResult["ltv_60"]),
                                htmlentities($lenderResult["ltv_55"]),
                                htmlentities($lenderResult["ltv_50"]),
                                htmlentities($lenderResult["lender_fee_retained"]),
                                htmlentities($lenderResult["product_guide"]),
                                htmlentities($lenderResult["note"]),
                                htmlentities(date('d-m-Y H:i:s',strtotime($lenderResult["created"])))
                            ));
                            $countNo++;
                        }
                    }
                    $xls = new Excel_XML('UTF-8', false, 'Preferred Lender Management');
                    $xls->addArray($data_array);
                    $xls->generateXML(time().'preferred-lender-management');

            }
        exit();
    }
    public function exportexcellendersAction()
    {
        $response = new \Phalcon\Http\Response();
            if($this->request->isGet()){
                $getData=$this->request->get();


                    // =============Search Functionality===============
                    $sessionID=$this->session->get('sessUserID');
                    $whr=array("Lenders.is_active=1");
                    $ord=array();
                    $joinArr=array();
                    $groupBy="";
                    if($this->request->isGet()){
                        $allGet=$this->request->get();
                        if(isset($allGet['searchTxt']) && $allGet['searchTxt']!=''){
                            $srhtxt=$allGet['searchTxt'];
                            array_push($whr, "(Users.first_name like '%".$srhtxt."%' or Users.last_name like '%".$srhtxt."%' or CONCAT(Users.first_name, ' ', Users.last_name) like '%".$srhtxt."%' or Lenders.first_name like '%".$srhtxt."%' or Lenders.surname like '%".$srhtxt."%' or CONCAT(Lenders.first_name, ' ', Lenders.surname) like '%".$srhtxt."%' or Users.email_id like '%".$srhtxt."%' or Users.email_id like '%".$srhtxt."%' or Users.customer_no = '".$srhtxt."')");
                        }
                        if((isset($allGet['products']) && $allGet['products']!='')){
                            array_push($whr, "(find_in_set('".$allGet['products']."', Lenders.products))");
                        }

                        array_push($joinArr, "left join Users on Lenders.lender_id=Users.id");
                        $ordrqry='Users.first_name asc';
                    }

                    $where="";
                    $joinString='';
                    if(!empty($whr)){
                        $where=" where ".implode(" and ", $whr);
                    }
                    if(!empty($joinArr)){
                        $joinString=" ".implode(" ", $joinArr);
                    }
                    $lenderRes=$this->modelsManager->executeQuery("select Lenders.* from Lenders".$joinString.$where.$groupBy." order by Lenders.id desc")->toArray();
                    $data_array = array(array('Sl#','Lender Name','Resi Bridge','Semi Comm Bridge','Comm Bridge','Land Bridge','2nd Charge','Refurb Bridge', 'Deve', 'Mezz', 'Bridge LTP', 'JV Equity', 'Min Loan', 'Max Loan', 'Resi Investment', 'Semi Comm Investment', 'Comm Investment', 'Website','Created'));
                    if(count($lenderRes)>0){
                        foreach ($lenderRes as $lenderResult) {
                            $lenderID=stripslashes($lenderResult["lender_id"]);
                            $userDetail=UIElements::BapCustUniGetByID('Users', array('id' => $lenderID), "id desc");
                            $productsArr=explode(',', $lenderResult['products']);
                            if(in_array('RB', $productsArr)){
                                $regibrg=$lenderResult['regi_bridge'].'%';
                            }
                            else
                            {
                                $regibrg="";
                            }

                            if(in_array('SCB', $productsArr)){
                                $semi_comm_bridge=$lenderResult['semi_comm_bridge'].'%';
                            }
                            else
                            {
                                $semi_comm_bridge="";
                            }
                            if(in_array('CB', $productsArr)){
                                $comm_bridge=$lenderResult['comm_bridge'].'%';
                            }
                            else
                            {
                                $comm_bridge="";
                            }
                            if(in_array('LB', $productsArr)){
                                $land_bridge=$lenderResult['land_bridge'].'%';
                            }
                            else
                            {
                                $land_bridge="";
                            }
                            if(in_array('SC', $productsArr)){
                                $sec_bridge=$lenderResult['sec_bridge'].'%';
                            }
                            else
                            {
                                $sec_bridge="";
                            }
                            if(in_array('RFB', $productsArr)){
                                $refurb_bridge=$lenderResult['refurb_bridge'].'%';
                            }
                            else
                            {
                                $refurb_bridge="";
                            }
                            if(in_array('D', $productsArr)){
                                $deve=$lenderResult['deve'].'%';
                            }
                            else
                            {
                                $deve="";
                            }
                            if(in_array('M', $productsArr)){
                                $mezz=$lenderResult['mezz'].'%';
                            }
                            else
                            {
                                $mezz="";
                            }
                            if(in_array('RI', $productsArr)){
                              $resi_investiment= $lenderResult['resi_investiment'].'%';
                            }
                            else
                            {
                                $resi_investiment= "";
                            }
                            if(in_array('SCI', $productsArr)){
                              $semi_comm_investment= $lenderResult['semi_comm_investment'].'%';
                            }
                            else
                            {
                                $semi_comm_investment= "";
                            }
                            if(in_array('CI', $productsArr)){
                              $comm_investiment= $lenderResult['comm_investiment'].'%';
                            }
                            else
                            {
                                $comm_investiment= "";
                            }

                            array_push($data_array, array(
                                $countNo,
                                htmlentities($userDetail->first_name." ". $userDetail->last_name),
                                htmlentities($regibrg),
                                htmlentities($semi_comm_bridge),
                                htmlentities($comm_bridge),
                                htmlentities($land_bridge),
                                htmlentities($sec_bridge),
                                htmlentities($refurb_bridge),
                                htmlentities($deve),
                                htmlentities($mezz),
                                htmlentities($lenderResult['bridge_ltp']),
                                htmlentities($lenderResult['jv_equity']),
                                "₤ ".number_format($lenderResult['min_loan'], 2),
                                "₤ ".number_format($lenderResult['max_loan'], 2),
                                htmlentities($resi_investiment),
                                htmlentities($semi_comm_investment),
                                htmlentities($comm_investiment),
                                htmlentities($lenderResult["web_url"]),
                                htmlentities(date('d-m-Y H:i:s',strtotime($lenderResult["created"])))
                            ));
                            $countNo++;
                        }
                    }
                    $xls = new Excel_XML('UTF-8', false, 'Lender Source Management');
                    $xls->addArray($data_array);
                    $xls->generateXML(time().'lender-source-management');

            }
        exit();
    }
     /**
 * This action for exporting report
 * Action Name: excelAction
 * Created : 04-01-2019
 * Author : Chittaranjan Sahoo
 */
    public function excelAction()
    {
        $response = new \Phalcon\Http\Response();
            if($this->request->isGet()){
                $getData=$this->request->get();
                //$getData=$this->request->get();
                if(isset($getData['export']) && $getData['export']=='lead'){

                   $joinArr=array();
                    //========Permission code end here=========
                    $whr=array("(enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL)");
                    array_push($whr, "(enquiry.is_active=1 or enquiry.is_active is NULL)");
                    if($this->request->isGet()){
                        $allGet=$this->request->get();
                        if(isset($allGet['searchtxt']) && $allGet['searchtxt']!=''){
                            $srhtxt=$allGet['searchtxt'];
                            array_push($whr, "(enquiry.borrower_name like '%".$srhtxt."%' or enquiry.first_name like '%".$srhtxt."%' or enquiry.last_name like '%".$srhtxt."%' or CONCAT(enquiry.first_name, ' ', enquiry.last_name) like '%".$srhtxt."%' or enquiry.borrower_email = '".$srhtxt."' or enquiry.borrower_mob = '".$srhtxt."' or enquiry.postcode = '".$srhtxt."' or enquiry.name_of_comany like '%".$srhtxt."%' or enquiry.borrower_address like '%".$srhtxt."%' or lead_application.pd_fullname like '%".$srhtxt."%' or lead_application.pd_email like '%".$srhtxt."%' or lead_application.pd_phone_no like '%".$srhtxt."%')");
                            array_push($joinArr, "left join lead_application on enquiry.id=lead_application.lead_id");
                        }
                        if(isset($allGet['product']) && $allGet['product']!=''){
                            $product=$allGet['product'];
                            array_push($whr, "(enquiry.product='".$product."' or enquiry.application_type='".$product."')");
                        }
                        if(isset($allGet['purpose']) && $allGet['purpose']!=''){
                            $purpose=$allGet['purpose'];
                            array_push($whr, "enquiry.purpose='".$purpose."'");
                        }
                        if(isset($allGet['property_type']) && $allGet['property_type']!=''){
                            $property_type=$allGet['property_type'];
                            array_push($whr, "enquiry.property_type='".$property_type."'");
                        }
                        if(isset($allGet['refurbishment']) && $allGet['refurbishment']!=''){
                            $refurbishment=$allGet['refurbishment'];
                            array_push($whr, "enquiry.refurbishment='".$refurbishment."'");
                        }
                        if(isset($allGet['lead_source']) && $allGet['lead_source']!=''){
                            $lead_source=$allGet['lead_source'];
                            array_push($whr, "enquiry.lead_source='".$lead_source."' or enquiry.enquiry_source='".$lead_source."'");
                        }
                        if(isset($allGet['lead_owner']) && $allGet['lead_owner']!=''){
                            $lead_owner=$allGet['lead_owner'];
                            array_push($whr, "enquiry.assign_advisor='".$lead_owner."'");
                        }
                        if(isset($allGet['created_by']) && $allGet['created_by']!=''){
                            $created_by=$allGet['created_by'];
                            array_push($whr, "(enquiry.advisor_id='".$created_by."')");
                        }
                    }
                    $order="id desc";
                    if(isset($allGet['sorting']) && $allGet['sorting']!=''){
                        if(isset($allGet['atype']) && $allGet['atype']=='product'){
                            array_push($joinArr, "left join charges on charges.id=enquiry.product");
                            $order="charges.".urldecode($allGet['sorting']);
                        }else if(isset($allGet['atype']) && $allGet['atype']=='user'){
                            array_push($joinArr, "left join users on users.id=enquiry.advisor_id");
                            $order="users.".urldecode($allGet['sorting']);
                        }else if(isset($allGet['atype']) && $allGet['atype']=='lenduser'){
                            array_push($joinArr, "left join users on users.id=enquiry.approve_by_lender");
                            $order="users.".urldecode($allGet['sorting']);
                        }else{
                            $order="enquiry.".urldecode($allGet['sorting']);
                        }
                    }
                    $where="";
                    if(!empty($whr)){
                        $where=" where ".implode(" and ", $whr);
                    }
                    $joinString="";
                    if(!empty($joinArr)){
                        $joinString=" ".implode(" ", $joinArr);
                    }
                    $leadRes=Enquiry::findAll("select enquiry.* from enquiry".$joinString.$where." order by ".$order);
                    //$leadRes=Enquiry::find(array("conditions" => $where, "order" => "id desc",));
                    $countNo=1;
                    $data_array = array(array('Sl#','CREATED BY','PRODUCT','NAME','PHONE', 'EMAIL','LOAN AMOUNT', 'NOTES', 'ADVISOR', 'APPROVED LEAD', 'Approved LENDER TO', 'INQUIRED ON', 'UNSUBSCRIBED'));
                    if(count($leadRes)>0){
                        foreach ($leadRes as $leadResult) {
                            $advisorID=$leadResult->advisor_id;
                            $advisorResult=Users::findFirst(array('conditions' => "id='".$advisorID."'"));
                            $advisorid=$leadResult->assign_advisor;
                                if($advisorid!=''){
                                  $advDetail=Users::findFirst(array('conditions' => "id='".$advisorid."'"));
                                }else{
                                  $advDetail=array();
                                }
                                $totalAmountRequired+=$leadResult->amount_required;
                                if (!empty($leadResult->product)) {
                                  // $productDetail=Products::findFirst(array('conditions' => "id=".$leadResult->product." and is_active=1"));
                                }
                                if($leadResult->product!=''){
                                  $chargeDetail=Charges::findFirst(array('conditions' => "id=".$leadResult->product));
                                }else if($leadResult->application_type!=''){
                                  $chargeDetail=Charges::findFirst(array('conditions' => "id=".$leadResult->application_type));
                                }else{
                                  $chargeDetail=array();
                                }
                                $noteText=stripslashes($leadResult->note_text);
                                $shortNote=(strlen($noteText)>30)? substr($noteText, 0, 30) : $noteText;
                                $leadAppDetail=LeadApplication::find(array('conditions' => "lead_id=".$leadResult->id, 'limit' => 1));

                                if(count($leadAppDetail)>0){
                                    $nameArr=explode(":::", $leadAppDetail[0]->pd_fullname);
                                    $clientname=stripslashes($nameArr[0]);
                                  } else {
                                    if($leadResult->borrower_name!=''){
                                      $clientname=$leadResult->borrower_name;
                                    }else if($leadResult->first_name!=''){
                                      $clientname=stripslashes($leadResult->first_name." ".$leadResult->last_name);
                                    }else{
                                      $clientname="";
                                    }
                                  }

                                  if($leadResult->borrower_mob!=''){
                                    $phoneno=$leadResult->borrower_mob;
                                  }else{
                                    if(count($leadAppDetail)>0){
                                      $phoneArr=explode(":::", $leadAppDetail[0]->pd_phone_no);
                                      $phoneno=stripslashes($phoneArr[0]);
                                    }else{
                                      $phoneno="";
                                    }
                                  }
                                if($leadResult->borrower_email!=''){
                                    $emailID=$leadResult->borrower_email;
                                  }else{
                                    if(count($leadAppDetail)>0){
                                      $emailArr=explode(":::", $leadAppDetail[0]->pd_email);
                                      $emailID=stripslashes($emailArr[0]);
                                    }else{
                                      $emailID="";
                                    }
                                  }
                                if(count($advDetail)>0){ $advName=stripslashes($advDetail->first_name);}else{$advName="";}

                                if(count($advisorResult)>0){ $createdBy=stripslashes($advisorResult->first_name);}else{$createdBy="";}

                                if($leadResult->approve_lead==1){
                                   $approvelead="Yes";
                                  }else if($leadResult->approve_lead==0){
                                    $approvelead="No";
                                  }
                                if($leadResult->approve_by_lender>0){
                                  $lenderDetail=Users::findFirst(array('conditions' => "id='".$leadResult->approve_by_lender."'", 'limit' => 1));
                                  $approvedLender=stripslashes($lenderDetail->first_name);
                                }else{
                                    $approvedLender="";
                                }
                                if($leadResult->not_send_mail==1){
                                $subscribe="Unsubscribed";
                              }else{
                               $subscribe="Subscribed";
                              }

                                array_push($data_array, array(
                                $countNo,
                                htmlentities($createdBy),
                                htmlentities(stripslashes($chargeDetail->charge_name)),
                                htmlentities($clientname),
                                htmlentities($phoneno),
                                htmlentities($emailID),
                                number_format($leadResult->amount_required, 2),
                                htmlentities($noteText),
                                htmlentities($advName),
                                htmlentities($approvelead),
                                htmlentities($approvedLender),
                                date("d/m/Y H:i A", strtotime($leadResult->created)),
                                $subscribe
                            ));
                            $countNo++;
                        }
                    }
                    $xls = new Excel_XML('UTF-8', false, 'Lead Report');
                    $xls->addArray($data_array);
                    $xls->generateXML(time().'-lead-report');
                }else if(isset($getData['export']) && $getData['export']=='completeddeal'){
                    $joinArr=array();
                    $whr=array('is_active=1');
                    if($this->request->isGet()){
                        $allGet=$this->request->get();
                        if(isset($allGet['deletrecord']) && $allGet['deletrecord']!=''){
                            $dateval=urldecode($allGet['deletrecord']);
                            $delete=$this->modelsManager->executeQuery("delete from CompletedDeals where date(created)='".$dateval."'");
                            if($delete){
                                $this->flashSession->success("Data Deleted Successfully.");
                            }else{
                               $this->flashSession->error("Data Deleting Failed.");
                            }
                        }
                        if(isset($allGet['searchtxt']) && $allGet['searchtxt']!=''){
                            $srhtxt=$allGet['searchtxt'];
                            array_push($whr, "(advisor = '".$srhtxt."' or borrower_entity like '%".$srhtxt."%' or source_of_lead = '".$srhtxt."' or lender_id like '%".$srhtxt."%' or product = '".$srhtxt."' or charge = '".$srhtxt."' or location like '%".$srhtxt."%')");
                        }
                        if(isset($allGet['lead_source']) && $allGet['lead_source']!=''){
                            $lead_source=$allGet['lead_source'];
                            array_push($whr, "lead_source='".$lead_source."'");
                        }
                    }
                    $order="id desc";
                    if(isset($allGet['sorting']) && $allGet['sorting']!=''){
                        $order=urldecode($allGet['sorting']);

                    }
                    $where="";
                    if(!empty($whr)){
                        $where=" where ".implode(" and ", $whr);
                    }
                    $joinString="";
                    if(!empty($joinArr)){
                        $joinString=" ".implode(" ", $joinArr);
                    }

                    $completedDeals=CompletedDeals::findAll("select * from completed_deals".$joinString.$where." order by ".$order);
                     $countNo=1;
                    $data_array = array(array('Sl#','Advisor','Borrower Entity','Date of Enquiry', 'Source of Lead','Date of Completion', 'Lender', 'Product', 'Charge', 'Asset Value', 'Gross Loan', 'Gross LTV', 'Term', 'Rate', 'Security', 'Location', 'Arrangement fee', 'Proc fee', 'Broker fee', 'Exit fee', 'Date to Redeem', 'Date Redeemed', 'Email Id', 'Status', 'Created On'));
                    if(count($completedDeals)>0){
                        foreach ($completedDeals as $completedDealResult) {

                                $date_of_enquiry="";
                                if($completedDealResult->date_of_enquiry!='0000-00-00'){
                                    $date_of_enquiry=date("d/m/Y", strtotime($completedDealResult->date_of_enquiry));
                                }

                                $date_of_completion="";
                                if($completedDealResult->date_of_completion!='0000-00-00'){
                                    $date_of_completion=date("d/m/Y", strtotime($completedDealResult->date_of_completion));
                                }
                                $date_to_redeem="";
                                if($completedDealResult->date_to_redeem!='0000-00-00'){
                                    $date_to_redeem=date("d/m/Y", strtotime($completedDealResult->date_to_redeem));
                                }
                                $date_redeemed="";
                                if($completedDealResult->date_redeemed!='0000-00-00'){
                                    $date_redeemed=date("d/m/Y", strtotime($completedDealResult->date_redeemed));
                                }

                                if($completedDealResult->is_active==1){
                                    $status="Active";
                                }else{
                                    $status="Inactive";
                                }

                                array_push($data_array, array(
                                $countNo,
                                htmlentities($completedDealResult->advisor),
                                htmlentities(stripslashes($completedDealResult->borrower_entity)),
                                $date_of_enquiry,
                                $completedDealResult->source_of_lead,
                                $date_of_completion,
                                $completedDealResult->lender_id,
                                $completedDealResult->product,
                                $completedDealResult->charge,
                                htmlentities($completedDealResult->asset_value),
                                number_format($completedDealResult->gross_loan, 2),
                                $completedDealResult->gross_ltv,
                                $completedDealResult->term,
                                number_format($completedDealResult->rate, 2),
                                htmlentities($completedDealResult->security),
                                htmlentities($completedDealResult->location),
                                number_format($completedDealResult->arrangement_fee, 2),
                                number_format($completedDealResult->proc_fee, 2),
                                number_format($completedDealResult->broker_fee, 2),
                                number_format($completedDealResult->exit_fee, 2),
                                $date_to_redeem,
                                $date_redeemed,
                                $completedDealResult->email_id,
                                $status,
                                date("d-m-Y H:i A", strtotime($completedDealResult->created))
                            ));
                            $countNo++;
                        }
                    }
                    //echo "<pre>"; print_r($data_array); exit();
                    $xls = new Excel_XML('UTF-8', false, 'Completed Deals Report');
                    $xls->addArray($data_array);
                    $xls->generateXML(time().'-completed-deals-report');
                }else if(isset($getData['export']) && $getData['export']=='completedlead'){

                   $workflowTaskRes=WorkflowTask::findAll("select t.* from (SELECT workflow_task.* FROM workflow_task INNER JOIN enquiry ON workflow_task.lead_id=enquiry.id WHERE workflow_task.case_status=5 and workflow_task.lead_id!='' ORDER BY workflow_task.id desc) as t left join task_status on t.task_status=task_status.id left join case_status on t.case_status=case_status.id left join charges on t.product=charges.id group by t.lead_id order by t.id desc");
                   //echo count($workflowTaskRes);exit();

                    $countNo=1;
                    $data_array = array(array('Sl#','Stage','Case Status','Client','Security Address', 'Loan','Lender', 'Product', 'Advisor', 'Case Manager', 'Case Deadline', 'Timescale', 'Note'));
                    if(count($workflowTaskRes)>0){
                        foreach ($workflowTaskRes as $workflowTaskResult) {
                            //print_r($workflowTaskResult); exit;
                            $taskstatusDetail=TaskStatus::findFirst(array('conditions' => "id=".$workflowTaskResult->task_status));
                        $casestatusDetail=CaseStatus::findFirst(array('conditions' => "id=".$workflowTaskResult->case_status));
                        $charges=Charges::findFirst(array('conditions' => "id=".$workflowTaskResult->product));
                        $assignAdvisorDetail=Users::findFirst(array('conditions' => "id=".$workflowTaskResult->assign_advisor));
                        $assignCaseManager=Users::findFirst(array('conditions' => "id=".$workflowTaskResult->assign_case_manager));
                        $taskLenderDetail=Users::findFirst(array('conditions' => "id='".$workflowTaskResult->task_lender."'"));
                        $noteText=stripslashes($workflowTaskResult->tasknote);
                        $shortNote=(strlen($noteText)>30)? substr($noteText, 0, 30) : $noteText;
                        $leadId=$workflowTaskResult->lead_id;
                        $checknotproceeding=WorkflowTask::findAll("select * from workflow_task where id='".$leadId."' and task_status=9");
                            if(count($checknotproceeding)<1){

                                    array_push($data_array, array(
                                    $countNo,
                                    htmlentities(stripslashes($taskstatusDetail->status_name)),
                                    htmlentities($casestatusDetail->status_name),
                                    htmlentities(stripslashes($workflowTaskResult->task_client)),
                                    htmlentities(stripslashes($workflowTaskResult->security_address)),
                                    '£ '.number_format($workflowTaskResult->task_loan, 2),
                                    stripslashes($taskLenderDetail->first_name),
                                    htmlentities(stripslashes($charges->charge_name)),
                                    htmlentities(stripslashes($assignAdvisorDetail->first_name)),
                                    htmlentities(stripslashes($assignCaseManager->first_name)),
                                    htmlentities($workflowTaskResult->casedeadline),
                                    htmlentities($workflowTaskResult->timescale),
                                    htmlentities($noteText)
                                ));
                                $countNo++;
                            }
                        }
                    }
                    $xls = new Excel_XML('UTF-8', false, 'Completed Lead Report');
                    $xls->addArray($data_array);
                    $xls->generateXML(time().'-completed-lead-report');
                }else if(isset($getData['export']) && $getData['export']=='loanbook'){


                    $joinArr=array();
                    $sessionID=$this->session->get('sessUserID');
                    $whr=array("is_active=1");
                    if($this->request->isGet()){
                        $allGet=$this->request->get();
                        if(isset($allGet['searchtxt']) && $allGet['searchtxt']!=''){
                            $srhtxt=$allGet['searchtxt'];
                            array_push($whr, "(first_name like '%".$srhtxt."%' or last_name like '%".$srhtxt."%' or CONCAT(first_name, ' ', last_name) like '%".$srhtxt."%' or company_name like '%".$srhtxt."%' or postcode = '".$srhtxt."' or company_phone = '".$srhtxt."' or company_email like '%".$srhtxt."%' or person_name like '%".$srhtxt."%' or person_title like '%".$srhtxt."%' or person_title like '%".$srhtxt."%' or role_name like '%".$srhtxt."%' or project_no like '%".$srhtxt."%' or project_title like '%".$srhtxt."%')");
                        }
                        if(isset($allGet['lender_id']) && $allGet['lender_id']!=''){
                            $lender_id=$allGet['lender_id'];
                            array_push($whr, "lender_id = '".$lender_id."'");
                        }
                        if(isset($allGet['lead_id']) && $allGet['lead_id']!=''){
                            $lead_id=$allGet['lead_id'];
                            array_push($whr, "lead_id like '%".$lead_id."%'");
                        }
                        if(isset($allGet['advisor_id']) && $allGet['advisor_id']!=''){
                            $advisor_id=$allGet['advisor_id'];
                            array_push($whr, "advisor_of = '".$advisor_id."'");
                        }
                    }
                    $order="id desc";
                    if(isset($allGet['sorting']) && $allGet['sorting']!=''){
                        $order=urldecode($allGet['sorting']);

                    }
                    $where="";
                    if(!empty($whr)){
                        $where=" where ".implode(" and ", $whr);
                    }
                    $joinString="";
                    if(!empty($joinArr)){
                        $joinString=" ".implode(" ", $joinArr);
                    }

                  $loanbookRes=Loanbook::findAll("select * from loanbook".$joinString.$where." order by ".$order);

                    $countNo=1;
                    $data_array = array(array('Sl#','Posted By','Lender', 'Borrower','Product','Gross Loan', 'Proc','Property Address', 'Broker Fee', 'Completion', 'Redemption', 'Term', 'Advisor', 'Created On'));
                    if(count($loanbookRes)>0){
                        foreach ($loanbookRes as $loanbookDetail) {
                            //print_r($workflowTaskResult); exit;
                           $advisorID=$loanbookDetail->advisor_id;
                           $postedby="";
                              if($advisorID!=''){
                                $uuserDetail=Users::findFirst(array('conditions' => "id=".$advisorID));
                                $postedby=stripslashes($uuserDetail->first_name);
                              }

                               $lenderID=$loanbookDetail->lender_id;
                                $lenderDetail=Users::findFirst(array('conditions' => "id=".$lenderID));

                                $leadID=$loanbookDetail->lead_id;
                                    if(is_numeric($leadID)){
                                     $enquiries=Enquiry::find(array('conditions' => "id=".$leadID, 'order' => "first_name asc", 'limit' => 1));
                                     if(count($enquiries)>0){
                                        $firstName=stripslashes($enquiries[0]->first_name);
                                     }
                                  }else{
                                    $firstName=$leadID;
                                  }

                                  $dateredem=($loanbookDetail->redemption!='1970-01-01' && $loanbookDetail->redemption!='')?date('d/m/Y',strtotime($loanbookDetail->redemption)):'N/A';
                                  $advOf="";

                                  $advisorID=$loanbookDetail->advisor_of;
                                      if($advisorID!=''){
                                        $userDetail=Users::findFirst(array('conditions' => "id=".$advisorID));
                                        $advOf=stripslashes($userDetail->first_name);
                                      }


                                array_push($data_array, array(
                                $countNo,
                                htmlentities($postedby),
                                htmlentities(stripslashes($lenderDetail->first_name)),
                                htmlentities($firstName),
                                htmlentities(stripslashes($loanbookDetail->product)),
                                stripslashes($loanbookDetail->gross_loan),
                                stripslashes($loanbookDetail->proc),
                                htmlentities(stripslashes($loanbookDetail->property_address)),
                                htmlentities(stripslashes($loanbookDetail->broker)),
                                htmlentities(stripslashes($loanbookDetail->completion)),
                                $dateredem,
                                htmlentities(stripslashes($loanbookDetail->term)),
                                $advOf,
                                date("d/m/Y", strtotime($loanbookDetail->created))
                            ));
                            $countNo++;

                        }
                    }
                    $xls = new Excel_XML('UTF-8', false, 'Loan Book Report');
                    $xls->addArray($data_array);
                    $xls->generateXML(time().'-loan-book-report');
                }else if(isset($getData['export']) && $getData['export']=='data'){

                    $joinArr=array();
                    $whr=array('is_active=1');
                    if($this->request->isGet()){
                        $allGet=$this->request->get();

                        if(isset($allGet['searchtxt']) && $allGet['searchtxt']!=''){
                            $srhtxt=$allGet['searchtxt'];
                            array_push($whr, "(first_name like '%".$srhtxt."%' or last_name like '%".$srhtxt."%' or CONCAT(first_name, ' ', last_name) like '%".$srhtxt."%' or company_name like '%".$srhtxt."%' or telephone = '".$srhtxt."' or data_email like '%".$srhtxt."%' )");
                        }
                        if(isset($allGet['lead_source']) && $allGet['lead_source']!=''){
                            $lead_source=$allGet['lead_source'];
                            array_push($whr, "lead_source='".$lead_source."'");
                        }
                        if(isset($allGet['advisor_id']) && $allGet['advisor_id']!=''){
                            $advisor_id=$allGet['advisor_id'];
                            array_push($whr, "advisor_id='".$advisor_id."'");
                        }
                        if(isset($allGet['start_point']) && $allGet['start_point']>=0){
                            $offset=$allGet['start_point'];
                        }else{
                            $offset=0;
                        }
                        if(isset($allGet['end_point']) && $allGet['end_point']>0){
                            $limit=$allGet['end_point'];
                        }else{
                            $limit=100000;
                        }
                    }
                    $order="id desc";
                    if(isset($allGet['sorting']) && $allGet['sorting']!=''){
                        $order=urldecode($allGet['sorting']);

                    }
                    $where="";
                    if(!empty($whr)){
                        $where=" where ".implode(" and ", $whr);
                    }
                    $joinString="";
                    if(!empty($joinArr)){
                        $joinString=" ".implode(" ", $joinArr);
                    }
                    //echo "select * from datatab".$joinString.$where." order by ".$order." limit ".$offset.", ".$limit;
                    $dataRes=Datatab::findAll("select * from datatab".$joinString.$where." order by ".$order." limit ".$offset.", ".$limit);
                     $countNo=1;
                    $data_array = array(array('Sl#','Advisor By','Data ID','Name', 'Phone','Mobile', 'Email', 'Company', 'Note', 'Local Activity Code Description', 'Registration Number', 'Director 1 Name', 'Geography 2', 'Geography 3', 'Geography 4', 'Zip', 'Website', 'Send Mail', 'Created On'));
                    if(count($dataRes)>0){
                        foreach ($dataRes as $dataResult) {
                            $advisor_id=$dataResult->advisor_id;
                            $advisorDetail=Users::findFirst(array('conditions' => "id='".$advisor_id."'", 'limit' => 1));
                            if($dataResult->not_send_mail==1){
                              $viewStatus="No";
                            }else{
                              $viewStatus="Yes";
                            }

                                array_push($data_array, array(
                                $countNo,
                                htmlentities(stripslashes($advisorDetail->first_name." ".$advisorDetail->last_name)),
                                $dataResult->data_id,
                                htmlentities(stripslashes($dataResult->first_name." ".$dataResult->last_name)),
                                htmlentities($dataResult->telephone),
                                htmlentities($dataResult->mobile),
                                htmlentities($dataResult->data_email),
                                htmlentities($dataResult->company_name),
                                htmlentities(stripslashes($dataResult->notes)),
                                htmlentities(stripslashes($dataResult->code_description)),
                                $dataResult->registration_number,
                                htmlentities(stripslashes($dataResult->director_name_one)),
                                htmlentities(stripslashes($dataResult->geography_two)),
                                htmlentities(stripslashes($dataResult->geography_three)),
                                htmlentities(stripslashes($dataResult->geography_four)),
                                $dataResult->postcode,
                                htmlentities(stripslashes($dataResult->website)),
                                $viewStatus,
                                date("d-m-Y H:i A", strtotime($dataResult->created))
                            ));
                            $countNo++;
                        }
                    }
                    $xls = new Excel_XML('UTF-8', false, 'Data User Report');
                    $xls->addArray($data_array);
                    $xls->generateXML(time().'-data-user-report');
                }

            }
        exit();
    }
    public function excelpipelineAction()
    {
        $response = new \Phalcon\Http\Response();
        $applicantTypeArr=array('1'=>'Personal Name','2'=>'Company');
        $loanTypeArr=array('1'=>'Investment','2'=>'Regulated');
        $propertyTypeArr=array('1'=>'Residential','2'=>'Semi Commercial','3'=>'Commercial','4'=>'Land no planning','Land With Planning');
        $refurbishmentArr=array('1'=>'No','2'=>'Light Refurb  -  no planning permission required','3'=>'Heavy Refurb - planning permission required');
        $termTypeArr=array('1'=>'1 month','2'=>'2 months','3'=>'3 months','4'=>'4 months','5'=>'5 months','6'=>'6 months','7'=>'7 months','8'=>'8 months','9'=>'9 months','10'=>'10 months','11'=>'11 months','12'=>'12 months','13'=>'13 months','14'=>'14 months','15'=>'15 months','16'=>'16 months','17'=>'17 months','18'=>'18 months','19'=>'19 months','20'=>'20 months','21'=>'21 months','22'=>'22 months','23'=>'23 months','24'=>'24 months');
        $adverseTypeArr=array('1'=>'No','2'=>'Minor','3'=>'Light','4'=>'Heavy');
        $chargeTypeArr=array('1'=>'1st charge bridge','2'=>'2nd charge bridge','3'=>'Development loan','4'=>'commercial loan', '5' => 'buy to let', '6' => 'Mezz');
        $valuationTypeArr=array('1'=>'Purchase Price','2'=>'Market Value','3'=>'Open Market Value');
        $interestServicingOptionArr=array('1'=>'Deducted for entire term','2'=>'Serviced Monthly','3'=>'Rolled Up');
        $incomeArr=array('Provable' => 'Provable', 'Not Provable' => 'Not Provable');
        $applicationTypeArr=array('1'=>'Bridging loan','2'=>'2nd Charge loan','3'=>'Term loan','4'=>'Development loan');
        $enquirySourceArr=array('1'=>'Inbound Telephone','2'=>'Email marketing','3'=>'Auction lead','4'=>'Web search','5'=>'Other');
        if($this->request->isGet()){
            $getData=$this->request->get();
            //$getData=$this->request->get();
            //if(isset($getData['export']) && $getData['export']=='pipeline'){

               $joinArr=array();
                //========Permission code end here=========
                $whr=array("enquiry.in_progress=1");

                if($this->request->isGet()){
                    $allGet=$this->request->get();
                    if(isset($allGet['searchtxt']) && $allGet['searchtxt']!=''){
                        $srhtxt=$allGet['searchtxt'];
                        array_push($whr, "(enquiry.borrower_name like '%".$srhtxt."%' or enquiry.first_name like '%".$srhtxt."%' or enquiry.last_name like '%".$srhtxt."%' or CONCAT(enquiry.first_name, ' ', enquiry.last_name) like '%".$srhtxt."%' or enquiry.borrower_email = '".$srhtxt."' or enquiry.borrower_mob = '".$srhtxt."' or enquiry.postcode = '".$srhtxt."' or enquiry.name_of_comany like '%".$srhtxt."%' or enquiry.borrower_address like '%".$srhtxt."%' or lead_application.pd_fullname like '%".$srhtxt."%' or lead_application.pd_email like '%".$srhtxt."%' or lead_application.pd_phone_no like '%".$srhtxt."%')");
                        array_push($joinArr, "left join lead_application on enquiry.id=lead_application.lead_id");
                    }
                    /*if(isset($allGet['loan_type']) && $allGet['loan_type']!=''){
                        $loan_type=$allGet['loan_type'];
                        array_push($whr, "loan_type='".$loan_type."'");
                    }*/
                    if(isset($allGet['product']) && $allGet['product']!=''){
                        $product=$allGet['product'];
                        array_push($whr, "enquiry.product='".$product."'");
                    }
                    if(isset($allGet['purpose']) && $allGet['purpose']!=''){
                        $purpose=$allGet['purpose'];
                        array_push($whr, "enquiry.purpose='".$purpose."'");
                    }
                    if(isset($allGet['property_type']) && $allGet['property_type']!=''){
                        $property_type=$allGet['property_type'];
                        array_push($whr, "enquiry.property_type='".$property_type."'");
                    }
                    if(isset($allGet['refurbishment']) && $allGet['refurbishment']!=''){
                        $refurbishment=$allGet['refurbishment'];
                        array_push($whr, "enquiry.refurbishment='".$refurbishment."'");
                    }
                    if(isset($allGet['lead_source']) && $allGet['lead_source']!=''){
                        $lead_source=$allGet['lead_source'];
                        array_push($whr, "enquiry.lead_source='".$lead_source."'");
                    }
                    if(isset($allGet['modified']) && $allGet['modified']!=''){
                        $modified=str_replace("/", "-", $allGet['modified']);
                        $modified=date("Y-m-d", strtotime($modified));
                        //echo $modified;exit;
                        array_push($whr, "date(modified)= '".$modified."'");
                    }
                    if(isset($allGet['lead_given']) && $allGet['lead_given']!=''){
                       // $modified=str_replace("/", "-", $allGet['modified']);
                        $lead_given=$allGet['lead_given'];
                        array_push($whr, "enquiry.lead_given_by='".$allGet['lead_given']."'");
                    }
                    if(isset($allGet['case_status']) && $allGet['case_status']!=''){
                       array_push($joinArr, "inner join workflow_task on enquiry.id=workflow_task.lead_id");
                        array_push($whr, "workflow_task.in_progress_sub ='".$allGet['case_status']."'");
                    }

                }

                $order="id desc";
                if(isset($allGet['sorting']) && $allGet['sorting']!=''){
                    if(isset($allGet['atype']) && $allGet['atype']=='product'){
                        array_push($joinArr, "left join charges on charges.id=enquiry.product");
                        $order="charges.".urldecode($allGet['sorting']);
                    }else if(isset($allGet['atype']) && $allGet['atype']=='user'){
                        array_push($joinArr, "left join users on users.id=enquiry.advisor_id");
                        $order="users.".urldecode($allGet['sorting']);
                    }else if(isset($allGet['atype']) && $allGet['atype']=='lenduser'){
                        array_push($joinArr, "left join users on users.id=enquiry.approve_by_lender");
                        $order="users.".urldecode($allGet['sorting']);
                    }else{
                        $order="enquiry.".urldecode($allGet['sorting']);
                    }

                }
                $where="";
                if(!empty($whr)){
                    $where=" where ".implode(" and ", $whr);
                }
                $joinString="";
                if(!empty($joinArr)){
                    $joinString=" ".implode(" ", $joinArr);
                }
                if(isset($allGet['case_status']) && $allGet['case_status']!=''){
                    $leadRes=Enquiry::findAll("select enquiry.*,workflow_task.id as workflowtaskid,workflow_task.in_progress_sub from enquiry".$joinString.$where." order by ".$order);
                }else{
                    // $leadRes=Enquiry::findAll("select enquiry.* from enquiry".$joinString.$where." order by ".$order);
                     $leadRes   = Enquiry::findAll("select enquiry.* from ((SELECT enquiry.*,enquiry.borrower_name as borrower_names FROM enquiry WHERE in_progress=1) UNION (SELECT SUBSTRING_INDEX(pd_fullname,':::', 1) AS borrower_names,enquiry.*  FROM enquiry join lead_application on enquiry.id=lead_application.lead_id WHERE in_progress=1 and (borrower_name='' or borrower_name is null))) as enquiry".$joinString.$where." and (enquiry.is_active IS NULL or enquiry.is_active!=3) ");
                }
                //echo "<pre>";print_r($leadRes->toArray());exit;

                //$leadRes=Enquiry::find(array("conditions" => $where, "order" => "id desc",));
                $countNo=1;
                $data_array = array(array('Sl#','PRODUCT','NAME','SECURITY','LOAN AMOUNT','LTV','PROC FEE','BROKER FEE','ADVISOR','LEAD GIVEN BY', 'LENDER', 'CASE STATUS','INQUIRED ON', 'LAST MODIFIED','LINK'));
                if(count($leadRes)>0){
                    foreach ($leadRes as $leadResult) {
                        $advisorid=$leadResult->assign_advisor;
                        if($advisorid!=''){
                          $advDetail=Users::findFirst(array('conditions' => "id='".$advisorid."'"));
                        }else{
                          $advDetail=array();
                        }
                        if($leadResult->lead_given_by!=''){
                          $leadgivendetails=Users::findFirst(array('conditions' => "id='".$leadResult->lead_given_by."'"));
                        }else{
                          $leadgivendetails=array();
                        }
                        $totalAmountRequired+=$leadResult->amount_required;
                        if($leadResult->inernal_broker_fee>0){
                          $bfee=$leadResult->inernal_broker_fee/100*$leadResult->amount_required;
                          $totbrokerfee+=$bfee;

                        }
                        if($leadResult->internal_proc_fee>0){
                          $pfee=$leadResult->internal_proc_fee/100*$leadResult->amount_required;
                          $totProcfee+=$pfee;

                        }
                        if (!empty($leadResult->product)) {
                          // $productDetail=Products::findFirst(array('conditions' => "id=".$leadResult->product." and is_active=1"));
                        }
                        if($leadResult->product!=''){
                          $chargeDetail=Charges::findFirst(array('conditions' => "id=".$leadResult->product));
                        }else if($leadResult->application_type!=''){
                          $chargeDetail=Charges::findFirst(array('conditions' => "id=".$leadResult->application_type));
                        }else{
                          $chargeDetail=array();
                        }
                        $noteText=stripslashes($leadResult->note_text);
                        $shortNote=(strlen($noteText)>30)? substr($noteText, 0, 30) : $noteText;
                        $leadAppDetail=LeadApplication::find(array('conditions' => "lead_id=".$leadResult->id, 'limit' => 1));
                        if(count($leadAppDetail)>0){
                            $nameArr=explode(":::", $leadAppDetail[0]->pd_fullname);
                            $clientname=stripslashes($nameArr[0]);
                        } else {
                            if($leadResult->borrower_name!=''){
                              $clientname=$leadResult->borrower_name;
                            }else if($leadResult->first_name!=''){
                              $clientname=stripslashes($leadResult->first_name." ".$leadResult->last_name);
                            }else{
                              $clientname="";
                            }
                        }
                        if(count($advDetail)>0){
                         $advisorName=$advDetail->first_name;
                        }
                        else
                        {
                            $advisorName="";
                        }
                        if(count($leadgivendetails)>0){
                           $leadGivenAdvisor=$leadgivendetails->first_name;
                        }
                        else
                        {
                            $leadGivenAdvisor="";
                        }
                        $workflowTaskRes=WorkflowTask::find(array('conditions' => "lead_id=".$leadResult->id, 'order' => "id desc", 'limit' => 1));
                        if(count($workflowTaskRes)>0){
                            $workflowTaskResult=$workflowTaskRes[0];
                            $taskLenderDetail=Users::findFirst(array('conditions' => "id='".$workflowTaskResult->task_lender."'"));
                            //$taskstatusDetail=TaskStatus::findFirst(array('conditions' => "id=".$workflowTaskResult->task_status));
                            if($taskLenderDetail->first_name!=''){
                              $lendername= $taskLenderDetail->first_name;
                            }else{
                              $lendername= "N/A";
                            }



                        }else{
                          $lendername= "N/A";
                        }
                        if(isset($leadResult->in_progress_sub) && $leadResult->in_progress_sub!="")
                        {
                            $casestatus= $leadResult->in_progress_sub;
                        }else
                        {
                           $workflowTaskRes=WorkflowTask::find(array('conditions' => "lead_id=".$leadResult->id, 'order' => "id desc", 'limit' => 1));
                           if(count($workflowTaskRes)>0){
                            $workflowTaskResult=$workflowTaskRes[0];
                            //$taskstatusDetail=TaskStatus::findFirst(array('conditions' => "id=".$workflowTaskResult->task_status));
                            if($workflowTaskResult->in_progress_sub=='Valuation/ Legal'){
                              $casestatus= "Valuation";
                            }else{
                              $casestatus= stripslashes($workflowTaskResult->in_progress_sub);
                            }



                          }else{
                          $casestatus= "N/A";
                         }
                        }
                        $url=BASEURL."dashboard/pipelinedetail/".$leadResult->id;

                            array_push($data_array, array(
                            $countNo,
                            htmlentities(stripslashes($chargeDetail->charge_name)),
                            htmlentities($clientname),
                            htmlentities($propertyTypeArr[$leadResult->property_type]),
                            number_format($leadResult->amount_required, 2),
                            htmlentities($leadResult->ltv_required),
                            htmlentities($leadResult->internal_proc_fee),
                            htmlentities($leadResult->inernal_broker_fee),
                            htmlentities($advisorName),
                            htmlentities($leadGivenAdvisor),
                            htmlentities($lendername),
                            htmlentities($casestatus),
                            date("d/m/Y H:i A", strtotime($leadResult->created)),
                            date("d/m/Y H:i A", strtotime($leadResult->modified)),
                            $url,
                        ));
                        $countNo++;
                    }
                }
                $xls = new Excel_XML('UTF-8', false, 'Lead Report');
                $xls->addArray($data_array);
                $filename=time().'-pipeline-report.xls';

                $xls->generateXML(time().'-pipeline-report');




            //}

        }
       // exit();
    }
    public function brokersalesreportemailAction()
    {
        $response    = new \Phalcon\Http\Response();

        $brokerArr   = array(180,182,188,462);  //id=,355 = jesse@hankzarihs.com
        foreach ($brokerArr as $brokerId) {

                if($brokerId!=''){
                  $advDetail = Users::findFirst(array('conditions' => "id='".$brokerId."'"));
                }else{
                  $advDetail = array();
                }
                $trackData['broker_id']=$brokerId;
                if($brokerId==182)
                {
                    $trackData['send_broker_id']=181;

                    $advDetail = Users::findFirst(array('conditions' => "id='181'"));

                }else
                {
                    $trackData['send_broker_id'] = $brokerId;
                }

                $trackData['file_name']  = '';
                $trackData['created']    = date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $trackClickSave          = new BrokerSales();

                $saveTrack      = $trackClickSave->save($trackData);
                $linnkUrl       = '<a href="'.BASEURL.'dashboard/brokersalesreport/'.$trackData['send_broker_id'].'" target="_blank">'.BASEURL.'dashboard/brokersalesreport/'.$trackData['send_broker_id'].'</a>';
                $toEmailID      = $advDetail->email_id;
                $siteAdmin      = Sitesetting::findFirst(array("id=1"));
                $mailContent    = UIElements::bapCustUniGetMailText(29);
                $sendMsg        = $mailContent['body'];
                $sendMsg        = str_replace('{ToName}', stripslashes($advDetail->first_name), $sendMsg);
                $sendMsg        = str_replace('{linkurl}', $linnkUrl, $sendMsg);
                $subject        = $mailContent['subject'];
                $sentUmail      = UIElements::sendEmail($toEmailID, $subject, $sendMsg,'','',1);
        }
    }
    public function brokersalesreportAction($id="")
    {
        $response              = new \Phalcon\Http\Response();
        $applicantTypeArr      = array('1'=>'Personal Name','2'=>'Company');
        $loanTypeArr           = array('1'=>'Investment','2'=>'Regulated');
        $propertyTypeArr       = array('1'=>'Residential','2'=>'Semi Commercial','3'=>'Commercial','4'=>'Land no planning','Land With Planning');
        $refurbishmentArr      = array('1'=>'No','2'=>'Light Refurb  -  no planning permission required','3'=>'Heavy Refurb - planning permission required');
        $termTypeArr           = array('1'=>'1 month','2'=>'2 months','3'=>'3 months','4'=>'4 months','5'=>'5 months','6'=>'6 months','7'=>'7 months','8'=>'8 months','9'=>'9 months','10'=>'10 months','11'=>'11 months','12'=>'12 months','13'=>'13 months','14'=>'14 months','15'=>'15 months','16'=>'16 months','17'=>'17 months','18'=>'18 months','19'=>'19 months','20'=>'20 months','21'=>'21 months','22'=>'22 months','23'=>'23 months','24'=>'24 months');
        $adverseTypeArr       = array('1'=>'No','2'=>'Minor','3'=>'Light','4'=>'Heavy');
        $chargeTypeArr        = array('1'=>'1st charge bridge','2'=>'2nd charge bridge','3'=>'Development loan','4'=>'commercial loan', '5' => 'buy to let', '6' => 'Mezz');
        $valuationTypeArr     = array('1'=>'Purchase Price','2'=>'Market Value','3'=>'Open Market Value');
        $interestServicingOptionArr = array('1'=>'Deducted for entire term','2'=>'Serviced Monthly','3'=>'Rolled Up');
        $incomeArr                  = array('Provable' => 'Provable', 'Not Provable' => 'Not Provable');
        $applicationTypeArr         = array('1'=>'Bridging loan','2'=>'2nd Charge loan','3'=>'Term loan','4'=>'Development loan');
        $enquirySourceArr           = array('1'=>'Inbound Telephone','2'=>'Email marketing','3'=>'Auction lead','4'=>'Web search','5'=>'Other');
        //$brokerArr= array(180,182,188,355,453,462);
        //foreach ($brokerArr as $brokerId) {



                $joinArr=array();
                //========Permission code end here=========
                if($id==355 || $id==462){
                    $whr=array("enquiry.in_progress=1 and assign_advisor='".$id."' or assign_advisor=453");
                }else if($id==181){
                    $whr=array("enquiry.in_progress=1 and assign_advisor='182'");
                }else{
                    $whr=array("enquiry.in_progress=1 and assign_advisor='".$id."'");
                }


                $order          = "id desc";
                $where          = "";
                if(!empty($whr)){
                    $where      = " where ".implode(" and ", $whr);
                }
                $joinString     = "";
                if(!empty($joinArr)){
                    $joinString = " ".implode(" ", $joinArr);
                }

                $leadRes        = Enquiry::findAll("select enquiry.* from enquiry".$joinString.$where." order by ".$order);
                //$leadRes=Enquiry::find(array("conditions" => $where, "order" => "id desc",));
                $countNo        = 1;
                $data_array     = array(array('Sl#','PRODUCT','NAME','SECURITY','LOAN AMOUNT','LTV','PROC FEE','BROKER FEE','ADVISOR','LEAD GIVEN BY', 'LENDER', 'CASE STATUS','INQUIRED ON', 'LAST MODIFIED','LINK'));
                if(count($leadRes)>0){
                    foreach ($leadRes as $leadResult) {
                        $advisorid=$leadResult->assign_advisor;
                        if($advisorid!=''){
                          $advDetail  = Users::findFirst(array('conditions' => "id='".$advisorid."'"));
                        }else{
                          $advDetail  = array();
                        }
                        if($leadResult->lead_given_by!=''){
                          $leadgivendetails = Users::findFirst(array('conditions' => "id='".$leadResult->lead_given_by."'"));
                        }else{
                          $leadgivendetails = array();
                        }
                        $totalAmountRequired+=$leadResult->amount_required;
                        if($leadResult->inernal_broker_fee>0){
                          $bfee=$leadResult->inernal_broker_fee/100*$leadResult->amount_required;
                          $totbrokerfee+=$bfee;

                        }
                        if($leadResult->internal_proc_fee>0){
                          $pfee=$leadResult->internal_proc_fee/100*$leadResult->amount_required;
                          $totProcfee+=$pfee;

                        }
                        if (!empty($leadResult->product)) {
                          // $productDetail=Products::findFirst(array('conditions' => "id=".$leadResult->product." and is_active=1"));
                        }
                        if($leadResult->product!=''){
                          $chargeDetail = Charges::findFirst(array('conditions' => "id=".$leadResult->product));
                        }else if($leadResult->application_type!=''){
                          $chargeDetail = Charges::findFirst(array('conditions' => "id=".$leadResult->application_type));
                        }else{
                          $chargeDetail = array();
                        }
                        $noteText        = stripslashes($leadResult->note_text);
                        $shortNote       = (strlen($noteText)>30)? substr($noteText, 0, 30) : $noteText;
                        $leadAppDetail   = LeadApplication::find(array('conditions' => "lead_id=".$leadResult->id, 'limit' => 1));
                        if(count($leadAppDetail)>0){
                            $nameArr     = explode(":::", $leadAppDetail[0]->pd_fullname);
                            $clientname  = stripslashes($nameArr[0]);
                        } else {
                            if($leadResult->borrower_name!=''){
                              $clientname = $leadResult->borrower_name;
                            }else if($leadResult->first_name!=''){
                              $clientname = stripslashes($leadResult->first_name." ".$leadResult->last_name);
                            }else{
                              $clientname = "";
                            }
                        }
                        if(count($advDetail)>0){
                         $advisorName=$advDetail->first_name;
                        }else{
                            $advisorName="";
                        }
                        if(count($leadgivendetails)>0){
                           $leadGivenAdvisor=$leadgivendetails->first_name;
                        }else{
                            $leadGivenAdvisor="";
                        }
                        $workflowTaskRes=WorkflowTask::find(array('conditions' => "lead_id=".$leadResult->id, 'order' => "id desc", 'limit' => 1));
                        if(count($workflowTaskRes)>0){
                            $workflowTaskResult=$workflowTaskRes[0];
                            $taskLenderDetail=Users::findFirst(array('conditions' => "id='".$workflowTaskResult->task_lender."'"));
                            //$taskstatusDetail=TaskStatus::findFirst(array('conditions' => "id=".$workflowTaskResult->task_status));
                            if($taskLenderDetail->first_name!=''){
                              $lendername= $taskLenderDetail->first_name;
                            }else{
                              $lendername= "N/A";
                            }
                        }else{
                          $lendername= "N/A";
                        }
                        if(isset($leadResult->in_progress_sub) && $leadResult->in_progress_sub!="")
                        {
                            $casestatus= $leadResult->in_progress_sub;
                        }else
                        {
                           $workflowTaskRes=WorkflowTask::find(array('conditions' => "lead_id=".$leadResult->id, 'order' => "id desc", 'limit' => 1));
                           if(count($workflowTaskRes)>0){
                            $workflowTaskResult=$workflowTaskRes[0];
                            //$taskstatusDetail=TaskStatus::findFirst(array('conditions' => "id=".$workflowTaskResult->task_status));
                            if($workflowTaskResult->in_progress_sub=='Valuation/ Legal'){
                              $casestatus= "Valuation";
                            }else{
                              $casestatus= stripslashes($workflowTaskResult->in_progress_sub);
                            }



                          }else{
                          $casestatus= "N/A";
                         }
                        }
                        $url   = BASEURL."dashboard/pipelinedetail/".$leadResult->id;

                            array_push($data_array, array(
                            $countNo,
                            htmlentities(stripslashes($chargeDetail->charge_name)),
                            htmlentities($clientname),
                            htmlentities($propertyTypeArr[$leadResult->property_type]),
                            number_format($leadResult->amount_required, 2),
                            htmlentities($leadResult->ltv_required),
                            htmlentities($leadResult->internal_proc_fee),
                            htmlentities($leadResult->inernal_broker_fee),
                            htmlentities($advisorName),
                            htmlentities($leadGivenAdvisor),
                            htmlentities($lendername),
                            htmlentities($casestatus),
                            date("d/m/Y H:i A", strtotime($leadResult->created)),
                            date("d/m/Y H:i A", strtotime($leadResult->modified)),
                            $url,
                        ));
                        $countNo++;
                    }
                }
                $xls = new Excel_XML('UTF-8', false, 'Lead Report');
                $xls->addArray($data_array);
                $xls->generateXML(time().'-pipeline-report');

        //}
    }
    public function testmailwithtagAction(){
        $subject="Test Subject for google taggggg";
        $randomid=rand(10, 1000);
        $bodyMsg='Test message for google tag body.<img src="https://www.google-analytics.com/collect?v=1&tid=UA-810265-7&cid='.$randomid.'&aip=1&t=event&ec=email&ea=open&dp=%2Femail%2Fleadsendmail&dt=Lead%20Send%20Mail">';
        $sentUmail =UIElements::sendEmail('chittas970@gmail.com', $subject, $bodyMsg);
        if($sentUmail){
            echo "Mail send Successfully.";
        }else{
            echo "Mail sending Failed.";
        }
        exit();
    }
    /**
    * unsubscribe delete Action To Manage HZA track unsubscribe report delete Page
    * Action Name: trackunsubscribedeleteAction
    * Author By: chittaranjan Sahoo
    * Created Date: 13-02-2021
    **/
    public function trackunsubscribedeleteAction($id=''){
        $sucMsg=0;
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

            if(isset($allPost['enqChk']) && !empty($allPost['enqChk'])){
                foreach($allPost['enqChk'] as $singLeadid){
                    $delete=$this->modelsManager->executeQuery("delete from AbiUnsubscribeEmailList where id='".$singLeadid."'");
                    if($delete){
                        $sucMsg=1;
                    }
                }
            }
        }
        if($sucMsg==1){
            echo 1;
        }else{
            echo 2;
        }
        exit();
    }
    public function trackoutsidemailAction(){
        $response = new \Phalcon\Http\Response();
        $sessionID=$this->session->get('sessUserID');
        $userDetail=Users::findFirst(array('conditions' => "id='".$sessionID."'"));
        if($userDetail->is_view_marketing_tab!=1){
             return $response->redirect('dashboard');
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $alluser=$allPost['to_user'];
            //print_r($alluser);
            $sessionID=$this->session->get('sessUserID');
            $userDetail=Users::findFirst(array('conditions' => "id='".$sessionID."'"));
            $chkEmailArr=array();
            $totmailContentArr=array();
            if($userDetail->imap_connection_type!=''){

                //========Check email list============

                    if(isset($alluser['abi']) && count($alluser['abi'])>0){
                        $sessionID=rand(10, 1000000);
                        foreach($alluser['abi'] as $abiID){
                            $abiDetail=BarberAbi::findFirst(array('conditions' => "id='".$abiID."'", 'limit' => 1));
                            //echo $abiDetail->email_address;
                            if($abiDetail->email_address){

                               $chkAbiUnsubscribe=AbiUnsubscribeEmailList::find(array('conditions' => "abi_id='".$abiDetail->id."' and email_id='".$abiDetail->email_address."'", 'limit' => 1));
                                if(count($chkAbiUnsubscribe)<=0){
                                    array_push($chkEmailArr, $abiDetail->email_address);
                                }
                            }
                            //echo $abiDetail->email_address;
                            if($abiDetail->company_email){
                                $chkAbiUnsubscribe=AbiUnsubscribeEmailList::find(array('conditions' => "abi_id='".$abiDetail->id."' and email_id='".$abiDetail->company_email."'", 'limit' => 1));
                                if(count($chkAbiUnsubscribe)<=0){
                                    array_push($chkEmailArr, $abiDetail->company_email);
                                }
                            }

                        }
                    }
                    if(isset($alluser['lead']) && count($alluser['lead'])>0){
                        foreach($alluser['lead'] as $leadID){
                            $leadUserDet=Enquiry::findFirst(array('conditions' => "id='".$leadID."'", 'limit' => 1));
                            if($leadUserDet->borrower_email){
                                array_push($chkEmailArr, $leadUserDet->borrower_email);
                            }

                        }

                    }
                    if(isset($alluser['data']) && count($alluser['data'])>0){
                        foreach($alluser['data'] as $dataID){
                            $leadUserDet=Datatab::findFirst(array('conditions' => "id='".$dataID."'", 'limit' => 1));
                           if($leadUserDet->data_email){
                                array_push($chkEmailArr, $leadUserDet->data_email);
                            }
                        }
                    }
                    if(isset($alluser['creditsafe']) && count($alluser['creditsafe'])>0){
                        foreach($alluser['creditsafe'] as $creditsafeID){
                            $leadUserDet=Creditsafe::findFirst(array('conditions' => "id='".$creditsafeID."'", 'limit' => 1));
                            if($leadUserDet->email){
                                array_push($chkEmailArr, $leadUserDet->email);
                            }
                        }

                    }
                //print_r($chkEmailArr); exit();
                //========End check email list==========

                if(count($chkEmailArr)>0){

                    if($userDetail->imap_connection_type==1){
                        /* connect to gmail */
                        $hostname = '{imap.gmail.com:993/imap/ssl}INBOX';
                        $senthostname = '{imap.gmail.com:993/imap/ssl}[Gmail]/Sent Mail';
                    }else if($userDetail->imap_connection_type==2){
                        /* connect to gmail */
                        $hostname = '{imap.mail.yahoo.com:993/imap/ssl}INBOX';
                        $senthostname = '{imap.mail.yahoo.com:993/imap/ssl}Sent';
                    }else if($userDetail->imap_connection_type==3){
                        /* connect to gmail */
                        $hostname = '{outlook.office365.com:993/imap/ssl}INBOX';
                        $senthostname = '{outlook.office365.com:993/imap/ssl}Sent';
                    }else{
                        /* connect to gmail */
                        $hostname = '{'.$userDetail->imap_host.':993/imap/ssl}INBOX';
                        $senthostname = '{'.$userDetail->imap_host.':993/imap/ssl}Sent';
                    }
                    $username = $userDetail->imap_username;
                    $password = $userDetail->imap_password;

                    /* try to connect */
                    $inbox = imap_open($hostname,$username,$password) or die('Cannot connect to Account: ' . imap_last_error());
                    $sentbox = imap_open($senthostname,$username,$password) or die('Cannot connect to Account: ' . imap_last_error());

                    /* grab emails */
                    $emails = imap_search($inbox,'ALL');
                    //$emails = array();
                    /* grab Sent emails */
                    $sentEmails = imap_search($sentbox,'ALL');

                    /* if emails are returned, cycle through each... */
                    if(count($emails)>0) {
                        //echo "<pre>";print_r($emails); exit();

                        /* begin output var */
                        $output = '';

                        /* put the newest emails on top */
                        rsort($emails);
                        $emails=array_slice($emails, 0, 1000);
                        $count=1;
                        /* for every email... */
                        $mycount=1;
                        foreach($emails as $email_number) {
                            if($count<=20){
                                /* get information specific to this email */
                                $overview = imap_fetch_overview($inbox,$email_number,0);
                                //print_r($overview); exit();
                                //$message = imap_fetchbody($inbox,$email_number,2);
                                foreach($chkEmailArr as $singleEmailId){
                                    if(strpos($overview[0]->from,$singleEmailId)>-1){
                                        /*if(!$message){
                                            $message = imap_fetchbody($inbox,$email_number,1);
                                        }*/

                                        $structure = imap_fetchstructure($inbox, $email_number);

                                        if(isset($structure->parts) && is_array($structure->parts) && isset($structure->parts[1])) {
                                            $part = $structure->parts[1];
                                            if($part->encoding == 3) {
                                               $message = imap_fetchbody($inbox,$email_number,1.2);
                                               if($this->is_base64($message)==true){
                                                    $message = imap_base64($message);
                                                }
                                                $message=quoted_printable_decode($message);

                                            }else{
                                                $message = imap_fetchbody($inbox,$email_number,2);

                                                //if(strpos($overview[0]->from,"chittas970@gmail.com")>-1){
                                                    if(!$message){
                                                        $message = imap_fetchbody($inbox,$email_number,1);
                                                    }
                                                    if($this->is_base64($message)==true){
                                                        $message = imap_base64($message);
                                                    }
                                                $message = quoted_printable_decode($message);
                                            }
                                        }
                                        /* output the email header information */


                                        $contentArr['seen']=$overview[0]->seen;
                                        $contentArr['subject']=$overview[0]->subject;
                                        $contentArr['from']=$overview[0]->from;
                                        $contentArr['to']=$overview[0]->to;
                                        $contentArr['date']=$overview[0]->date;
                                        $contentArr['body']=$message;
                                        $contentArr['msgtype']='inbox';
                                        array_push($totmailContentArr, $contentArr);

                                        //echo $output;
                                        $count++;
                                    }
                                }
                            }


                        }


                    }

                    /* if emails are returned, cycle through each... */
                    if(count($sentEmails)>0) {
                        //echo "<pre>";print_r($emails); exit();

                        /* begin output var */
                        $output = '';

                        /* put the newest emails on top */
                        rsort($sentEmails);
                        $sentEmails=array_slice($sentEmails, 0, 1000);
                        $count=1;
                        /* for every email... */
                        $mycount=1;
                        foreach($sentEmails as $email_number) {
                            /* get information specific to this email */
                            if($count<=20){
                                $overview = imap_fetch_overview($sentbox,$email_number,0);
                                //print_r($overview); exit();
                                //$message = imap_fetchbody($sentbox,$email_number,2);
                                foreach($chkEmailArr as $singleEmailId){
                                    if($overview[0]->to==$singleEmailId){
                                        /*if(!$message){
                                            $message = imap_fetchbody($sentbox,$email_number,1);
                                        }*/
                                        /*$structure = imap_fetchstructure($sentbox, $email_number);

                                        if(isset($structure->parts) && is_array($structure->parts) && isset($structure->parts[1])) {
                                            $part = $structure->parts[1];
                                            if($part->encoding == 3) {
                                                /*$message = imap_base64($message);
                                                if (preg_match('/^([a-zA-Z0-9]{76} )+[a-zA-Z0-9]{76}$/', $message)) {
                                                    $message = base64_decode($message);
                                                }*/
                                                /*if(strpos(imap_base64($message),"PNG")>-1){
                                                    $message='<img src="data:image/png;base64,'.$message.'" style="width: 100%;">';
                                                }else if(strpos(imap_base64($message),"PDF")>-1){
                                                    $message='<embed src="data:application/pdf;base64,'.$message.'" style="width: 100%;height: 400px;">';
                                                }
                                                $body = imap_fetchbody($sentbox,$email_number,1);
                                                $body = imap_base64($body);
                                                $message.=quoted_printable_decode($body);
                                                //$message = quoted_printable_decode($message);

                                            }else{
                                                $message = quoted_printable_decode(imap_fetchbody($sentbox,$email_number,1));
                                            }
                                        }else{
                                            $message = quoted_printable_decode(imap_fetchbody($sentbox,$email_number,1));
                                        }*/
                                        $structure = imap_fetchstructure($sentbox, $email_number);

                                        if(isset($structure->parts) && is_array($structure->parts) && isset($structure->parts[1])) {
                                            $part = $structure->parts[1];
                                            if($part->encoding == 3) {
                                               $message = imap_fetchbody($sentbox,$email_number,1.2);
                                                $message=quoted_printable_decode($message);

                                            }else{
                                                $message = imap_fetchbody($sentbox,$email_number,2);

                                                //if(strpos($overview[0]->from,"chittas970@gmail.com")>-1){
                                                    if(!$message){
                                                        $message = imap_fetchbody($sentbox,$email_number,1);
                                                    }
                                                $message = quoted_printable_decode($message);
                                            }
                                        }
                                        /* output the email header information */


                                        $contentArr['seen']=$overview[0]->seen;
                                        $contentArr['subject']=$overview[0]->subject;
                                        $contentArr['from']=$overview[0]->from;
                                        $contentArr['to']=$overview[0]->to;
                                        $contentArr['date']=$overview[0]->date;
                                        $contentArr['body']=$message;
                                        $contentArr['msgtype']='sent';
                                        array_push($totmailContentArr, $contentArr);

                                        //echo $output;
                                        $count++;
                                    }
                                }
                            }


                        }


                    }

                    if(!empty($totmailContentArr)){
                        $this->session->set('totmailContentArr', $totmailContentArr);
                        $this->flashSession->success("Here Goes the searched user email report");
                    }else{
                        $this->flashSession->error("There is no email exchange between them");
                    }
                }


            }else{
                $this->flashSession->error("No Imap conection set for this advisor profile. Please go the update profile page to add the credential.");
            }
        }
    }
    public function trackoutsidemailnewAction(){
        $response = new \Phalcon\Http\Response();
        $sessionID=$this->session->get('sessUserID');
        $userDetail=Users::findFirst(array('conditions' => "id='".$sessionID."'"));
        if($userDetail->is_view_marketing_tab!=1){
             return $response->redirect('dashboard');
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $alluser=$allPost['to_user'];
            //print_r($alluser);
            $sessionID=$this->session->get('sessUserID');
            $userDetail=Users::findFirst(array('conditions' => "id='".$sessionID."'"));
            $chkEmailArr=array();
            $totmailContentArr=array();
            if($userDetail->imap_connection_type!=''){

                //========Check email list============

                    if(isset($alluser['abi']) && count($alluser['abi'])>0){
                        $sessionID=rand(10, 1000000);
                        foreach($alluser['abi'] as $abiID){
                            $abiDetail=BarberAbi::findFirst(array('conditions' => "id='".$abiID."'", 'limit' => 1));
                            //echo $abiDetail->email_address;
                            if($abiDetail->email_address){

                               $chkAbiUnsubscribe=AbiUnsubscribeEmailList::find(array('conditions' => "abi_id='".$abiDetail->id."' and email_id='".$abiDetail->email_address."'", 'limit' => 1));
                                if(count($chkAbiUnsubscribe)<=0){
                                    array_push($chkEmailArr, $abiDetail->email_address);
                                }
                            }
                            //echo $abiDetail->email_address;
                            if($abiDetail->company_email){
                                $chkAbiUnsubscribe=AbiUnsubscribeEmailList::find(array('conditions' => "abi_id='".$abiDetail->id."' and email_id='".$abiDetail->company_email."'", 'limit' => 1));
                                if(count($chkAbiUnsubscribe)<=0){
                                    array_push($chkEmailArr, $abiDetail->company_email);
                                }
                            }

                        }
                    }
                    if(isset($alluser['lead']) && count($alluser['lead'])>0){
                        foreach($alluser['lead'] as $leadID){
                            $leadUserDet=Enquiry::findFirst(array('conditions' => "id='".$leadID."'", 'limit' => 1));
                            if($leadUserDet->borrower_email){
                                array_push($chkEmailArr, $leadUserDet->borrower_email);
                            }

                        }

                    }
                    if(isset($alluser['data']) && count($alluser['data'])>0){
                        foreach($alluser['data'] as $dataID){
                            $leadUserDet=Datatab::findFirst(array('conditions' => "id='".$dataID."'", 'limit' => 1));
                           if($leadUserDet->data_email){
                                array_push($chkEmailArr, $leadUserDet->data_email);
                            }
                        }
                    }
                    if(isset($alluser['creditsafe']) && count($alluser['creditsafe'])>0){
                        foreach($alluser['creditsafe'] as $creditsafeID){
                            $leadUserDet=Creditsafe::findFirst(array('conditions' => "id='".$creditsafeID."'", 'limit' => 1));
                            if($leadUserDet->email){
                                array_push($chkEmailArr, $leadUserDet->email);
                            }
                        }

                    }
                //print_r($chkEmailArr); exit();
                //========End check email list==========

                if(count($chkEmailArr)>0){

                    if($userDetail->imap_connection_type==1){
                        /* connect to gmail */
                        $hostname = '{imap.gmail.com:993/imap/ssl}INBOX';
                        $senthostname = '{imap.gmail.com:993/imap/ssl}[Gmail]/Sent Mail';
                    }else if($userDetail->imap_connection_type==2){
                        /* connect to gmail */
                        $hostname = '{imap.mail.yahoo.com:993/imap/ssl}INBOX';
                        $senthostname = '{imap.mail.yahoo.com:993/imap/ssl}Sent';
                    }else if($userDetail->imap_connection_type==3){
                        /* connect to gmail */
                        $hostname = '{outlook.office365.com:993/imap/ssl}INBOX';
                        $senthostname = '{outlook.office365.com:993/imap/ssl}Sent';
                    }else{
                        /* connect to gmail */
                        $hostname = '{'.$userDetail->imap_host.':993/imap/ssl}INBOX';
                        $senthostname = '{'.$userDetail->imap_host.':993/imap/ssl}Sent';
                    }
                    $username = $userDetail->imap_username;
                    $password = $userDetail->imap_password;

                    /* try to connect */
                    $inbox = imap_open($hostname,$username,$password) or die('Cannot connect to Account: ' . imap_last_error());
                    $sentbox = imap_open($senthostname,$username,$password) or die('Cannot connect to Account: ' . imap_last_error());

                    /* grab emails */
                    $emails = imap_search($inbox,'ALL');
                    //$emails = array();
                    /* grab Sent emails */
                    $sentEmails = imap_search($sentbox,'ALL');

                    /* if emails are returned, cycle through each... */
                    if(count($emails)>0) {
                        //echo "<pre>";print_r($emails); exit();

                        /* begin output var */
                        $output = '';

                        /* put the newest emails on top */
                        rsort($emails);
                        $emails=array_slice($emails, 0, 1000);
                        $count=1;
                        /* for every email... */
                        $mycount=1;
                        foreach($emails as $email_number) {
                            if($count<=20){
                                /* get information specific to this email */
                                $overview = imap_fetch_overview($inbox,$email_number,0);
                                //print_r($overview); exit();
                                //$message = imap_fetchbody($inbox,$email_number,2);
                                foreach($chkEmailArr as $singleEmailId){
                                    if(strpos($overview[0]->from,$singleEmailId)>-1){
                                        /*if(!$message){
                                            $message = imap_fetchbody($inbox,$email_number,1);
                                        }*/

                                        $structure = imap_fetchstructure($inbox, $email_number);

                                        if(isset($structure->parts) && is_array($structure->parts) && isset($structure->parts[1])) {
                                            $part = $structure->parts[1];
                                            if($part->encoding == 3) {
                                               $message = imap_fetchbody($inbox,$email_number,1.2);
                                               if($this->is_base64($message)==true){
                                                    $message = imap_base64($message);
                                                }
                                                $message=quoted_printable_decode($message);

                                            }else{
                                                $message = imap_fetchbody($inbox,$email_number,2);

                                                //if(strpos($overview[0]->from,"chittas970@gmail.com")>-1){
                                                    if(!$message){
                                                        $message = imap_fetchbody($inbox,$email_number,1);
                                                    }
                                                    if($this->is_base64($message)==true){
                                                        $message = imap_base64($message);
                                                    }
                                                $message = quoted_printable_decode($message);
                                            }
                                        }
                                        /* output the email header information */


                                        $contentArr['seen']=$overview[0]->seen;
                                        $contentArr['subject']=$overview[0]->subject;
                                        $contentArr['from']=$overview[0]->from;
                                        $contentArr['to']=$overview[0]->to;
                                        $contentArr['date']=$overview[0]->date;
                                        $contentArr['body']=$message;
                                        $contentArr['msgtype']='inbox';
                                        array_push($totmailContentArr, $contentArr);

                                        //echo $output;
                                        $count++;
                                    }
                                }
                            }


                        }


                    }

                    /* if emails are returned, cycle through each... */
                    if(count($sentEmails)>0) {
                        //echo "<pre>";print_r($emails); exit();

                        /* begin output var */
                        $output = '';

                        /* put the newest emails on top */
                        rsort($sentEmails);
                        $sentEmails=array_slice($sentEmails, 0, 1000);
                        $count=1;
                        /* for every email... */
                        $mycount=1;
                        foreach($sentEmails as $email_number) {
                            /* get information specific to this email */
                            if($count<=20){
                                $overview = imap_fetch_overview($sentbox,$email_number,0);
                                //print_r($overview); exit();
                                //$message = imap_fetchbody($sentbox,$email_number,2);
                                foreach($chkEmailArr as $singleEmailId){
                                    if($overview[0]->to==$singleEmailId){
                                        /*if(!$message){
                                            $message = imap_fetchbody($sentbox,$email_number,1);
                                        }*/
                                        /*$structure = imap_fetchstructure($sentbox, $email_number);

                                        if(isset($structure->parts) && is_array($structure->parts) && isset($structure->parts[1])) {
                                            $part = $structure->parts[1];
                                            if($part->encoding == 3) {
                                                /*$message = imap_base64($message);
                                                if (preg_match('/^([a-zA-Z0-9]{76} )+[a-zA-Z0-9]{76}$/', $message)) {
                                                    $message = base64_decode($message);
                                                }*/
                                                /*if(strpos(imap_base64($message),"PNG")>-1){
                                                    $message='<img src="data:image/png;base64,'.$message.'" style="width: 100%;">';
                                                }else if(strpos(imap_base64($message),"PDF")>-1){
                                                    $message='<embed src="data:application/pdf;base64,'.$message.'" style="width: 100%;height: 400px;">';
                                                }
                                                $body = imap_fetchbody($sentbox,$email_number,1);
                                                $body = imap_base64($body);
                                                $message.=quoted_printable_decode($body);
                                                //$message = quoted_printable_decode($message);

                                            }else{
                                                $message = quoted_printable_decode(imap_fetchbody($sentbox,$email_number,1));
                                            }
                                        }else{
                                            $message = quoted_printable_decode(imap_fetchbody($sentbox,$email_number,1));
                                        }*/
                                        $structure = imap_fetchstructure($sentbox, $email_number);

                                        if(isset($structure->parts) && is_array($structure->parts) && isset($structure->parts[1])) {
                                            $part = $structure->parts[1];
                                            if($part->encoding == 3) {
                                               $message = imap_fetchbody($sentbox,$email_number,1.2);
                                                $message=quoted_printable_decode($message);

                                            }else{
                                                $message = imap_fetchbody($sentbox,$email_number,2);

                                                //if(strpos($overview[0]->from,"chittas970@gmail.com")>-1){
                                                    if(!$message){
                                                        $message = imap_fetchbody($sentbox,$email_number,1);
                                                    }
                                                $message = quoted_printable_decode($message);
                                            }
                                        }
                                        /* output the email header information */


                                        $contentArr['seen']=$overview[0]->seen;
                                        $contentArr['subject']=$overview[0]->subject;
                                        $contentArr['from']=$overview[0]->from;
                                        $contentArr['to']=$overview[0]->to;
                                        $contentArr['date']=$overview[0]->date;
                                        $contentArr['body']=$message;
                                        $contentArr['msgtype']='sent';
                                        array_push($totmailContentArr, $contentArr);

                                        //echo $output;
                                        $count++;
                                    }
                                }
                            }


                        }


                    }

                    if(!empty($totmailContentArr)){
                        $this->session->set('totmailContentArr', $totmailContentArr);
                        $this->flashSession->success("Here Goes the searched user email report");
                    }else{
                        $this->flashSession->error("There is no email exchange between them");
                    }
                }


            }else{
                $this->flashSession->error("No Imap conection set for this advisor profile. Please go the update profile page to add the credential.");
            }
        }
    }
    public function leadautocompleteAction(){
        if($this->request->isPost())
        {
            $appendTag='';
            $appendFunc='';
            $xyz = 0;
            echo "<div class='items'><ul>";
            $allpost=$this->request->getPost();
            $tagname=$allpost['tag'];//print_r($allpost);
            $srhtxt=$tagname;
            /*$res=Individuals::find(array(
                'conditions' => "(first_name LIKE '%".$tagname."%' or last_name LIKE '%".$tagname."%' or CONCAT(first_name,' ', last_name) LIKE '%".$tagname."%') and (church_id='".$churchid."' or id='".$churchid."') and is_active=1",
                 'order' => "first_name asc",
                 ))->toArray();*/
            $res=BarberAbi::find(array("conditions"=>"(first_name like '%".$srhtxt."%' or last_name like '%".$srhtxt."%' or CONCAT(first_name, ' ', last_name) like '%".$srhtxt."%' or company_name like '%".$srhtxt."%' or postcode = '".$srhtxt."' or company_phone = '".$srhtxt."' or company_email like '%".$srhtxt."%' or person_name like '%".$srhtxt."%' or person_title like '%".$srhtxt."%' or person_title like '%".$srhtxt."%' or role_name like '%".$srhtxt."%' or project_no like '%".$srhtxt."%' or project_title like '%".$srhtxt."%' or company_address_one like '%".$srhtxt."%' or company_address_two like '%".$srhtxt."%' or company_address_three like '%".$srhtxt."%' or company_address_four like '%".$srhtxt."%' or postcode like '%".$srhtxt."%' or company_fax like '%".$srhtxt."%' or title like '%".$srhtxt."%' or short_site_address like '%".$srhtxt."%' or site_address_one like '%".$srhtxt."%' or site_number like '%".$srhtxt."%' or your_ending like '%".$srhtxt."%' or email_address like '%".$srhtxt."%' or project_value like '%".$srhtxt."%' or planning_ref like '%".$srhtxt."%' or development_type like '%".$srhtxt."%' or stage like '%".$srhtxt."%' or scheme_details like '%".$srhtxt."%' or programme_timing like '%".$srhtxt."%' or contract_type like '%".$srhtxt."%' or mobile_no like '%".$srhtxt."%') and (email_address !='' or company_email!='') and (not_send_mail=0 or not_send_mail='' or not_send_mail IS NULL) and is_active=1","order" => "first_name asc", 'limit' => 5))->toArray();
            if(!empty($res)){
                foreach($res as $result){
                        $xyz++;
                        if($result['first_name']!=''){
                            $abiName=stripslashes($result['first_name']." ".$result['last_name']);
                        }else if($result['email_address']!=''){
                            $abiName=$result['email_address'];
                          }else if($result['company_email']){
                            $abiName=$result['company_email'];
                          }
                          $isUnsubscribe=1;
                          if($result['email_address']){
                                $chkAbiUnsubscribe=AbiUnsubscribeEmailList::find(array('conditions' => "abi_id='".$result['id']."' and email_id='".$result['email_address']."'", 'limit' => 1));
                                if(count($chkAbiUnsubscribe)<=0){
                                    $isUnsubscribe=0;
                                }
                            }
                            if($result['company_email']){
                                $chkAbiUnsubscribe=AbiUnsubscribeEmailList::find(array('conditions' => "abi_id='".$result['id']."' and email_id='".$result['company_email']."'", 'limit' => 1));
                                if(count($chkAbiUnsubscribe)<=0){
                                    $isUnsubscribe=0;
                                }
                            }
                        if($isUnsubscribe==0){
                            $add_tag = str_replace(strtolower($allpost['tag']), '<b>'.$allpost['tag'].'</b>', strtolower($abiName));

                            if ($xyz == 1)
                            {?>
                                <li class="selected" onclick="return sendText<?=$appendFunc?>('<?="Abi: ".$abiName?>', <?=stripslashes($result['id'])?>, 'abi');"><?="Abi: ".ucfirst($add_tag)?></li><?php
                            }
                            else
                            {?>
                                <li onclick="return sendText<?=$appendFunc?>('<?="Abi: ".$abiName?>', <?=stripslashes($result['id'])?>, 'abi');"><?="Abi: ".ucfirst($add_tag)?></li><?php
                            }
                        }



                }
            }
            //echo "select enquiry.* from enquiry left join lead_application on enquiry.id=lead_application.lead_id where (enquiry.borrower_name like '%".$srhtxt."%' or enquiry.first_name like '%".$srhtxt."%' or enquiry.last_name like '%".$srhtxt."%' or CONCAT(enquiry.first_name, ' ', enquiry.last_name) like '%".$srhtxt."%' or enquiry.borrower_email = '".$srhtxt."' or enquiry.borrower_mob = '".$srhtxt."' or enquiry.postcode = '".$srhtxt."' or enquiry.name_of_comany like '%".$srhtxt."%' or enquiry.borrower_address like '%".$srhtxt."%' or lead_application.pd_fullname like '%".$srhtxt."%') and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (not_send_mail=0 or not_send_mail='' or not_send_mail IS NULL) order by first_name asc"; exit();
             $leadRes=Enquiry::findAll("select enquiry.* from enquiry left join lead_application on enquiry.id=lead_application.lead_id where (enquiry.borrower_name like '%".$srhtxt."%' or enquiry.first_name like '%".$srhtxt."%' or enquiry.last_name like '%".$srhtxt."%' or CONCAT(enquiry.first_name, ' ', enquiry.last_name) like '%".$srhtxt."%' or enquiry.borrower_email = '".$srhtxt."' or enquiry.borrower_mob = '".$srhtxt."' or enquiry.postcode = '".$srhtxt."' or enquiry.name_of_comany like '%".$srhtxt."%' or enquiry.borrower_address like '%".$srhtxt."%' or lead_application.pd_fullname like '%".$srhtxt."%') and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (not_send_mail=0 or not_send_mail='' or not_send_mail IS NULL) order by first_name asc")->toArray();


             //Enquiry::find(array("order" => "first_name asc", 'conditions' => "(enquiry.borrower_name like '%".$srhtxt."%' or enquiry.first_name like '%".$srhtxt."%' or enquiry.last_name like '%".$srhtxt."%' or CONCAT(enquiry.first_name, ' ', enquiry.last_name) like '%".$srhtxt."%' or enquiry.borrower_email = '".$srhtxt."' or enquiry.borrower_mob = '".$srhtxt."' or enquiry.postcode = '".$srhtxt."' or enquiry.name_of_comany like '%".$srhtxt."%' or enquiry.borrower_address like '%".$srhtxt."%' or lead_application.pd_fullname like '%".$srhtxt."%' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and (not_send_mail=0 or not_send_mail='' or not_send_mail IS NULL)", 'limit' => 5))->toArray();

             if(!empty($leadRes)){
                foreach($leadRes as $result){
                        $xyz++;
                        $leadAppDetail=LeadApplication::find(array('conditions' => "lead_id=".$result['id'], 'limit' => 1));
                        if(count($leadAppDetail)>0){
                            $nameArr=explode(":::", $leadAppDetail[0]->pd_fullname);
                            $leadName=stripslashes($nameArr[0]);
                          } else {
                            if($result['borrower_name']!=''){
                              $leadName=$result['borrower_name'];
                            }else if($result['first_name']!=''){
                              $leadName=stripslashes($result['first_name']." ".$result['last_name']);
                            }else if($result['borrower_email']!=''){
                                $leadName=$result['borrower_email'];
                            }else{
                                $leadName="";
                            }
                          }


                        /*if($result['first_name']!=''){
                            $leadName=stripslashes($result['first_name']." ".$result['last_name']);
                        }else if($result['borrower_email']!=''){
                            $leadName=$result['borrower_email'];
                        }*/
                        $add_tag = str_replace(strtolower($allpost['tag']), '<b>'.$allpost['tag'].'</b>', strtolower($leadName));

                        if ($xyz == 1)
                        {?>
                            <li class="selected" onclick="return sendText<?=$appendFunc?>('<?="Lead: ".$leadName?>', <?=stripslashes($result['id'])?>, 'lead');"><?="Lead: ".ucfirst($add_tag)?></li><?php
                        }
                        else
                        {?>
                            <li onclick="return sendText<?=$appendFunc?>('<?="Lead: ".$leadName?>', <?=stripslashes($result['id'])?>, 'lead');"><?="Lead: ".ucfirst($add_tag)?></li><?php
                        }
                }
            }

            $dataRes=Datatab::find(array("conditions"=>"(not_send_mail=0 or not_send_mail='' or not_send_mail IS NULL) and (first_name like '%".$srhtxt."%' or last_name like '%".$srhtxt."%' or CONCAT(first_name, ' ', last_name) like '%".$srhtxt."%' or data_email = '".$srhtxt."')","order" => "first_name asc", 'limit' => 5))->toArray();

            if(!empty($dataRes)){
                foreach($dataRes as $result){
                        $xyz++;
                        if($result['first_name']!=''){
                            $datauserName=stripslashes($result['first_name']." ".$result['last_name']);
                        }else if($result['data_email']!=''){
                            $datauserName=$result['data_email'];
                        }
                        $add_tag = str_replace(strtolower($allpost['tag']), '<b>'.$allpost['tag'].'</b>', strtolower($datauserName));

                        if ($xyz == 1)
                        {?>
                            <li class="selected" onclick="return sendText<?=$appendFunc?>('<?="Data:".$datauserName?>', <?=stripslashes($result['id'])?>, 'data');"><?="Data:".ucfirst($add_tag)?></li><?php
                        }
                        else
                        {?>
                            <li onclick="return sendText<?=$appendFunc?>('<?="Data:".$datauserName?>', <?=stripslashes($result['id'])?>, 'data');"><?="Data:".ucfirst($add_tag)?></li><?php
                        }
                }
            }
            $creditsafeRes=Creditsafe::find(array("conditions"=>"(forename like '%".$srhtxt."%' or surname like '%".$srhtxt."%' or CONCAT(forename, ' ', surname) like '%".$srhtxt."%')","order" => "forename asc", 'limit' => 5))->toArray();

            if(!empty($creditsafeRes)){
                foreach($creditsafeRes as $result){
                        $xyz++;
                        if($result['forename']!=''){
                            $creditsafeuserName=stripslashes($result['forename']." ".$result['surname']);
                        }else if($result['data_email']!=''){
                            $creditsafeuserName=$result['data_email'];
                        }
                        $add_tag = str_replace(strtolower($allpost['tag']), '<b>'.$allpost['tag'].'</b>', strtolower($creditsafeuserName));

                        if ($xyz == 1)
                        {?>
                            <li class="selected" onclick="return sendText<?=$appendFunc?>('<?="Creditsafe:".$creditsafeuserName?>', <?=stripslashes($result['id'])?>, 'creditsafe');"><?="Creditsafe:".ucfirst($add_tag)?></li><?php
                        }
                        else
                        {?>
                            <li onclick="return sendText<?=$appendFunc?>('<?="Creditsafe:".$creditsafeuserName?>', <?=stripslashes($result['id'])?>, 'creditsafe');"><?="Creditsafe:".ucfirst($add_tag)?></li><?php
                        }
                }
            }
            if(empty($res) && empty($leadRes) && empty($dataRes) && empty($creditsafeRes)){
            ?>
                <li>No User Found :(</li><?php
            }
            ?></ul><div>
            <script>
            function sendText(text, val_id, userType)
            {
                if ($(".keywrd_pop_top").is(":visible")) {
                    if (text!='') {
                        var removeUserIdentification="'"+userType+val_id+"'";
                        $("#choose_leader_list").append('<div class="groupItemContainer touseridcls'+userType+val_id+'"><span class="singleItem">'+text+'<a class="remove glyphicon glyphicon-remove-circle" alt="12" href="javascript:{}" title="'+text+'" data-id="'+val_id+'" onclick="removetouserFunc('+removeUserIdentification+')"></a></span><input type="hidden" name="to_user['+userType+'][]" id="'+userType+'toUserID_'+val_id+'" value="'+val_id+'"></div>');
                        $("#choose_email_id").val('');
                        $("#choose_email_id").focus();
                        $(".keywrd_pop_top").hide();
                        $("#errortrackmsg").show();
                        $("#adddataTabFrm").submit();

                    }
                }
                else
                {
                    if (text!='') {
                        $("#choose_leader_list").append('');
                        $("#choose_email_id").val('');
                        $("#choose_email_id").focus();
                        $(".keywrd_pop").hide();
                    }
                }
            }
            </script>
            <?php
        }
        exit();
    }
    public function fetchoutsidemailbyclientAction(){
        $responseArr=array('response' => 0, 'content' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            //print_r($alluser);
            //$sessionID=462;
            $sessionID=$this->session->get('sessUserID');
            $leadDetail=Enquiry::findFirst(array('conditions' => "id='".$allPost["lead_user_id"]."'"));
            $clientname="";
            if($leadDetail->borrower_name!=''){
              $clientname=$leadDetail->borrower_name;
            }else{
              if(count($leadAppDetail)>0){
                $nameArr=explode(":::", $leadAppDetail[0]->pd_fullname);
                $clientname=stripslashes($nameArr[0]);
              }else{
                if($leadDetail->borrower_name!=''){
                  $clientname=$leadDetail->borrower_name;
                }else if($leadDetail->first_name!=''){
                  $clientname=stripslashes($leadDetail->first_name." ".$leadDetail->last_name);
                }else{
                  $clientname="";
                }
              }
            }
            if($sessionID==516)
            {
                //echo 123;exit;
                $brokerList= $advisorList=Users::find(array('conditions' => "u_type=0 and is_active=1 and id not in(3,516,481,492,476,182,184,181)",'order' => "id desc"));
                $totmailContentArr=array();
                $count1=0;
                foreach($brokerList as $brokerDet){
                    $count1++;

                    $userDetail=Users::findFirst(array('conditions' => "id='".$brokerDet->id."'"));
                    $chkEmailArr=array();
                    $totmailContentArr=array();
                    if($userDetail->imap_connection_type!=''){




                        if($allPost['email_id']!=''){

                            if($userDetail->imap_connection_type==1){
                                /* connect to gmail */
                                $hostname = '{imap.gmail.com:993/imap/ssl}INBOX';
                                $senthostname = '{imap.gmail.com:993/imap/ssl}[Gmail]/Sent Mail';
                            }else if($userDetail->imap_connection_type==2){
                                /* connect to gmail */
                                $hostname = '{imap.mail.yahoo.com:993/imap/ssl}INBOX';
                                $senthostname = '{imap.mail.yahoo.com:993/imap/ssl}Sent';
                            }else if($userDetail->imap_connection_type==3){
                                /* connect to gmail */
                                $hostname = '{outlook.office365.com:993/imap/ssl}INBOX';
                                $senthostname = '{outlook.office365.com:993/imap/ssl}Sent';
                            }else{
                                /* connect to gmail */
                                $hostname = '{'.$userDetail->imap_host.':993/imap/ssl}INBOX';
                                $senthostname = '{'.$userDetail->imap_host.':993/imap/ssl}Sent';
                            }
                            $username = $userDetail->imap_username;
                            $password = $userDetail->imap_password;

                            /* try to connect */
                            $inbox = imap_open($hostname,$username,$password) or die('Cannot connect to Account: ' . imap_last_error());
                            $sentbox = imap_open($senthostname,$username,$password) or die('Cannot connect to Account: ' . imap_last_error());;
                            /* grab emails */
                            $emails = imap_search($inbox,'FROM "'.$allPost['email_id'].'"');
                            //$emails = array();
                            /* grab Sent emails */
                            $sentEmails = imap_search($sentbox,'TO "'.$allPost['email_id'].'"');

                            /* if emails are returned, cycle through each... */
                            if(count($emails)>0) {
                                //echo "<pre>";print_r($emails); exit();

                                /* begin output var */
                                $output = '';

                                /* put the newest emails on top */
                                rsort($emails);
                                $emails=array_slice($emails, 0, 1000);
                                $count=1;
                                /* for every email... */
                                $mycount=1;
                                foreach($emails as $email_number) {
                                    if($count<=20){
                                        /* get information specific to this email */
                                        $overview = imap_fetch_overview($inbox,$email_number,0);
                                        //print_r($overview); exit();
                                        //$message = imap_fetchbody($inbox,$email_number,2);
                                        if(strpos($overview[0]->from,$allPost['email_id'])>-1){
                                            $structure = imap_fetchstructure($inbox, $email_number);

                                            if(isset($structure->parts) && is_array($structure->parts) && isset($structure->parts[1])) {
                                                $part = $structure->parts[1];
                                                if($part->encoding == 3) {
                                                   $message = imap_fetchbody($inbox,$email_number,1.2);
                                                   if($this->is_base64($message)==true){
                                                        $message = imap_base64($message);
                                                    }
                                                    $message=quoted_printable_decode($message);

                                                }else{
                                                    $message = imap_fetchbody($inbox,$email_number,2);

                                                    //if(strpos($overview[0]->from,"chittas970@gmail.com")>-1){
                                                        if(!$message){
                                                            $message = imap_fetchbody($inbox,$email_number,1);
                                                        }
                                                        if($this->is_base64($message)==true){
                                                            $message = imap_base64($message);
                                                        }
                                                    $message = quoted_printable_decode($message);
                                                }
                                            }
                                            /* output the email header information */


                                            $contentArr['seen']=$overview[0]->seen;
                                            $contentArr['subject']=$overview[0]->subject;
                                            $contentArr['from']=$overview[0]->from;
                                            $contentArr['to']=$overview[0]->to;
                                            $contentArr['date']=$overview[0]->date;
                                            $contentArr['body']=$message;
                                            $contentArr['msgtype']='inbox';
                                            array_push($totmailContentArr, $contentArr);

                                            //echo $output;
                                            $count++;
                                        }
                                    }


                                }


                            }

                            /* if emails are returned, cycle through each... */
                            if(count($sentEmails)>0) {
                                //echo "<pre>";print_r($emails); exit();

                                /* begin output var */
                                $output = '';

                                /* put the newest emails on top */
                                rsort($sentEmails);
                                $sentEmails=array_slice($sentEmails, 0, 1000);
                                $count=1;
                                /* for every email... */
                                $mycount=1;
                                foreach($sentEmails as $email_number) {
                                    /* get information specific to this email */
                                    if($count<=20){
                                        $overview = imap_fetch_overview($sentbox,$email_number,0);
                                        //print_r($overview); exit();
                                        //$message = imap_fetchbody($sentbox,$email_number,2);

                                        if($overview[0]->to==$allPost['email_id']){
                                            /*if(!$message){
                                                $message = imap_fetchbody($sentbox,$email_number,1);
                                            }*/

                                            $structure = imap_fetchstructure($sentbox, $email_number);

                                            if(isset($structure->parts) && is_array($structure->parts) && isset($structure->parts[1])) {
                                                $part = $structure->parts[1];
                                                if($part->encoding == 3) {
                                                   $message = imap_fetchbody($sentbox,$email_number,1.2);
                                                    $message=quoted_printable_decode($message);

                                                }else{
                                                    $message = imap_fetchbody($sentbox,$email_number,2);

                                                    //if(strpos($overview[0]->from,"chittas970@gmail.com")>-1){
                                                        if(!$message){
                                                            $message = imap_fetchbody($sentbox,$email_number,1);
                                                        }
                                                    $message = quoted_printable_decode($message);
                                                }
                                            }
                                            /* output the email header information */


                                            $contentArr['seen']=$overview[0]->seen;
                                            $contentArr['subject']=$overview[0]->subject;
                                            $contentArr['from']=$overview[0]->from;
                                            $contentArr['to']=$overview[0]->to;
                                            $contentArr['date']=$overview[0]->date;
                                            $contentArr['body']=$message;
                                            $contentArr['msgtype']='sent';
                                            array_push($totmailContentArr, $contentArr);

                                            //echo $output;
                                            $count++;
                                        }

                                    }


                                }


                            }

                            if(!empty($totmailContentArr)){
                               // $this->session->set('enquirytotmailContentArr'.$allPost['lead_user_id'], $totmailContentArr);

                                $lenderresult=$this->modelsManager->executeQuery("delete from OutsideFetchEmailClient where lead_id='".$allPost['lead_user_id']."' and broker_id='0'");
                                foreach($totmailContentArr as $mailresult)
                                {
                                    $allpost=array();
                                    $fetchmailclientObj=new OutsideFetchEmailClient();
                                    $allpost["lead_id"]=$allPost['lead_user_id'];
                                    $allpost["broker_id"]=0;
                                    $allpost["subject"]=$mailresult['subject'];
                                    $allpost["from_email"]=$mailresult['from'];
                                    $allpost["to_email"]=$mailresult['to'];
                                    $allpost["overview_date"]=date("Y-m-d H:i:s",strtotime($mailresult['date']));
                                    if($mailresult['body'] != strip_tags($mailresult['body'])) {
                                      $bodycontent = $mailresult['body'];
                                    }else{
                                      $bodycontent = nl2br($mailresult['body']);
                                    }
                                    $allpost["body"]=$bodycontent;
                                    $allpost["msgtype"]=$mailresult['msgtype'];
                                    $resultSave=$fetchmailclientObj->save($allpost);

                                }


                                $content="";
                                $responseArr=array('response' => 1, 'content' => $content);
                            }else{
                                //$this->flashSession->error("There is no email exchange between them");
                                $responseArr=array('response' => 2, 'content' => '');
                            }
                        }


                    }else{
                        //$this->flashSession->error("No Imap conection set for this advisor profile. Please go the update profile page to add the credential.");
                        $responseArr=array('response' => 3, 'content' => '');
                    }

                }
            }
            else
            {
                $brokerDet=Users::findFirst(array('conditions' => "u_type=0 and is_active=1 and id='".$sessionID."'",'order' => "id desc"));
                $userDetail=Users::findFirst(array('conditions' => "id='".$brokerDet->id."'"));
                $chkEmailArr=array();
                $totmailContentArr=array();
                if($userDetail->imap_connection_type!=''){



                    if($allPost['email_id']!=''){

                        if($userDetail->imap_connection_type==1){
                            /* connect to gmail */
                            $hostname = '{imap.gmail.com:993/imap/ssl}INBOX';
                            $senthostname = '{imap.gmail.com:993/imap/ssl}[Gmail]/Sent Mail';
                        }else if($userDetail->imap_connection_type==2){
                            /* connect to gmail */
                            $hostname = '{imap.mail.yahoo.com:993/imap/ssl}INBOX';
                            $senthostname = '{imap.mail.yahoo.com:993/imap/ssl}Sent';
                        }else if($userDetail->imap_connection_type==3){
                            /* connect to gmail */
                            $hostname = '{outlook.office365.com:993/imap/ssl}INBOX';
                            $senthostname = '{outlook.office365.com:993/imap/ssl}Sent';
                        }else{
                            /* connect to gmail */
                            $hostname = '{'.$userDetail->imap_host.':993/imap/ssl}INBOX';
                            $senthostname = '{'.$userDetail->imap_host.':993/imap/ssl}Sent';
                        }
                        $username = $userDetail->imap_username;
                        $password = $userDetail->imap_password;
                       // echo $username." ".$password;exit;
                        /* try to connect */
                        $inbox = imap_open($hostname,$username,$password) or die('Cannot connect to Account: ' . imap_last_error());
                        $sentbox = imap_open($senthostname,$username,$password) or die('Cannot connect to Account: ' . imap_last_error());

                        /* grab emails */
                        //$emails = imap_search($inbox,'ALL');
                    //   $emails = imap_search($inbox,'FROM "'.$allPost['email_id'].'"');
                        //$emails = array();
                        /* grab Sent emails */
                        //$sentEmails = imap_search($sentbox,'ALL');
                      //  $sentEmails = imap_search($sentbox,'TO "'.$allPost['email_id'].'"');
                       // echo "<pre>";print_r($emails);
                        //echo "<pre>";print_r($sentEmails);exit;

                        $count = imap_num_msg($inbox);
                        $countinbox=0;
                        for($msgno = 1; $msgno <= $count; $msgno++) {
                            if($countinbox<=20)
                            {
                                //$headers = imap_headerinfo($inbox, $msgno);
                                $overview = imap_fetch_overview($inbox,$msgno,0);
                                //echo "<pre>";print_r($overview);
                                $structure = imap_fetchstructure($inbox, $msgno);

                                if(isset($structure->parts) && is_array($structure->parts) && isset($structure->parts[1])) {
                                    $part = $structure->parts[1];
                                    if($part->encoding == 3) {
                                       $message = imap_fetchbody($inbox,$msgno,1.2);
                                       if($this->is_base64($message)==true){
                                            $message = imap_base64($message);
                                        }
                                        $message=quoted_printable_decode($message);

                                    }else{
                                        $message = imap_fetchbody($inbox,$msgno,2);

                                        //if(strpos($overview[0]->from,"chittas970@gmail.com")>-1){
                                            if(!$message){
                                                $message = imap_fetchbody($inbox,$msgno,1);
                                            }
                                            if($this->is_base64($message)==true){
                                                $message = imap_base64($message);
                                            }
                                        $message = quoted_printable_decode($message);
                                    }
                                }
                                if(count($overview)>0)
                                {
                                    $contentArr= array();
                                    $contentArr['seen']=$overview[0]->seen;
                                    $contentArr['subject']=$overview[0]->subject;
                                    $contentArr['from']=$overview[0]->from;
                                    $contentArr['to']=$overview[0]->to;
                                    $contentArr['date']=$overview[0]->date;
                                    $contentArr['body']=$message;
                                    if(strpos($contentArr['from'], $clientname) !== false){
                                        $countinbox++;
                                        array_push($totmailContentArr, $contentArr);
                                    }

                                }

                            }


                        }
                       // exit;

                        $count = imap_num_msg($sentbox);
                        $countsendemail=0;
                        for($msgno = 1; $msgno <= $count; $msgno++) {
                            if($countsendemail<=20){
                                $overview = imap_fetch_overview($sentbox,$msgno,0);
                                $structure = imap_fetchstructure($sentbox, $msgno);

                                if(isset($structure->parts) && is_array($structure->parts) && isset($structure->parts[1])) {
                                    $part = $structure->parts[1];
                                    if($part->encoding == 3) {
                                       $message = imap_fetchbody($sentbox,$msgno,1.2);
                                       if($this->is_base64($message)==true){
                                            $message = imap_base64($message);
                                        }
                                        $message=quoted_printable_decode($message);

                                    }else{
                                        $message = imap_fetchbody($sentbox,$msgno,2);

                                        //if(strpos($overview[0]->from,"chittas970@gmail.com")>-1){
                                            if(!$message){
                                                $message = imap_fetchbody($sentbox,$msgno,1);
                                            }
                                            if($this->is_base64($message)==true){
                                                $message = imap_base64($message);
                                            }
                                        $message = quoted_printable_decode($message);
                                    }
                                }
                                if(count($overview)>0)
                                {
                                    $contentArr= array();
                                    $contentArr['seen']=$overview[0]->seen;
                                    $contentArr['subject']=$overview[0]->subject;
                                    $contentArr['from']=$overview[0]->from;
                                    $contentArr['to']=$overview[0]->to;
                                    $contentArr['date']=$overview[0]->date;
                                    $contentArr['body']=$message;
                                    if(strpos($contentArr['to'], $clientname) !== false){
                                        $countsendemail++;
                                        array_push($totmailContentArr, $contentArr);
                                    }

                                }

                            }


                            //$headers = imap_headerinfo($inbox, $msgno);

                        }

                        /* if emails are returned, cycle through each... */
                        //echo "<pre>";print_r($totmailContentArr); exit();
                        if(count($totmailContentArr)>0){
                           // $this->session->set('enquirytotmailContentArr'.$allPost['lead_user_id'], $totmailContentArr);

                            $lenderresult=$this->modelsManager->executeQuery("delete from OutsideFetchEmailClient where lead_id='".$allPost['lead_user_id']."' and broker_id='".$sessionID."'");
                            foreach($totmailContentArr as $mailresult)
                            {
                                $allpost=array();
                                $fetchmailclientObj=new OutsideFetchEmailClient();
                                $allpost["lead_id"]=$allPost['lead_user_id'];
                                $allpost["broker_id"]=$sessionID;
                                $allpost["subject"]=$mailresult['subject'];
                                $allpost["from_email"]=$mailresult['from'];
                                $allpost["to_email"]=$mailresult['to'];
                                $allpost["overview_date"]=date("Y-m-d H:i:s",strtotime($mailresult['date']));
                                if($mailresult['body'] != strip_tags($mailresult['body'])) {
                                  $bodycontent = $mailresult['body'];
                                }else{
                                  $bodycontent = nl2br($mailresult['body']);
                                }
                                $allpost["body"]=$bodycontent;
                                $allpost["msgtype"]=$mailresult['msgtype'];
                                $resultSave=$fetchmailclientObj->save($allpost);

                            }


                            $content="";
                            $responseArr=array('response' => 1, 'content' => $content);
                        }else{
                            //$this->flashSession->error("There is no email exchange between them");
                            $responseArr=array('response' => 2, 'content' => '');
                        }
                    }


                }else{
                    //$this->flashSession->error("No Imap conection set for this advisor profile. Please go the update profile page to add the credential.");
                    $responseArr=array('response' => 3, 'content' => '');
                }
            }

        }
        echo json_encode($responseArr);
        exit();
    }
    public function fetchoutsidemailbyclienttest1Action(){
        $responseArr=array('response' => 0, 'content' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            //print_r($alluser);
            //$sessionID=462;
            $sessionID=$this->session->get('sessUserID');
            if($sessionID==516)
            {
                //echo 123;exit;
                $brokerList= $advisorList=Users::find(array('conditions' => "u_type=0 and is_active=1 and id not in(3,516,481,492,476,182,184,181)",'order' => "id desc"));
                $totmailContentArr=array();
                $count1=0;
                foreach($brokerList as $brokerDet){
                    $count1++;

                    $userDetail=Users::findFirst(array('conditions' => "id='".$brokerDet->id."'"));
                    $chkEmailArr=array();
                    $totmailContentArr=array();
                    if($userDetail->imap_connection_type!=''){
                        if($allPost['email_id']!=''){
                            if($userDetail->imap_connection_type==1){
                                /* connect to gmail */
                                $hostname = '{imap.gmail.com:993/imap/ssl}INBOX';
                                $senthostname = '{imap.gmail.com:993/imap/ssl}[Gmail]/Sent Mail';
                            }else if($userDetail->imap_connection_type==2){
                                /* connect to gmail */
                                $hostname = '{imap.mail.yahoo.com:993/imap/ssl}INBOX';
                                $senthostname = '{imap.mail.yahoo.com:993/imap/ssl}Sent';
                            }else if($userDetail->imap_connection_type==3){
                                /* connect to gmail */
                                $hostname = '{outlook.office365.com:993/imap/ssl}INBOX';
                                $senthostname = '{outlook.office365.com:993/imap/ssl}Sent';
                            }else{
                                /* connect to gmail */
                                $hostname = '{'.$userDetail->imap_host.':993/imap/ssl}INBOX';
                                $senthostname = '{'.$userDetail->imap_host.':993/imap/ssl}Sent';
                            }
                            $username = $userDetail->imap_username;
                            $password = $userDetail->imap_password;

                            /* try to connect */
                            $inbox = imap_open($hostname,$username,$password) or die('Cannot connect to Account: ' . imap_last_error());
                            $sentbox = imap_open($senthostname,$username,$password) or die('Cannot connect to Account: ' . imap_last_error());;
                            /* grab emails */
                            $emails = imap_search($inbox,'FROM "'.$allPost['email_id'].'"');
                            //$emails = array();
                            /* grab Sent emails */
                            $sentEmails = imap_search($sentbox,'TO "'.$allPost['email_id'].'"');

                            /* if emails are returned, cycle through each... */
                            if(count($emails)>0) {
                                //echo "<pre>";print_r($emails); exit();

                                /* begin output var */
                                $output = '';

                                /* put the newest emails on top */
                                rsort($emails);
                                $emails=array_slice($emails, 0, 1000);
                                $count=1;
                                /* for every email... */
                                $mycount=1;
                                foreach($emails as $email_number) {
                                    if($count<=20){
                                        /* get information specific to this email */
                                        $overview = imap_fetch_overview($inbox,$email_number,0);
                                        //print_r($overview); exit();
                                        //$message = imap_fetchbody($inbox,$email_number,2);
                                        if(strpos($overview[0]->from,$allPost['email_id'])>-1){
                                            $structure = imap_fetchstructure($inbox, $email_number);

                                            if(isset($structure->parts) && is_array($structure->parts) && isset($structure->parts[1])) {
                                                $part = $structure->parts[1];
                                                if($part->encoding == 3) {
                                                   $message = imap_fetchbody($inbox,$email_number,1.2);
                                                   if($this->is_base64($message)==true){
                                                        $message = imap_base64($message);
                                                    }
                                                    $message=quoted_printable_decode($message);

                                                }else{
                                                    $message = imap_fetchbody($inbox,$email_number,2);

                                                    //if(strpos($overview[0]->from,"chittas970@gmail.com")>-1){
                                                        if(!$message){
                                                            $message = imap_fetchbody($inbox,$email_number,1);
                                                        }
                                                        if($this->is_base64($message)==true){
                                                            $message = imap_base64($message);
                                                        }
                                                    $message = quoted_printable_decode($message);
                                                }
                                            }
                                            /* output the email header information */


                                            $contentArr['seen']=$overview[0]->seen;
                                            $contentArr['subject']=$overview[0]->subject;
                                            $contentArr['from']=$overview[0]->from;
                                            $contentArr['to']=$overview[0]->to;
                                            $contentArr['date']=$overview[0]->date;
                                            $contentArr['body']=$message;
                                            $contentArr['msgtype']='inbox';
                                            array_push($totmailContentArr, $contentArr);

                                            //echo $output;
                                            $count++;
                                        }
                                    }


                                }


                            }

                            /* if emails are returned, cycle through each... */
                            if(count($sentEmails)>0) {
                                //echo "<pre>";print_r($emails); exit();

                                /* begin output var */
                                $output = '';

                                /* put the newest emails on top */
                                rsort($sentEmails);
                                $sentEmails=array_slice($sentEmails, 0, 1000);
                                $count=1;
                                /* for every email... */
                                $mycount=1;
                                foreach($sentEmails as $email_number) {
                                    /* get information specific to this email */
                                    if($count<=20){
                                        $overview = imap_fetch_overview($sentbox,$email_number,0);
                                        //print_r($overview); exit();
                                        //$message = imap_fetchbody($sentbox,$email_number,2);

                                        if($overview[0]->to==$allPost['email_id']){
                                            /*if(!$message){
                                                $message = imap_fetchbody($sentbox,$email_number,1);
                                            }*/

                                            $structure = imap_fetchstructure($sentbox, $email_number);

                                            if(isset($structure->parts) && is_array($structure->parts) && isset($structure->parts[1])) {
                                                $part = $structure->parts[1];
                                                if($part->encoding == 3) {
                                                   $message = imap_fetchbody($sentbox,$email_number,1.2);
                                                    $message=quoted_printable_decode($message);

                                                }else{
                                                    $message = imap_fetchbody($sentbox,$email_number,2);

                                                    //if(strpos($overview[0]->from,"chittas970@gmail.com")>-1){
                                                        if(!$message){
                                                            $message = imap_fetchbody($sentbox,$email_number,1);
                                                        }
                                                    $message = quoted_printable_decode($message);
                                                }
                                            }
                                            /* output the email header information */


                                            $contentArr['seen']=$overview[0]->seen;
                                            $contentArr['subject']=$overview[0]->subject;
                                            $contentArr['from']=$overview[0]->from;
                                            $contentArr['to']=$overview[0]->to;
                                            $contentArr['date']=$overview[0]->date;
                                            $contentArr['body']=$message;
                                            $contentArr['msgtype']='sent';
                                            array_push($totmailContentArr, $contentArr);

                                            //echo $output;
                                            $count++;
                                        }

                                    }


                                }


                            }

                            if(!empty($totmailContentArr)){
                               // $this->session->set('enquirytotmailContentArr'.$allPost['lead_user_id'], $totmailContentArr);

                                $lenderresult=$this->modelsManager->executeQuery("delete from OutsideFetchEmailClient where lead_id='".$allPost['lead_user_id']."' and broker_id='0'");
                                foreach($totmailContentArr as $mailresult)
                                {
                                    $allpost=array();
                                    $fetchmailclientObj=new OutsideFetchEmailClient();
                                    $allpost["lead_id"]=$allPost['lead_user_id'];
                                    $allpost["broker_id"]=0;
                                    $allpost["subject"]=$mailresult['subject'];
                                    $allpost["from_email"]=$mailresult['from'];
                                    $allpost["to_email"]=$mailresult['to'];
                                    $allpost["overview_date"]=date("Y-m-d H:i:s",strtotime($mailresult['date']));
                                    if($mailresult['body'] != strip_tags($mailresult['body'])) {
                                      $bodycontent = $mailresult['body'];
                                    }else{
                                      $bodycontent = nl2br($mailresult['body']);
                                    }
                                    $allpost["body"]=$bodycontent;
                                    $allpost["msgtype"]=$mailresult['msgtype'];
                                    $resultSave=$fetchmailclientObj->save($allpost);

                                }


                                $content="";
                                $responseArr=array('response' => 1, 'content' => $content);
                            }else{
                                //$this->flashSession->error("There is no email exchange between them");
                                $responseArr=array('response' => 2, 'content' => '');
                            }
                        }
                    }else{
                        //$this->flashSession->error("No Imap conection set for this advisor profile. Please go the update profile page to add the credential.");
                        $responseArr=array('response' => 3, 'content' => '');
                    }

                }
            }
            else
            {
                $brokerDet=Users::findFirst(array('conditions' => "u_type=0 and is_active=1 and id='".$sessionID."'",'order' => "id desc"));
                $userDetail=Users::findFirst(array('conditions' => "id='".$brokerDet->id."'"));
                $chkEmailArr=array();
                $totmailContentArr=array();
                if($userDetail->imap_connection_type!=''){



                    if($allPost['email_id']!=''){

                        if($userDetail->imap_connection_type==1){
                            /* connect to gmail */
                            $hostname = '{imap.gmail.com:993/imap/ssl}INBOX';
                            $senthostname = '{imap.gmail.com:993/imap/ssl}[Gmail]/Sent Mail';
                        }else if($userDetail->imap_connection_type==2){
                            /* connect to gmail */
                            $hostname = '{imap.mail.yahoo.com:993/imap/ssl}INBOX';
                            $senthostname = '{imap.mail.yahoo.com:993/imap/ssl}Sent';
                        }else if($userDetail->imap_connection_type==3){
                            /* connect to gmail */
                            $hostname = '{outlook.office365.com:993/imap/ssl}INBOX';
                            $senthostname = '{outlook.office365.com:993/imap/ssl}Sent';
                        }else{
                            /* connect to gmail */
                            $hostname = '{'.$userDetail->imap_host.':993/imap/ssl}INBOX';
                            $senthostname = '{'.$userDetail->imap_host.':993/imap/ssl}Sent';
                        }
                        $username = $userDetail->imap_username;
                        $password = $userDetail->imap_password;
                       // echo $username." ".$password;exit;
                        /* try to connect */
                        $inbox = imap_open($hostname,$username,$password) or die('Cannot connect to Account: ' . imap_last_error());
                        $sentbox = imap_open($senthostname,$username,$password) or die('Cannot connect to Account: ' . imap_last_error());

                        /* grab emails */
                        //$emails = imap_search($inbox,'ALL');
                       $emails = imap_search($inbox,'FROM "'.$allPost['email_id'].'"');
                        //$emails = array();
                        /* grab Sent emails */
                        //$sentEmails = imap_search($sentbox,'ALL');
                        $sentEmails = imap_search($sentbox,'TO "'.$allPost['email_id'].'"');
                       // echo "<pre>";print_r($emails);
                        //echo "<pre>";print_r($sentEmails);exit;

                        /* if emails are returned, cycle through each... */
                        if(count($emails)>0) {
                            //echo "<pre>";print_r($emails); exit();

                            /* begin output var */
                            $output = '';

                            /* put the newest emails on top */
                            rsort($emails);
                            $emails=array_slice($emails, 0, 1000);
                            $count=1;
                            /* for every email... */
                            $mycount=1;
                            foreach($emails as $email_number) {
                                if($count<=30){
                                    /* get information specific to this email */
                                    $overview = imap_fetch_overview($inbox,$email_number,0);
                                    //print_r($overview); exit();
                                    //$message = imap_fetchbody($inbox,$email_number,2);
                                    if(strpos($overview[0]->from,$allPost['email_id'])>-1){
                                        $structure = imap_fetchstructure($inbox, $email_number);

                                        if(isset($structure->parts) && is_array($structure->parts) && isset($structure->parts[1])) {
                                            $part = $structure->parts[1];
                                            if($part->encoding == 3) {
                                               $message = imap_fetchbody($inbox,$email_number,1.2);
                                               if($this->is_base64($message)==true){
                                                    $message = imap_base64($message);
                                                }
                                                $message=quoted_printable_decode($message);

                                            }else{
                                                $message = imap_fetchbody($inbox,$email_number,2);

                                                //if(strpos($overview[0]->from,"chittas970@gmail.com")>-1){
                                                    if(!$message){
                                                        $message = imap_fetchbody($inbox,$email_number,1);
                                                    }
                                                    if($this->is_base64($message)==true){
                                                        $message = imap_base64($message);
                                                    }
                                                $message = quoted_printable_decode($message);
                                            }
                                        }
                                        /* output the email header information */


                                        $contentArr['seen']=$overview[0]->seen;
                                        $contentArr['subject']=$overview[0]->subject;
                                        $contentArr['from']=$overview[0]->from;
                                        $contentArr['to']=$overview[0]->to;
                                        $contentArr['date']=$overview[0]->date;
                                        $contentArr['body']=$message;
                                        $contentArr['msgtype']='inbox';
                                        array_push($totmailContentArr, $contentArr);

                                        //echo $output;
                                        $count++;
                                    }
                                }


                            }


                        }

                        /* if emails are returned, cycle through each... */
                        if(count($sentEmails)>0) {
                            //echo "<pre>";print_r($emails); exit();

                            /* begin output var */
                            $output = '';

                            /* put the newest emails on top */
                            rsort($sentEmails);
                            $sentEmails=array_slice($sentEmails, 0, 1000);
                            $count=1;
                            /* for every email... */
                            $mycount=1;
                            foreach($sentEmails as $email_number) {
                                /* get information specific to this email */
                                if($count<=20){
                                    $overview = imap_fetch_overview($sentbox,$email_number,0);
                                    //print_r($overview); exit();
                                    //$message = imap_fetchbody($sentbox,$email_number,2);

                                    if($overview[0]->to==$allPost['email_id']){
                                        /*if(!$message){
                                            $message = imap_fetchbody($sentbox,$email_number,1);
                                        }*/

                                        $structure = imap_fetchstructure($sentbox, $email_number);

                                        if(isset($structure->parts) && is_array($structure->parts) && isset($structure->parts[1])) {
                                            $part = $structure->parts[1];
                                            if($part->encoding == 3) {
                                               $message = imap_fetchbody($sentbox,$email_number,1.2);
                                                $message=quoted_printable_decode($message);

                                            }else{
                                                $message = imap_fetchbody($sentbox,$email_number,2);

                                                //if(strpos($overview[0]->from,"chittas970@gmail.com")>-1){
                                                    if(!$message){
                                                        $message = imap_fetchbody($sentbox,$email_number,1);
                                                    }
                                                $message = quoted_printable_decode($message);
                                            }
                                        }
                                        /* output the email header information */


                                        $contentArr['seen']=$overview[0]->seen;
                                        $contentArr['subject']=$overview[0]->subject;
                                        $contentArr['from']=$overview[0]->from;
                                        $contentArr['to']=$overview[0]->to;
                                        $contentArr['date']=$overview[0]->date;
                                        $contentArr['body']=$message;
                                        $contentArr['msgtype']='sent';
                                        array_push($totmailContentArr, $contentArr);

                                        //echo $output;
                                        $count++;
                                    }

                                }


                            }


                        }
                        //echo "<pre>";print_r($totmailContentArr); exit();
                        if(!empty($totmailContentArr)){
                           // $this->session->set('enquirytotmailContentArr'.$allPost['lead_user_id'], $totmailContentArr);

                            $lenderresult=$this->modelsManager->executeQuery("delete from OutsideFetchEmailClient where lead_id='".$allPost['lead_user_id']."' and broker_id='".$sessionID."'");
                            foreach($totmailContentArr as $mailresult)
                            {
                                $allpost=array();
                                $fetchmailclientObj=new OutsideFetchEmailClient();
                                $allpost["lead_id"]=$allPost['lead_user_id'];
                                $allpost["broker_id"]=$sessionID;
                                $allpost["subject"]=$mailresult['subject'];
                                $allpost["from_email"]=$mailresult['from'];
                                $allpost["to_email"]=$mailresult['to'];
                                $allpost["overview_date"]=date("Y-m-d H:i:s",strtotime($mailresult['date']));
                                if($mailresult['body'] != strip_tags($mailresult['body'])) {
                                  $bodycontent = $mailresult['body'];
                                }else{
                                  $bodycontent = nl2br($mailresult['body']);
                                }
                                $allpost["body"]=$bodycontent;
                                $allpost["msgtype"]=$mailresult['msgtype'];
                                $resultSave=$fetchmailclientObj->save($allpost);

                            }


                            $content="";
                            $responseArr=array('response' => 1, 'content' => $content);
                        }else{
                            //$this->flashSession->error("There is no email exchange between them");
                            $responseArr=array('response' => 2, 'content' => '');
                        }
                    }


                }else{
                    //$this->flashSession->error("No Imap conection set for this advisor profile. Please go the update profile page to add the credential.");
                    $responseArr=array('response' => 3, 'content' => '');
                }
            }

        }
        echo json_encode($responseArr);
        exit();
    }
    public function brokersfetchemailAction(){
        $responseArr=array('response' => 0, 'content' => '');

        $allPost=$this->request->getPost();
        //print_r($alluser);
        $sessionID=$this->session->get('sessUserID');
        $brokerList= $advisorList=Users::find(array('conditions' => "u_type=0 and is_active=1 and id not in(3,516,481,492,476,182,184)",'order' => "id desc"));
        echo "<pre>";print_r($brokerList->toArray());exit;
        $totmailContentArr=array();
        foreach($brokerList as $brokerDet){
            $userDetail=Users::findFirst(array('conditions' => "id='".$brokerDet->id."'"));
            $chkEmailArr=array();

            if($userDetail->imap_connection_type!=''){



                if($allPost['email_id']!=''){

                    if($userDetail->imap_connection_type==1){
                        /* connect to gmail */
                        $hostname = '{imap.gmail.com:993/imap/ssl}INBOX';
                        $senthostname = '{imap.gmail.com:993/imap/ssl}[Gmail]/Sent Mail';
                    }else if($userDetail->imap_connection_type==2){
                        /* connect to gmail */
                        $hostname = '{imap.mail.yahoo.com:993/imap/ssl}INBOX';
                        $senthostname = '{imap.mail.yahoo.com:993/imap/ssl}Sent';
                    }else if($userDetail->imap_connection_type==3){
                        /* connect to gmail */
                        $hostname = '{outlook.office365.com:993/imap/ssl}INBOX';
                        $senthostname = '{outlook.office365.com:993/imap/ssl}Sent';
                    }else{
                        /* connect to gmail */
                        $hostname = '{'.$userDetail->imap_host.':993/imap/ssl}INBOX';
                        $senthostname = '{'.$userDetail->imap_host.':993/imap/ssl}Sent';
                    }
                    $username = $userDetail->imap_username;
                    $password = $userDetail->imap_password;

                    /* try to connect */
                    $inbox = imap_open($hostname,$username,$password) or die('Cannot connect to Account: ' . imap_last_error());
                    $sentbox = imap_open($senthostname,$username,$password) or die('Cannot connect to Account: ' . imap_last_error());

                    /* grab emails */
                    $emails = imap_search($inbox,'FROM "'.$allPost['email_id'].'"');
                    //$emails = array();
                    /* grab Sent emails */
                    $sentEmails = imap_search($sentbox,'TO "'.$allPost['email_id'].'"');

                    /* if emails are returned, cycle through each... */
                    if(count($emails)>0) {
                        //echo "<pre>";print_r($emails); exit();

                        /* begin output var */
                        $output = '';

                        /* put the newest emails on top */
                        rsort($emails);
                        $emails=array_slice($emails, 0, 1000);
                        $count=1;
                        /* for every email... */
                        $mycount=1;
                        foreach($emails as $email_number) {
                            if($count<=20){
                                /* get information specific to this email */
                                $overview = imap_fetch_overview($inbox,$email_number,0);
                                //print_r($overview); exit();
                                //$message = imap_fetchbody($inbox,$email_number,2);
                                if(strpos($overview[0]->from,$allPost['email_id'])>-1){
                                    $structure = imap_fetchstructure($inbox, $email_number);

                                    if(isset($structure->parts) && is_array($structure->parts) && isset($structure->parts[1])) {
                                        $part = $structure->parts[1];
                                        if($part->encoding == 3) {
                                           $message = imap_fetchbody($inbox,$email_number,1.2);
                                           if($this->is_base64($message)==true){
                                                $message = imap_base64($message);
                                            }
                                            $message=quoted_printable_decode($message);

                                        }else{
                                            $message = imap_fetchbody($inbox,$email_number,2);

                                            //if(strpos($overview[0]->from,"chittas970@gmail.com")>-1){
                                                if(!$message){
                                                    $message = imap_fetchbody($inbox,$email_number,1);
                                                }
                                                if($this->is_base64($message)==true){
                                                    $message = imap_base64($message);
                                                }
                                            $message = quoted_printable_decode($message);
                                        }
                                    }
                                    /* output the email header information */


                                    $contentArr['seen']=$overview[0]->seen;
                                    $contentArr['subject']=$overview[0]->subject;
                                    $contentArr['from']=$overview[0]->from;
                                    $contentArr['to']=$overview[0]->to;
                                    $contentArr['date']=$overview[0]->date;
                                    $contentArr['body']=$message;
                                    $contentArr['msgtype']='inbox';
                                    array_push($totmailContentArr, $contentArr);

                                    //echo $output;
                                    $count++;
                                }
                            }


                        }


                    }

                    /* if emails are returned, cycle through each... */
                    if(count($sentEmails)>0) {
                        //echo "<pre>";print_r($emails); exit();

                        /* begin output var */
                        $output = '';

                        /* put the newest emails on top */
                        rsort($sentEmails);
                        $sentEmails=array_slice($sentEmails, 0, 1000);
                        $count=1;
                        /* for every email... */
                        $mycount=1;
                        foreach($sentEmails as $email_number) {
                            /* get information specific to this email */
                            if($count<=20){
                                $overview = imap_fetch_overview($sentbox,$email_number,0);
                                //print_r($overview); exit();
                                //$message = imap_fetchbody($sentbox,$email_number,2);

                                if($overview[0]->to==$allPost['email_id']){
                                    /*if(!$message){
                                        $message = imap_fetchbody($sentbox,$email_number,1);
                                    }*/

                                    $structure = imap_fetchstructure($sentbox, $email_number);

                                    if(isset($structure->parts) && is_array($structure->parts) && isset($structure->parts[1])) {
                                        $part = $structure->parts[1];
                                        if($part->encoding == 3) {
                                           $message = imap_fetchbody($sentbox,$email_number,1.2);
                                            $message=quoted_printable_decode($message);

                                        }else{
                                            $message = imap_fetchbody($sentbox,$email_number,2);

                                            //if(strpos($overview[0]->from,"chittas970@gmail.com")>-1){
                                                if(!$message){
                                                    $message = imap_fetchbody($sentbox,$email_number,1);
                                                }
                                            $message = quoted_printable_decode($message);
                                        }
                                    }
                                    /* output the email header information */


                                    $contentArr['seen']=$overview[0]->seen;
                                    $contentArr['subject']=$overview[0]->subject;
                                    $contentArr['from']=$overview[0]->from;
                                    $contentArr['to']=$overview[0]->to;
                                    $contentArr['date']=$overview[0]->date;
                                    $contentArr['body']=$message;
                                    $contentArr['msgtype']='sent';
                                    array_push($totmailContentArr, $contentArr);

                                    //echo $output;
                                    $count++;
                                }

                            }


                        }


                    }

                    if(!empty($totmailContentArr)){
                       // $this->session->set('enquirytotmailContentArr'.$allPost['lead_user_id'], $totmailContentArr);

                        $lenderresult=$this->modelsManager->executeQuery("delete from OutsideFetchEmailClient where lead_id='".$allPost['lead_user_id']."'");
                        foreach($totmailContentArr as $mailresult)
                        {
                            $allpost=array();
                            $fetchmailclientObj=new OutsideFetchEmailClient();
                            $allpost["lead_id"]=$allPost['lead_user_id'];
                            $allpost["subject"]=$mailresult['subject'];
                            $allpost["from_email"]=$mailresult['from'];
                            $allpost["to_email"]=$mailresult['to'];
                            $allpost["overview_date"]=date("Y-m-d H:i:s",strtotime($mailresult['date']));
                            if($mailresult['body'] != strip_tags($mailresult['body'])) {
                              $bodycontent = $mailresult['body'];
                            }else{
                              $bodycontent = nl2br($mailresult['body']);
                            }
                            $allpost["body"]=$bodycontent;
                            $allpost["msgtype"]=$mailresult['msgtype'];
                            $resultSave=$fetchmailclientObj->save($allpost);

                        }


                        $content="";
                        $responseArr=array('response' => 1, 'content' => $content);
                    }else{
                        //$this->flashSession->error("There is no email exchange between them");
                        $responseArr=array('response' => 2, 'content' => '');
                    }
                }


            }else{
                //$this->flashSession->error("No Imap conection set for this advisor profile. Please go the update profile page to add the credential.");
                $responseArr=array('response' => 3, 'content' => '');
            }
        }


    }
    public function fetchoutsidemailbylenderAction(){
        $responseArr=array('response' => 0, 'content' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            //print_r($alluser);
            $sessionID=$this->session->get('sessUserID');
            $userDetail=Users::findFirst(array('conditions' => "id='".$sessionID."'"));
            $chkEmailArr=array();
            $totmailContentArr=array();
            if($userDetail->imap_connection_type!=''){



                //if($allPost['email_id']!=''){

                    if($userDetail->imap_connection_type==1){
                        /* connect to gmail */
                        $hostname = '{imap.gmail.com:993/imap/ssl}INBOX';
                        $senthostname = '{imap.gmail.com:993/imap/ssl}[Gmail]/Sent Mail';
                    }else if($userDetail->imap_connection_type==2){
                        /* connect to gmail */
                        $hostname = '{imap.mail.yahoo.com:993/imap/ssl}INBOX';
                        $senthostname = '{imap.mail.yahoo.com:993/imap/ssl}Sent';
                    }else if($userDetail->imap_connection_type==3){
                        /* connect to gmail */
                        $hostname = '{outlook.office365.com:993/imap/ssl}INBOX';
                        $senthostname = '{outlook.office365.com:993/imap/ssl}Sent';
                    }else{
                        /* connect to gmail */
                        $hostname = '{'.$userDetail->imap_host.':993/imap/ssl}INBOX';
                        $senthostname = '{'.$userDetail->imap_host.':993/imap/ssl}Sent';
                    }
                    $username = $userDetail->imap_username;
                    $password = $userDetail->imap_password;

                    /* try to connect */
                    $inbox = imap_open($hostname,$username,$password) or die('Cannot connect to Account: ' . imap_last_error());
                    $sentbox = imap_open($senthostname,$username,$password) or die('Cannot connect to Account: ' . imap_last_error());
                    $lenderList=Lenders::find(array('conditions' => "is_active=1", 'order' => "id desc"));
                    foreach($lenderList as $lenderListDet){
                        $lenderDetail=Users::findFirst(array("conditions" => "id=".$lenderListDet->lender_id));
                        /* grab emails */
                        $emails = imap_search($inbox,'FROM "'.$lenderDetail->email_id.'"');
                        //$emails = imap_search($inbox,'FROM "phpamir@gmail.com"');
                        //$emails = array();
                        /* grab Sent emails */
                        $sentEmails = imap_search($sentbox,'TO "'.$lenderDetail->email_id.'"');

                        /* if emails are returned, cycle through each... */
                        if(count($emails)>0) {
                            //echo "<pre>";print_r($emails); exit();

                            /* begin output var */
                            $output = '';

                            /* put the newest emails on top */
                            rsort($emails);
                            $emails=array_slice($emails, 0, 1000);
                            $count=1;
                            /* for every email... */
                            $mycount=1;
                            foreach($emails as $email_number) {
                                if($count<=20){
                                    /* get information specific to this email */
                                    $overview = imap_fetch_overview($inbox,$email_number,0);
                                    //print_r($overview); exit();
                                    //$message = imap_fetchbody($inbox,$email_number,2);
                                    if(strpos($overview[0]->from,$allPost['email_id'])>-1){
                                        $structure = imap_fetchstructure($inbox, $email_number);

                                        if(isset($structure->parts) && is_array($structure->parts) && isset($structure->parts[1])) {
                                            $part = $structure->parts[1];
                                            if($part->encoding == 3) {
                                               $message = imap_fetchbody($inbox,$email_number,1.2);
                                               if($this->is_base64($message)==true){
                                                    $message = imap_base64($message);
                                                }
                                                $message=quoted_printable_decode($message);

                                            }else{
                                                $message = imap_fetchbody($inbox,$email_number,2);

                                                //if(strpos($overview[0]->from,"chittas970@gmail.com")>-1){
                                                    if(!$message){
                                                        $message = imap_fetchbody($inbox,$email_number,1);
                                                    }
                                                    if($this->is_base64($message)==true){
                                                        $message = imap_base64($message);
                                                    }
                                                $message = quoted_printable_decode($message);
                                            }
                                        }
                                        /* output the email header information */


                                        $contentArr['seen']=$overview[0]->seen;
                                        $contentArr['subject']=$overview[0]->subject;
                                        $contentArr['from']=$overview[0]->from;
                                        $contentArr['to']=$overview[0]->to;
                                        $contentArr['date']=$overview[0]->date;
                                        $contentArr['body']=$message;
                                        $contentArr['msgtype']='inbox';
                                        array_push($totmailContentArr, $contentArr);

                                        //echo $output;
                                        $count++;
                                    }
                                }


                            }


                        }

                        /* if emails are returned, cycle through each... */
                        if(count($sentEmails)>0) {
                            //echo "<pre>";print_r($emails); exit();

                            /* begin output var */
                            $output = '';

                            /* put the newest emails on top */
                            rsort($sentEmails);
                            $sentEmails=array_slice($sentEmails, 0, 1000);
                            $count=1;
                            /* for every email... */
                            $mycount=1;
                            foreach($sentEmails as $email_number) {
                                /* get information specific to this email */
                                if($count<=20){
                                    $overview = imap_fetch_overview($sentbox,$email_number,0);
                                    //print_r($overview); exit();
                                    //$message = imap_fetchbody($sentbox,$email_number,2);

                                    if($overview[0]->to==$allPost['email_id']){
                                        /*if(!$message){
                                            $message = imap_fetchbody($sentbox,$email_number,1);
                                        }*/

                                        $structure = imap_fetchstructure($sentbox, $email_number);

                                        if(isset($structure->parts) && is_array($structure->parts) && isset($structure->parts[1])) {
                                            $part = $structure->parts[1];
                                            if($part->encoding == 3) {
                                               $message = imap_fetchbody($sentbox,$email_number,1.2);
                                                $message=quoted_printable_decode($message);

                                            }else{
                                                $message = imap_fetchbody($sentbox,$email_number,2);

                                                //if(strpos($overview[0]->from,"chittas970@gmail.com")>-1){
                                                    if(!$message){
                                                        $message = imap_fetchbody($sentbox,$email_number,1);
                                                    }
                                                $message = quoted_printable_decode($message);
                                            }
                                        }
                                        /* output the email header information */


                                        $contentArr['seen']=$overview[0]->seen;
                                        $contentArr['subject']=$overview[0]->subject;
                                        $contentArr['from']=$overview[0]->from;
                                        $contentArr['to']=$overview[0]->to;
                                        $contentArr['date']=$overview[0]->date;
                                        $contentArr['body']=$message;
                                        $contentArr['msgtype']='sent';
                                        array_push($totmailContentArr, $contentArr);

                                        //echo $output;
                                        $count++;
                                    }

                                }


                            }


                        }
                    }

                    if(!empty($totmailContentArr)){
                        //$this->session->set('enquirytotmaillenderContentArr'.$allPost['lead_user_id'], $totmailContentArr);
                        $lenderresult=$this->modelsManager->executeQuery("delete from OutsideFetchEmailLender where lead_id='".$allPost['lead_user_id']."'");
                        foreach($totmailContentArr as $mailresult)
                        {
                            $allpost=array();
                            $fetchmailclientObj=new OutsideFetchEmailLender();
                            $allpost["lead_id"]=$allPost['lead_user_id'];
                            $allpost["subject"]=$mailresult['subject'];
                            $allpost["from_email"]=$mailresult['from'];
                            $allpost["to_email"]=$mailresult['to'];
                            $allpost["overview_date"]=date("Y-m-d H:i:s",strtotime($mailresult['date']));
                            if($mailresult['body'] != strip_tags($mailresult['body'])) {
                              $bodycontent = $mailresult['body'];
                            }else{
                              $bodycontent = nl2br($mailresult['body']);
                            }
                            $allpost["body"]=$bodycontent;
                            $allpost["msgtype"]=$mailresult['msgtype'];
                            $resultSave=$fetchmailclientObj->save($allpost);

                        }

                                 $content="";
                        $responseArr=array('response' => 1, 'content' => $content);
                    }else{
                        //$this->flashSession->error("There is no email exchange between them");
                        $responseArr=array('response' => 2, 'content' => '');
                    }
                //}


            }else{
                //$this->flashSession->error("No Imap conection set for this advisor profile. Please go the update profile page to add the credential.");
                $responseArr=array('response' => 3, 'content' => '');
            }
        }
        echo json_encode($responseArr);
        exit();
    }
    /**
    * enquirycreditsafe Action To search credit safe API data
    * Action Name: enquirycreditsafeAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 08-03-2021
    **/
    public function enquirycreditsafeAction(){

        @$this->session->remove('creditdata');
        $response = new \Phalcon\Http\Response();
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            //print_r($allPost); exit();
            $prices=array();
            //$this->session->set('data_from', $allPost['data_from']);
            if ($this->cookies->has('credit_safetoken')) {
                //Get the cookie
                $credit_safetoken = $this->cookies->get('credit_safetoken');
            }else{
                $tokenresult=UIElements::bapCustUnicreditsafelogin();
                if(!empty($tokenresult) && $tokenresult->token){
                    $this->cookies->set('credit_safetoken', $tokenresult->token, time()+3500);
                    $credit_safetoken=$tokenresult->token;
                }else{
                   $credit_safetoken='';
                }
            }
            //echo $credit_safetoken; exit();
            if($credit_safetoken!=''){
                $paramArr=array();
                if($allPost['countries']!=''){
                    array_push($paramArr, 'countries='.$allPost['countries']);
                }
                if($allPost['id']!=''){
                    array_push($paramArr, 'id='.$allPost['id']);
                }
                if($allPost['safeNo']!=''){
                    array_push($paramArr, 'safeNo='.$allPost['safeNo']);
                }
                if($allPost['regNo']!=''){
                    array_push($paramArr, 'regNo='.$allPost['regNo']);
                }
                if($allPost['name']!=''){
                    array_push($paramArr, 'name='.urlencode($allPost['name']));
                }
                if($allPost['status']!=''){
                    array_push($paramArr, 'status='.$allPost['status']);
                }
                if($allPost['address']!=''){
                    array_push($paramArr, 'address='.urlencode($allPost['address']));
                }
                if($allPost['street']!=''){
                    array_push($paramArr, 'street='.urlencode($allPost['street']));
                }
                if($allPost['city']!=''){
                    array_push($paramArr, 'city='.urlencode($allPost['city']));
                }
                if($allPost['postCode']!=''){
                    array_push($paramArr, 'postCode='.$allPost['postCode']);
                }
                if($allPost['phoneNo']!=''){
                    array_push($paramArr, 'phoneNo='.$allPost['phoneNo']);
                }
                if($allPost['language']!=''){
                    array_push($paramArr, 'language='.$allPost['language']);
                }
                $paramsString="";
                if(!empty($paramArr)){
                   $paramsString=implode("&", $paramArr);
                }
                if($paramsString!=''){
                    $searchUrl="https://connect.creditsafe.com/v1/companies?".$paramsString."&page=1&pageSize=200";
                    //echo $credit_safetoken;exit();
                    $searchresult=UIElements::bapCustUnicreditsafeSearch($searchUrl, $credit_safetoken);
                    $this->session->set('creditdata', $searchresult);
                }
            }
            //$this->session->set('creditdata', array());




        }
        return $response->redirect('dashboard/enquirydetail/'.$allPost['enquiry_id']);
    }

    /**
    * creditsafe companydetail Action To creditsafe company detail
    * Action Name: enquirycompanydetailAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 19-01-2019
    **/
    public function enquirycompanydetailAction(){
        $response = new \Phalcon\Http\Response();
        $enquiry_id=$this->request->get('enquiry_id');
        $this->view->setVar('enquiry_id', $enquiry_id);

        if(!$this->request->get('company_id')){
            return $response->redirect('dashboard/enquirydetail/'.$enquiry_id);
        }
        if ($this->cookies->has('credit_safetoken')) {
            //Get the cookie
            $credit_safetoken = $this->cookies->get('credit_safetoken');
        }else{
            $tokenresult=UIElements::bapCustUnicreditsafelogin();
            if(!empty($tokenresult) && $tokenresult->token){
                $this->cookies->set('credit_safetoken', $tokenresult->token, time()+3500);
                $credit_safetoken=$tokenresult->token;
            }else{
               $credit_safetoken='';
            }
        }
        if($credit_safetoken!=''){
            $companyID=$this->request->get('company_id');
            $language="";
            if($this->request->get('language')!=''){
                $language="?language=".$this->request->get('language');
            }
            $companyURL="https://connect.creditsafe.com/v1/companies/".$companyID.$language;
            //echo $credit_safetoken;exit();
            $companyDetail=UIElements::bapCustUnicreditsafeCompDetail($companyURL, $credit_safetoken);
            if(empty($companyDetail)){
                return $response->redirect('/dashboard/enquirydetail/'.$enquiry_id);
            }
            $this->view->setVar('companyDetail', $companyDetail);
        }else{
            return $response->redirect('/dashboard/enquirydetail/'.$enquiry_id);
        }
    }
    public function dealinvoiceAction($dealid=NULL){
        $response = new \Phalcon\Http\Response();
        if(UIElements::bapCustUniNewAdvChk()==1){
            return $response->redirect('dashboard');
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            //$allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            /*echo "<pre>";
            print_r($allPost);exit();*/
            if($this->request->getPost('clearval')==0 ){

                $completedDeals=CompletedDeals::find(array('conditions' => "id='".$dealid."'", 'limit' => 1));
                if(count($completedDeals)>0){
                    $allPost=array_merge($completedDeals[0]->toArray(),$allPost);
                }else{
                    $allPost['id']=$dealid;
                }
               // print_r($allPost);exit();
                $completedDealsDb= new CompletedDeals();
                $save=$completedDealsDb->save($allPost);
                if($save){
                    $this->flashSession->success("updated successfully.");
                    //print_r($this->request->get()); exit();

                }else{
                    $this->flashSession->error("Updating Failed.");
                }
            }
        }
        if($dealid!=''){
            $completedDeal=CompletedDeals::find(array('conditions'=>"id=".$dealid, 'limit' => 1))->toArray();
            if(count($completedDeal)>0){
                if($this->request->isPost() && $this->request->getPost('clearval')==1 ){
                    unset($_POST);
                }else if($this->request->isPost() && $this->request->getPost('clearval')==0 ){
                    $_POST=$completedDeal[0];
                }else{
                    $_POST=$completedDeal[0];
                }
            }
            $this->view->setVar('dealid', $dealid);
        }
    }
    public function invoiceprintAction(){

        $response = new \Phalcon\Http\Response();
        if($this->request->isPost()){
            $allPost=$this->request->getPost();


            if($allPost['actionval']==2){

                $dealDetail=CompletedDeals::findFirst(array(
                    'conditions' => "id=".$allPost['id'],
                ));

                $siteDetail = Sitesetting::findFirst(array("id=1"));
                if($this->request->getPost('entry_format')==1)
                {
                    $broker_fee=$this->request->getPost('broker_fee');
                    $proc_fee=$this->request->getPost('proc_fee');
                    $brokerFeeVal=$broker_fee/100*$dealDetail->gross_loan;
                    $procFeeVal=$proc_fee/100*$dealDetail->gross_loan;
                }
                else
                {

                    $brokerFeeVal==$this->request->getPost('broker_fee');
                    $procFeeVal=$this->request->getPost('proc_fee');
                    $broker_fee=round($brokerFeeVal/$dealDetail->gross_loan*100,2);
                    $proc_fee==round($procFeeVal/$dealDetail->gross_loan*100,2);
                }
                //echo "broker_fee percent :".$broker_fee." broker_fee value :".$brokerFeeVal;exit;
                /*$broker_fee=$this->request->getPost('broker_fee');
                $proc_fee=$this->request->getPost('proc_fee');*/
                $hza_percent=$this->request->getPost('hza_percent');
               /* $brokerFeeVal=$broker_fee/100*$dealDetail->gross_loan;
                $procFeeVal=$proc_fee/100*$dealDetail->gross_loan;*/
                $totalpercentval=$brokerFeeVal+$procFeeVal;
                $hzapercentVal=$hza_percent/100*$totalpercentval;
                $lenderName=$dealDetail->lender_id;
                $lenderresult=$this->modelsManager->executeQuery("select Lenders.* from Lenders left join Users on Lenders.lender_id=Users.id where Lenders.is_active=1 and (Users.first_name like '%".$lenderName."%' or Users.last_name like '%".$lenderName."%' or CONCAT(Users.first_name, ' ', Users.last_name) like '%".$lenderName."%' or Lenders.first_name like '%".$lenderName."%' or Lenders.surname like '%".$lenderName."%' or CONCAT(Lenders.first_name, ' ', Lenders.surname) like '%".$lenderName."%') order by Users.first_name asc limit 0, 20");
                if(count($lenderresult)>0){
                  $lenderAddress=nl2br($lenderresult[0]->lender_address);
                }else{
                  $lenderAddress="";
                }
                $sessionID=$this->session->get('sessUserID');
                $userDetail=Users::findFirst(array('conditions' => "id='".$sessionID."'"));

                //$randomID=rand();
                /*$htmlContent='<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
                        <html xmlns="http://www.w3.org/1999/xhtml">
                        <head>
                        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
                        <title>HZA</title>
                        <style type="text/css">
                        input:focus{box-shadow:none !important;outline:none !important;}
                        @media print {



                        }
                        /* table>tbody>tr>td, table>tbody>tr>th, table>tfoot>tr>td, table>tfoot>tr>th, table>thead>tr>td, table>thead>tr>th {

                        padding: 15px !important;
                        word-break: break-all;
                        height:auto;
                        vertical-align: top;
                    }
                    .table-bordered>tbody>tr>td{
                        padding: 15px !important;

                    }*/
                    /*table>tbody>tr>td, table>tbody>tr>th, table>tfoot>tr>td, table>tfoot>tr>th, table>thead>tr>td, table>thead>tr>th {

                        word-wrap:break-word;
                        height:auto;
                        vertical-align: top;
                    }


                        </style>
                        </head>
                        <body onload="window.print();">

                        <!--<body>-->



                        <table width="100%" border="0" cellspacing="10" cellpadding="10" style="font-family:Arial, Helvetica, sans-serif; font-size:15px; line-height:18px;">

                           <tr>
                            <td align="center"><img src="frontfile/images/hza-pdf-logo.jpg" width="660" height="auto"  alt=""/></td>
                          </tr>
                          <tr>
                            <td>
                              <table width="100%" border="0" cellspacing="5" cellpadding="5">
                                  <tbody>
                                    <tr>
                                      <td width="60%" style="font-style:italic; color:#767676;">';

                                        if($this->request->getPost('invoice_for')==1){
                                        $htmlContent.='Hank Zarihs Associates<br />
                                      '.stripslashes($dealDetail->advisor).'<br />
                                      '.$dealDetail->lender_id.'<br />';

                                      if($lenderAddress!=''){
                                        $htmlContent.=$lenderAddress."<br/>";
                                      }

                                      $htmlContent.=$dealDetail->borrower_entity.'<br />
                                      '.$dealDetail->location;
                                    }else if($this->request->getPost('invoice_for')==2){
                                      $htmlContent.=$dealDetail->lender_id;

                                      if($lenderAddress!=''){
                                            $htmlContent.="<br/>".$lenderAddress;
                                      }

                                    }
                                      $htmlContent.='</td>
                                      <td width="40%" align="center"><span style="font-size:30px; line-height:46px;display:inline-block; text-decoration:underline;"><em><strong>INVOICE</strong></em></span><br><br><span style="font-size:20px;"><em>'.date("l, F d, Y").'</em></span><img src="frontfile/images/border_image.png" width="239px"  alt=""/></td>
                                    </tr>
                                  </tbody>
                                </table>

                            </td>
                          </tr>
                          <tr>
                            <td style="padding:7px; color:#000; font-size:18px;">

                            <table width="100%" border="0" cellspacing="5" cellpadding="5">
                                  <tbody>
                                    <tr>
                                      <td width="10%" style="padding:0px"><strong><em>Ref</em>:</strong></td>
                                      <td width="90%" style="padding:0px"><span style="font-size:14px;"> '.$dealDetail->security.'</span></td>
                                      </tr>
                                      </table>
                            </td>
                          </tr>
                          <tr>
                            <td>
                              <table width="100%" border="0" cellspacing="0" cellpadding="0">
                                  <tbody>
                                    <tr>

                                        <td width="20%"><em><strong>Client</strong></em></td>
                                        <td width="20%">&nbsp;</td>
                                      <td width="20%"><em><strong>Description</strong></em></td>
                                      <td width="20%"><em><strong>Amount</strong></em></td>
                                      <td width="20%"><em><strong>Due</strong></em></td>


                                    </tr>
                                  </tbody>
                                </table>
                            </td>
                          </tr>
                          <tr>
                            <td>
                              <table width="100%" border="1" cellspacing="0" cellpadding="0">
                                  <tbody>';
                                    if($this->request->getPost('invoice_for')==2){


                                    $htmlContent.='<tr>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" bgcolor="#d9e2f3" style="padding:15px;">Gross Loan</td>
                                      <td width="20%" bgcolor="#d9e2f3" style="padding:15px;">Broker Fee</td>
                                      <td width="20%" bgcolor="#d9e2f3" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" bgcolor="#d9e2f3" style="padding:15px;">Now</td>
                                    </tr>
                                    <tr>
                                      <td width="20%" style="padding:15px;">'.$dealDetail->borrower_entity.'</td>
                                      <td width="20%" style="padding:15px;">£ '.number_format($dealDetail->gross_loan, 2).'</td>
                                      <td width="20%" style="padding:15px;">'.$broker_fee.'%</td>
                                      <td width="20%" style="padding:15px;"><!-- =<?=$dealDetail->broker_fee?> x <?=$dealDetail->gross_loan?> -->£ '.number_format($broker_fee/100*$dealDetail->gross_loan, 2).'</td>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                    </tr>
                                    <tr>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" bgcolor="#d9e2f3" style="padding:15px;">Proc Fee</td>
                                      <td width="20%" bgcolor="#d9e2f3" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" bgcolor="#d9e2f3" style="padding:15px;"></td>
                                    </tr>
                                    <tr>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" style="padding:15px;"><?=$proc_fee?>%</td>
                                      <td width="20%" style="padding:15px;"><!-- =<?=$dealDetail->proc_fee?> x <?=$dealDetail->gross_loan?> -->£ '.number_format($proc_fee/100*$dealDetail->gross_loan, 2).'</td>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                    </tr>
                                    <tr>
                                      <td width="20%" style="padding:15px;">Total</td>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" style="padding:15px;">£ '.number_format($totalpercentval, 2).'</td>
                                      <td width="20%" style="padding:15px;">'.date("d/m/Y").'</td>
                                    </tr>';
                                  }
                                    if($this->request->getPost('invoice_for')==1){


                                    $htmlContent.='<tr>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" style="padding:15px;" bgcolor="#d9e2f3">Gross Loan</td>
                                      <td width="20%" style="padding:15px;" bgcolor="#d9e2f3">HZA Fee</td>
                                      <td width="20%" style="padding:15px;" bgcolor="#d9e2f3">&nbsp;</td>
                                      <td width="20%" style="padding:15px;" bgcolor="#d9e2f3">&nbsp;</td>
                                    </tr>
                                    <tr>
                                      <td width="20%" style="padding:15px;vertical-align: top; word-break: break-all;">'.wordwrap($dealDetail->borrower_entity,15,"<br>").'</td>
                                      <td width="20%" style="padding:15px;">£ '.number_format($dealDetail->gross_loan, 2).'</td>
                                      <td width="20%" style="padding:15px;">'.$hza_percent.'%</td>
                                      <td width="20%" style="padding:15px;"><!-- =<?=$dealDetail->proc_fee?> x <?=$dealDetail->gross_loan?> -->£ '.number_format($hzapercentVal, 2).'</td>
                                      <td width="20%" style="padding:15px;">'.date("d/m/Y").'</td>
                                    </tr>';
                                  }
                                  $htmlContent.='</tbody>
                                </table>
                            </td>
                          </tr>


                          <tr>
                            <td align="center">&nbsp;</td>
                          </tr>
                          <tr>
                            <td style="padding:10px; color:#000; font-size:18px;"><strong>Please make payment to the following bank account:</strong></td>
                          </tr>';

                          if($this->request->getPost('invoice_for')==1){
                          $htmlContent.='<tr>
                            <td align="center"><table width="100%" border="1" cellspacing="0" cellpadding="0">
                                  <tbody>
                                    <tr>
                                      <td width="25%" style="padding:15px;"><em><strong>Bank</strong></em> </td>
                                      <td width="25%" style="padding:15px;"><em><strong>Account Name</strong></em></td>
                                      <td width="25%" style="padding:15px;"><em><strong>Sort code</strong></em></td>
                                      <td width="25%" style="padding:15px;"><em><strong>Account Number</strong></em></td>
                                      <td width="25%" style="padding:15px;"><em><strong>Ref</strong></em></td>
                                    </tr>
                                    <tr>
                                      <td bgcolor="#d9e2f3" style="width: 25%; padding:15px; word-break: break-all; ">'.wordwrap($userDetail->bank_name,15,"<br>").'</td>
                                      <td bgcolor="#d9e2f3" style="width: 25%; padding:15px; word-break: break-all;">'.wordwrap($userDetail->account_name,15,"<br>").'</td>
                                      <td bgcolor="#d9e2f3" style="width: 25%; padding:15px; word-break: break-all;">'.wordwrap($userDetail->sort_code,15,"<br>").'</td>
                                      <td bgcolor="#d9e2f3" style="width: 25%; padding:15px; word-break: break-all;">'.wordwrap($userDetail->acct_number,15,"<br>").'</td>
                                      <td bgcolor="#d9e2f3" style="width: 25%; padding:15px; word-break: break-all;">'.wordwrap($userDetail->acct_ref,15,"<br>").'</td>
                                    </tr>


                                  </tbody>
                                </table></td>
                          </tr>';
                        }else if($this->request->getPost('invoice_for')==2){
                          $htmlContent.='<tr>
                            <td align="center"><table width="100%" border="1" cellspacing="0" cellpadding="7">
                                  <tbody>
                                    <tr>
                                      <td width="15%"><em><strong>Bank</strong></em> </td>
                                      <td width="15%"><em><strong>Account Name</strong></em></td>
                                      <td width="15%"><em><strong>Sort code</strong></em></td>
                                      <td width="15%"><em><strong>Account Number</strong></em></td>
                                      <td width="15%"><em><strong>IBAN</strong></em></td>
                                      <td width="10%"><em><strong>BIC</strong></em></td>
                                      <td width="10%"><em><strong>Ref</strong></em></td>
                                    </tr>
                                    <tr>
                                      <td bgcolor="#d9e2f3">Lloyds Bank</td>
                                      <td bgcolor="#d9e2f3"><p>Hank Zarihs<br> Associates Ltd</p></td>
                                      <td bgcolor="#d9e2f3">30-99-86</td>
                                      <td bgcolor="#d9e2f3">8731 6360</td>
                                      <td bgcolor="#d9e2f3"><p>'.wordwrap('GB74LOYD30998687316360',15,"<br>").'<p></td>
                                      <td bgcolor="#d9e2f3">LOYDGB21043</td>
                                      <td bgcolor="#d9e2f3">'.wordwrap($dealDetail->borrower_entity,15,"<br>").'</td>
                                    </tr>


                                  </tbody>
                                </table></td>
                          </tr>';
                        }


                         $htmlContent.=' <tr>
                            <td align="center">&nbsp;</td>
                          </tr>

                        <tr>
                            <td align="left"><span style="font-size:26px; display:inline-block; text-decoration:underline;">Thank You</span></td>
                          </tr>
                        <tr>
                            <td align="center">&nbsp;</td>
                          </tr>


                          <tr>
                            <td align="center">
                                <img src="frontfile/images/invoice_pdf_footer.jpeg" width="660" height="auto"  alt=""/>
                             <!-- <table width="100%" border="0" cellspacing="5" cellpadding="5">
                          <tbody>
                            <tr>
                              <td align="left" width="55%" style="font-size:13px; margin:0px; padding:0px;color:#fff;">+44(0)20 3889 4403<br />
                        www.hankzarihs.com<br />
                        contact@hankzarihs.com</td>
                              <td align="right" width="45%" style="color:#ccc; font-size:14px;">

                              <h2 style="font-size:18px; margin:0px; padding:0px;color:#fff;">Hank Zarihs Associates</h2>
                        <p style="font-size:13px; margin:0px; padding:0px;color:#fff;">Pixel Business Centre, Brooker Rd,<br> Waltham Abbey, EN91JH</p>
                        <p style="font-size:13px; margin:0px; padding:0px;color:#fff;"><strong>Registered Company Name:<br></strong> Hank Zarihs Associated Limited <br />
                        <strong>Company Number:</strong>10256903 </p>

                              </td>
                            </tr>

                          </tbody>
                        </table>-->


                            </td>
                          </tr>
                        </table>
                        </body>
                        </html>';*/



                        $htmlContent='<style>
                                    body {
                                        overflow-x:hidden;
                                        color:#01172b;
                                        font-size:16px;
                                        line-height:1.5; 
                                        margin:0px; 
                                        padding:0px; 
                                        outline:none;
                                        text-decoration:none;
                                        list-style:none;
                                        box-sizing: border-box;
                                        
                                        font-family: "Nunito", sans-serif;
                                        font-weight:400;
                                        background-color:#fff;width:100%;*background: #fff;
                                    }
                                    p{color:#01172b;font-size:16px;line-height:1.5; margin:0px 0px 20px 0px;font-weight:400;}
                                    tr.trfooter {
                                        position: fixed;
                                        bottom: 0;
                                      }
                                    </style><table width="100%" border="0" cellspacing="" cellpadding="0" align="center" bgcolor="#fff" border="0" style="line-height:18px; font-size:15px;">
                                  <tbody>
                                    <tr class="theaddiv">
                                        <td>
                                            <table width="100%" cellspacing="0" cellpadding="0" align="center" >
                                                <tr>
                                                    <td>
                                                        <img src="frontfile/images/hza-top.jpg" style="" width="720" height="auto">
                                                    </td>
                                                </tr>
                                            </table>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td style="padding: 20px 0px 0;">
                                            <table align="center" width="100%;" cellspacing="0" cellpadding="20" border="0" style="font-size:12px;">
                                                <tbody>
                                                    <tr>
                                                    <td width="35%" valign="top">
                                                        <h4 style="color: #01172b;font-weight: 900;margin: 0 0 10px 0;width: 150px;font-size: 18px;">Project Reference<img src="frontfile/images/invoice_border.png" width="150"  alt=""/></h4><br>
                                                        <p style="color: #01172b;font-weight: 400;font-size: 16px;margin: 0;    line-height: 1.3;width: 400px;">'.$dealDetail->borrower_entity.'</p>
                                                    </td>
                                                    <td width="35%" valign="top">
                                                        <h4 style="color: #01172b;font-weight: 900;margin: 0 0 10px 0;width: 105px;font-size: 18px;">Invoice Date<img src="frontfile/images/invoice_border.png" width="105"  alt=""/></h4><br>
                                                        <p style="color: #01172b;font-weight: 400;font-size: 16px;margin: 0;    line-height: 1.3;">'.date('l, M d, Y').'</p>
                                                    </td>
                                                    </tr>

                                                     <tr>
                                                    <td width="35%" valign="top">
                                                        <h4 style="color: #01172b;font-weight: 900;margin: 0 0 10px 0;width: 85px;font-size: 18px;">Invoice To<img src="frontfile/images/invoice_border.png" width="85"  alt=""/></h4><br>
                                                        <p style="color: #01172b;font-weight: 400;font-size: 16px;margin: 0;    line-height: 1.3;width: 450px;">
                                  <!--<tr>
                                        <td style="padding: 10px 40px 280px;">&nbsp;</td>
                                    </tr>                       <br>';
                                                        if($this->request->getPost('invoice_for')==1){
                                                                    $htmlContent.='Hank Zarihs Associates<br />The Old Green Dragon, 62 Churchgate, Cheshunt, Herts, EN8 9NF';

                                                                    }else if($this->request->getPost('invoice_for')==2){
                                                                  $htmlContent.=$dealDetail->lender_id;

                                                                  if($lenderAddress!=''){
                                                                    $htmlContent.="<br/>".$lenderAddress;
                                                                  }

                                                                }else if($this->request->getPost('invoice_for')==3){
                                                                    $leadid=$dealDetail->lead_id;
                                                                    $leadAppdetails=LeadApplication::findFirst(array('conditions' => "lead_id=".$leadid,));

                                                                    if($leadAppdetails->pd_current_address!="")
                                                                    {
                                                                        $pd_current_addressArr=explode(":::", $leadAppdetails->pd_current_address);
                                                                        //print_r($pd_current_addressArr);exit;
                                                                        $currentAddressArr=explode(":K:", $pd_current_addressArr[0]);
                                                                        if(count($currentAddressArr)==2)
                                                                        {
                                                                            $addressclient=$currentAddressArr[0]."<br/>".$currentAddressArr[1];
                                                                        }
                                                                        else
                                                                        {
                                                                            $addressclient=$currentAddressArr[0];
                                                                        }
                                                                    }else
                                                                    {
                                                                        $addressclient="";
                                                                    }
                                                                    $htmlContent.= $addressclient;

                                                                }
                                                        $htmlContent.='</p>
                                                        
                                                    </td>
                                                    <td width="35%" valign="top">
                                                        <!--<h4 style="color: #01172b;font-weight: 900;margin: 0 0 10px 0;width: 135px;font-size: 18px;border-spacing: 5px;">Invoice Number<img src="frontfile/images/invoice_border.png" width="135"  alt=""/></h4><br>
                                                        <p style="color: #01172b;font-weight: 400;font-size: 16px;margin: 0;    line-height: 1.3;">'.rand(1000000, 9999999).'</p>-->
                                                        <h4 style="color: #01172b;font-weight: 900;margin: 0 0 10px 0;width: 155px;font-size: 18px;line-height: 2em;">Total Invoice Value<img src="frontfile/images/invoice_border.png" width="155"  alt=""/></h4><br>
                                                        <p style="color: #01172b;font-weight: 400;font-size: 16px;margin: 0;    line-height: 1.3;">';
                                                            if($this->request->getPost('invoice_for')==1){
                                                            $htmlContent.='£ '.number_format($hzapercentVal, 2);

                                                          }else if($this->request->getPost('invoice_for')==2){ $htmlContent.='£ '.number_format($totalpercentval, 2); }

                                                          $htmlContent.='</p>
                                                    </td>
                                                </tr>';
                                               /* <tr>
                                                    <td width="35%">
                                                        <p style="color: #01172b;font-weight: 400;font-size: 16px;margin: 0;    line-height: 1.3;width: 450px;">';
                                                                if($this->request->getPost('invoice_for')==1){
                                                                    $htmlContent.='Hank Zarihs Associates<br />';
                                                                    $htmlContent.=stripslashes($dealDetail->advisor).'<br />';
                                                                    $htmlContent.=$dealDetail->lender_id.'<br />';

                                                                  if($userDetail->address!=''){
                                                                    $htmlContent.=$userDetail->address."<br/>";
                                                                  }

                                                                  $htmlContent.=$dealDetail->borrower_entity.'<br />';
                                                                  $htmlContent.=$dealDetail->location;
                                                                    }else if($this->request->getPost('invoice_for')==2){
                                                                  $htmlContent.=$dealDetail->lender_id;

                                                                  if($lenderAddress!=''){
                                                                    $htmlContent.="<br/>".$lenderAddress;
                                                                  }

                                                                }
                                                        $htmlContent.='</p>
                                                    </td>
                                                    <td  width="35%">
                                                        <h4 style="color: #01172b;font-weight: 900;margin: 0 0 10px 0;width: 155px;font-size: 18px;line-height: 2em;">Total Invoice Value<img src="frontfile/images/invoice_border.png" width="155"  alt=""/></h4><br>
                                                        <p style="color: #01172b;font-weight: 400;font-size: 16px;margin: 0;    line-height: 1.3;">';
                                                            if($this->request->getPost('invoice_for')==1){
                                                            $htmlContent.='£ '.number_format($hzapercentVal, 2);

                                                          }else if($this->request->getPost('invoice_for')==2){ $htmlContent.='£ '.number_format($totalpercentval, 2); }

                                                          $htmlContent.='</p>
                                                    </td>
                                                    </tr>*/
                                                $htmlContent.='</tbody>
                                            </table>
                                        </td>
                                    </tr>
                                    
                                    <tr>
                                        <td style="padding: 20px 40px 0;">
                                            <table width="100%" cellpadding="0" cellspacing="0" style="border-collapse: separate;border-spacing:10px;">';

                                               if($this->request->getPost('invoice_for')==2 || $this->request->getPost('invoice_for')==3){

                                                    $htmlContent.='<tr>
                                                    <td width="20%" align="center" valign="center" bgcolor="#80d0d8" style="color: #01172b;font-weight: 900;font-size: 14px;background: ;padding: 20px 15px 15px 15px;">
                                                        Client Name
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        Gross Loan
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        Broker Fee
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        Fee Amount
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        Now
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        '.wordwrap($dealDetail->borrower_entity,12,"<br>").'
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                       £ '.wordwrap(number_format($dealDetail->gross_loan, 2),12,"<br>").'
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        '.$broker_fee.'%

                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        £ '.number_format($brokerFeeVal, 2).'
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                       
                                                    </td>
                                                </tr>

                                                <tr>
                                                    <td width="20%" align="center" valign="center" bgcolor="#80d0d8" style="color: #01172b;font-weight: 900;font-size: 14px;background: ;padding: 20px 15px 15px 15px;">
                                                        
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                       
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        Proc Fee
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        
                                                    </td>
                                                </tr>

                                                <tr>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                       
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        '.$proc_fee.'%
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        £ '.number_format($procFeeVal, 2).'
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                       
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        Total
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                       
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        £ '.number_format($totalpercentval, 2).'
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                       '.date("d/m/Y").'
                                                    </td>
                                                </tr>';



                                                }
                                                if($this->request->getPost('invoice_for')==1){

                                                    $htmlContent.='<tr>
                                                      <td width="20%" align="center" valign="center" bgcolor="#80d0d8" style="color: #01172b;font-weight: 900;font-size: 14px;background: ;padding: 20px 15px 15px 15px;">
                                                          Client Name
                                                      </td>
                                                      <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                          Gross Loan
                                                      </td>
                                                      <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                          HZA Fee
                                                      </td>
                                                      <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                          Fee Amount
                                                      </td>
                                                      <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                          Due Date
                                                      </td>
                                                  </tr>
                                                  <tr>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        '.wordwrap($dealDetail->borrower_entity,12,"<br>").'
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                       £ '.number_format($dealDetail->gross_loan, 2).'
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        '.$hza_percent.'%
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        £ '.number_format($hzapercentVal, 2).'
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                       '.date("d/m/Y").'
                                                    </td>
                                                </tr>';

                                                }





                                            $htmlContent.='</table>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td style="padding: 20px 50px 0;">
                                            <table>
                                                <tr>
                                                    <td align="left" valign="left" width="100%">
                                                        <h4 style="color: #01172b;font-weight: 900;margin: 0 0 10px 0;width: 200px;font-size: 20px;">Bank Account Details<img src="frontfile/images/invoice_border.png" width="200"  alt=""/></h4><br>
                                                        <p style="color: #01172b;font-weight: 400;font-size: 16px;margin: 0;    line-height: 1.3;">Please make payment to the following bank account:</p>
                                                    </td>
                                                </tr>
                                            </table>
                                        </td>
                                    </tr>

                                    <!--<tr>
                                        <td style="padding: 10px 40px 280px;">&nbsp;</td>
                                    </tr>-->';

                                    if($this->request->getPost('invoice_for')==1){

                                      $htmlContent.='<tr>
                                        <td style="padding: 10px 40px 0;">
                                            <table width="100%" cellpadding="0" cellspacing="0" style="border-collapse: separate;border-spacing:10px;">
                                                <tr>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                       Bank Name
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        Account<br> Name
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        Sort Code
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        Account<br> Number
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        Ref
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        '.wordwrap($userDetail->bank_name,12,"<br>").'
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                       '.wordwrap($userDetail->account_name,12,"<br>").'
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        '.wordwrap($userDetail->sort_code,12,"<br>").'
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        '.wordwrap($userDetail->acct_number,12,"<br>").'
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        '.wordwrap($userDetail->acct_ref,12,"<br>").'
                                                    </td>
                                                </tr>
                                            </table>
                                        </td>
                                    </tr>';

                                    }else if($this->request->getPost('invoice_for')==2 || $this->request->getPost('invoice_for')==3){

                                     $htmlContent.=' <tr>
                                        <td style="padding: 10px 40px 0;">
                                            <table width="100%" cellpadding="0" cellspacing="0" style="border-collapse: separate;border-spacing:10px;">
                                                <tr>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 900;font-size: 14px; background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                       Bank Name
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        Account Name
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        Sort Code
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        Account Number
                                                    </td>
                                                     <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        IBAN
                                                    </td>
                                                     <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        BIC
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        Ref
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        Lloyds Bank
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                       Hank Zarihs <br>Associates Ltd
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        30-99-86
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        8731 6360
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        GB74LOYD309<br>98687316360
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        LOYDGB21043
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        '.wordwrap($dealDetail->borrower_entity,12,"<br>").'
                                                    </td>
                                                </tr>
                                            </table>
                                        </td>
                                    </tr>';

                                    }

                                    /*<tr>
                                        <td style="padding: 20px 50px 0;">
                                            <table>
                                                <tr>
                                                    <td align="left" valign="left" width="100%">
                                                        <h4 style="color: #01172b;font-weight: 900;margin: 0 0 0px 0;width: 120px;font-size: 20px;line-height:1em; line-height: 1rem;">Other Details<img src="frontfile/images/invoice_border.png" width="120"  alt=""/></h4>
                                                    </td>
                                                </tr>
                                            </table>
                                        </td>
                                    </tr><tr>
                                        <td style="padding: 10px 50px 0;">
                                            <table width="100%" cellpadding="0" cellspacing="0">
                                                <tr>
                                                    <td width="100%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 18px;background: #c7c8ca;padding: 30px 15px;color: #000">

                                                    </td>
                                                </tr>
                                            </table>
                                        </td>
                                    </tr>*/
                                    $htmlContent.='
                                    
                                    <tr class="trfooter"><td><table width="100%" cellspacing="0" cellpadding="0" align="center" >
                                          <tr>
                                              <td>
                                                  <table width="100%" cellspacing="0" cellpadding="0" align="center" >
                                                      <tr>
                                                          <td>
                                                              <img src="frontfile/images/blank.gif" width="720" height="auto" style="">
                                                          </td>
                                                      </tr>
                                                  </table>
                                              </td>
                                          </tr>
                                          <tr>
                                              <td>
                                                  <table  width="720px" cellspacing="0" cellpadding="0" align="center" bgcolor="#01172b" style="padding: 15px 0;">
                                                      <tr>
                                                          <td>
                                                              <table width="100%" cellspacing="0" cellpadding="0" align="center">
                                                                  <tr>
                                                                      <td style="padding: 0 50px;">
                                                                          <table width="100%" cellspacing="0" cellpadding="0" align="center">
                                                                              <tr>
                                                                                  <td align="left" valign="middle" width="30%" style="color: #fff;font-weight: 500;font-size: 14px;">
                                                                                      *Terms & Conditions Apply.
                                                                                  </td>
                                                                                  <td align="right" valign="middle" width="70%" style="color: #fff;font-weight: 500;font-size: 14px;">
                                                                                      Hank Zarihs Associates | Providing Funding Solution For Success
                                                                                  </td>
                                                                              </tr>
                                                                          </table>
                                                                      </td>
                                                                  </tr>
                                                              </table>
                                                          </td>
                                                      </tr>
                                                  </table>
                                              </td>
                                          </tr>
                                    </table>
                                        </td>
                                    </tr>
                                  </tbody>
                                </table>';

                //echo $htmlContent;exit;
                pdf_create($htmlContent, "uploads/completeddeals/completeddeal-lead-".$allPost['dealid']."-invoice.pdf", false);
                //echo "uploads/completeddeals/completeddeal-lead-".$allPost['dealid']."-invoice.pdf";exit();


                //password protection start here============

                /*$file="uploads/completeddeals/completeddeal-lead-".$allPost['dealid']."-invoice.pdf";

                //echo $dealDetail->borrower_entity;exit;


                $password = $allPost['pdf_pwd'];

                //name of the original file (unprotected)
                $origFile = $file;

                $time=time();

                //name of the destination file (password protected and printing rights removed)
                $destFile ="uploads/completeddeals/completeddeal-lead-".$time."_".$allPost['dealid']."-invoice.pdf";;

                //encrypt the book and create the protected file
                UIElements::pdfEncrypt($origFile, $password, $destFile );*/
                //============Password Protection end here=========

                $fileattachedarr=array("uploads/completeddeals/completeddeal-lead-".$allPost['dealid']."-invoice.pdf");

                $subject='Invoice from '.trim($userDetail->first_name.' '.$userDetail->last_name).' / '.$dealDetail->borrower_entity.' / '.$dealDetail->security.' / '.number_format($dealDetail->gross_loan, 2);
                $sendMsg="Hi Shiraz,<br>

                        Below I've generated and attached the invoice for my client;<br>

                        Client Name: ".$dealDetail->borrower_entity."<br>
                        Security Address: ".$dealDetail->security."<br>
                        Gross Loan Amount: ".number_format($dealDetail->gross_loan, 2)."<br>
                        Lender: ".$dealDetail->lender_id."<br>

                        Payment Due = ".number_format($hzapercentVal, 2)."<br><br>

                        Many Thanks<br>

                        ".trim($userDetail->first_name.' '.$userDetail->last_name);

                        //shiraz@hankzarihs.com
                $sentMail =UIElements::sendAttachmentEmail('maastest3@gmail.com',$subject,$sendMsg,$fileattachedarr, $userDetail->email_id);
                // $sentMail =UIElements::sendAttachmentEmail('shiraz@hankzarihs.com',$subject,$sendMsg,$fileattachedarr, $userDetail->email_id);
                if($sentMail){
                    $this->flashSession->success("Mail sent successfully with the invoice generated file.");
                }else{
                    $this->flashSession->error("Mail sending failed, Please try again.");
                }
                return $response->redirect('dashboard/dealinvoice/'.$allPost['dealid']);
            }else if($allPost['actionval']==3){

                $dealDetail=CompletedDeals::findFirst(array(
                    'conditions' => "id=".$allPost['id'],
                ));
                //echo "<pre>";print_r($dealDetail->toArray());exit;
                if($dealDetail->email_id!="")
                {



                    $siteDetail = Sitesetting::findFirst(array("id=1"));
                    if($this->request->getPost('entry_format')==1)
                    {
                        $broker_fee=$this->request->getPost('broker_fee');
                        $proc_fee=$this->request->getPost('proc_fee');
                        $brokerFeeVal=$broker_fee/100*$dealDetail->gross_loan;
                        $procFeeVal=$proc_fee/100*$dealDetail->gross_loan;
                    }
                    else
                    {

                        $brokerFeeVal==$this->request->getPost('broker_fee');
                        $procFeeVal=$this->request->getPost('proc_fee');
                        $broker_fee=round($brokerFeeVal/$dealDetail->gross_loan*100,2);
                        $proc_fee==round($procFeeVal/$dealDetail->gross_loan*100,2);
                    }
                    //echo "broker_fee percent :".$broker_fee." broker_fee value :".$brokerFeeVal;exit;
                    /*$broker_fee=$this->request->getPost('broker_fee');
                    $proc_fee=$this->request->getPost('proc_fee');*/
                    $hza_percent=$this->request->getPost('hza_percent');
                   /* $brokerFeeVal=$broker_fee/100*$dealDetail->gross_loan;
                    $procFeeVal=$proc_fee/100*$dealDetail->gross_loan;*/
                    $totalpercentval=$brokerFeeVal+$procFeeVal;
                    $hzapercentVal=$hza_percent/100*$totalpercentval;
                    $lenderName=$dealDetail->lender_id;
                    $lenderresult=$this->modelsManager->executeQuery("select Lenders.* from Lenders left join Users on Lenders.lender_id=Users.id where Lenders.is_active=1 and (Users.first_name like '%".$lenderName."%' or Users.last_name like '%".$lenderName."%' or CONCAT(Users.first_name, ' ', Users.last_name) like '%".$lenderName."%' or Lenders.first_name like '%".$lenderName."%' or Lenders.surname like '%".$lenderName."%' or CONCAT(Lenders.first_name, ' ', Lenders.surname) like '%".$lenderName."%') order by Users.first_name asc limit 0, 20");
                    if(count($lenderresult)>0){
                      $lenderAddress=nl2br($lenderresult[0]->lender_address);
                    }else{
                      $lenderAddress="";
                    }
                    $sessionID=$this->session->get('sessUserID');
                    $userDetail=Users::findFirst(array('conditions' => "id='".$sessionID."'"));





                            $htmlContent='<style>
                                        body {
                                            overflow-x:hidden;
                                            color:#01172b;
                                            font-size:16px;
                                            line-height:1.5; 
                                            margin:0px; 
                                            padding:0px; 
                                            outline:none;
                                            text-decoration:none;
                                            list-style:none;
                                            box-sizing: border-box;
                                            
                                            font-family: "Nunito", sans-serif;
                                            font-weight:400;
                                            background-color:#fff;width:100%;*background: #fff;
                                        }
                                        p{color:#01172b;font-size:16px;line-height:1.5; margin:0px 0px 20px 0px;font-weight:400;}
                                        tr.trfooter {
                                            position: fixed;
                                            bottom: 0;
                                          }
                                        </style><table width="100%" border="0" cellspacing="" cellpadding="0" align="center" bgcolor="#fff" border="0" style="line-height:18px; font-size:15px;">
                                      <tbody>
                                        <tr class="theaddiv">
                                            <td>
                                                <table width="100%" cellspacing="0" cellpadding="0" align="center" >
                                                    <tr>
                                                        <td>
                                                            <img src="frontfile/images/hza-top.jpg" style="" width="720" height="auto">
                                                        </td>
                                                    </tr>
                                                </table>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="padding: 20px 0px 0;">
                                                <table align="center" width="100%;" cellspacing="0" cellpadding="20" border="0" style="font-size:12px;">
                                                    <tbody>
                                                        <tr>
                                                        <td width="35%" valign="top">
                                                            <h4 style="color: #01172b;font-weight: 900;margin: 0 0 10px 0;width: 150px;font-size: 18px;">Project Reference<img src="frontfile/images/invoice_border.png" width="150"  alt=""/></h4><br>
                                                            <p style="color: #01172b;font-weight: 400;font-size: 16px;margin: 0;    line-height: 1.3;width: 400px;">'.$dealDetail->borrower_entity.'</p>
                                                        </td>
                                                        <td width="35%" valign="top">
                                                            <h4 style="color: #01172b;font-weight: 900;margin: 0 0 10px 0;width: 105px;font-size: 18px;">Invoice Date<img src="frontfile/images/invoice_border.png" width="105"  alt=""/></h4><br>
                                                            <p style="color: #01172b;font-weight: 400;font-size: 16px;margin: 0;    line-height: 1.3;">'.date('l, M d, Y').'</p>
                                                        </td>
                                                        </tr>

                                                         <tr>
                                                        <td width="35%" valign="top">
                                                            <h4 style="color: #01172b;font-weight: 900;margin: 0 0 10px 0;width: 85px;font-size: 18px;">Invoice To<img src="frontfile/images/invoice_border.png" width="85"  alt=""/></h4><br>
                                                            <p style="color: #01172b;font-weight: 400;font-size: 16px;margin: 0;    line-height: 1.3;width: 450px;">
                                      <!--<tr>
                                            <td style="padding: 10px 40px 280px;">&nbsp;</td>
                                        </tr>                       <br>';
                                                            if($this->request->getPost('invoice_for')==1){
                                                                        $htmlContent.='Hank Zarihs Associates<br />The Old Green Dragon, 62 Churchgate, Cheshunt, Herts, EN8 9NF';

                                                                        }else if($this->request->getPost('invoice_for')==2 || $this->request->getPost('invoice_for')==3){
                                                                      $htmlContent.=$dealDetail->lender_id;

                                                                      if($lenderAddress!=''){
                                                                        $htmlContent.="<br/>".$lenderAddress;
                                                                      }

                                                                    }
                                                            $htmlContent.='</p>
                                                            
                                                        </td>
                                                        <td width="35%" valign="top">
                                                            <!--<h4 style="color: #01172b;font-weight: 900;margin: 0 0 10px 0;width: 135px;font-size: 18px;border-spacing: 5px;">Invoice Number<img src="frontfile/images/invoice_border.png" width="135"  alt=""/></h4><br>
                                                            <p style="color: #01172b;font-weight: 400;font-size: 16px;margin: 0;    line-height: 1.3;">'.rand(1000000, 9999999).'</p>-->
                                                            <h4 style="color: #01172b;font-weight: 900;margin: 0 0 10px 0;width: 155px;font-size: 18px;line-height: 2em;">Total Invoice Value<img src="frontfile/images/invoice_border.png" width="155"  alt=""/></h4><br>
                                                            <p style="color: #01172b;font-weight: 400;font-size: 16px;margin: 0;    line-height: 1.3;">';
                                                                if($this->request->getPost('invoice_for')==1){
                                                                $htmlContent.='£ '.number_format($hzapercentVal, 2);

                                                              }else if($this->request->getPost('invoice_for')==2){ $htmlContent.='£ '.number_format($totalpercentval, 2); }

                                                              $htmlContent.='</p>
                                                        </td>
                                                    </tr>';
                                                   /* <tr>
                                                        <td width="35%">
                                                            <p style="color: #01172b;font-weight: 400;font-size: 16px;margin: 0;    line-height: 1.3;width: 450px;">';
                                                                    if($this->request->getPost('invoice_for')==1){
                                                                        $htmlContent.='Hank Zarihs Associates<br />';
                                                                        $htmlContent.=stripslashes($dealDetail->advisor).'<br />';
                                                                        $htmlContent.=$dealDetail->lender_id.'<br />';

                                                                      if($userDetail->address!=''){
                                                                        $htmlContent.=$userDetail->address."<br/>";
                                                                      }

                                                                      $htmlContent.=$dealDetail->borrower_entity.'<br />';
                                                                      $htmlContent.=$dealDetail->location;
                                                                        }else if($this->request->getPost('invoice_for')==2){
                                                                      $htmlContent.=$dealDetail->lender_id;

                                                                      if($lenderAddress!=''){
                                                                        $htmlContent.="<br/>".$lenderAddress;
                                                                      }

                                                                    }
                                                            $htmlContent.='</p>
                                                        </td>
                                                        <td  width="35%">
                                                            <h4 style="color: #01172b;font-weight: 900;margin: 0 0 10px 0;width: 155px;font-size: 18px;line-height: 2em;">Total Invoice Value<img src="frontfile/images/invoice_border.png" width="155"  alt=""/></h4><br>
                                                            <p style="color: #01172b;font-weight: 400;font-size: 16px;margin: 0;    line-height: 1.3;">';
                                                                if($this->request->getPost('invoice_for')==1){
                                                                $htmlContent.='£ '.number_format($hzapercentVal, 2);

                                                              }else if($this->request->getPost('invoice_for')==2){ $htmlContent.='£ '.number_format($totalpercentval, 2); }

                                                              $htmlContent.='</p>
                                                        </td>
                                                        </tr>*/
                                                    $htmlContent.='</tbody>
                                                </table>
                                            </td>
                                        </tr>
                                        
                                        <tr>
                                            <td style="padding: 20px 40px 0;">
                                                <table width="100%" cellpadding="0" cellspacing="0" style="border-collapse: separate;border-spacing:10px;">';

                                                   if($this->request->getPost('invoice_for')==2 || $this->request->getPost('invoice_for')==3){

                                                        $htmlContent.='<tr>
                                                        <td width="20%" align="center" valign="center" bgcolor="#80d0d8" style="color: #01172b;font-weight: 900;font-size: 14px;background: ;padding: 20px 15px 15px 15px;">
                                                            Client Name
                                                        </td>
                                                        <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                            Gross Loan
                                                        </td>
                                                        <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                            Broker Fee
                                                        </td>
                                                        <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                            Fee Amount
                                                        </td>
                                                        <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                            Now
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                            '.wordwrap($dealDetail->borrower_entity,12,"<br>").'
                                                        </td>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                           £ '.wordwrap(number_format($dealDetail->gross_loan, 2),12,"<br>").'
                                                        </td>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                            '.$broker_fee.'%

                                                        </td>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                            £ '.number_format($brokerFeeVal, 2).'
                                                        </td>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                           
                                                        </td>
                                                    </tr>

                                                    <tr>
                                                        <td width="20%" align="center" valign="center" bgcolor="#80d0d8" style="color: #01172b;font-weight: 900;font-size: 14px;background: ;padding: 20px 15px 15px 15px;">
                                                            
                                                        </td>
                                                        <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                           
                                                        </td>
                                                        <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                            Proc Fee
                                                        </td>
                                                        <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                            
                                                        </td>
                                                        <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                            
                                                        </td>
                                                    </tr>

                                                    <tr>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                            
                                                        </td>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                           
                                                        </td>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                            '.$proc_fee.'%
                                                        </td>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                            £ '.number_format($procFeeVal, 2).'
                                                        </td>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                           
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                            Total
                                                        </td>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                           
                                                        </td>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                            
                                                        </td>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                            £ '.number_format($totalpercentval, 2).'
                                                        </td>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                           '.date("d/m/Y").'
                                                        </td>
                                                    </tr>';



                                                    }
                                                    if($this->request->getPost('invoice_for')==1){

                                                        $htmlContent.='<tr>
                                                          <td width="20%" align="center" valign="center" bgcolor="#80d0d8" style="color: #01172b;font-weight: 900;font-size: 14px;background: ;padding: 20px 15px 15px 15px;">
                                                              Client Name
                                                          </td>
                                                          <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                              Gross Loan
                                                          </td>
                                                          <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                              HZA Fee
                                                          </td>
                                                          <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                              Fee Amount
                                                          </td>
                                                          <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                              Due Date
                                                          </td>
                                                      </tr>
                                                      <tr>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                            '.wordwrap($dealDetail->borrower_entity,12,"<br>").'
                                                        </td>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                           £ '.number_format($dealDetail->gross_loan, 2).'
                                                        </td>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                            '.$hza_percent.'%
                                                        </td>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                            £ '.number_format($hzapercentVal, 2).'
                                                        </td>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                           '.date("d/m/Y").'
                                                        </td>
                                                    </tr>';

                                                    }





                                                $htmlContent.='</table>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="padding: 20px 50px 0;">
                                                <table>
                                                    <tr>
                                                        <td align="left" valign="left" width="100%">
                                                            <h4 style="color: #01172b;font-weight: 900;margin: 0 0 10px 0;width: 200px;font-size: 20px;">Bank Account Details<img src="frontfile/images/invoice_border.png" width="200"  alt=""/></h4><br>
                                                            <p style="color: #01172b;font-weight: 400;font-size: 16px;margin: 0;    line-height: 1.3;">Please make payment to the following bank account:</p>
                                                        </td>
                                                    </tr>
                                                </table>
                                            </td>
                                        </tr>

                                        <!--<tr>
                                            <td style="padding: 10px 40px 280px;">&nbsp;</td>
                                        </tr>-->';

                                        if($this->request->getPost('invoice_for')==1){

                                          $htmlContent.='<tr>
                                            <td style="padding: 10px 40px 0;">
                                                <table width="100%" cellpadding="0" cellspacing="0" style="border-collapse: separate;border-spacing:10px;">
                                                    <tr>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                           Bank Name
                                                        </td>
                                                        <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                            Account<br> Name
                                                        </td>
                                                        <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                            Sort Code
                                                        </td>
                                                        <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                            Account<br> Number
                                                        </td>
                                                        <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                            Ref
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                            '.wordwrap($userDetail->bank_name,12,"<br>").'
                                                        </td>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                           '.wordwrap($userDetail->account_name,12,"<br>").'
                                                        </td>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                            '.wordwrap($userDetail->sort_code,12,"<br>").'
                                                        </td>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                            '.wordwrap($userDetail->acct_number,12,"<br>").'
                                                        </td>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                            '.wordwrap($userDetail->acct_ref,12,"<br>").'
                                                        </td>
                                                    </tr>
                                                </table>
                                            </td>
                                        </tr>';

                                        }else if($this->request->getPost('invoice_for')==2 || $this->request->getPost('invoice_for')==3){

                                         $htmlContent.=' <tr>
                                            <td style="padding: 10px 40px 0;">
                                                <table width="100%" cellpadding="0" cellspacing="0" style="border-collapse: separate;border-spacing:10px;">
                                                    <tr>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 900;font-size: 14px; background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                           Bank Name
                                                        </td>
                                                        <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                            Account Name
                                                        </td>
                                                        <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                            Sort Code
                                                        </td>
                                                        <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                            Account Number
                                                        </td>
                                                         <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                            IBAN
                                                        </td>
                                                         <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                            BIC
                                                        </td>
                                                        <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                            Ref
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                            Lloyds Bank
                                                        </td>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                           Hank Zarihs <br>Associates Ltd
                                                        </td>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                            30-99-86
                                                        </td>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                            8731 6360
                                                        </td>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                            GB74LOYD309<br>98687316360
                                                        </td>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                            LOYDGB21043
                                                        </td>
                                                        <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                            '.wordwrap($dealDetail->borrower_entity,12,"<br>").'
                                                        </td>
                                                    </tr>
                                                </table>
                                            </td>
                                        </tr>';

                                        }

                                        /*<tr>
                                            <td style="padding: 20px 50px 0;">
                                                <table>
                                                    <tr>
                                                        <td align="left" valign="left" width="100%">
                                                            <h4 style="color: #01172b;font-weight: 900;margin: 0 0 0px 0;width: 120px;font-size: 20px;line-height:1em; line-height: 1rem;">Other Details<img src="frontfile/images/invoice_border.png" width="120"  alt=""/></h4>
                                                        </td>
                                                    </tr>
                                                </table>
                                            </td>
                                        </tr><tr>
                                            <td style="padding: 10px 50px 0;">
                                                <table width="100%" cellpadding="0" cellspacing="0">
                                                    <tr>
                                                        <td width="100%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 18px;background: #c7c8ca;padding: 30px 15px;color: #000">

                                                        </td>
                                                    </tr>
                                                </table>
                                            </td>
                                        </tr>*/
                                        $htmlContent.='
                                        
                                        <tr class="trfooter"><td><table width="100%" cellspacing="0" cellpadding="0" align="center" >
                                              <tr>
                                                  <td>
                                                      <table width="100%" cellspacing="0" cellpadding="0" align="center" >
                                                          <tr>
                                                              <td>
                                                                  <img src="frontfile/images/blank.gif" width="720" height="auto" style="">
                                                              </td>
                                                          </tr>
                                                      </table>
                                                  </td>
                                              </tr>
                                              <tr>
                                                  <td>
                                                      <table  width="720px" cellspacing="0" cellpadding="0" align="center" bgcolor="#01172b" style="padding: 15px 0;">
                                                          <tr>
                                                              <td>
                                                                  <table width="100%" cellspacing="0" cellpadding="0" align="center">
                                                                      <tr>
                                                                          <td style="padding: 0 50px;">
                                                                              <table width="100%" cellspacing="0" cellpadding="0" align="center">
                                                                                  <tr>
                                                                                      <td align="left" valign="middle" width="30%" style="color: #fff;font-weight: 500;font-size: 14px;">
                                                                                          *Terms & Conditions Apply.
                                                                                      </td>
                                                                                      <td align="right" valign="middle" width="70%" style="color: #fff;font-weight: 500;font-size: 14px;">
                                                                                          Hank Zarihs Associates | Providing Funding Solution For Success
                                                                                      </td>
                                                                                  </tr>
                                                                              </table>
                                                                          </td>
                                                                      </tr>
                                                                  </table>
                                                              </td>
                                                          </tr>
                                                      </table>
                                                  </td>
                                              </tr>
                                        </table>
                                            </td>
                                        </tr>
                                      </tbody>
                                    </table>';

                    //echo $htmlContent;exit;
                    pdf_create($htmlContent, "uploads/completeddeals/completeddeal-lead-".$allPost['dealid']."-invoice.pdf", false);


                    $fileattachedarr=array("uploads/completeddeals/completeddeal-lead-".$allPost['dealid']."-invoice.pdf");

                    $subject='Invoice from '.trim($userDetail->first_name.' '.$userDetail->last_name).' / '.$dealDetail->borrower_entity.' / '.$dealDetail->security.' / '.number_format($dealDetail->gross_loan, 2);
                    $sendMsg="Hi Shiraz,<br>

                            Below I've generated and attached the invoice for my client;<br>

                            Client Name: ".$dealDetail->borrower_entity."<br>
                            Security Address: ".$dealDetail->security."<br>
                            Gross Loan Amount: ".number_format($dealDetail->gross_loan, 2)."<br>
                            Lender: ".$dealDetail->lender_id."<br>

                            Payment Due = ".number_format($hzapercentVal, 2)."<br><br>

                            Many Thanks<br>

                            ".trim($userDetail->first_name.' '.$userDetail->last_name);

                            //shiraz@hankzarihs.com
                            //$dealDetail->email_id
                    $sentMail =UIElements::sendAttachmentEmail($dealDetail->email_id,$subject,$sendMsg,$fileattachedarr, $userDetail->email_id);
                    if($sentMail){
                        $this->flashSession->success("Mail sent successfully with the invoice generated file.");
                    }else{
                        $this->flashSession->error("Mail sending failed, Please try again.");
                    }
                }
                else
                {
                    $this->flashSession->error("Client Email Not Found");
                }
                return $response->redirect('dashboard/dealinvoice/'.$allPost['dealid']);
            }else if($allPost['actionval']==11){

                $dealDetail=CompletedDeals::findFirst(array(
                    'conditions' => "id=".$allPost['id'],
                ));

                $siteDetail = Sitesetting::findFirst(array("id=1"));
                $broker_fee=$this->request->getPost('broker_fee');
                $proc_fee=$this->request->getPost('proc_fee');
                $hza_percent=$this->request->getPost('hza_percent');
                $brokerFeeVal=$broker_fee/100*$dealDetail->gross_loan;
                $procFeeVal=$proc_fee/100*$dealDetail->gross_loan;
                $totalpercentval=$brokerFeeVal+$procFeeVal;
                $hzapercentVal=$hza_percent/100*$totalpercentval;
                $lenderName=$dealDetail->lender_id;
                $lenderresult=$this->modelsManager->executeQuery("select Lenders.* from Lenders left join Users on Lenders.lender_id=Users.id where Lenders.is_active=1 and (Users.first_name like '%".$lenderName."%' or Users.last_name like '%".$lenderName."%' or CONCAT(Users.first_name, ' ', Users.last_name) like '%".$lenderName."%' or Lenders.first_name like '%".$lenderName."%' or Lenders.surname like '%".$lenderName."%' or CONCAT(Lenders.first_name, ' ', Lenders.surname) like '%".$lenderName."%') order by Users.first_name asc limit 0, 20");
                if(count($lenderresult)>0){
                  $lenderAddress=nl2br($lenderresult[0]->lender_address);
                }else{
                  $lenderAddress="";
                }
                $sessionID=$this->session->get('sessUserID');
                $userDetail=Users::findFirst(array('conditions' => "id='".$sessionID."'"));

                //$randomID=rand();
                $htmlContent='<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
                        <html xmlns="http://www.w3.org/1999/xhtml">
                        <head>
                        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
                        <title>HZA</title>
                        <style type="text/css">
                        input:focus{box-shadow:none !important;outline:none !important;}
                        @media print {



                        }
                        /* table>tbody>tr>td, table>tbody>tr>th, table>tfoot>tr>td, table>tfoot>tr>th, table>thead>tr>td, table>thead>tr>th {
                        
                        padding: 15px !important;
                        word-break: break-all;
                        height:auto;
                        vertical-align: top;
                    }
                    .table-bordered>tbody>tr>td{
                        padding: 15px !important;

                    }*/
                    table>tbody>tr>td, table>tbody>tr>th, table>tfoot>tr>td, table>tfoot>tr>th, table>thead>tr>td, table>thead>tr>th {
                        
                        word-wrap:break-word;
                        height:auto;
                        vertical-align: top;
                    }
                    

                        </style>
                        </head>
                        <body onload="window.print();">

                        <!--<body>-->



                        <table width="100%" border="0" cellspacing="10" cellpadding="10" style="font-family:Arial, Helvetica, sans-serif; font-size:15px; line-height:18px;">
                         
                           <tr>
                            <td align="center"><img src="frontfile/images/hza-pdf-logo.jpg" width="660" height="auto"  alt=""/></td>
                          </tr>
                          <tr>
                            <td>
                              <table width="100%" border="0" cellspacing="5" cellpadding="5">
                                  <tbody>
                                    <tr>
                                      <td width="60%" style="font-style:italic; color:#767676;">';

                                        if($this->request->getPost('invoice_for')==1){
                                        $htmlContent.='Hank Zarihs Associates<br />
                                      '.stripslashes($dealDetail->advisor).'<br />
                                      '.$dealDetail->lender_id.'<br />';

                                      if($lenderAddress!=''){
                                        $htmlContent.=$lenderAddress."<br/>";
                                      }

                                      $htmlContent.=$dealDetail->borrower_entity.'<br />
                                      '.$dealDetail->location;
                                    }else if($this->request->getPost('invoice_for')==2){
                                      $htmlContent.=$dealDetail->lender_id;

                                      if($lenderAddress!=''){
                                            $htmlContent.="<br/>".$lenderAddress;
                                      }

                                    }
                                      $htmlContent.='</td>
                                      <td width="40%" align="center"><span style="font-size:30px; line-height:46px;display:inline-block; text-decoration:underline;"><em><strong>INVOICE</strong></em></span><br><br><span style="font-size:20px;"><em>'.date("l, F d, Y").'</em></span><img src="frontfile/images/border_image.png" width="239px"  alt=""/></td>
                                    </tr>
                                  </tbody>
                                </table>

                            </td>
                          </tr>
                          <tr>
                            <td style="padding:7px; color:#000; font-size:18px;">
                           
                            <table width="100%" border="0" cellspacing="5" cellpadding="5">
                                  <tbody>
                                    <tr>
                                      <td width="10%" style="padding:0px"><strong><em>Ref</em>:</strong></td>
                                      <td width="90%" style="padding:0px"><span style="font-size:14px;"> '.$dealDetail->security.'</span></td>
                                      </tr>
                                      </table>
                            </td>
                          </tr>
                          <tr>
                            <td>
                              <table width="100%" border="0" cellspacing="0" cellpadding="0">
                                  <tbody>
                                    <tr>
                                      
                                        <td width="20%"><em><strong>Client</strong></em></td>
                                        <td width="20%">&nbsp;</td>
                                      <td width="20%"><em><strong>Description</strong></em></td>
                                      <td width="20%"><em><strong>Amount</strong></em></td>
                                      <td width="20%"><em><strong>Due</strong></em></td>
                                    
                                      
                                    </tr>
                                  </tbody>
                                </table>
                            </td>
                          </tr>
                          <tr>
                            <td>
                              <table width="100%" border="1" cellspacing="0" cellpadding="0">
                                  <tbody>';
                                    if($this->request->getPost('invoice_for')==2){


                                    $htmlContent.='<tr>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" bgcolor="#d9e2f3" style="padding:15px;">Gross Loan</td>
                                      <td width="20%" bgcolor="#d9e2f3" style="padding:15px;">Broker Fee</td>
                                      <td width="20%" bgcolor="#d9e2f3" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" bgcolor="#d9e2f3" style="padding:15px;">Now</td>
                                    </tr>
                                    <tr>
                                      <td width="20%" style="padding:15px;">'.wordwrap($dealDetail->borrower_entity,15,"<br>").'</td>
                                      <td width="20%" style="padding:15px;">£ '.number_format($dealDetail->gross_loan, 2).'</td>
                                      <td width="20%" style="padding:15px;">'.wordwrap($broker_fee,12,"<br>").'%</td>
                                      <td width="20%" style="padding:15px;">£ '.number_format($broker_fee/100*$dealDetail->gross_loan, 2).'</td>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                    </tr>
                                    <tr>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" bgcolor="#d9e2f3" style="padding:15px;">Proc Fee</td>
                                      <td width="20%" bgcolor="#d9e2f3" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" bgcolor="#d9e2f3" style="padding:15px;"></td>
                                    </tr>
                                    <tr>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" style="padding:15px;">'.$proc_fee.'%</td>
                                      <td width="20%" style="padding:15px;">£ '.number_format($proc_fee/100*$dealDetail->gross_loan, 2).'</td>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                    </tr>
                                    <tr>
                                      <td width="20%" style="padding:15px;">Total</td>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" style="padding:15px;">£ '.number_format($totalpercentval, 2).'</td>
                                      <td width="20%" style="padding:15px;">'.date("d/m/Y").'</td>
                                    </tr>';
                                  }
                                    if($this->request->getPost('invoice_for')==1){


                                    $htmlContent.='<tr>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" style="padding:15px;" bgcolor="#d9e2f3">Gross Loan</td>
                                      <td width="20%" style="padding:15px;" bgcolor="#d9e2f3">HZA Fee</td>
                                      <td width="20%" style="padding:15px;" bgcolor="#d9e2f3">&nbsp;</td>
                                      <td width="20%" style="padding:15px;" bgcolor="#d9e2f3">&nbsp;</td>
                                    </tr>
                                    <tr>
                                      <td width="20%" style="padding:15px;vertical-align: top; word-break: break-all;">'.wordwrap($dealDetail->borrower_entity,15,"<br>").'</td>
                                      <td width="20%" style="padding:15px;">£ '.number_format($dealDetail->gross_loan, 2).'</td>
                                      <td width="20%" style="padding:15px;">'.$hza_percent.'%</td>
                                      <td width="20%" style="padding:15px;"><!-- =<?=$dealDetail->proc_fee?> x <?=$dealDetail->gross_loan?> -->£ '.number_format($hzapercentVal, 2).'</td>
                                      <td width="20%" style="padding:15px;">'.date("d/m/Y").'</td>
                                    </tr>';
                                  }
                                  $htmlContent.='</tbody>
                                </table>
                            </td>
                          </tr>
                          
                         
                          <tr>
                            <td align="center">&nbsp;</td>
                          </tr>
                          <tr>
                            <td style="padding:10px; color:#000; font-size:18px;"><strong>Please make payment to the following bank account:</strong></td>
                          </tr>';

                          if($this->request->getPost('invoice_for')==1){
                          $htmlContent.='<tr>
                            <td align="center"><table width="100%" border="1" cellspacing="0" cellpadding="15">
                                  <tbody>
                                    <tr>
                                      <td width="20%"><em><strong>Bank</strong></em> </td>
                                      <td width="20%"><em><strong>Account Name</strong></em></td>
                                      <td width="20%"><em><strong>Sort code</strong></em></td>
                                      <td width="20%"><em><strong>Account <br>Number</strong></em></td>
                                      <td width="20%"><em><strong>Ref</strong></em></td>
                                    </tr>
                                    <tr>
                                      <td bgcolor="#d9e2f3" style="width: 25%; padding:15px; word-break: break-all; ">'.wordwrap($userDetail->bank_name,8,"<br>").'</td>
                                      <td bgcolor="#d9e2f3" style="width: 25%; padding:15px; word-break: break-all;">'.wordwrap($userDetail->account_name,8,"<br>").'</td>
                                      <td bgcolor="#d9e2f3" style="width: 25%; padding:15px; word-break: break-all;">'.wordwrap($userDetail->sort_code,8,"<br>").'</td>
                                      <td bgcolor="#d9e2f3" style="width: 25%; padding:15px; word-break: break-all;">'.wordwrap($userDetail->acct_number,8,"<br>").'</td>
                                      <td bgcolor="#d9e2f3" style="width: 25%; padding:15px; word-break: break-all;">'.wordwrap($userDetail->acct_ref,8,"<br>").'</td>
                                    </tr>
                                    
                                    
                                  </tbody>
                                </table></td>
                          </tr>';
                        }else if($this->request->getPost('invoice_for')==2){
                          $htmlContent.='<tr>
                            <td align="center"><table width="100%" border="1" cellspacing="0" cellpadding="15">
                                  <tbody>
                                    <tr>
                                      <td width="15%"><em><strong>Bank</strong></em> </td>
                                      <td width="15%"><em><strong>Account <br>Name</strong></em></td>
                                      <td width="15%"><em><strong>Sort code</strong></em></td>
                                      <td width="15%"><em><strong>Account<br> Number</strong></em></td>
                                      <td width="15%"><em><strong>IBAN</strong></em></td>
                                      <td width="10%"><em><strong>BIC</strong></em></td>
                                      <td width="10%"><em><strong>Ref</strong></em></td>
                                    </tr>
                                    <tr>
                                      <td bgcolor="#d9e2f3">Lloyds Bank</td>
                                      <td bgcolor="#d9e2f3"><p>Hank Zarihs<br> Associates<br> Ltd</p></td>
                                      <td bgcolor="#d9e2f3">30-99-86</td>
                                      <td bgcolor="#d9e2f3">8731 6360</td>
                                      <td bgcolor="#d9e2f3"><p>GB74LOYD<br>3099868<br>7316360<p></td>
                                      <td bgcolor="#d9e2f3">LOYDG<br>B21043</td>
                                      <td bgcolor="#d9e2f3">'.wordwrap($dealDetail->borrower_entity,8,"<br>").'</td>
                                    </tr>
                                    
                                    
                                  </tbody>
                                </table></td>
                          </tr>';
                        }


                         $htmlContent.=' <tr>
                            <td align="center">&nbsp;</td>
                          </tr>

                        <tr>
                            <td align="left"><span style="font-size:26px; display:inline-block; text-decoration:underline;">Thank You</span></td>
                          </tr>
                        <tr>
                            <td align="center">&nbsp;</td>
                          </tr>

                          
                          <tr>
                            <td align="center">
                                <img src="frontfile/images/invoice_pdf_footer.jpeg" width="660" height="auto"  alt=""/>
                             <!-- <table width="100%" border="0" cellspacing="5" cellpadding="5">
                          <tbody>
                            <tr>
                              <td align="left" width="55%" style="font-size:13px; margin:0px; padding:0px;color:#fff;">+44(0)20 3889 4403<br />
                        www.hankzarihs.com<br />
                        contact@hankzarihs.com</td>
                              <td align="right" width="45%" style="color:#ccc; font-size:14px;"> 
                              
                              <h2 style="font-size:18px; margin:0px; padding:0px;color:#fff;">Hank Zarihs Associates</h2>
                        <p style="font-size:13px; margin:0px; padding:0px;color:#fff;">Pixel Business Centre, Brooker Rd,<br> Waltham Abbey, EN91JH</p>
                        <p style="font-size:13px; margin:0px; padding:0px;color:#fff;"><strong>Registered Company Name:<br></strong> Hank Zarihs Associated Limited <br />
                        <strong>Company Number:</strong>10256903 </p>
                              
                              </td>
                            </tr>
                            
                          </tbody>
                        </table>-->

                                
                            </td>
                          </tr>
                        </table>
                        </body>
                        </html>';


                pdf_create($htmlContent, "uploads/completeddeals/completeddeal-lead-".$allPost['dealid']."-invoice.pdf", false);

                $file="uploads/completeddeals/completeddeal-lead-".$allPost['dealid']."-invoice.pdf";

                //echo $dealDetail->borrower_entity;exit;


                /*$password = $allPost['pdf_pwd'];

                //name of the original file (unprotected)
                $origFile = $file;

                $time=time();

                //name of the destination file (password protected and printing rights removed)
                $destFile ="uploads/completeddeals/completeddeal-lead-".$time."_".$allPost['dealid']."-invoice.pdf";;

                //encrypt the book and create the protected file
                UIElements::pdfEncrypt($origFile, $password, $destFile );*/

                header("Location: ".BASEURL.$file);
            }
             $dealRes=CompletedDeals::findFirst(array(
                    'conditions' => "id=".$allPost['id'],
                ));
            $this->view->setVar('dealDetail', $dealRes);
        }
        $sessionID=$this->session->get('sessUserID');
        $userDetail=Users::findFirst(array('conditions' => "id='".$sessionID."'"));
        $this->view->setVar('userDetail', $userDetail);


        //print_r($allPost); exit();
    }
    public function invoiceprint_bckupAction(){

        $response = new \Phalcon\Http\Response();
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

        //print_r($allPost);exit;
            if($allPost['actionval']==2){

                $dealDetail=CompletedDeals::findFirst(array(
                    'conditions' => "id=".$allPost['id'],
                ));

                $siteDetail = Sitesetting::findFirst(array("id=1"));
                $broker_fee=$this->request->getPost('broker_fee');
                $proc_fee=$this->request->getPost('proc_fee');
                $hza_percent=$this->request->getPost('hza_percent');
                $brokerFeeVal=$broker_fee/100*$dealDetail->gross_loan;
                $procFeeVal=$proc_fee/100*$dealDetail->gross_loan;
                $totalpercentval=$brokerFeeVal+$procFeeVal;
                $hzapercentVal=$hza_percent/100*$totalpercentval;
                $lenderName=$dealDetail->lender_id;
                $lenderresult=$this->modelsManager->executeQuery("select Lenders.* from Lenders left join Users on Lenders.lender_id=Users.id where Lenders.is_active=1 and (Users.first_name like '%".$lenderName."%' or Users.last_name like '%".$lenderName."%' or CONCAT(Users.first_name, ' ', Users.last_name) like '%".$lenderName."%' or Lenders.first_name like '%".$lenderName."%' or Lenders.surname like '%".$lenderName."%' or CONCAT(Lenders.first_name, ' ', Lenders.surname) like '%".$lenderName."%') order by Users.first_name asc limit 0, 20");
                if(count($lenderresult)>0){
                  $lenderAddress=nl2br($lenderresult[0]->lender_address);
                }else{
                  $lenderAddress="";
                }
                $sessionID=$this->session->get('sessUserID');
                $userDetail=Users::findFirst(array('conditions' => "id='".$sessionID."'"));

                //$randomID=rand();
                /*$htmlContent='<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
                        <html xmlns="http://www.w3.org/1999/xhtml">
                        <head>
                        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
                        <title>HZA</title>
                        <style type="text/css">
                        input:focus{box-shadow:none !important;outline:none !important;}
                        @media print {



                        }
                        /* table>tbody>tr>td, table>tbody>tr>th, table>tfoot>tr>td, table>tfoot>tr>th, table>thead>tr>td, table>thead>tr>th {

                        padding: 15px !important;
                        word-break: break-all;
                        height:auto;
                        vertical-align: top;
                    }
                    .table-bordered>tbody>tr>td{
                        padding: 15px !important;

                    }*/
                    /*table>tbody>tr>td, table>tbody>tr>th, table>tfoot>tr>td, table>tfoot>tr>th, table>thead>tr>td, table>thead>tr>th {

                        word-wrap:break-word;
                        height:auto;
                        vertical-align: top;
                    }


                        </style>
                        </head>
                        <body onload="window.print();">

                        <!--<body>-->



                        <table width="100%" border="0" cellspacing="10" cellpadding="10" style="font-family:Arial, Helvetica, sans-serif; font-size:15px; line-height:18px;">

                           <tr>
                            <td align="center"><img src="frontfile/images/hza-pdf-logo.jpg" width="660" height="auto"  alt=""/></td>
                          </tr>
                          <tr>
                            <td>
                              <table width="100%" border="0" cellspacing="5" cellpadding="5">
                                  <tbody>
                                    <tr>
                                      <td width="60%" style="font-style:italic; color:#767676;">';

                                        if($this->request->getPost('invoice_for')==1){
                                        $htmlContent.='Hank Zarihs Associates<br />
                                      '.stripslashes($dealDetail->advisor).'<br />
                                      '.$dealDetail->lender_id.'<br />';

                                      if($lenderAddress!=''){
                                        $htmlContent.=$lenderAddress."<br/>";
                                      }

                                      $htmlContent.=$dealDetail->borrower_entity.'<br />
                                      '.$dealDetail->location;
                                    }else if($this->request->getPost('invoice_for')==2){
                                      $htmlContent.=$dealDetail->lender_id;

                                      if($lenderAddress!=''){
                                            $htmlContent.="<br/>".$lenderAddress;
                                      }

                                    }
                                      $htmlContent.='</td>
                                      <td width="40%" align="center"><span style="font-size:30px; line-height:46px;display:inline-block; text-decoration:underline;"><em><strong>INVOICE</strong></em></span><br><br><span style="font-size:20px;"><em>'.date("l, F d, Y").'</em></span><img src="frontfile/images/border_image.png" width="239px"  alt=""/></td>
                                    </tr>
                                  </tbody>
                                </table>

                            </td>
                          </tr>
                          <tr>
                            <td style="padding:7px; color:#000; font-size:18px;">

                            <table width="100%" border="0" cellspacing="5" cellpadding="5">
                                  <tbody>
                                    <tr>
                                      <td width="10%" style="padding:0px"><strong><em>Ref</em>:</strong></td>
                                      <td width="90%" style="padding:0px"><span style="font-size:14px;"> '.$dealDetail->security.'</span></td>
                                      </tr>
                                      </table>
                            </td>
                          </tr>
                          <tr>
                            <td>
                              <table width="100%" border="0" cellspacing="0" cellpadding="0">
                                  <tbody>
                                    <tr>

                                        <td width="20%"><em><strong>Client</strong></em></td>
                                        <td width="20%">&nbsp;</td>
                                      <td width="20%"><em><strong>Description</strong></em></td>
                                      <td width="20%"><em><strong>Amount</strong></em></td>
                                      <td width="20%"><em><strong>Due</strong></em></td>


                                    </tr>
                                  </tbody>
                                </table>
                            </td>
                          </tr>
                          <tr>
                            <td>
                              <table width="100%" border="1" cellspacing="0" cellpadding="0">
                                  <tbody>';
                                    if($this->request->getPost('invoice_for')==2){


                                    $htmlContent.='<tr>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" bgcolor="#d9e2f3" style="padding:15px;">Gross Loan</td>
                                      <td width="20%" bgcolor="#d9e2f3" style="padding:15px;">Broker Fee</td>
                                      <td width="20%" bgcolor="#d9e2f3" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" bgcolor="#d9e2f3" style="padding:15px;">Now</td>
                                    </tr>
                                    <tr>
                                      <td width="20%" style="padding:15px;">'.$dealDetail->borrower_entity.'</td>
                                      <td width="20%" style="padding:15px;">£ '.number_format($dealDetail->gross_loan, 2).'</td>
                                      <td width="20%" style="padding:15px;">'.$broker_fee.'%</td>
                                      <td width="20%" style="padding:15px;"><!-- =<?=$dealDetail->broker_fee?> x <?=$dealDetail->gross_loan?> -->£ '.number_format($broker_fee/100*$dealDetail->gross_loan, 2).'</td>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                    </tr>
                                    <tr>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" bgcolor="#d9e2f3" style="padding:15px;">Proc Fee</td>
                                      <td width="20%" bgcolor="#d9e2f3" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" bgcolor="#d9e2f3" style="padding:15px;"></td>
                                    </tr>
                                    <tr>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" style="padding:15px;"><?=$proc_fee?>%</td>
                                      <td width="20%" style="padding:15px;"><!-- =<?=$dealDetail->proc_fee?> x <?=$dealDetail->gross_loan?> -->£ '.number_format($proc_fee/100*$dealDetail->gross_loan, 2).'</td>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                    </tr>
                                    <tr>
                                      <td width="20%" style="padding:15px;">Total</td>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" style="padding:15px;">£ '.number_format($totalpercentval, 2).'</td>
                                      <td width="20%" style="padding:15px;">'.date("d/m/Y").'</td>
                                    </tr>';
                                  }
                                    if($this->request->getPost('invoice_for')==1){


                                    $htmlContent.='<tr>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" style="padding:15px;" bgcolor="#d9e2f3">Gross Loan</td>
                                      <td width="20%" style="padding:15px;" bgcolor="#d9e2f3">HZA Fee</td>
                                      <td width="20%" style="padding:15px;" bgcolor="#d9e2f3">&nbsp;</td>
                                      <td width="20%" style="padding:15px;" bgcolor="#d9e2f3">&nbsp;</td>
                                    </tr>
                                    <tr>
                                      <td width="20%" style="padding:15px;vertical-align: top; word-break: break-all;">'.wordwrap($dealDetail->borrower_entity,15,"<br>").'</td>
                                      <td width="20%" style="padding:15px;">£ '.number_format($dealDetail->gross_loan, 2).'</td>
                                      <td width="20%" style="padding:15px;">'.$hza_percent.'%</td>
                                      <td width="20%" style="padding:15px;"><!-- =<?=$dealDetail->proc_fee?> x <?=$dealDetail->gross_loan?> -->£ '.number_format($hzapercentVal, 2).'</td>
                                      <td width="20%" style="padding:15px;">'.date("d/m/Y").'</td>
                                    </tr>';
                                  }
                                  $htmlContent.='</tbody>
                                </table>
                            </td>
                          </tr>


                          <tr>
                            <td align="center">&nbsp;</td>
                          </tr>
                          <tr>
                            <td style="padding:10px; color:#000; font-size:18px;"><strong>Please make payment to the following bank account:</strong></td>
                          </tr>';

                          if($this->request->getPost('invoice_for')==1){
                          $htmlContent.='<tr>
                            <td align="center"><table width="100%" border="1" cellspacing="0" cellpadding="0">
                                  <tbody>
                                    <tr>
                                      <td width="25%" style="padding:15px;"><em><strong>Bank</strong></em> </td>
                                      <td width="25%" style="padding:15px;"><em><strong>Account Name</strong></em></td>
                                      <td width="25%" style="padding:15px;"><em><strong>Sort code</strong></em></td>
                                      <td width="25%" style="padding:15px;"><em><strong>Account Number</strong></em></td>
                                      <td width="25%" style="padding:15px;"><em><strong>Ref</strong></em></td>
                                    </tr>
                                    <tr>
                                      <td bgcolor="#d9e2f3" style="width: 25%; padding:15px; word-break: break-all; ">'.wordwrap($userDetail->bank_name,15,"<br>").'</td>
                                      <td bgcolor="#d9e2f3" style="width: 25%; padding:15px; word-break: break-all;">'.wordwrap($userDetail->account_name,15,"<br>").'</td>
                                      <td bgcolor="#d9e2f3" style="width: 25%; padding:15px; word-break: break-all;">'.wordwrap($userDetail->sort_code,15,"<br>").'</td>
                                      <td bgcolor="#d9e2f3" style="width: 25%; padding:15px; word-break: break-all;">'.wordwrap($userDetail->acct_number,15,"<br>").'</td>
                                      <td bgcolor="#d9e2f3" style="width: 25%; padding:15px; word-break: break-all;">'.wordwrap($userDetail->acct_ref,15,"<br>").'</td>
                                    </tr>


                                  </tbody>
                                </table></td>
                          </tr>';
                        }else if($this->request->getPost('invoice_for')==2){
                          $htmlContent.='<tr>
                            <td align="center"><table width="100%" border="1" cellspacing="0" cellpadding="7">
                                  <tbody>
                                    <tr>
                                      <td width="15%"><em><strong>Bank</strong></em> </td>
                                      <td width="15%"><em><strong>Account Name</strong></em></td>
                                      <td width="15%"><em><strong>Sort code</strong></em></td>
                                      <td width="15%"><em><strong>Account Number</strong></em></td>
                                      <td width="15%"><em><strong>IBAN</strong></em></td>
                                      <td width="10%"><em><strong>BIC</strong></em></td>
                                      <td width="10%"><em><strong>Ref</strong></em></td>
                                    </tr>
                                    <tr>
                                      <td bgcolor="#d9e2f3">Lloyds Bank</td>
                                      <td bgcolor="#d9e2f3"><p>Hank Zarihs<br> Associates Ltd</p></td>
                                      <td bgcolor="#d9e2f3">30-99-86</td>
                                      <td bgcolor="#d9e2f3">8731 6360</td>
                                      <td bgcolor="#d9e2f3"><p>'.wordwrap('GB74LOYD30998687316360',15,"<br>").'<p></td>
                                      <td bgcolor="#d9e2f3">LOYDGB21043</td>
                                      <td bgcolor="#d9e2f3">'.wordwrap($dealDetail->borrower_entity,15,"<br>").'</td>
                                    </tr>


                                  </tbody>
                                </table></td>
                          </tr>';
                        }


                         $htmlContent.=' <tr>
                            <td align="center">&nbsp;</td>
                          </tr>

                        <tr>
                            <td align="left"><span style="font-size:26px; display:inline-block; text-decoration:underline;">Thank You</span></td>
                          </tr>
                        <tr>
                            <td align="center">&nbsp;</td>
                          </tr>


                          <tr>
                            <td align="center">
                                <img src="frontfile/images/invoice_pdf_footer.jpeg" width="660" height="auto"  alt=""/>
                             <!-- <table width="100%" border="0" cellspacing="5" cellpadding="5">
                          <tbody>
                            <tr>
                              <td align="left" width="55%" style="font-size:13px; margin:0px; padding:0px;color:#fff;">+44(0)20 3889 4403<br />
                        www.hankzarihs.com<br />
                        contact@hankzarihs.com</td>
                              <td align="right" width="45%" style="color:#ccc; font-size:14px;">

                              <h2 style="font-size:18px; margin:0px; padding:0px;color:#fff;">Hank Zarihs Associates</h2>
                        <p style="font-size:13px; margin:0px; padding:0px;color:#fff;">Pixel Business Centre, Brooker Rd,<br> Waltham Abbey, EN91JH</p>
                        <p style="font-size:13px; margin:0px; padding:0px;color:#fff;"><strong>Registered Company Name:<br></strong> Hank Zarihs Associated Limited <br />
                        <strong>Company Number:</strong>10256903 </p>

                              </td>
                            </tr>

                          </tbody>
                        </table>-->


                            </td>
                          </tr>
                        </table>
                        </body>
                        </html>';*/



                        $htmlContent='<style>
                                    body {
                                        overflow-x:hidden;
                                        color:#01172b;
                                        font-size:16px;
                                        line-height:1.5; 
                                        margin:0px; 
                                        padding:0px; 
                                        outline:none;
                                        text-decoration:none;
                                        list-style:none;
                                        box-sizing: border-box;
                                        
                                        font-family: "Nunito", sans-serif;
                                        font-weight:400;
                                        background-color:#fff;width:100%;*background: #fff;
                                    }
                                    p{color:#01172b;font-size:16px;line-height:1.5; margin:0px 0px 20px 0px;font-weight:400;}
                                    tr.trfooter {
                                        position: fixed;
                                        bottom: 0;
                                      }
                                    </style><table width="100%" border="0" cellspacing="" cellpadding="0" align="center" bgcolor="#fff" border="0" style="line-height:18px; font-size:15px;">
                                  <tbody>
                                    <tr class="theaddiv">
                                        <td>
                                            <table width="100%" cellspacing="0" cellpadding="0" align="center" >
                                                <tr>
                                                    <td>
                                                        <img src="frontfile/images/hza-top.jpg" style="" width="720" height="auto">
                                                    </td>
                                                </tr>
                                            </table>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td style="padding: 20px 0px 0;">
                                            <table align="center" width="100%;" cellspacing="0" cellpadding="20" border="0" style="font-size:12px;">
                                                <tbody>
                                                    <tr>
                                                    <td width="35%" valign="top">
                                                        <h4 style="color: #01172b;font-weight: 900;margin: 0 0 10px 0;width: 150px;font-size: 18px;">Project Reference<img src="frontfile/images/invoice_border.png" width="150"  alt=""/></h4><br>
                                                        <p style="color: #01172b;font-weight: 400;font-size: 16px;margin: 0;    line-height: 1.3;width: 400px;">'.$dealDetail->borrower_entity.'</p>
                                                    </td>
                                                    <td width="35%" valign="top">
                                                        <h4 style="color: #01172b;font-weight: 900;margin: 0 0 10px 0;width: 105px;font-size: 18px;">Invoice Date<img src="frontfile/images/invoice_border.png" width="105"  alt=""/></h4><br>
                                                        <p style="color: #01172b;font-weight: 400;font-size: 16px;margin: 0;    line-height: 1.3;">'.date('l, M d, Y').'</p>
                                                    </td>
                                                    </tr>

                                                     <tr>
                                                    <td width="35%" valign="top">
                                                        <h4 style="color: #01172b;font-weight: 900;margin: 0 0 10px 0;width: 85px;font-size: 18px;">Invoice To<img src="frontfile/images/invoice_border.png" width="85"  alt=""/></h4><br>
                                                        <p style="color: #01172b;font-weight: 400;font-size: 16px;margin: 0;    line-height: 1.3;width: 450px;">
                                  <!--<tr>
                                        <td style="padding: 10px 40px 280px;">&nbsp;</td>
                                    </tr>                       <br>';
                                                        if($this->request->getPost('invoice_for')==1){
                                                                    $htmlContent.='Hank Zarihs Associates<br />The Old Green Dragon, 62 Churchgate, Cheshunt, Herts, EN8 9NF';

                                                                    }else if($this->request->getPost('invoice_for')==2){
                                                                  $htmlContent.=$dealDetail->lender_id;

                                                                  if($lenderAddress!=''){
                                                                    $htmlContent.="<br/>".$lenderAddress;
                                                                  }

                                                                }
                                                        $htmlContent.='</p>
                                                        
                                                    </td>
                                                    <td width="35%" valign="top">
                                                        <!--<h4 style="color: #01172b;font-weight: 900;margin: 0 0 10px 0;width: 135px;font-size: 18px;border-spacing: 5px;">Invoice Number<img src="frontfile/images/invoice_border.png" width="135"  alt=""/></h4><br>
                                                        <p style="color: #01172b;font-weight: 400;font-size: 16px;margin: 0;    line-height: 1.3;">'.rand(1000000, 9999999).'</p>-->
                                                        <h4 style="color: #01172b;font-weight: 900;margin: 0 0 10px 0;width: 155px;font-size: 18px;line-height: 2em;">Total Invoice Value<img src="frontfile/images/invoice_border.png" width="155"  alt=""/></h4><br>
                                                        <p style="color: #01172b;font-weight: 400;font-size: 16px;margin: 0;    line-height: 1.3;">';
                                                            if($this->request->getPost('invoice_for')==1){
                                                            $htmlContent.='£ '.number_format($hzapercentVal, 2);

                                                          }else if($this->request->getPost('invoice_for')==2){ $htmlContent.='£ '.number_format($totalpercentval, 2); }

                                                          $htmlContent.='</p>
                                                    </td>
                                                </tr>';
                                               /* <tr>
                                                    <td width="35%">
                                                        <p style="color: #01172b;font-weight: 400;font-size: 16px;margin: 0;    line-height: 1.3;width: 450px;">';
                                                                if($this->request->getPost('invoice_for')==1){
                                                                    $htmlContent.='Hank Zarihs Associates<br />';
                                                                    $htmlContent.=stripslashes($dealDetail->advisor).'<br />';
                                                                    $htmlContent.=$dealDetail->lender_id.'<br />';

                                                                  if($userDetail->address!=''){
                                                                    $htmlContent.=$userDetail->address."<br/>";
                                                                  }

                                                                  $htmlContent.=$dealDetail->borrower_entity.'<br />';
                                                                  $htmlContent.=$dealDetail->location;
                                                                    }else if($this->request->getPost('invoice_for')==2){
                                                                  $htmlContent.=$dealDetail->lender_id;

                                                                  if($lenderAddress!=''){
                                                                    $htmlContent.="<br/>".$lenderAddress;
                                                                  }

                                                                }
                                                        $htmlContent.='</p>
                                                    </td>
                                                    <td  width="35%">
                                                        <h4 style="color: #01172b;font-weight: 900;margin: 0 0 10px 0;width: 155px;font-size: 18px;line-height: 2em;">Total Invoice Value<img src="frontfile/images/invoice_border.png" width="155"  alt=""/></h4><br>
                                                        <p style="color: #01172b;font-weight: 400;font-size: 16px;margin: 0;    line-height: 1.3;">';
                                                            if($this->request->getPost('invoice_for')==1){
                                                            $htmlContent.='£ '.number_format($hzapercentVal, 2);

                                                          }else if($this->request->getPost('invoice_for')==2){ $htmlContent.='£ '.number_format($totalpercentval, 2); }

                                                          $htmlContent.='</p>
                                                    </td>
                                                    </tr>*/
                                                $htmlContent.='</tbody>
                                            </table>
                                        </td>
                                    </tr>
                                    
                                    <tr>
                                        <td style="padding: 20px 40px 0;">
                                            <table width="100%" cellpadding="0" cellspacing="0" style="border-collapse: separate;border-spacing:10px;">';

                                               if($this->request->getPost('invoice_for')==2){

                                                    $htmlContent.='<tr>
                                                    <td width="20%" align="center" valign="center" bgcolor="#80d0d8" style="color: #01172b;font-weight: 900;font-size: 14px;background: ;padding: 20px 15px 15px 15px;">
                                                        Client Name
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        Gross Loan
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        Broker Fee
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        Fee Amount
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        Now
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        '.wordwrap($dealDetail->borrower_entity,12,"<br>").'
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                       £ '.wordwrap(number_format($dealDetail->gross_loan, 2),12,"<br>").'
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        '.$broker_fee.'%
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        £ '.number_format($broker_fee/100*$dealDetail->gross_loan, 2).'
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                       
                                                    </td>
                                                </tr>

                                                <tr>
                                                    <td width="20%" align="center" valign="center" bgcolor="#80d0d8" style="color: #01172b;font-weight: 900;font-size: 14px;background: ;padding: 20px 15px 15px 15px;">
                                                        
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                       
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        Proc Fee
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        
                                                    </td>
                                                </tr>

                                                <tr>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                       
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        '.$proc_fee.'%
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        £ '.number_format($proc_fee/100*$dealDetail->gross_loan, 2).'
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                       
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        Total
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                       
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        £ '.number_format($totalpercentval, 2).'
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                       '.date("d/m/Y").'
                                                    </td>
                                                </tr>';



                                                }
                                                if($this->request->getPost('invoice_for')==1){

                                                    $htmlContent.='<tr>
                                                      <td width="20%" align="center" valign="center" bgcolor="#80d0d8" style="color: #01172b;font-weight: 900;font-size: 14px;background: ;padding: 20px 15px 15px 15px;">
                                                          Client Name
                                                      </td>
                                                      <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                          Gross Loan
                                                      </td>
                                                      <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                          HZA Fee
                                                      </td>
                                                      <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                          Fee Amount
                                                      </td>
                                                      <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                          Due Date
                                                      </td>
                                                  </tr>
                                                  <tr>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        '.wordwrap($dealDetail->borrower_entity,12,"<br>").'
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                       £ '.number_format($dealDetail->gross_loan, 2).'
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        '.$hza_percent.'%
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        £ '.number_format($hzapercentVal, 2).'
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                       '.date("d/m/Y").'
                                                    </td>
                                                </tr>';

                                                }





                                            $htmlContent.='</table>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td style="padding: 20px 50px 0;">
                                            <table>
                                                <tr>
                                                    <td align="left" valign="left" width="100%">
                                                        <h4 style="color: #01172b;font-weight: 900;margin: 0 0 10px 0;width: 200px;font-size: 20px;">Bank Account Details<img src="frontfile/images/invoice_border.png" width="200"  alt=""/></h4><br>
                                                        <p style="color: #01172b;font-weight: 400;font-size: 16px;margin: 0;    line-height: 1.3;">Please make payment to the following bank account:</p>
                                                    </td>
                                                </tr>
                                            </table>
                                        </td>
                                    </tr>

                                    <!--<tr>
                                        <td style="padding: 10px 40px 280px;">&nbsp;</td>
                                    </tr>-->';

                                    if($this->request->getPost('invoice_for')==1){

                                      $htmlContent.='<tr>
                                        <td style="padding: 10px 40px 0;">
                                            <table width="100%" cellpadding="0" cellspacing="0" style="border-collapse: separate;border-spacing:10px;">
                                                <tr>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                       Bank Name
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        Account<br> Name
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        Sort Code
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        Account<br> Number
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        Ref
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        '.wordwrap($userDetail->bank_name,12,"<br>").'
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                       '.wordwrap($userDetail->account_name,12,"<br>").'
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        '.wordwrap($userDetail->sort_code,12,"<br>").'
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        '.wordwrap($userDetail->acct_number,12,"<br>").'
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        '.wordwrap($userDetail->acct_ref,12,"<br>").'
                                                    </td>
                                                </tr>
                                            </table>
                                        </td>
                                    </tr>';

                                    }else if($this->request->getPost('invoice_for')==2){

                                     $htmlContent.=' <tr>
                                        <td style="padding: 10px 40px 0;">
                                            <table width="100%" cellpadding="0" cellspacing="0" style="border-collapse: separate;border-spacing:10px;">
                                                <tr>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 900;font-size: 14px; background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                       Bank Name
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        Account Name
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        Sort Code
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        Account Number
                                                    </td>
                                                     <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        IBAN
                                                    </td>
                                                     <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        BIC
                                                    </td>
                                                    <td width="20%" align="center" valign="middle" style="color: #01172b;font-weight: 900;font-size: 14px;background: #80d0d8;padding: 20px 15px 15px 15px;">
                                                        Ref
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        Lloyds Bank
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                       Hank Zarihs <br>Associates Ltd
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        30-99-86
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        8731 6360
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        GB74LOYD309<br>98687316360
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        LOYDGB21043
                                                    </td>
                                                    <td width="20%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 14px;background: #c7c8ca;padding: 30px 15px;color: #000">
                                                        '.wordwrap($dealDetail->borrower_entity,12,"<br>").'
                                                    </td>
                                                </tr>
                                            </table>
                                        </td>
                                    </tr>';

                                    }

                                    /*<tr>
                                        <td style="padding: 20px 50px 0;">
                                            <table>
                                                <tr>
                                                    <td align="left" valign="left" width="100%">
                                                        <h4 style="color: #01172b;font-weight: 900;margin: 0 0 0px 0;width: 120px;font-size: 20px;line-height:1em; line-height: 1rem;">Other Details<img src="frontfile/images/invoice_border.png" width="120"  alt=""/></h4>
                                                    </td>
                                                </tr>
                                            </table>
                                        </td>
                                    </tr><tr>
                                        <td style="padding: 10px 50px 0;">
                                            <table width="100%" cellpadding="0" cellspacing="0">
                                                <tr>
                                                    <td width="100%" align="center" valign="center" style="color: #01172b;font-weight: 400;font-size: 18px;background: #c7c8ca;padding: 30px 15px;color: #000">

                                                    </td>
                                                </tr>
                                            </table>
                                        </td>
                                    </tr>*/
                                    $htmlContent.='
                                    
                                    <tr class="trfooter"><td><table width="100%" cellspacing="0" cellpadding="0" align="center" >
                                          <tr>
                                              <td>
                                                  <table width="100%" cellspacing="0" cellpadding="0" align="center" >
                                                      <tr>
                                                          <td>
                                                              <img src="frontfile/images/blank.gif" width="720" height="auto" style="">
                                                          </td>
                                                      </tr>
                                                  </table>
                                              </td>
                                          </tr>
                                          <tr>
                                              <td>
                                                  <table  width="720px" cellspacing="0" cellpadding="0" align="center" bgcolor="#01172b" style="padding: 15px 0;">
                                                      <tr>
                                                          <td>
                                                              <table width="100%" cellspacing="0" cellpadding="0" align="center">
                                                                  <tr>
                                                                      <td style="padding: 0 50px;">
                                                                          <table width="100%" cellspacing="0" cellpadding="0" align="center">
                                                                              <tr>
                                                                                  <td align="left" valign="middle" width="30%" style="color: #fff;font-weight: 500;font-size: 14px;">
                                                                                      *Terms & Conditions Apply.
                                                                                  </td>
                                                                                  <td align="right" valign="middle" width="70%" style="color: #fff;font-weight: 500;font-size: 14px;">
                                                                                      Hank Zarihs Associates | Providing Funding Solution For Success
                                                                                  </td>
                                                                              </tr>
                                                                          </table>
                                                                      </td>
                                                                  </tr>
                                                              </table>
                                                          </td>
                                                      </tr>
                                                  </table>
                                              </td>
                                          </tr>
                                    </table>
                                        </td>
                                    </tr>
                                  </tbody>
                                </table>';

                //echo $htmlContent;exit;
                pdf_create($htmlContent, "uploads/completeddeals/completeddeal-lead-".$allPost['dealid']."-invoice.pdf", false);
                //echo "uploads/completeddeals/completeddeal-lead-".$allPost['dealid']."-invoice.pdf";exit();


                //password protection start here============

                /*$file="uploads/completeddeals/completeddeal-lead-".$allPost['dealid']."-invoice.pdf";

                //echo $dealDetail->borrower_entity;exit;


                $password = $allPost['pdf_pwd'];

                //name of the original file (unprotected)
                $origFile = $file;

                $time=time();

                //name of the destination file (password protected and printing rights removed)
                $destFile ="uploads/completeddeals/completeddeal-lead-".$time."_".$allPost['dealid']."-invoice.pdf";;

                //encrypt the book and create the protected file
                UIElements::pdfEncrypt($origFile, $password, $destFile );*/
                //============Password Protection end here=========

                $fileattachedarr=array("uploads/completeddeals/completeddeal-lead-".$allPost['dealid']."-invoice.pdf");

                $subject='Invoice from '.trim($userDetail->first_name.' '.$userDetail->last_name).' / '.$dealDetail->borrower_entity.' / '.$dealDetail->security.' / '.number_format($dealDetail->gross_loan, 2);
                $sendMsg="Hi Shiraz,<br>

                        Below I've generated and attached the invoice for my client;<br>

                        Client Name: ".$dealDetail->borrower_entity."<br>
                        Security Address: ".$dealDetail->security."<br>
                        Gross Loan Amount: ".number_format($dealDetail->gross_loan, 2)."<br>
                        Lender: ".$dealDetail->lender_id."<br>

                        Payment Due = ".number_format($hzapercentVal, 2)."<br><br>

                        Many Thanks<br>

                        ".trim($userDetail->first_name.' '.$userDetail->last_name);

                        //shiraz@hankzarihs.com
                $sentMail =UIElements::sendAttachmentEmail('shiraz@hankzarihs.com',$subject,$sendMsg,$fileattachedarr, $userDetail->email_id);
                if($sentMail){
                    $this->flashSession->success("Mail sent successfully with the invoice generated file.");
                }else{
                    $this->flashSession->error("Mail sending failed, Please try again.");
                }
                return $response->redirect('dashboard/dealinvoice/'.$allPost['dealid']);
            }else if($allPost['actionval']==11){
                // echo 123;exit;
                $dealDetail=CompletedDeals::findFirst(array(
                    'conditions' => "id=".$allPost['id'],
                ));

                $siteDetail = Sitesetting::findFirst(array("id=1"));
                $broker_fee=$this->request->getPost('broker_fee');
                $proc_fee=$this->request->getPost('proc_fee');
                $hza_percent=$this->request->getPost('hza_percent');
                $brokerFeeVal=$broker_fee/100*$dealDetail->gross_loan;
                $procFeeVal=$proc_fee/100*$dealDetail->gross_loan;
                $totalpercentval=$brokerFeeVal+$procFeeVal;
                $hzapercentVal=$hza_percent/100*$totalpercentval;
                $lenderName=$dealDetail->lender_id;
                $lenderresult=$this->modelsManager->executeQuery("select Lenders.* from Lenders left join Users on Lenders.lender_id=Users.id where Lenders.is_active=1 and (Users.first_name like '%".$lenderName."%' or Users.last_name like '%".$lenderName."%' or CONCAT(Users.first_name, ' ', Users.last_name) like '%".$lenderName."%' or Lenders.first_name like '%".$lenderName."%' or Lenders.surname like '%".$lenderName."%' or CONCAT(Lenders.first_name, ' ', Lenders.surname) like '%".$lenderName."%') order by Users.first_name asc limit 0, 20");
                if(count($lenderresult)>0){
                  $lenderAddress=nl2br($lenderresult[0]->lender_address);
                }else{
                  $lenderAddress="";
                }
                $sessionID=$this->session->get('sessUserID');
                $userDetail=Users::findFirst(array('conditions' => "id='".$sessionID."'"));

                //$randomID=rand();
                $htmlContent='<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
                        <html xmlns="http://www.w3.org/1999/xhtml">
                        <head>
                        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
                        <title>HZA</title>
                        <style type="text/css">
                        input:focus{box-shadow:none !important;outline:none !important;}
                        @media print {



                        }
                        /* table>tbody>tr>td, table>tbody>tr>th, table>tfoot>tr>td, table>tfoot>tr>th, table>thead>tr>td, table>thead>tr>th {
                        
                        padding: 15px !important;
                        word-break: break-all;
                        height:auto;
                        vertical-align: top;
                    }
                    .table-bordered>tbody>tr>td{
                        padding: 15px !important;

                    }*/
                    table>tbody>tr>td, table>tbody>tr>th, table>tfoot>tr>td, table>tfoot>tr>th, table>thead>tr>td, table>thead>tr>th {
                        
                        word-wrap:break-word;
                        height:auto;
                        vertical-align: top;
                    }
                    

                        </style>
                        </head>
                        <body onload="window.print();">

                        <!--<body>-->



                        <table width="100%" border="0" cellspacing="10" cellpadding="10" style="font-family:Arial, Helvetica, sans-serif; font-size:15px; line-height:18px;">
                         
                           <tr>
                            <td align="center"><img src="frontfile/images/hza-pdf-logo.jpg" width="660" height="auto"  alt=""/></td>
                          </tr>
                          <tr>
                            <td>
                              <table width="100%" border="0" cellspacing="5" cellpadding="5">
                                  <tbody>
                                    <tr>
                                      <td width="60%" style="font-style:italic; color:#767676;">';

                                        if($this->request->getPost('invoice_for')==1){
                                        $htmlContent.='Hank Zarihs Associates<br />
                                      '.stripslashes($dealDetail->advisor).'<br />
                                      '.$dealDetail->lender_id.'<br />';

                                      if($lenderAddress!=''){
                                        $htmlContent.=$lenderAddress."<br/>";
                                      }

                                      $htmlContent.=$dealDetail->borrower_entity.'<br />
                                      '.$dealDetail->location;
                                    }else if($this->request->getPost('invoice_for')==2){
                                      $htmlContent.=$dealDetail->lender_id;

                                      if($lenderAddress!=''){
                                            $htmlContent.="<br/>".$lenderAddress;
                                      }

                                    }
                                      $htmlContent.='</td>
                                      <td width="40%" align="center"><span style="font-size:30px; line-height:46px;display:inline-block; text-decoration:underline;"><em><strong>INVOICE</strong></em></span><br><br><span style="font-size:20px;"><em>'.date("l, F d, Y").'</em></span><img src="frontfile/images/border_image.png" width="239px"  alt=""/></td>
                                    </tr>
                                  </tbody>
                                </table>

                            </td>
                          </tr>
                          <tr>
                            <td style="padding:7px; color:#000; font-size:18px;">
                           
                            <table width="100%" border="0" cellspacing="5" cellpadding="5">
                                  <tbody>
                                    <tr>
                                      <td width="10%" style="padding:0px"><strong><em>Ref</em>:</strong></td>
                                      <td width="90%" style="padding:0px"><span style="font-size:14px;"> '.$dealDetail->security.'</span></td>
                                      </tr>
                                      </table>
                            </td>
                          </tr>
                          <tr>
                            <td>
                              <table width="100%" border="0" cellspacing="0" cellpadding="0">
                                  <tbody>
                                    <tr>
                                      
                                        <td width="20%"><em><strong>Client</strong></em></td>
                                        <td width="20%">&nbsp;</td>
                                      <td width="20%"><em><strong>Description</strong></em></td>
                                      <td width="20%"><em><strong>Amount</strong></em></td>
                                      <td width="20%"><em><strong>Due</strong></em></td>
                                    
                                      
                                    </tr>
                                  </tbody>
                                </table>
                            </td>
                          </tr>
                          <tr>
                            <td>
                              <table width="100%" border="1" cellspacing="0" cellpadding="0">
                                  <tbody>';
                                    if($this->request->getPost('invoice_for')==2){


                                    $htmlContent.='<tr>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" bgcolor="#d9e2f3" style="padding:15px;">Gross Loan</td>
                                      <td width="20%" bgcolor="#d9e2f3" style="padding:15px;">Broker Fee</td>
                                      <td width="20%" bgcolor="#d9e2f3" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" bgcolor="#d9e2f3" style="padding:15px;">Now</td>
                                    </tr>
                                    <tr>
                                      <td width="20%" style="padding:15px;">'.wordwrap($dealDetail->borrower_entity,15,"<br>").'</td>
                                      <td width="20%" style="padding:15px;">£ '.number_format($dealDetail->gross_loan, 2).'</td>
                                      <td width="20%" style="padding:15px;">'.wordwrap($broker_fee,12,"<br>").'%</td>
                                      <td width="20%" style="padding:15px;">£ '.number_format($broker_fee/100*$dealDetail->gross_loan, 2).'</td>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                    </tr>
                                    <tr>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" bgcolor="#d9e2f3" style="padding:15px;">Proc Fee</td>
                                      <td width="20%" bgcolor="#d9e2f3" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" bgcolor="#d9e2f3" style="padding:15px;"></td>
                                    </tr>
                                    <tr>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" style="padding:15px;">'.$proc_fee.'%</td>
                                      <td width="20%" style="padding:15px;">£ '.number_format($proc_fee/100*$dealDetail->gross_loan, 2).'</td>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                    </tr>
                                    <tr>
                                      <td width="20%" style="padding:15px;">Total</td>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" style="padding:15px;">£ '.number_format($totalpercentval, 2).'</td>
                                      <td width="20%" style="padding:15px;">'.date("d/m/Y").'</td>
                                    </tr>';
                                  }
                                    if($this->request->getPost('invoice_for')==1){


                                    $htmlContent.='<tr>
                                      <td width="20%" style="padding:15px;">&nbsp;</td>
                                      <td width="20%" style="padding:15px;" bgcolor="#d9e2f3">Gross Loan</td>
                                      <td width="20%" style="padding:15px;" bgcolor="#d9e2f3">HZA Fee</td>
                                      <td width="20%" style="padding:15px;" bgcolor="#d9e2f3">&nbsp;</td>
                                      <td width="20%" style="padding:15px;" bgcolor="#d9e2f3">&nbsp;</td>
                                    </tr>
                                    <tr>
                                      <td width="20%" style="padding:15px;vertical-align: top; word-break: break-all;">'.wordwrap($dealDetail->borrower_entity,15,"<br>").'</td>
                                      <td width="20%" style="padding:15px;">£ '.number_format($dealDetail->gross_loan, 2).'</td>
                                      <td width="20%" style="padding:15px;">'.$hza_percent.'%</td>
                                      <td width="20%" style="padding:15px;"><!-- =<?=$dealDetail->proc_fee?> x <?=$dealDetail->gross_loan?> -->£ '.number_format($hzapercentVal, 2).'</td>
                                      <td width="20%" style="padding:15px;">'.date("d/m/Y").'</td>
                                    </tr>';
                                  }
                                  $htmlContent.='</tbody>
                                </table>
                            </td>
                          </tr>
                          
                         
                          <tr>
                            <td align="center">&nbsp;</td>
                          </tr>
                          <tr>
                            <td style="padding:10px; color:#000; font-size:18px;"><strong>Please make payment to the following bank account:</strong></td>
                          </tr>';

                          if($this->request->getPost('invoice_for')==1){
                          $htmlContent.='<tr>
                            <td align="center"><table width="100%" border="1" cellspacing="0" cellpadding="15">
                                  <tbody>
                                    <tr>
                                      <td width="20%"><em><strong>Bank</strong></em> </td>
                                      <td width="20%"><em><strong>Account Name</strong></em></td>
                                      <td width="20%"><em><strong>Sort code</strong></em></td>
                                      <td width="20%"><em><strong>Account <br>Number</strong></em></td>
                                      <td width="20%"><em><strong>Ref</strong></em></td>
                                    </tr>
                                    <tr>
                                      <td bgcolor="#d9e2f3" style="width: 25%; padding:15px; word-break: break-all; ">'.wordwrap($userDetail->bank_name,8,"<br>").'</td>
                                      <td bgcolor="#d9e2f3" style="width: 25%; padding:15px; word-break: break-all;">'.wordwrap($userDetail->account_name,8,"<br>").'</td>
                                      <td bgcolor="#d9e2f3" style="width: 25%; padding:15px; word-break: break-all;">'.wordwrap($userDetail->sort_code,8,"<br>").'</td>
                                      <td bgcolor="#d9e2f3" style="width: 25%; padding:15px; word-break: break-all;">'.wordwrap($userDetail->acct_number,8,"<br>").'</td>
                                      <td bgcolor="#d9e2f3" style="width: 25%; padding:15px; word-break: break-all;">'.wordwrap($userDetail->acct_ref,8,"<br>").'</td>
                                    </tr>
                                    
                                    
                                  </tbody>
                                </table></td>
                          </tr>';
                        }else if($this->request->getPost('invoice_for')==2){
                          $htmlContent.='<tr>
                            <td align="center"><table width="100%" border="1" cellspacing="0" cellpadding="15">
                                  <tbody>
                                    <tr>
                                      <td width="15%"><em><strong>Bank</strong></em> </td>
                                      <td width="15%"><em><strong>Account <br>Name</strong></em></td>
                                      <td width="15%"><em><strong>Sort code</strong></em></td>
                                      <td width="15%"><em><strong>Account<br> Number</strong></em></td>
                                      <td width="15%"><em><strong>IBAN</strong></em></td>
                                      <td width="10%"><em><strong>BIC</strong></em></td>
                                      <td width="10%"><em><strong>Ref</strong></em></td>
                                    </tr>
                                    <tr>
                                      <td bgcolor="#d9e2f3">Lloyds Bank</td>
                                      <td bgcolor="#d9e2f3"><p>Hank Zarihs<br> Associates<br> Ltd</p></td>
                                      <td bgcolor="#d9e2f3">30-99-86</td>
                                      <td bgcolor="#d9e2f3">8731 6360</td>
                                      <td bgcolor="#d9e2f3"><p>GB74LOYD<br>3099868<br>7316360<p></td>
                                      <td bgcolor="#d9e2f3">LOYDG<br>B21043</td>
                                      <td bgcolor="#d9e2f3">'.wordwrap($dealDetail->borrower_entity,8,"<br>").'</td>
                                    </tr>
                                    
                                    
                                  </tbody>
                                </table></td>
                          </tr>';
                        }


                         $htmlContent.=' <tr>
                            <td align="center">&nbsp;</td>
                          </tr>

                        <tr>
                            <td align="left"><span style="font-size:26px; display:inline-block; text-decoration:underline;">Thank You</span></td>
                          </tr>
                        <tr>
                            <td align="center">&nbsp;</td>
                          </tr>

                          
                          <tr>
                            <td align="center">
                                <img src="frontfile/images/invoice_pdf_footer.jpeg" width="660" height="auto"  alt=""/>
                             <!-- <table width="100%" border="0" cellspacing="5" cellpadding="5">
                          <tbody>
                            <tr>
                              <td align="left" width="55%" style="font-size:13px; margin:0px; padding:0px;color:#fff;">+44(0)20 3889 4403<br />
                        www.hankzarihs.com<br />
                        contact@hankzarihs.com</td>
                              <td align="right" width="45%" style="color:#ccc; font-size:14px;"> 
                              
                              <h2 style="font-size:18px; margin:0px; padding:0px;color:#fff;">Hank Zarihs Associates</h2>
                        <p style="font-size:13px; margin:0px; padding:0px;color:#fff;">Pixel Business Centre, Brooker Rd,<br> Waltham Abbey, EN91JH</p>
                        <p style="font-size:13px; margin:0px; padding:0px;color:#fff;"><strong>Registered Company Name:<br></strong> Hank Zarihs Associated Limited <br />
                        <strong>Company Number:</strong>10256903 </p>
                              
                              </td>
                            </tr>
                            
                          </tbody>
                        </table>-->

                                
                            </td>
                          </tr>
                        </table>
                        </body>
                        </html>';


                pdf_create($htmlContent, "uploads/completeddeals/completeddeal-lead-".$allPost['dealid']."-invoice.pdf", false);

                $file="uploads/completeddeals/completeddeal-lead-".$allPost['dealid']."-invoice.pdf";

                //echo $dealDetail->borrower_entity;exit;


                /*$password = $allPost['pdf_pwd'];

                //name of the original file (unprotected)
                $origFile = $file;

                $time=time();

                //name of the destination file (password protected and printing rights removed)
                $destFile ="uploads/completeddeals/completeddeal-lead-".$time."_".$allPost['dealid']."-invoice.pdf";;

                //encrypt the book and create the protected file
                UIElements::pdfEncrypt($origFile, $password, $destFile );*/

                header("Location: ".BASEURL.$file);
            }
             $dealRes=CompletedDeals::findFirst(array(
                    'conditions' => "id=".$allPost['id'],
                ));
            $this->view->setVar('dealDetail', $dealRes);
        }
        $sessionID=$this->session->get('sessUserID');
        $userDetail=Users::findFirst(array('conditions' => "id='".$sessionID."'"));
        $this->view->setVar('userDetail', $userDetail);


        //print_r($allPost); exit();
    }
    public function imapchkAction(){

        $hostname = '{outlook.office365.com:993/imap/ssl}INBOX';
        //$hostname = '{outlook.office365.com:993/imap/ssl}Sent';
        /*$username = 'howard@hankzarihs.com';
        $password = 'HZA1212!';*/
        $username = 'shiraz@hankzarihs.com';
        $password = 'DESKLIGHT.21';

        /* try to connect */
        $inbox = imap_open($hostname,$username,$password) or die('Cannot connect to Yahoo: ' . imap_last_error());

        /* grab emails */
        $emails = imap_search($inbox,'ALL');
        //echo "<pre>";print_r($emails);exit();
        /* if emails are returned, cycle through each... */
        if($emails) {
            //echo "<pre>";print_r($emails); exit();

            /* begin output var */
            $output = '';

            /* put the newest emails on top */
            rsort($emails);
            $emails=array_slice($emails, 0, 1000);

            //echo "<pre>";print_r($emails);exit();
            $count=1;
            /* for every email... */
            $mycount=1;
            foreach($emails as $email_number) {
                if($count==8){
                    exit();
                }

                /* get information specific to this email */
                $overview = imap_fetch_overview($inbox,$email_number,0);

                //$message = imap_fetchbody($inbox,$email_number,2);

                if(strpos($overview[0]->from,"daniel@lslpartners.co.uk")>-1){
                    $structure = imap_fetchstructure($inbox, $email_number);

                    if(isset($structure->parts) && is_array($structure->parts) && isset($structure->parts[1])) {
                        $part = $structure->parts[1];
                        if($part->encoding == 3) {
                           $message = imap_fetchbody($inbox,$email_number,1.2);

                           if($this->is_base64($message)==true){
                                $message = imap_base64($message);
                            }
                            $message=quoted_printable_decode($message);

                        }else{
                            $message = imap_fetchbody($inbox,$email_number,2);

                            //if(strpos($overview[0]->from,"chittas970@gmail.com")>-1){
                                if(!$message){
                                    $message = imap_fetchbody($inbox,$email_number,1);
                                }
                            $message = quoted_printable_decode($message);
                        }
                    }

                    // $bbody = imap_fetchbody($inbox,$email_number,2.2);
                    //$bbody = imap_base64($bbody);
                    //$message=quoted_printable_decode($bbody);



                    /* output the email header information */
                   /* $output.= '<div class="toggler '.($overview[0]->seen ? 'read' : 'unread').'">';
                    $output.= '<span class="subject">Subject: '.$overview[0]->subject.'</span> ';
                    $output.= '<span class="from">'.$overview[0]->from.'</span>';
                    $output.= '<span class="date">on '.$overview[0]->date.'</span>';
                    $output.= '</div>';*/

                    /* output the email body */
                    $output.= '<div class="body" style="margin-bottom:100px;">'.$message.'</div>';

                    echo $output;
                    $count++;
                }


            }


        }

        /* close the connection */
        imap_close($inbox);
        exit();
    }
    public function is_base64($s){
        // Check if there are valid base64 characters
        if (!preg_match('/^[a-zA-Z0-9\/\r\n+]*={0,2}$/', $s)) return false;

        // Decode the string in strict mode and check the results
        $decoded = base64_decode($s, true);
        if(false === $decoded) return false;

        // Encode the string again
        if(base64_encode($decoded) != $s) return false;

        return true;
    }
    /**
    * Background Action To manage development of background page
    * Action Name: backgroundAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 25-03-2020
    **/
    public function leadnoteAction(){
        //echo date("dS  of F Y");
        $day=date("dS");
        $monthYr=date("F Y");
        $currentDate=$day." of ".$monthYr;
        //echo $currentDate;
        //exit;
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if(!$this->session->has('enquirySessID')){
            return $response->redirect("dashboard/enquiry");
        }
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

                $allPost['id']=$this->session->get('enquirySessID');

               $getData=array();
                $chkBackground=Enquiry::find(array('conditions' => "id='".$allPost['id']."'", 'limit' => 1));
                //echo "<pre>";print_r($chkQuote->toArray());exit;
                if(count($chkBackground)>0){
                    //$getData=$chkQuote[0]->toArray();
                    $getData=array_merge($chkBackground[0]->toArray(),$allPost);
                    $getData['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));

                    $enquiryDB= new Enquiry();
                    $saveData=$enquiryDB->save($getData);
                    //echo $saveData;exit;
                    if($saveData){

                        $factfindEnquirySection= FactfindSection::find(array("conditions"=>"section=6",));
                        $enquiryID=$enquiryDB->id;
                        if(count($factfindEnquirySection)>0)
                        {
                            foreach($factfindEnquirySection as $factfindEnquirySectionDet){
                                $customFields=CustomFields::find(array('conditions'=>'factfind_id="'.$factfindEnquirySectionDet->id.'"',"order" => "order_no asc",));
                                if(count($customFields)>0)
                                {
                                    $this->modelsManager->executeQuery("delete from EnquiryAdditional where factfind_id='".$factfindEnquirySectionDet->id."'");
                                    foreach($customFields as $customFieldsDet)
                                    {
                                        $enqAddObj=new EnquiryAdditional();
                                        $enqAddObj->enquiry_id=$enquiryID;
                                        $enqAddObj->factfind_id=$factfindEnquirySectionDet->id;
                                        $enqAddObj->customfield_id=$customFieldsDet->id;
                                        $enqAddObj->field_value=$allPost[$customFieldsDet->name_attribute];
                                        $enqAddObj->created=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                        $enqAddObj->modified=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                                        $enqAddObj->save();

                                    }

                                }


                            }
                        }
                        //echo 123;exit;


                       // $newquoteData["modified"]=date("Y-m-d H:i:s", strtotime("+60 minutes"));

                        //=======Save track report========
                        if(isset($getData['id'])){
                            $trackData['track_for']='bleadnoteEdit';
                        }else{
                            $trackData['track_for']='leadnoteAdd';
                        }
                        $trackData['userid']=$this->session->get('sessUserID');
                        $trackData['track_save_id']=$enquiryDB->id;
                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);
                    //=======Save track report End========
                    }

                    //===================Team business start here=====

                    $leadResult=Enquiry::findFirst(array('conditions' => "id='".$allPost['id']."'", 'limit' => 1));
                    if($leadResult->generate_document<=0){
                        $this->modelsManager->executeQuery("update Enquiry set generate_document=1 where id='".$allPost['id']."'");
                            $leadAppDetail=LeadApplication::find(array('conditions' => "lead_id=".$leadResult->id, 'limit' => 1));
                            $clientname="";
                            $address="";
                            if(count($leadAppDetail)>0){
                                $nameArr=explode(":::", $leadAppDetail[0]->pd_fullname);
                                $clientname=stripslashes($nameArr[0]);
                                $clientname=preg_replace('/\s+/',' ',stripslashes($nameArr[0]));

                                $addressArr=explode(":K:", $leadAppDetail[0]->pd_current_address);
                                $address=stripslashes($addressArr[0]);
                                if(isset($addressArr[1]) && $addressArr[1]!="")
                                {
                                    $address.="<br/>".stripslashes($addressArr[1]);
                                }

                              } else {
                                if($leadResult->borrower_name!=''){
                                  $clientname=$leadResult->borrower_name;
                                }else if($leadResult->first_name!=''){
                                  $clientname=stripslashes($leadResult->first_name." ".$leadResult->last_name);
                                }
                              }

                              $brokerfee=$leadResult->brokerfee;
                              if($brokerfee<=0){
                                $brokerfee=0;
                                $brokerAmount=0;
                              }else{
                                    $brokerAmount=($brokerfee/100)*$leadResult->purchase_price;
                              }
                              if($leadResult->security_address!="")
                              {
                                $securityAddress=$leadResult->security_address;
                              }
                              else
                              {
                                $securityAddress="";
                              }


                          $zip = new clsTbsZip();

                        // Open the document
                        $zip->Open('Hank-Zarihs-Associates-Terms-of-Business.docx');
                        $content = $zip->FileRead('word/document.xml');
                        $p = strpos($content, '</w:body>');
                        if ($p===false) exit("Tag </w:body> not found in document.");

                        // Add the text at the end
                        //$content = substr_replace($content, '<w:p><w:r><w:t>'.$x.'</w:t></w:r></w:p>', $p, 0);
                        //echo $content;exit();
                        $content = str_replace('[CUSTOMERNAME]', $clientname, $content);
                        $content = str_replace('[CUSTOMERADDRESS]', nl2br($address), $content);
                        $content = str_replace('[CUSTOMERSECURITYADDRESS]', nl2br($securityAddress), $content);
                        $content = str_replace('[CURRENTDATE]', $currentDate, $content);
                        $content = str_replace('[BROKERPERCENT]', $brokerfee." %", $content);
                        $content = str_replace('[BROKERAMOUNT]', "£ ".number_format($brokerAmount, 2), $content);



                        //echo $content; exit();

                        $zip->FileReplace('word/document.xml', $content, TBSZIP_STRING);
                        //exit();
                        // Save as a new file
                        $cnt=time();
                        $zip->Flush(TBSZIP_FILE, 'uploads/preofferdocument/hank-zarihs-associates-terms-of-business_'.$cnt.'.docx');
                        //$zip->Flush(TBSZIP_FILE, 'offer2.docx');
                        $filename='hank-zarihs-associates-terms-of-business_'.$cnt.'.docx';

                        $postval['offerid']=25;

                        $postval['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $postval['lead_id']=$allPost['id'];
                        $postval['posted_by']=$this->session->get('sessUserID');
                        $caserequirementPreofferDb= new CaserequirementPreoffer();
                        $save=$caserequirementPreofferDb->save($postval);

                        $uploaddata['upload_document']=$filename;
                        $uploaddata['caserequirement_id']=$caserequirementPreofferDb->id;
                        $uploaddata['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $CaseofferDocument= new CaseofferDocument();
                        $saveDocument=$CaseofferDocument->save($uploaddata);
                        //header('Location: '.BASEURL.'uploads/preofferdocument/hank-zarihs-associates-terms-of-business_'.$allPost['id'].'.docx');
                            //=================Term business end here here=====
                    }


                    //return $response->redirect('dashboard/applicant');
                    $this->flashSession->success("Enquiry Completed Successfully.");
                    return $response->redirect('dashboard/enquiry');
                }
                //echo "<pre>";print_r($getData);exit;

            //}

        }else{
            if($this->session->has('enquirySessID')){

                    $enquiryID=$this->session->get('enquirySessID');
                    $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
                    $_POST=$enquiryDetails;
            }
        }
    }
    public function officeleadsubmitAction(){
        $responseArr=array('response' => 0, 'redirectpage' => 0);
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $allPost['posted_adv_id']=$this->session->get('sessUserID');
            $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            $leadid=$allPost['lead_id'];
            $leadOfficeDB= new LeadOffice();
            $save=$leadOfficeDB->save($allPost);
            if($save){
                $responseArr=array('response' => 1, 'redirectpage' => 0);
            }else{
                $responseArr=array('response' => 2, 'redirectpage' => 0);
            }
        }
        echo json_encode($responseArr);
        exit();
    }


        /**
        * office delete Action to Delete office data
        * Action Name: officedelAction
        * Author By: Chittaranjan Sahoo
        * Created Date: 22-04-2021
        **/
    public function officedelAction(){
        $responseArr=array('response' => 2, 'officeid' => '');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if($allPost['officeid']!=''){
                $delete=$this->modelsManager->executeQuery("delete from LeadOffice where id='".$allPost['officeid']."'");
                    $responseArr=array('response' => 1, 'officeid' => $allPost['officeid']);
            }
        }
        echo json_encode($responseArr);
        exit();
    }
    public function quotechargesaveAction(){
        if($this->session->has('enquirySessID')){
            $enquiryID=$this->session->get('enquirySessID');
            if($this->request->isPost()){
                $allPost=$this->request->getPost();
                $this->modelsManager->executeQuery("update Enquiry set application_type='".$allPost['chargeID']."' where id='".$enquiryID."'");
                echo 1;
            }
        }else{
            echo 2;
        }
        exit();

    }

    public function importpreferlenderAction(){
        $response = new \Phalcon\Http\Response();
        if(UIElements::bapCustUniNewAdvChk()==1){
            return $response->redirect('dashboard');
        }
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if($this->request->isPost()){

            if($this->request->hasFiles()== true){

                $arrfile=$this->request->getUploadedFiles();
                if(!empty($arrfile) && $arrfile[0]->getError()!=4){
                    $file=$arrfile[0];
                    $filename=time().$file->getName();
                    $tmpName=$file->getTempName();
                    $handle = fopen($tmpName, "r");
                    $fcount=1;
                    while (($data = fgetcsv($handle, 0, ",")) !== FALSE) {
                        if($fcount>1){
                            //echo "<pre>";print_r($data);exit();
                            if($data[1]==''){
                                $srhtxt=$data[2];
                                $chkLender=Lenders::findAll("select users.* from lenders left join users on lenders.lender_id=users.id where (users.first_name like '%".$srhtxt."%' or users.last_name like '%".$srhtxt."%' or CONCAT(users.first_name, ' ', users.last_name) like '%".$srhtxt."%' or lenders.first_name like '%".$srhtxt."%' or lenders.surname like '%".$srhtxt."%' or CONCAT(lenders.first_name, ' ', lenders.surname) like '%".$srhtxt."%') limit 1");
                                if(count($chkLender)>0){

                                    $userData['email_id']=$chkLender[0]->email_id;
                                }else{
                                    $userData['email_id']="";
                                }
                            }else{
                                $userData['email_id']=addslashes($data[1]);
                            }

                           $minloan=str_replace(",", "", $data[13]);
                           $minloan=str_replace("£", "", $minloan);

                           $max_loan=str_replace(",", "", $data[14]);
                           $max_loan=str_replace("£", "", $max_loan);

                           $sessionID=$this->session->get('sessUserID');

                            $userData['adv_id']=$sessionID;
                            $userData['product']=addslashes($data[0]);
                            $userData['lender_name']=addslashes($data[2]);
                            $userData['address']=addslashes($data[3]);
                            $userData['ltv_80']=addslashes($data[4]);
                            $userData['ltv_75']=addslashes($data[5]);
                            $userData['ltv_70']=addslashes($data[6]);
                            $userData['ltv_65']=addslashes($data[7]);
                            $userData['ltv_60']=addslashes($data[8]);
                            $userData['ltv_55']=addslashes($data[9]);
                            $userData['ltv_50']=addslashes($data[10]);
                            $userData['lender_fee_retained']=addslashes($data[11]);
                            $userData['product_guide']=addslashes($data[12]);
                            $userData['min_loan']=$minloan;
                            $userData['max_loan']=$max_loan;
                            $userData['note']=addslashes($data[15]);
                            $userData['phone_no']=addslashes($data[16]);
                            $userData['first_name']=addslashes($data[17]);
                            $userData['surname']=addslashes($data[18]);

                            $PreferLenderDB = new PreferLender();

                            $saveData = $PreferLenderDB->save($userData);

                            unset($userData);
                        }
                        $fcount++;
                    }
                    $this->flashSession->success('Lender Imported Successfully');
                    return $response->redirect("dashboard/preferlendermanagement");
                } else {
                    $this->flashSession->success('Something is wrong.Please try Again.');
                }
            }
        }
    }

     public function preferlendermanagementAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if($this->session->has('preferlenderredirect')){
            $this->session->remove('preferlenderredirect');
        }
        if(UIElements::bapCustUniNewAdvChk()==1){
            return $response->redirect('dashboard');
        }
        $sessionID=$this->session->get('sessUserID');
        $whr=array();
        $ord=array();
        $joinArr=array();
        $groupBy="";
        if($this->request->isGet()){
            $allGet=$this->request->get();
            if(isset($allGet['searchTxt']) && $allGet['searchTxt']!=''){
                $srhtxt=$allGet['searchTxt'];
                array_push($whr, "(lender_name like '%".$srhtxt."%' or address like '%".$srhtxt."%' or email_id like '%".$srhtxt."%')");
            }
            if((isset($allGet['products']) && $allGet['products']!='')){
                array_push($whr, "product='".$allGet['products']."'");
            }
            if((isset($allGet['lenders']) && $allGet['lenders']!='')){
                array_push($whr, "lender_name like '%".$allGet['lenders']."%'");
            }

            $ordrqry='lender_name asc';
            if(isset($allGet['sorting']) && $allGet['sorting']!=''){
                $orderbyVal=$allGet['sorting'];
                if(isset($allGet['orderby']) && $allGet['orderby']!=''){
                    $orderby=$allGet['orderby'];
                    $ordrqry=$orderbyVal.' '.$orderby;
                }
                if($ordrqry!=''){
                    $ordrqry=$ordrqry;
                }
            }
        }

        $where="";
        if(!empty($whr)){
            $where=" where ".implode(" and ", $whr);
        }

        //===========pagination===========
        $paged=$this->dispatcher->getParam("paged");
        $page = (int) (!isset($paged) ? 1 : $paged);
        $page = ($page == 0 ? 1 : $page);
        $perpage =20;
        $startpoint = ($page * $perpage) - $perpage;
       // echo "select * from PreferLender".$where.$groupBy;exit;
       $totrecord=$this->modelsManager->executeQuery("select * from PreferLender".$where.$groupBy)->toArray();
            //echo "select Lenders.* from Lenders".$joinString.$where." order by Lenders.id desc"; exit();
           if(!$this->request->get('showall')){
            //echo "select Lenders.* from Lenders".$joinString.$where.$groupBy." order by ".$ordrqry." limit ".$startpoint.", ".$perpage; exit();
               $lenderRes=$this->modelsManager->executeQuery("select PreferLender.* from PreferLender".$where.$groupBy." order by ".$ordrqry." limit ".$startpoint.", ".$perpage)->toArray();
           }else{
            //echo "select Lenders.* from Lenders".$joinString.$where.$groupBy." order by ".$ordrqry; exit();
                 $lenderRes=$this->modelsManager->executeQuery("select PreferLender.* from PreferLender".$where.$groupBy." order by ".$ordrqry)->toArray();
           }

       //echo "select Lenders.* from Lenders".$joinString.$where." order by ".$ordrqry; exit();
        //print_r($lenderRes->toArray());exit;
       //echo "select Lenders.* from Lenders".$joinString.$where." order by ".$ordrqry." limit ".$startpoint.", ".$perpage;exit();

        //================================

        //$adminRes=AdminUsers::findByAll()->toArray();
        $this->view->setVar('lenderRes', $lenderRes);
        $this->view->setVar('totrecord', count($totrecord));
        $this->view->setVar('perpage', $perpage);
        $this->view->setVar('paged', $paged);
        $this->view->setVar('startpoint', $startpoint);
    }
    public function editpreferlenderAction($id=NULL){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if($_SERVER['HTTP_REFERER']!=''){

            if($this->session->has('preferlenderredirect')){
                $sessionredirect=$this->session->get('preferlenderredirect');
            }else{
                $this->session->set('preferlenderredirect', $_SERVER['HTTP_REFERER']);
                $sessionredirect=$this->session->get('preferlenderredirect');
            }

        }
        if(UIElements::bapCustUniNewAdvChk()==1){
            return $response->redirect('dashboard');
        }
        if($id!='')
        {
            if($this->request->isPost())
            {
                $lenderDetail=PreferLender::findFirst(array('conditions' => "id='".$id."'"));
                $allPost=$this->request->getPost();
                $allPost['created']=$lenderDetail->created;
                $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $allPost['id']=$lenderDetail->id;
                $sessionID=$this->session->get('sessUserID');

               $allPost['adv_id']=$sessionID;

               if($this->request->hasFiles()== true)
                {
                    $baselocation=ROOTPATH.'/uploads/userprofile/';

                    $arrfiles=$this->request->getUploadedFiles();
                    //echo "<pre>";print_r($arrfiles); exit();
                    if(count($arrfiles)>0){
                        foreach($arrfiles as $arrfile){
                            if($arrfile->getError()!=4){
                                $file=$arrfile;
                               // print_r($file);exit();
                                $filename=time().$file->getName();
                                $file->moveTo($baselocation.$filename);

                                // ============ Resize banners Image 1600x650==================
                                //UIElements::BapCustUniResizeImg('banner',$filename,1600,650,'crop',80);

                                if($file->getKey()=='profile_image'){
                                    if($lenderDetail->profile_image!=''){
                                        @unlink($baselocation.$lenderDetail->profile_image);
                                    }
                                }
                                if($file->getKey()=='attachment'){
                                    if($lenderDetail->attachment!=''){
                                        @unlink($baselocation.$lenderDetail->attachment);
                                    }
                                }
                                $allPost[$file->getKey()]=$filename;

                            }else{

                                if($arrfile->getKey()=='profile_image'){
                                    $allPost['profile_image']=$lenderDetail->profile_image;
                                }
                                if($arrfile->getKey()=='attachment'){
                                    $allPost['attachment']=$lenderDetail->attachment;
                                }


                            }
                        }
                    }

                }
                else
                {
                    $allPost['profile_image']=$lenderDetail->profile_image;
                    $allPost['attachment']=$lenderDetail->attachment;
                }

               //print_r($allPost['products']); exit();
                $allPost=array_filter($allPost);
                $lenderDB = new PreferLender();
                $updateUser=$lenderDB->save($allPost);
                if($updateUser){
                    $this->flashSession->success("Lender Updated Successfully");
                    //return $response->redirect('dashboard/preferlendermanagement');
                    return $response->redirect($sessionredirect);
                } else {
                    $this->flashSession->success("Lender Updating Failed");
                }

            }
            $lenderDetail=PreferLender::findFirst(array("conditions" => "id='".$id."'"))->toArray();

            $_POST=$lenderDetail;

        }else{
            return $response->redirect('dashboard/preferlendermanagement');
        }
    }

    public function addpreferlenderAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if($this->session->has('preferlenderredirect')){
            $this->session->remove('preferlenderredirect');
        }
        if(UIElements::bapCustUniNewAdvChk()==1){
            return $response->redirect('dashboard');
        }
            if($this->request->isPost())
            {
                $allPost=$this->request->getPost();
                $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                $sessionID=$this->session->get('sessUserID');

                $allPost['adv_id']=$sessionID;
                //$allPost['id']=$lenderDetail->id;

               //print_r($allPost['products']); exit();
                if($this->request->hasFiles()== true)
                {
                    $baselocation=ROOTPATH.'/uploads/userprofile/';

                    $arrfiles=$this->request->getUploadedFiles();
                    //echo "<pre>";print_r($arrfiles); exit();
                    if(count($arrfiles)>0){
                        foreach($arrfiles as $arrfile){
                            if($arrfile->getError()!=4){
                                $file=$arrfile;
                               // print_r($file);exit();
                                $filename=time().$file->getName();
                                $file->moveTo($baselocation.$filename);

                                // ============ Resize banners Image 1600x650==================
                                //UIElements::BapCustUniResizeImg('banner',$filename,1600,650,'crop',80);

                                if($file->getKey()=='profile_image'){

                                }
                                $allPost[$file->getKey()]=$filename;

                            }
                        }
                    }

                }
                else
                {
                    $allPost['profile_image']='';
                }
                $allPost=array_filter($allPost);
                $lenderDB = new PreferLender();
                $updateUser=$lenderDB->save($allPost);
                if($updateUser){
                    $this->flashSession->success("Prefer Lender Created Successfully");
                    return $response->redirect('dashboard/preferlendermanagement');
                } else {
                    $this->flashSession->success("Prefer Lender creating Failed");
                }

            }

    }

    /*
    * Action name: sourcedepositAction
    * Action Purpose: source deposit form step work
    * Author: Chittaranjan Sahoo
    * Created Date: 18-05-2021
    */
   public function sourcedepositAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        if(!$this->session->has('enquirySessID')){
            return $response->redirect("dashboard/enquiry");
        }
        if($this->request->isPost())
        {
            $allPost=$this->request->getPost();

                $allPost['id']=$this->session->get('enquirySessID');

               $getData=array();
                $chkQuote=Enquiry::find(array('conditions' => "id='".$allPost['id']."'", 'limit' => 1));
                //echo "<pre>";print_r($chkQuote->toArray());exit;
                if(count($chkQuote)>0){
                    //$getData=$chkQuote[0]->toArray();
                    $getData=array_merge($chkQuote[0]->toArray(),$allPost);
                    $getData['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                    /*$getData["purchase_price"]=str_replace(",", "", $allPost["purchase_price"]);

                    $getData["amount_required"]=str_replace(",", "", $allPost["amount_required"]);*/

                    $getData["amount"]=str_replace(",", "", $allPost["amount"]);
                    $getData["gift_amount"]=str_replace(",", "", $allPost["gift_amount"]);
                    $getData["source_loan_amount"]=str_replace(",", "", $allPost["source_loan_amount"]);
                    $getData["monthly_payment"]=str_replace(",", "", $allPost["monthly_payment"]);

                    $enquiryDB= new Enquiry();
                    //echo "<pre>";print_r($getData);exit;
                    $saveData=$enquiryDB->save($getData);
                    //echo $saveData;exit;
                    if($saveData){
                        //echo 123;exit;
                       $allPost['lead_id']=$enquiryDB->id;

                        //=======Save track report========
                        if(isset($allPost['id'])){
                            $trackData['track_for']='quoteEdit';
                        }else{
                            $trackData['track_for']='quoteAdd';
                        }
                        $trackData['userid']=$this->session->get('sessUserID');
                        $trackData['track_save_id']=$quickQuoteDB->id;
                        $trackData['server_detail']=$_SERVER['HTTP_USER_AGENT'];
                        $trackData['server_ip']=$_SERVER['REMOTE_ADDR'];
                        $trackData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $trackClickSave = new TrackClickSave();
                        $saveTrack=$trackClickSave->save($trackData);
                    //=======Save track report End========
                    }

                    return $response->redirect('dashboard/background');

                }
        }else{
            if($this->session->has('enquirySessID')){

                $enquiryID=$this->session->get('enquirySessID');
                $enquiryDetails=Enquiry::findFirst(array('conditions'=>"id='".$enquiryID."'"))->toArray();
                $_POST=$enquiryDetails;

            }
        }
   }
   public function getproductAction(){

        $responseArr=array('response' => 0, 'content' => '');
        $productArr=array('RB'=> 'Resi/Bridge', 'SCB' => 'Semi/Comm Bridge', 'CB' => 'Comm/Bridge', 'LB' => 'Land/Bridge', 'SC' => '2nd/charge', 'RFB' => 'Refurb/Bridge', 'D' => 'Deve', 'M' => 'Mezz', 'RI' => 'Resi/Investment', 'SCI' => 'Semi/Comm Investment', 'CI' => 'Comm/Investment');

        $secproductArr=array('Bridging'=> 'Bridging', 'Bridging £5m Plus' => 'Bridging £5m Plus', 'Non Status Bridging' => 'Non Status Bridging', 'Second Charge' => 'Second Charge', 'Refurbishment' => 'Refurbishment', 'Investment Finance under £3m' => 'Investment Finance under £3m', 'JV' => 'JV', 'Mezzanine Lenders' => 'Mezzanine Lenders', 'Investment Finance £3m Plus' => 'Investment Finance £3m Plus', 'Development Finance under £1m' => 'Development Finance under £1m', 'Development Bank Lenders' => 'Development Bank Lenders', 'Development Specialist Lenders' => 'Development Specialist Lenders', 'Development Finance £10m Plus' => 'Development Finance £10m Plus');
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

            if($allPost['panelid']==1){
                $conent='<option value="">--Select--</option>';
                  foreach($productArr as $productIndex => $product){

                    $conent.='<option value="'.$productIndex.'" >'.$product.'</option>';

                  }

                $responseArr=array('response' => 1, 'content' => $conent);
            }else if($allPost['panelid']==2){
                $conent='<option value="">--Select--</option>';
                  foreach($secproductArr as $productIndex => $product){

                    $conent.='<option value="'.$productIndex.'" >'.$product.'</option>';

                  }

                $responseArr=array('response' => 1, 'content' => $conent);
            }
        }

        echo json_encode($responseArr);
        exit();
   }
   public function notificationupdateAction(){
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if($allPost['send_from']!=''){
                $condition='';
                if($allPost['send_from']=='notificationSection'){
                    $condition=" where id=".$allPost['notification_id'];
                }else if($allPost['send_from']=='notificationSectionlead'){
                    $condition=" where notification_id=".$allPost['task_id'];
                }
                $update=$this->modelsManager->executeQuery("update Notification set is_read=1".$condition);
                if($update){
                    echo 1;
                }else{
                    echo 2;
                }
            }
        }
   }

   public function coverttoleadAction($leadid=''){
    $response = new \Phalcon\Http\Response();
        if($leadid!=''){
            $date=date("Y-m-d H:i:s", strtotime("+60 minutes"));
             $update=$this->modelsManager->executeQuery("update Enquiry set not_proceeding=0, modified='".$date."' where id='".$leadid."'");
             //echo 1; exit();
            if($update){
                $this->flashSession->success("Enquiry has been convert back to lead Successfully.");
            }else{
                $this->flashSession->success("Converting back to lead is unsuccessful");
            }
        }
        return $response->redirect('dashboard/notproceedinglist');

   }
   public function piplinecoverttoleadAction($leadid=''){
    $response = new \Phalcon\Http\Response();
        if($leadid!=''){
            $date=date("Y-m-d H:i:s", strtotime("+60 minutes"));
             $update=$this->modelsManager->executeQuery("update Enquiry set in_progress=0, modified='".$date."' where id='".$leadid."'");
             //echo 1; exit();
            if($update){
                $this->flashSession->success("Enquiry has been convert back to lead Successfully.");
            }else{
                $this->flashSession->success("Converting back to lead is unsuccessful");
            }
        }
        return $response->redirect('dashboard/pipeline');

   }
   public function getreedmeAction(){
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

            $termval=$allPost['termval'];
            $termType=$allPost['termType'];
            //echo $allPost['date_of_completion'];
            $complteeDate=str_replace("/", "-", $allPost['date_of_completion']);
            //$complteeDate=date("Y-m-d", strtotime($complteeDate));
            $new_date = strtotime('+ '.$termval.' '.$termType, strtotime($complteeDate));
            echo date('d/m/Y', $new_date);

            exit();
        }
   }

   public function getpdflabelAction(){
        $todata='';
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            if($allPost['dataof']=='preferLender'){
                $lenderList=PreferLender::find(array('conditions' => "email_id!='' and product='".$allPost['product']."'", 'order' => 'lender_name asc'));
                if(count($lenderList)>0){
                    foreach($lenderList as $lenderResult){
                      //$lenderDetail=Users::findFirst(array("conditions" => "id=".$lenderResult->lender_id));
                      $todata.='<div class="groupItemContainer touseridcls'.$lenderResult->id.'"><span class="singleItem lendertodiv">'.trim(stripslashes($lenderResult->lender_name)).'<a class="remove" alt="'.$lenderResult->id.'" href="javascript:{}"></a><br><input type="checkbox" name="is_pdf['.$lenderResult->id.']" id="is_Pdf_ID_'.$lenderResult->id.'" value="1"> Attach PDF</span></div>';
                    }
                }
            }else if($allPost['dataof']=='lender'){
                $whr=array("lenders.is_active=1 and users.first_name!=''");

                    $where="";


                if(!empty($whr)){
                    $where=" where ".implode(" and ", $whr);
                }

               $lenderList=Lenders::findAll("select lenders.* from lenders left join users on lenders.lender_id=users.id".$where." order by users.first_name asc");

                //$lenderBdmsList=Lenders::findAll("select lenders.* from lenders".$bdmwhere." order by lenders.contact asc");

                if(count($lenderList)>0){
                    foreach($lenderList as $lenderResult){
                        $lenderDetail=Users::findFirst(array("conditions" => "id=".$lenderResult->lender_id));
                            $todata.='<div class="groupItemContainer touseridcls'.$lenderResult->lender_id.'"><span class="singleItem lendertodiv">'.trim(stripslashes($lenderDetail->first_name." ".$lenderDetail->last_name)).'<a class="remove" alt="'.$lenderResult->lender_id.'" href="javascript:{}"></a><br><input type="checkbox" name="is_pdf['.$lenderResult->lender_id.']" id="is_Pdf_ID_'.$lenderResult->lender_id.'" value="1"> Attach PDF</span></div>';
                    }

                }
            }
        }
        echo $todata; exit();
   }
   public function lenderdataAction(){
    if($this->request->isPost()){
        $allPost=$this->request->getPost();
        $lenderID=$allPost['lender_id'];
        $userDetail=UIElements::BapCustUniGetByID('Users', array('id' => $lenderID), "id desc");
        $lenderDetail=Lenders::findFirst(array('conditions' => "lender_id=".$lenderID))->toArray();
        $responseArr=array('response' => 1, 'fname' => $lenderDetail['first_name'], 'lname' => $lenderDetail['surname'], 'lendername' => $userDetail->first_name." ".$userDetail->last_name, 'email_id' => $userDetail->email_id, 'address' => $userDetail->address, 'contact' => $lenderDetail['contact'], 'note' => $lenderDetail['note'], 'min_loan' => $lenderDetail['min_loan'], 'max_loan' => $lenderDetail['max_loan']);
        echo json_encode($responseArr);
        exit();
    }
   }

   public function deletepreferlenderAction($id=""){
        $response = new \Phalcon\Http\Response();
        if($id!='')
        {

            //echo $id; exit();
            $sql="delete from PreferLender where id='".$id."'";
            $deleteUsers=$this->modelsManager->executeQuery($sql);
            if($deleteUsers)
            {

                $this->flashSession->success('Well done! Prefer Lender Deleted Successfully');
            }
            else
            {
                $this->flashSession->error('Prefer Lender Detail Deleting Failed');

            }
        }
        return $response->redirect('dashboard/preferlendermanagement');
    }
    public function compleeddealleadAction($id=""){
        //echo date("Y-m-d H:i:s", strtotime("+60 minutes")); exit();
        $response = new \Phalcon\Http\Response();
        if($id==''){
            return $response->redirect("dashboard/completeddeal");
        }
        $leadDetail=Enquiry::findFirst(array('conditions' => "id='".$id."'"));
       /* if($leadDetail->not_proceeding==1){
            $this->dispatcher->forward(array(
                'controller' => 'error',
                'action' => 'index'
            ));
        }
        if($leadDetail->is_completed==1){
            $this->dispatcher->forward(array(
                'controller' => 'error',
                'action' => 'index'
            ));
        }*/
        /*if($leadDetail->in_progress==1){
            $this->dispatcher->forward(array(
                'controller' => 'error',
                'action' => 'index'
            ));
        }*/
        $this->view->setVar('leadDetail', $leadDetail);
        if($this->request->isPost()){
            $allpost=$this->request->getPost();
            $allpost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            if($allpost['start_date']!=''){
                //$allpost['start_date']=date("Y-m-d", strtotime($allpost['start_date']));
                $date = DateTime::createFromFormat('d/m/Y', $allpost['start_date']);
                $allpost['start_date']=$date->format('Y-m-d');
                //echo $allpost['start_date'];exit();
            }
            if($allpost['due_date']!=''){
                //$allpost['due_date']=date("Y-m-d", strtotime($allpost['due_date']));
                $date = DateTime::createFromFormat('d/m/Y', $allpost['due_date']);
                $allpost['due_date']=$date->format('Y-m-d');
            }
            if($allpost['reminder_date']!=''){
                //$allpost['reminder_date']=date("Y-m-d H:i:s", strtotime($allpost['reminder_date']));
                $datetime = DateTime::createFromFormat('d/m/Y H:i:s', $allpost['reminder_date']);
                $allpost['reminder_date']=$datetime->format('Y-m-d H:i:s');
                //echo $allpost['reminder_date'];exit();
            }
            if($allpost['completed_percent']==100){
               $allpost['completed_status']=1;
            }
            $assignArr=$allpost['advisor_ids'];
            $allpost['advisor_ids']=implode(",", $allpost['advisor_ids']);
            $allpost['posted_by']=$this->session->get('sessUserID');
            $taskDb=new Task();
            $save=$taskDb->save($allpost);
            if($save){
                $taskID=$taskDb->id;
                //=========Note Save============
                if(!empty($allpost['note_text'])){
                    foreach($allpost['note_text'] as $noteIndex => $noteText){
                        $noteData['note_text']=$noteText;
                        $noteData['note_title']=$allpost['note_title'][$noteIndex];
                        $filearr=$_FILES['note_attachments']['name'][$noteIndex];
                        //echo "<pre>";print_r($filearr);exit();
                        $finalFileArr=array();
                        if(!empty($filearr))
                        {
                            $baseLocation="uploads/tasknotes/";
                            foreach($filearr as $index => $file)
                            {
                                //$file=$filearr[$i];//echo $file->getKey();
                                $filename=uniqid().$file;
                                move_uploaded_file($_FILES['note_attachments']['tmp_name'][$noteIndex][$index], $baseLocation.$filename);
                                array_push($finalFileArr, $filename);

                            }
                        }
                        if(!empty($finalFileArr)){
                            $noteData['note_attachments']=implode(":::", $finalFileArr);
                        }
                        $sessionID=$this->session->get('sessUserID');
                        $noteData['user_id']=$sessionID;
                        $noteData['task_id']=$taskID;
                        $noteData['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                        $notesDb= new TaskNotes();
                        $saveNote=$notesDb->save($noteData);
                    }
                }
                //=========Note Save end==========
                //=======Assign Save feature============
                if(count($assignArr)>0){

                    $notificationData['notification_by'] = $this->session->get('sessUserID');
                    $notificationData['notification_of'] = 'task';
                    $notificationData['notification_id'] = $taskID;

                    foreach($assignArr as $userid){
                        $notificationData['notification_on'] = date("Y-m-d");
                        $notificationData['notification_to'] = $userid;
                        $notificationDb = new Notification();
                        $save = $notificationDb->save($notificationData);

                        //==========Mail Functionality start here=======
                        $mailContentDetails=MailTemplate::find(array('conditions' => "id=20", 'limit' => 1));
                        if(!empty($mailContentDetails) && count($mailContentDetails)>0){
                            $mailContentDetail=$mailContentDetails[0];
                            $mailSubject=$mailContentDetail->subject;
                            $mailContent=$mailContentDetail->mail_content;

                            $mailContent=UIElements::replaceTaskEmailMessage($taskID, $userid, $mailContent);
                            $mailSubject=UIElements::replaceTaskEmailMessage($taskID, $userid, $mailSubject);

                            $advisorDetail=Users::findFirst(array('conditions' => "id='".$userid."'", 'limit' => 1));

                            //echo $mailContent;exit();

                            if($advisorDetail->email_id){
                                $advEmailID="";
                                if(strpos($advisorDetail->email_id,"gov.")!==false){

                                }else if(strpos($advisorDetail->email_id,"police.")!==false){

                                }else if(strpos($advisorDetail->email_id,"nhs.")!==false){

                                }else if(strpos($advisorDetail->email_id,"sch.")!==false){

                                }else if(strpos($advisorDetail->email_id,"ac.")!==false){
                                }else{
                                    $advEmailID=$advisorDetail->email_id;
                                }
                                if($advEmailID!=''){
                                    $sendmail=UIElements::sendEmail($advEmailID,$mailSubject,$mailContent);
                                }
                            }
                            //============Send mail save==========
                            $sendPost['task_id']=$taskID;
                            $sendPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
                            $sendPost['to_user']=$userid;
                            $sendPost['mail_subject']=$mailSubject;
                            $sendPost['mail_content']=$mailContent;
                            $sendPost['mail_from']=1;

                            $sendMailDb= new TaskSendMail();
                            $saveSendMail=$sendMailDb->save($sendPost);
                            //============End mail save============

                        }
                        //==========Mail Functionality End here=========
                    }

                }
                //========End assign save feature===========
                $this->flashSession->success("Task Submitted Successfully.");
                return $response->redirect("dashboard/enquirydetail/".$id);
            }else{
                $this->flashSession->error("Task Submitting Failed.");
            }
        }

        $url = 'https://rest.textmagic.com/api/v2/history?limit=1000';
         //$url = 'https://rest.textmagic.com/api/v2/lists/1670917/contacts';
        //Your username.
        $username = TEXTMAGICUNAME;
        //Your password.
        $password = TEXTMAGICKEY;
        //Initiate cURL.
        $ch = curl_init($url);
        //Specify the username and password using the CURLOPT_USERPWD option.
        curl_setopt($ch, CURLOPT_USERPWD, $username . ":" . $password);
        //Tell cURL to return the output as a string instead
        //of dumping it to the browser.
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        /*curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "PUT");
        curl_setopt($ch, CURLOPT_POSTFIELDS,http_build_query($data));*/
        //Execute the cURL request.
        $response = curl_exec($ch);

        $smsResults=json_decode($response, true);
        $this->view->setVar('smsResults', $smsResults);
        //echo "<pre>"; print_r($smsResults);exit();
    }
     /**
    * Mail lender report Action To Manage HZA lender mail conversation report
    * Action Name: lenderoutsidemailAction
    * Author By: Chittaranjan Sahoo
    * Created Date: 07-07-2021
    **/
    public function lenderoutsidemailAction()
    {
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('dashboard');
        }
        if(UIElements::bapCustUniNewAdvChk()==1){
            return $response->redirect('dashboard');
        }

        $sessionID=$this->session->get('sessUserID');
        $userDetail=Users::findFirst(array('conditions' => "id='".$sessionID."'"));
        if($userDetail->is_view_marketing_tab!=1){
             return $response->redirect('dashboard');
        }

        $joinArr=array();
        $whr=array("adv_id='".$sessionID."'");
        if($this->request->isGet()){
            $allGet=$this->request->get();
            if(isset($allGet['mail_type']) && $allGet['mail_type']!=''){
                $mail_type=$allGet['mail_type'];
                array_push($whr, "mail_type='".$mail_type."'");
            }

            if(isset($allGet['lender_id']) && $allGet['lender_id']!=''){
                $lender_id=$allGet['lender_id'];
                array_push($whr, "lender_id='".$lender_id."'");
            }
            if(isset($allGet['prefer_lender_id']) && $allGet['prefer_lender_id']!=''){
                $prefer_lender_id=$allGet['prefer_lender_id'];
                array_push($whr, "prefer_lender_id='".$prefer_lender_id."'");
            }
            if(isset($allGet['is_read']) && $allGet['is_read']!=''){
                $is_read=$allGet['is_read'];
                array_push($whr, "is_read='".$is_read."'");
            }
            if(isset($allGet['searchtxt']) && $allGet['searchtxt']!=''){
                $searchtxt=urldecode($allGet['searchtxt']);
                array_push($whr, "(from_email_id like '%".$searchtxt."%' or to_email_id = '".$searchtxt."' or email_id = '".$searchtxt."' or mail_subject like '%".$searchtxt."%' or mail_body like '%".$searchtxt."%')");
            }
        }
        $order="mail_sent_date desc";
        if(isset($allGet['sorting']) && $allGet['sorting']!=''){
            $order=urldecode($allGet['sorting']);

        }
        $where="";
        if(!empty($whr)){
            $where=" where ".implode(" and ", $whr);
        }
        $joinString="";
        if(!empty($joinArr)){
            $joinString=" ".implode(" ", $joinArr);
        }
        //===========pagination===========
        $paged=$this->dispatcher->getParam("paged");
        $page = (int) (!isset($paged) ? 1 : $paged);
        $page = ($page == 0 ? 1 : $page);
        if($this->request->get('pagination') && $this->request->get('pagination')!=''){
            $perpage =$this->request->get('pagination');
        }else{
            $perpage =100;
        }
        $startpoint = ($page * $perpage) - $perpage;

        $totrecord=LenderFetchOutsideMail::findAll("select * from lender_fetch_outside_mail".$joinString.$where." order by ".$order);
        //echo "select * from track_mail_report".$joinString.$where." order by ".$order." limit ".$startpoint.", ".$perpage; exit();
        $lenderOutsideMails=LenderFetchOutsideMail::findAll("select * from lender_fetch_outside_mail".$joinString.$where." order by ".$order." limit ".$startpoint.", ".$perpage);

        //================================

        //$adminRes=AdminUsers::findByAll()->toArray();
        $this->view->setVar('lenderOutsideMails', $lenderOutsideMails);
        $this->view->setVar('totrecord', count($totrecord));
        $this->view->setVar('perpage', $perpage);
        $this->view->setVar('paged', $paged);
        $this->view->setVar('startpoint', $startpoint);
    }

     /**
    * lender mail delete Action To Manage HZA lender mail report delete Page
    * Action Name: lenderoutsidemaildeleteAction
    * Author By: chittaranjan Sahoo
    * Created Date: 07-07-2021
    **/
    public function lenderoutsidemaildeleteAction($id=''){
        $sucMsg=0;
        if($this->request->isPost()){
            $allPost=$this->request->getPost();

            if(isset($allPost['enqChk']) && !empty($allPost['enqChk'])){
                foreach($allPost['enqChk'] as $singLeadid){
                    $delete=$this->modelsManager->executeQuery("delete from LenderFetchOutsideMail where id='".$singLeadid."'");
                    if($delete){
                        $sucMsg=1;
                    }
                }
            }
        }
        if($sucMsg==1){
            echo 1;
        }else{
            echo 2;
        }
        exit();
    }
    public function fullapplicationsaveAction(){
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $allPost['adv_id']=$this->session->get('sessUserID');

            $chkApplication=FullApplications::find(array('conditions' => "lead_id='".$allPost['lead_id']."'", 'limit' => 1));
            if(count($chkApplication)>0){
                $allPost['id']=$chkApplication[0]->id;
                $allPost['created']=$chkApplication[0]->created;
                $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            }else{
                $allPost['created']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            }
            $fullApplicationDB=new FullApplications();
            $save=$fullApplicationDB->save($allPost);

            if($save){
                echo 1;
            }else{
                echo 2;
            }
        }
        exit();
    }
    public function internalusesaveAction(){
        if($this->request->isPost()){
            $allPost=$this->request->getPost();
            $allPost['modified']=date("Y-m-d H:i:s", strtotime("+60 minutes"));
            $enqData=Enquiry::findFirst(array('conditions' => "id='".$allPost['lead_id']."'", 'limit' => 1));
            $enqData=$enqData->toArray();


            $enqData=array_merge($enqData,$allPost);



            $enquiryDb=new Enquiry();
            $save=$enquiryDb->save($enqData);

            if($save){
                echo 1;
            }else{
                echo 2;
            }
        }
        exit();
    }
    public function salesreporttrackAction(){
        //$currentDate=date("Y-m-d H:i", strtotime('+1 hour'));
        //echo  $currentDate;exit;
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        $joinArr=array();
        $whr=array();
        if($this->request->isGet()){
            $allGet=$this->request->get();

            if(isset($allGet['searchtxt']) && $allGet['searchtxt']!=''){
                $srhtxt=$allGet['searchtxt'];
                array_push($whr, "(enquiry.borrower_name like '%".$srhtxt."%' or enquiry.first_name like '%".$srhtxt."%' or enquiry.last_name like '%".$srhtxt."%' or CONCAT(enquiry.first_name, ' ', enquiry.last_name) like '%".$srhtxt."%' or enquiry.borrower_email = '".$srhtxt."' or enquiry.borrower_mob = '".$srhtxt."' or enquiry.postcode = '".$srhtxt."' or enquiry.name_of_comany like '%".$srhtxt."%' or enquiry.borrower_address like '%".$srhtxt."%' or lead_application.pd_fullname like '%".$srhtxt."%' or lead_application.pd_email like '%".$srhtxt."%' or lead_application.pd_phone_no like '%".$srhtxt."%')");
                array_push($joinArr, "left join lead_application on enquiry.id=lead_application.lead_id");
            }
            if(isset($allGet['advisor_id']) && $allGet['advisor_id']!=''){
                array_push($whr, "advisor_id=".$allGet['advisor_id']);
            }
            if(isset($allGet['type']) && $allGet['type']!=''){
                array_push($whr, "type='".$allGet['type']."'");
            }


            if(isset($allGet['created_date']) && $allGet['created_date']!=''){
                $importdate = str_replace('/', '-', $allGet['created_date']);
                $importdate = date('Y-m-d', strtotime($importdate));
                array_push($whr, "date(created)='".$importdate."'");
            }


            //echo "<pre>";print_r($_SERVER); exit();

        }
        $order="salesreport_track.id desc";
        if(isset($allGet['sorting']) && $allGet['sorting']!=''){
            $order=urldecode($allGet['sorting']);

        }
        $where="";
        if(!empty($whr)){
            $where=" where ".implode(" and ", $whr);
        }
        $joinString="";
        if(!empty($joinArr)){
            $joinString=" ".implode(" ", $joinArr);
        }
        //===========pagination===========
        $paged=$this->dispatcher->getParam("paged");
        $page = (int) (!isset($paged) ? 1 : $paged);
        $page = ($page == 0 ? 1 : $page);
        if($this->request->get('pagination') && $this->request->get('pagination')!=''){
            $perpage =$this->request->get('pagination');
        }else{
            $perpage =20;
        }
        $sessionID=$this->session->get('sessUserID');
        $startpoint = ($page * $perpage) - $perpage;
        //echo "select count(*) as totalabi from barber_abi".$joinString.$where." order by ".$order; exit();
        $totrecord=BarberAbi::findAll("select  * from salesreport_track".$joinString.$where." order by ".$order);
        //$totrecord=BarberAbi::findAll("select  count(*) as totalabi from barber_abi".$joinString.$where." and assign_advisor='478' order by ".$order);
        //echo $totrecord[0]->totalabi; exit();
        /*if(isset($allGet['is_note']) && $allGet['is_note']==1){
            $barberUsers=BarberAbi::findAll("select barber_abi.*,barber_abi_notes.id as barberid from barber_abi".$joinString.$where." and assign_advisor='".$sessionID."' order by ".$order." limit ".$startpoint.", ".$perpage);
        }
        else
        {*/
            $salesreporttrack=BarberAbi::findAll("select  * from salesreport_track".$joinString.$where." order by ".$order." limit ".$startpoint.", ".$perpage);
            //$barberUsers=BarberAbi::findAll("select * from barber_abi".$joinString.$where." and assign_advisor='478' order by ".$order." limit ".$startpoint.", ".$perpage);
        //}

        //================================

        //$adminRes=AdminUsers::findByAll()->toArray();
        $this->view->setVar('salesreporttrack', $salesreporttrack);
        $this->view->setVar('totrecord', count($totrecord));
        $this->view->setVar('perpage', $perpage);
        $this->view->setVar('paged', $paged);
        $this->view->setVar('startpoint', $startpoint);

       // echo 1; exit();

    }
    public function reportingdashboardAction(){
        $response = new \Phalcon\Http\Response();
        if($this->session->get('sessUserType')>0){
            return $response->redirect('/dashboard');
        }
        $broker_id=$this->session->get('sessUserID');
        $curdate=date("Y-m-d");
        $monthStartDate=date("Y-m-01");
        $monthEndDate=date("Y-m-t");
        $currentdate=date("Y-m-d");
        $yearstartdate=date("Y-01-01");
        $yearenddate=date("Y-12-31");
        $weeklyDates=UIElements::BapCustUniweekStaratEnd();
        if($this->request->isGet()){
            $allGet=$this->request->get();
        }


        if(!isset($allGet["donuttime"]) || $allGet["donuttime"]=="daily"){
            $GrossLoanLead=Enquiry::findList("select amount_required, purchase_price,borrower_name,first_name,last_name,id from enquiry where date(created)='".$curdate."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and advisor_id=180 and amount_required!='NaN'")->toArray();
        }else if($allGet["donuttime"]=="weekly")
        {
            $GrossLoanLead=Enquiry::findList("select amount_required, purchase_price,borrower_name,first_name,last_name,id from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."') and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and advisor_id=180 and amount_required!='NaN'")->toArray();

        }
        else if($allGet["donuttime"]=="monthly")
        {
            $GrossLoanLead=Enquiry::findList("select amount_required, purchase_price,borrower_name,first_name,last_name,id from enquiry where (date(created)>='".$monthStartDate."' and date(created)<='".$monthEndDate."') and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and advisor_id=180 and amount_required!='NaN'")->toArray();

        }
        else if($allGet["donuttime"]=="yearly")
        {
            $GrossLoanLead=Enquiry::findList("select amount_required, purchase_price,borrower_name,first_name,last_name,id from enquiry where (date(created)>='".$yearstartdate."' and date(created)<='".$yearenddate."') and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and advisor_id=180 and amount_required!='NaN'")->toArray();

        }
        $brokerList= $advisorList=Users::find(array('conditions' => "u_type=0 and is_active=1 and id not in(3)",'order' => "id desc"));
        $leadCountArr=array();
        $totalGrossLoan = array();
        $brokerNameArr=array();
        $leaderboardArr=array();
        if(!isset($allGet["bartime"]) || $allGet["bartime"]=="daily"){
            foreach($brokerList as $brokerDet)
            {
                $GrossLoanLeadDet=Enquiry::findList("select count(id) as totcount , sum(amount_required) as totalsum from enquiry where date(created)='".$curdate."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and amount_required!='NaN' and advisor_id='".$brokerDet->id."'")->toArray();
                if(count($GrossLoanLeadDet)>0)
                {
                    array_push($leadCountArr,$GrossLoanLeadDet[0]["totcount"]);
                    array_push($totalGrossLoan,$GrossLoanLeadDet[0]["totalsum"]);
                    array_push($brokerNameArr,$brokerDet->first_name." ".$brokerDet->last_name);
                    $leaderboardArr[$brokerDet->first_name." ".$brokerDet->last_name]=$GrossLoanLeadDet[0]["totcount"];

                }
            }
            $leaderboardArr[$brokerDet->first_name." ".$brokerDet->last_name]=$GrossLoanLeadDet[0]["totcount"];

        }else if($allGet["bartime"]=="weekly")
        {
            foreach($brokerList as $brokerDet)
            {
                $GrossLoanLeadDet=Enquiry::findList("select count(id) as totcount , sum(amount_required) as totalsum from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."') and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and amount_required!='NaN' and advisor_id='".$brokerDet->id."'")->toArray();
                if(count($GrossLoanLeadDet)>0)
                {
                    array_push($leadCountArr,$GrossLoanLeadDet[0]["totcount"]);
                    array_push($totalGrossLoan,$GrossLoanLeadDet[0]["totalsum"]);
                    array_push($brokerNameArr,$brokerDet->first_name." ".$brokerDet->last_name);
                    $leaderboardArr[$brokerDet->first_name." ".$brokerDet->last_name]=$GrossLoanLeadDet[0]["totcount"];

                }
            }

        }
        else if($allGet["bartime"]=="monthly")
        {
            //echo 123;exit;
            foreach($brokerList as $brokerDet)
            {
                $GrossLoanLeadDet=Enquiry::findList("select count(id) as totcount , sum(amount_required) as totalsum from enquiry where (date(created)>='".$monthStartDate."' and date(created)<='".$monthEndDate."') and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and amount_required!='NaN' and advisor_id='".$brokerDet->id."'")->toArray();
                //echo "<pre>";print_r($GrossLoanLeadDet);exit;

                if(count($GrossLoanLeadDet)>0)
                {
                    array_push($leadCountArr,$GrossLoanLeadDet[0]["totcount"]);
                    array_push($totalGrossLoan,$GrossLoanLeadDet[0]["totalsum"]);
                    array_push($brokerNameArr,$brokerDet->first_name." ".$brokerDet->last_name);
                    $leaderboardArr[$brokerDet->first_name." ".$brokerDet->last_name]=$GrossLoanLeadDet[0]["totcount"];

                }
            }


        }
        else if($allGet["bartime"]=="yearly")
        {
            foreach($brokerList as $brokerDet)
            {
                $GrossLoanLeadDet=Enquiry::findList("select count(id) as totcount , sum(amount_required) as totalsum from enquiry where (date(created)>='".$yearstartdate."' and date(created)<='".$yearenddate."') and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and amount_required!='NaN' and advisor_id='".$brokerDet->id."'")->toArray();
                if(count($GrossLoanLeadDet)>0)
                {
                    array_push($leadCountArr,$GrossLoanLeadDet[0]["totcount"]);
                    array_push($totalGrossLoan,$GrossLoanLeadDet[0]["totalsum"]);
                    array_push($brokerNameArr,$brokerDet->first_name." ".$brokerDet->last_name);
                    $leaderboardArr[$brokerDet->first_name." ".$brokerDet->last_name]=$GrossLoanLeadDet[0]["totcount"];

                }
            }
        }

        if(!isset($allGet["leaderboardtime"]) || $allGet["leaderboardtime"]=="daily"){
            foreach($brokerList as $brokerDet)
            {
                $GrossLoanLeadDet=Enquiry::findList("select count(id) as totcount , sum(amount_required) as totalsum from enquiry where date(created)='".$curdate."' and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and amount_required!='NaN' and advisor_id='".$brokerDet->id."'")->toArray();
                if(count($GrossLoanLeadDet)>0)
                {

                    $leaderboardArr[$brokerDet->first_name." ".$brokerDet->last_name]=$GrossLoanLeadDet[0]["totcount"];

                }
            }
            $leaderboardArr[$brokerDet->first_name." ".$brokerDet->last_name]=$GrossLoanLeadDet[0]["totcount"];

        }else if($allGet["leaderboardtime"]=="weekly")
        {
            foreach($brokerList as $brokerDet)
            {
                $GrossLoanLeadDet=Enquiry::findList("select count(id) as totcount , sum(amount_required) as totalsum from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."') and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and amount_required!='NaN' and advisor_id='".$brokerDet->id."'")->toArray();
                if(count($GrossLoanLeadDet)>0)
                {
                    $leaderboardArr[$brokerDet->first_name." ".$brokerDet->last_name]=$GrossLoanLeadDet[0]["totcount"];

                }
            }

        }
        else if($allGet["leaderboardtime"]=="monthly")
        {
            //echo 123;exit;
            foreach($brokerList as $brokerDet)
            {
                $GrossLoanLeadDet=Enquiry::findList("select count(id) as totcount , sum(amount_required) as totalsum from enquiry where (date(created)>='".$monthStartDate."' and date(created)<='".$monthEndDate."') and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and amount_required!='NaN' and advisor_id='".$brokerDet->id."'")->toArray();
                //echo "<pre>";print_r($GrossLoanLeadDet);exit;

                if(count($GrossLoanLeadDet)>0)
                {
                    $leaderboardArr[$brokerDet->first_name." ".$brokerDet->last_name]=$GrossLoanLeadDet[0]["totcount"];

                }
            }


        }
        else if($allGet["leaderboardtime"]=="yearly")
        {
            foreach($brokerList as $brokerDet)
            {
                $GrossLoanLeadDet=Enquiry::findList("select count(id) as totcount , sum(amount_required) as totalsum from enquiry where (date(created)>='".$yearstartdate."' and date(created)<='".$yearenddate."') and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and amount_required!='NaN' and advisor_id='".$brokerDet->id."'")->toArray();
                if(count($GrossLoanLeadDet)>0)
                {
                    $leaderboardArr[$brokerDet->first_name." ".$brokerDet->last_name]=$GrossLoanLeadDet[0]["totcount"];

                }
            }
        }
        $caseCategoryCountArr=[];
        $caseCategorySumArr=[];
        if(!isset($allGet["case_category"]) || $allGet["case_category"]=="daily"){
            //echo 123;exit;
            $GrossLoanLeadDetCat=Enquiry::findList("select enquiry.amount_required,workflow_task.case_category from enquiry join workflow_task on workflow_task.lead_id=enquiry.id where date(workflow_task.created)='".$curdate."' and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and enquiry.amount_required!='NaN' and (workflow_task.case_category='cold' or workflow_task.case_category='warm' or  workflow_task.case_category='hot') GROUP BY workflow_task.case_category")->toArray();
           // echo "select enquiry.amount_required,workflow_task.case_category from enquiry join workflow_task on workflow_task.lead_id=enquiry.id where date(workflow_task.created)='".$curdate."' and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and enquiry.amount_required!='NaN' and (workflow_task.case_category='cold' or workflow_task.case_category='warm' or  workflow_task.case_category='hot') GROUP BY workflow_task.case_category";exit;
            //echo "<pre>";print_r($GrossLoanLeadDetCat);exit;
            $GrossLoanLeadDetCatCold=$GrossLoanLeadDetCat;
            $GrossLoanLeadDetCatWarm=$GrossLoanLeadDetCat;
            $GrossLoanLeadDetCatHot=$GrossLoanLeadDetCat;
            if(count($GrossLoanLeadDetCatCold)>0)
            {

               foreach ($GrossLoanLeadDetCatCold as $k => $val) {
                   if ($val["case_category"] == "warm") {
                       unset($GrossLoanLeadDetCatCold[$k]);
                   }
               }
               foreach ($GrossLoanLeadDetCatCold as $k => $val) {
                   if ($val["case_category"] == "hot") {
                       unset($GrossLoanLeadDetCatCold[$k]);
                   }
               }
                if(count($GrossLoanLeadDetCatCold)>0)
                {
                    $caseCategoryCountArr["cold"]=count($GrossLoanLeadDetCatCold);
                    $sumcold = array_sum(array_column($GrossLoanLeadDetCatCold,'amount_required'));
                    $caseCategorySumArr["cold"]=$sumcold;
                }
                 else
                {
                    $caseCategoryCountArr["cold"]=0;
                    $caseCategorySumArr["cold"]=0;
                }
            }

            if(count($GrossLoanLeadDetCatWarm)>0)
            {
                foreach ($GrossLoanLeadDetCatWarm as $k => $val) {
                   if ($val["case_category"] == "cold") {
                       unset($GrossLoanLeadDetCatWarm[$k]);
                   }
               }
               foreach ($GrossLoanLeadDetCatWarm as $k => $val) {
                   if ($val["case_category"] == "hot") {
                       unset($GrossLoanLeadDetCatWarm[$k]);
                   }
               }
                if(count($GrossLoanLeadDetCatWarm)>0)
                {
                    $caseCategoryCountArr["warm"]=count($GrossLoanLeadDetCatWarm);
                    $sumwarm = array_sum(array_column($GrossLoanLeadDetCatWarm,'amount_required'));
                    $caseCategorySumArr["warm"]=$sumwarm;
                }
                 else
                {
                    $caseCategoryCountArr["warm"]=0;
                    $caseCategorySumArr["warm"]=0;
                }
            }
            if(count($GrossLoanLeadDetCatHot)>0)
            {
                foreach ($GrossLoanLeadDetCatHot as $k => $val) {
                   if ($val["case_category"] == "cold") {
                       unset($GrossLoanLeadDetCatHot[$k]);
                   }
               }
               foreach ($GrossLoanLeadDetCatHot as $k => $val) {
                   if ($val["case_category"] == "warm") {
                       unset($GrossLoanLeadDetCatHot[$k]);
                   }
               }
                if(count($GrossLoanLeadDetCatHot)>0)
                {
                    $caseCategoryCountArr["hot"]=count($GrossLoanLeadDetCatHot);
                    $sumhot = array_sum(array_column($GrossLoanLeadDetCatHot,'amount_required'));
                    $caseCategorySumArr["hot"]=$sumhot;
                }
                else
                {
                    $caseCategoryCountArr["hot"]=0;
                    $caseCategorySumArr["hot"]=0;
                }
            }

        }else if($allGet["case_category"]=="weekly")
        {

            $GrossLoanLeadDetCat=Enquiry::findList("select enquiry.amount_required,workflow_task.case_category from enquiry join workflow_task on workflow_task.lead_id=enquiry.id where (workflow_task.date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."') and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and enquiry.amount_required!='NaN' and (workflow_task.case_category='cold' or workflow_task.case_category='warm' or  workflow_task.case_category='hot') GROUP BY workflow_task.case_category")->toArray();
            $GrossLoanLeadDetCatCold=$GrossLoanLeadDetCat;
            $GrossLoanLeadDetCatWarm=$GrossLoanLeadDetCat;
            $GrossLoanLeadDetCatHot=$GrossLoanLeadDetCat;
            if(count($GrossLoanLeadDetCatCold)>0)
            {
                foreach ($GrossLoanLeadDetCatCold as $k => $val) {
                   if ($val["case_category"] == "hot") {
                       unset($GrossLoanLeadDetCatCold[$k]);
                   }
               }
               foreach ($GrossLoanLeadDetCatCold as $k => $val) {
                   if ($val["case_category"] == "warm") {
                       unset($GrossLoanLeadDetCatCold[$k]);
                   }
               }
                if(count($GrossLoanLeadDetCatCold)>0)
                {
                    $caseCategoryCountArr["cold"]=count($GrossLoanLeadDetCatCold);
                    $sumcold = array_sum(array_column($GrossLoanLeadDetCatCold,'amount_required'));
                    $caseCategorySumArr["cold"]=$sumcold;
                }
                else
                {
                    $caseCategoryCountArr["cold"]=0;
                    $caseCategorySumArr["cold"]=0;
                }
            }

            if(count($GrossLoanLeadDetCatWarm)>0)
            {
                foreach ($GrossLoanLeadDetCatWarm as $k => $val) {
                   if ($val["case_category"] == "hot") {
                       unset($GrossLoanLeadDetCatWarm[$k]);
                   }
               }
               foreach ($GrossLoanLeadDetCatWarm as $k => $val) {
                   if ($val["case_category"] == "cold") {
                       unset($GrossLoanLeadDetCatWarm[$k]);
                   }
               }
                if(count($GrossLoanLeadDetCatWarm)>0)
                {
                    $caseCategoryCountArr["warm"]=count($GrossLoanLeadDetCatWarm);
                    $sumwarm = array_sum(array_column($GrossLoanLeadDetCatWarm,'amount_required'));
                    $caseCategorySumArr["warm"]=$sumwarm;
                }
                else
                {
                    $caseCategoryCountArr["warm"]=0;
                    $caseCategorySumArr["warm"]=0;
                }
            }
            if(count($GrossLoanLeadDetCatHot)>0)
            {
                foreach ($GrossLoanLeadDetCatHot as $k => $val) {
                   if ($val["case_category"] == "warm") {
                       unset($GrossLoanLeadDetCatHot[$k]);
                   }
               }
               foreach ($GrossLoanLeadDetCatHot as $k => $val) {
                   if ($val["case_category"] == "cold") {
                       unset($GrossLoanLeadDetCatHot[$k]);
                   }
               }
                if(count($GrossLoanLeadDetCatHot)>0)
                {
                    $caseCategoryCountArr["hot"]=count($GrossLoanLeadDetCatHot);
                    $sumhot = array_sum(array_column($GrossLoanLeadDetCatHot,'amount_required'));
                    $caseCategorySumArr["hot"]=$sumhot;
                }
                else
                {
                    $caseCategoryCountArr["hot"]=0;
                    $caseCategorySumArr["hot"]=0;
                }
            }


        }
        else if($allGet["case_category"]=="monthly")
        {

            $GrossLoanLeadDetCat=Enquiry::findList("select enquiry.amount_required,workflow_task.case_category from enquiry join workflow_task on workflow_task.lead_id=enquiry.id where (date(workflow_task.created)>='".$monthStartDate."' and date(workflow_task.created)<='".$monthEndDate."') and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and enquiry.amount_required!='NaN' and (workflow_task.case_category='cold' or workflow_task.case_category='warm' or  workflow_task.case_category='hot') GROUP BY workflow_task.case_category")->toArray();
            $GrossLoanLeadDetCatCold=$GrossLoanLeadDetCat;
            $GrossLoanLeadDetCatWarm=$GrossLoanLeadDetCat;
            $GrossLoanLeadDetCatHot=$GrossLoanLeadDetCat;
            if(count($GrossLoanLeadDetCatCold)>0)
            {

                foreach ($GrossLoanLeadDetCatCold as $k => $val) {
                   if ($val["case_category"] == "warm") {
                       unset($GrossLoanLeadDetCatCold[$k]);
                   }
               }
               foreach ($GrossLoanLeadDetCatCold as $k => $val) {
                   if ($val["case_category"] == "hot") {
                       unset($GrossLoanLeadDetCatCold[$k]);
                   }
               }
                if(count($GrossLoanLeadDetCatCold)>0)
                {
                    $caseCategoryCountArr["cold"]=count($GrossLoanLeadDetCatCold);
                    $sumcold = array_sum(array_column($GrossLoanLeadDetCatCold,'amount_required'));
                    $caseCategorySumArr["cold"]=$sumcold;
                }
                else
                {
                    $caseCategoryCountArr["cold"]=0;
                    $caseCategorySumArr["cold"]=0;
                }
            }

            if(count($GrossLoanLeadDetCatWarm)>0)
            {
                foreach ($GrossLoanLeadDetCatWarm as $k => $val) {
                   if ($val["case_category"] == "cold") {
                       unset($GrossLoanLeadDetCatWarm[$k]);
                   }
               }
               foreach ($GrossLoanLeadDetCatWarm as $k => $val) {
                   if ($val["case_category"] == "hot") {
                       unset($GrossLoanLeadDetCatWarm[$k]);
                   }
               }
                if(count($GrossLoanLeadDetCatWarm)>0)
                {
                    $caseCategoryCountArr["warm"]=count($GrossLoanLeadDetCatWarm);
                    $sumwarm = array_sum(array_column($GrossLoanLeadDetCatWarm,'amount_required'));
                    $caseCategorySumArr["warm"]=$sumwarm;
                }
                else
                {
                    $caseCategoryCountArr["warm"]=0;
                    $caseCategorySumArr["warm"]=0;
                }
            }
            if(count($GrossLoanLeadDetCatHot)>0)
            {
                foreach ($GrossLoanLeadDetCatHot as $k => $val) {
                   if ($val["case_category"] == "cold") {
                       unset($GrossLoanLeadDetCatHot[$k]);
                   }
               }
               foreach ($GrossLoanLeadDetCatHot as $k => $val) {
                   if ($val["case_category"] == "warm") {
                       unset($GrossLoanLeadDetCatHot[$k]);
                   }
               }
                if(count($GrossLoanLeadDetCatHot)>0)
                {
                    $caseCategoryCountArr["hot"]=count($GrossLoanLeadDetCatHot);
                    $sumhot = array_sum(array_column($GrossLoanLeadDetCatHot,'amount_required'));
                    $caseCategorySumArr["hot"]=$sumhot;
                }
                else
                {
                    $caseCategoryCountArr["hot"]=0;
                    $caseCategorySumArr["hot"]=0;
                }
            }
        }
        else if($allGet["case_category"]=="yearly")
        {

            $GrossLoanLeadDetCat=Enquiry::findList("select enquiry.amount_required,workflow_task.case_category from enquiry join workflow_task on workflow_task.lead_id=enquiry.id where (date(workflow_task.created)>='".$yearstartdate."' and date(workflow_task.created)<='".$yearenddate."') and (enquiry.not_proceeding=0 or enquiry.not_proceeding='' or enquiry.not_proceeding IS NULL) and enquiry.amount_required!='NaN' and (workflow_task.case_category='cold' or workflow_task.case_category='warm' or  workflow_task.case_category='hot') GROUP BY workflow_task.case_category")->toArray();
            $GrossLoanLeadDetCatCold=$GrossLoanLeadDetCat;
            $GrossLoanLeadDetCatWarm=$GrossLoanLeadDetCat;
            $GrossLoanLeadDetCatHot=$GrossLoanLeadDetCat;
            if(count($GrossLoanLeadDetCatCold)>0)
            {
                foreach ($GrossLoanLeadDetCatCold as $k => $val) {
                   if ($val["case_category"] == "hot") {
                       unset($GrossLoanLeadDetCatCold[$k]);
                   }
               }
               foreach ($GrossLoanLeadDetCatCold as $k => $val) {
                   if ($val["case_category"] == "warm") {
                       unset($GrossLoanLeadDetCatCold[$k]);
                   }
               }
                if(count($GrossLoanLeadDetCatCold)>0)
                {
                    $caseCategoryCountArr["cold"]=count($GrossLoanLeadDetCatCold);
                    $sumcold = array_sum(array_column($GrossLoanLeadDetCatCold,'amount_required'));
                    $caseCategorySumArr["cold"]=$sumcold;
                }
                else
                {
                    $caseCategoryCountArr["cold"]=0;
                    $caseCategorySumArr["cold"]=0;
                }
            }

            if(count($GrossLoanLeadDetCatWarm)>0)
            {
                 foreach ($GrossLoanLeadDetCatWarm as $k => $val) {
                   if ($val["case_category"] == "hot") {
                       unset($GrossLoanLeadDetCatWarm[$k]);
                   }
               }
               foreach ($GrossLoanLeadDetCatWarm as $k => $val) {
                   if ($val["case_category"] == "cold") {
                       unset($GrossLoanLeadDetCatWarm[$k]);
                   }
               }
                if(count($GrossLoanLeadDetCatWarm)>0)
                {
                    $caseCategoryCountArr["warm"]=count($GrossLoanLeadDetCatWarm);
                    $sumwarm = array_sum(array_column($GrossLoanLeadDetCatWarm,'amount_required'));
                    $caseCategorySumArr["warm"]=$sumwarm;
                }
                else
                {
                    $caseCategoryCountArr["warm"]=0;
                    $caseCategorySumArr["warm"]=0;
                }
            }
            if(count($GrossLoanLeadDetCatHot)>0)
            {
                foreach ($GrossLoanLeadDetCatHot as $k => $val) {
                   if ($val["case_category"] == "warm") {
                       unset($GrossLoanLeadDetCatHot[$k]);
                   }
               }
               foreach ($GrossLoanLeadDetCatHot as $k => $val) {
                   if ($val["case_category"] == "cold") {
                       unset($GrossLoanLeadDetCatHot[$k]);
                   }
               }
                if(count($GrossLoanLeadDetCatHot)>0)
                {
                    $caseCategoryCountArr["hot"]=count($GrossLoanLeadDetCatHot);
                    $sumhot = array_sum(array_column($GrossLoanLeadDetCatHot,'amount_required'));
                    $caseCategorySumArr["hot"]=$sumhot;
                }else
                {
                    $caseCategoryCountArr["hot"]=0;
                    $caseCategorySumArr["hot"]=0;
                }
            }

        }

        //echo "<pre>";print_r($caseCategorySumArr);exit;
        $this->view->setVar('leadCountArr', $leadCountArr);
        $this->view->setVar('caseCategoryCountArr', $caseCategoryCountArr);
        $this->view->setVar('caseCategorySumArr', $caseCategorySumArr);
        $this->view->setVar('totalGrossLoan', $totalGrossLoan);
        $this->view->setVar('brokerNameArr', $brokerNameArr);
        //echo "<pre>";print_r($GrossLoanLead);exit;
        $this->view->setVar('GrossLoanLead', $GrossLoanLead);
        arsort($leaderboardArr);
       // echo "<pre>";print_r($leaderboardArr);exit;
        $this->view->setVar('leaderboardArr', $leaderboardArr);

        //Today no of lead Add End=========

        //Weekly no of lead Add=========

        /*$weeklyleadGross=Enquiry::findList("select SUM( amount_required ) AS totloangross, SUM( purchase_price ) totpurchase from enquiry where (date(created)>='".$weeklyDates[0]."' and date(created)<='".$weeklyDates[1]."') and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and advisor_id='".$broker_id."'")->toArray();
        $this->view->setVar('weeklyleadGross', $weeklyleadGross);
        //Weekly no of lead Add End=========

         //Monthly no of lead Add=========
        $monthlyleadGross=Enquiry::findList("select SUM( amount_required ) AS totloangross, SUM( purchase_price ) totpurchase from enquiry where (date(created)>='".$monthStartDate."' and date(created)<='".$monthEndDate."') and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and advisor_id='".$broker_id."'")->toArray();
        $this->view->setVar('monthlyleadGross', $monthlyleadGross);
        //Monthly no of lead Add End=========

        //Quarterly no of lead add==========
       //echo $date=ceil(date('n', time()) / 3);exit();
        $quarterdateArr=array();
        for($count=1; $count<4; $count++){
            $incAmt=122*$count;
            $newdate=date('Y-m-d', strtotime("+".$incAmt." day", strtotime($yearstartdate)));
            array_push($quarterdateArr, $newdate);
            if(count($quarterdateArr)>0){
                $decVal=$count-2;
                //echo $quarterdateArr[$decVal];
                if($currentdate>$quarterdateArr[$decVal] && $currentdate<$newdate){
                    if($decVal==-1){
                        $qtStartDate=$yearstartdate;
                    }else{
                        $qtStartDate=$quarterdateArr[$decVal];
                    }
                    $qtEnddate=$newdate;
                }else if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }else{
                if($currentdate>$yearstartdate && $currentdate<$newdate){
                    $qtStartDate=$yearstartdate;
                    $qtEnddate=$newdate;
                }
            }

        }

        $quarterleadGross=Enquiry::findList("select SUM( amount_required ) AS totloangross, SUM( purchase_price ) totpurchase from enquiry where (date(created)>='".$qtStartDate."' and date(created)<='".$qtEnddate."') and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and advisor_id='".$broker_id."'")->toArray();
        $this->view->setVar('quarterleadGross', $quarterleadGross);
        //Quarterly no of lead add=============

        //yearly no of lead add================
        $yearlyleadGross=Enquiry::findList("select SUM( amount_required ) AS totloangross, SUM( purchase_price ) totpurchase from enquiry where (date(created)>='".$yearstartdate."' and date(created)<='".$yearenddate."') and (not_proceeding=0 or not_proceeding='' or not_proceeding IS NULL) and advisor_id='".$broker_id."'")->toArray();
        $this->view->setVar('yearlyleadGross', $yearlyleadGross);*/

    }


}
?>
